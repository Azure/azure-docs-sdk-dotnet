<Type Name="ManagedInstanceResource" FullName="Azure.ResourceManager.Sql.ManagedInstanceResource">
  <TypeSignature Language="C#" Value="public class ManagedInstanceResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagedInstanceResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.ManagedInstanceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagedInstanceResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ManagedInstanceResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a ManagedInstance along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetManagedInstanceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetManagedInstance method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagedInstanceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateManagedInstanceTdeCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateManagedInstanceTdeCertificate (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateManagedInstanceTdeCertificate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateManagedInstanceTdeCertificate(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateManagedInstanceTdeCertificate (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateManagedInstanceTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateManagedInstanceTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.CreateManagedInstanceTdeCertificate (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates</description></item><item><term>Operation Id</term><description>ManagedInstanceTdeCertificates_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateManagedInstanceTdeCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateManagedInstanceTdeCertificateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateManagedInstanceTdeCertificateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateManagedInstanceTdeCertificateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateManagedInstanceTdeCertificateAsync (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateManagedInstanceTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateManagedInstanceTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.CreateManagedInstanceTdeCertificateAsync (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates</description></item><item><term>Operation Id</term><description>ManagedInstanceTdeCertificates_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string managedInstanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string managedInstanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, managedInstanceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, managedInstanceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="managedInstanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="managedInstanceName"> The managedInstanceName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Sql.ManagedInstanceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.ManagedInstanceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ManagedInstanceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Sql.ManagedInstanceData" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Failover">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Failover (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Failover(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Failover(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Failover (waitUntil As WaitUntil, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Failover : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Failover : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Failover (waitUntil, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Failovers a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/failover</description></item><item><term>Operation Id</term><description>ManagedInstances_Failover</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailoverAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; FailoverAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; FailoverAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.FailoverAsync(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FailoverAsync (waitUntil As WaitUntil, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member FailoverAsync : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.FailoverAsync : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.FailoverAsync (waitUntil, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Failovers a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/failover</description></item><item><term>Operation Id</term><description>ManagedInstances_Failover</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Get (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Get(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistributedAvailabilityGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt; GetDistributedAvailabilityGroup (string distributedAvailabilityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt; GetDistributedAvailabilityGroup(string distributedAvailabilityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetDistributedAvailabilityGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributedAvailabilityGroup (distributedAvailabilityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DistributedAvailabilityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDistributedAvailabilityGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&#xA;override this.GetDistributedAvailabilityGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;" Usage="managedInstanceResource.GetDistributedAvailabilityGroup (distributedAvailabilityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedAvailabilityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributedAvailabilityGroupName"> The distributed availability group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a distributed availability group info.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}</description></item><item><term>Operation Id</term><description>DistributedAvailabilityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributedAvailabilityGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="distributedAvailabilityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributedAvailabilityGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&gt; GetDistributedAvailabilityGroupAsync (string distributedAvailabilityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&gt; GetDistributedAvailabilityGroupAsync(string distributedAvailabilityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetDistributedAvailabilityGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributedAvailabilityGroupAsync (distributedAvailabilityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DistributedAvailabilityGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDistributedAvailabilityGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&gt;&#xA;override this.GetDistributedAvailabilityGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&gt;" Usage="managedInstanceResource.GetDistributedAvailabilityGroupAsync (distributedAvailabilityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.DistributedAvailabilityGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedAvailabilityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributedAvailabilityGroupName"> The distributed availability group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a distributed availability group info.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/distributedAvailabilityGroups/{distributedAvailabilityGroupName}</description></item><item><term>Operation Id</term><description>DistributedAvailabilityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributedAvailabilityGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="distributedAvailabilityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributedAvailabilityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DistributedAvailabilityGroupCollection GetDistributedAvailabilityGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DistributedAvailabilityGroupCollection GetDistributedAvailabilityGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetDistributedAvailabilityGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributedAvailabilityGroups () As DistributedAvailabilityGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDistributedAvailabilityGroups : unit -&gt; Azure.ResourceManager.Sql.DistributedAvailabilityGroupCollection&#xA;override this.GetDistributedAvailabilityGroups : unit -&gt; Azure.ResourceManager.Sql.DistributedAvailabilityGroupCollection" Usage="managedInstanceResource.GetDistributedAvailabilityGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DistributedAvailabilityGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DistributedAvailabilityGroupResources in the ManagedInstance. </summary>
        <returns> An object representing collection of DistributedAvailabilityGroupResources and their operations over a DistributedAvailabilityGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt; GetEndpointCertificate (string endpointType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.EndpointCertificateResource&gt; GetEndpointCertificate(string endpointType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetEndpointCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointCertificate (endpointType As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EndpointCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&#xA;override this.GetEndpointCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;" Usage="managedInstanceResource.GetEndpointCertificate (endpointType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointType"> Type of the endpoint whose certificate the customer is looking for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a certificate used on the endpoint with the given id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/endpointCertificates/{endpointType}</description></item><item><term>Operation Id</term><description>EndpointCertificates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointType" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointType" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&gt; GetEndpointCertificateAsync (string endpointType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&gt; GetEndpointCertificateAsync(string endpointType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetEndpointCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointCertificateAsync (endpointType As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EndpointCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&gt;&#xA;override this.GetEndpointCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&gt;" Usage="managedInstanceResource.GetEndpointCertificateAsync (endpointType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EndpointCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointType"> Type of the endpoint whose certificate the customer is looking for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a certificate used on the endpoint with the given id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/endpointCertificates/{endpointType}</description></item><item><term>Operation Id</term><description>EndpointCertificates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointType" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointType" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEndpointCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.EndpointCertificateCollection GetEndpointCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.EndpointCertificateCollection GetEndpointCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetEndpointCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndpointCertificates () As EndpointCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEndpointCertificates : unit -&gt; Azure.ResourceManager.Sql.EndpointCertificateCollection&#xA;override this.GetEndpointCertificates : unit -&gt; Azure.ResourceManager.Sql.EndpointCertificateCollection" Usage="managedInstanceResource.GetEndpointCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EndpointCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of EndpointCertificateResources in the ManagedInstance. </summary>
        <returns> An object representing collection of EndpointCertificateResources and their operations over a EndpointCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabases (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabases(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetInaccessibleManagedDatabases(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleManagedDatabases (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleManagedDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetInaccessibleManagedDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetInaccessibleManagedDatabases cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible managed databases in a managed instance
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/inaccessibleManagedDatabases</description></item><item><term>Operation Id</term><description>ManagedDatabases_ListInaccessibleByInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleManagedDatabasesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabasesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabasesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetInaccessibleManagedDatabasesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleManagedDatabasesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleManagedDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetInaccessibleManagedDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetInaccessibleManagedDatabasesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible managed databases in a managed instance
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/inaccessibleManagedDatabases</description></item><item><term>Operation Id</term><description>ManagedDatabases_ListInaccessibleByInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetManagedDatabase (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetManagedDatabase(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabase (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetManagedDatabase (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}</description></item><item><term>Operation Id</term><description>ManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt; GetManagedDatabaseAsync (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt; GetManagedDatabaseAsync(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseAsync (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;&#xA;override this.GetManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetManagedDatabaseAsync (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}</description></item><item><term>Operation Id</term><description>ManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseCollection GetManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseCollection GetManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabases () As ManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.ManagedDatabaseCollection&#xA;override this.GetManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.ManagedDatabaseCollection" Usage="managedInstanceResource.GetManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedDatabaseResources and their operations over a ManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministrator">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt; GetManagedInstanceAdministrator (Azure.ResourceManager.Sql.Models.SqlAdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt; GetManagedInstanceAdministrator(valuetype Azure.ResourceManager.Sql.Models.SqlAdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministrator(Azure.ResourceManager.Sql.Models.SqlAdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministrator (administratorName As SqlAdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceAdministratorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministrator : Azure.ResourceManager.Sql.Models.SqlAdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&#xA;override this.GetManagedInstanceAdministrator : Azure.ResourceManager.Sql.Models.SqlAdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;" Usage="managedInstanceResource.GetManagedInstanceAdministrator (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.SqlAdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The <see cref="T:Azure.ResourceManager.Sql.Models.SqlAdministratorName" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance administrator.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAdministrators_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministratorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt; GetManagedInstanceAdministratorAsync (Azure.ResourceManager.Sql.Models.SqlAdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt; GetManagedInstanceAdministratorAsync(valuetype Azure.ResourceManager.Sql.Models.SqlAdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministratorAsync(Azure.ResourceManager.Sql.Models.SqlAdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministratorAsync (administratorName As SqlAdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceAdministratorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministratorAsync : Azure.ResourceManager.Sql.Models.SqlAdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;&#xA;override this.GetManagedInstanceAdministratorAsync : Azure.ResourceManager.Sql.Models.SqlAdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceAdministratorAsync (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.SqlAdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The <see cref="T:Azure.ResourceManager.Sql.Models.SqlAdministratorName" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance administrator.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAdministrators_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministrators">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection GetManagedInstanceAdministrators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection GetManagedInstanceAdministrators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministrators" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministrators () As ManagedInstanceAdministratorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministrators : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection&#xA;override this.GetManagedInstanceAdministrators : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection" Usage="managedInstanceResource.GetManagedInstanceAdministrators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceAdministratorResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceAdministratorResources and their operations over a ManagedInstanceAdministratorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdvancedThreatProtection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt; GetManagedInstanceAdvancedThreatProtection (Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName advancedThreatProtectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt; GetManagedInstanceAdvancedThreatProtection(valuetype Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName advancedThreatProtectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdvancedThreatProtection(Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdvancedThreatProtection (advancedThreatProtectionName As AdvancedThreatProtectionName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceAdvancedThreatProtectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdvancedThreatProtection : Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&#xA;override this.GetManagedInstanceAdvancedThreatProtection : Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;" Usage="managedInstanceResource.GetManagedInstanceAdvancedThreatProtection (advancedThreatProtectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advancedThreatProtectionName" Type="Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="advancedThreatProtectionName"> The name of the Advanced Threat Protection state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed instance's Advanced Threat Protection state.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/advancedThreatProtectionSettings/{advancedThreatProtectionName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAdvancedThreatProtectionSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdvancedThreatProtectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&gt; GetManagedInstanceAdvancedThreatProtectionAsync (Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName advancedThreatProtectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&gt; GetManagedInstanceAdvancedThreatProtectionAsync(valuetype Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName advancedThreatProtectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdvancedThreatProtectionAsync(Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdvancedThreatProtectionAsync (advancedThreatProtectionName As AdvancedThreatProtectionName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceAdvancedThreatProtectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdvancedThreatProtectionAsync : Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&gt;&#xA;override this.GetManagedInstanceAdvancedThreatProtectionAsync : Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceAdvancedThreatProtectionAsync (advancedThreatProtectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advancedThreatProtectionName" Type="Azure.ResourceManager.Sql.Models.AdvancedThreatProtectionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="advancedThreatProtectionName"> The name of the Advanced Threat Protection state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed instance's Advanced Threat Protection state.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/advancedThreatProtectionSettings/{advancedThreatProtectionName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAdvancedThreatProtectionSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdvancedThreatProtections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionCollection GetManagedInstanceAdvancedThreatProtections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionCollection GetManagedInstanceAdvancedThreatProtections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdvancedThreatProtections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdvancedThreatProtections () As ManagedInstanceAdvancedThreatProtectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdvancedThreatProtections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionCollection&#xA;override this.GetManagedInstanceAdvancedThreatProtections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionCollection" Usage="managedInstanceResource.GetManagedInstanceAdvancedThreatProtections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdvancedThreatProtectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceAdvancedThreatProtectionResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceAdvancedThreatProtectionResources and their operations over a ManagedInstanceAdvancedThreatProtectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthentication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt; GetManagedInstanceAzureADOnlyAuthentication (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt; GetManagedInstanceAzureADOnlyAuthentication(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthentication(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthentication (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceAzureADOnlyAuthenticationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&#xA;override this.GetManagedInstanceAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthentication (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAzureADOnlyAuthentications_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthenticationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt; GetManagedInstanceAzureADOnlyAuthenticationAsync (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt; GetManagedInstanceAzureADOnlyAuthenticationAsync(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthenticationAsync(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthenticationAsync (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceAzureADOnlyAuthenticationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;&#xA;override this.GetManagedInstanceAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthenticationAsync (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}</description></item><item><term>Operation Id</term><description>ManagedInstanceAzureADOnlyAuthentications_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthentications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection GetManagedInstanceAzureADOnlyAuthentications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection GetManagedInstanceAzureADOnlyAuthentications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthentications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthentications () As ManagedInstanceAzureADOnlyAuthenticationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection&#xA;override this.GetManagedInstanceAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthentications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceAzureADOnlyAuthenticationResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceAzureADOnlyAuthenticationResources and their operations over a ManagedInstanceAzureADOnlyAuthenticationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceDtc">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt; GetManagedInstanceDtc (Azure.ResourceManager.Sql.Models.DtcName dtcName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt; GetManagedInstanceDtc(valuetype Azure.ResourceManager.Sql.Models.DtcName dtcName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceDtc(Azure.ResourceManager.Sql.Models.DtcName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceDtc (dtcName As DtcName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceDtcResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceDtc : Azure.ResourceManager.Sql.Models.DtcName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&#xA;override this.GetManagedInstanceDtc : Azure.ResourceManager.Sql.Models.DtcName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;" Usage="managedInstanceResource.GetManagedInstanceDtc (dtcName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtcName" Type="Azure.ResourceManager.Sql.Models.DtcName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dtcName"> The name of the managed instance DTC. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets managed instance DTC settings.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/dtc/{dtcName}</description></item><item><term>Operation Id</term><description>ManagedInstanceDtcs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceDtcAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&gt; GetManagedInstanceDtcAsync (Azure.ResourceManager.Sql.Models.DtcName dtcName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&gt; GetManagedInstanceDtcAsync(valuetype Azure.ResourceManager.Sql.Models.DtcName dtcName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceDtcAsync(Azure.ResourceManager.Sql.Models.DtcName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceDtcAsync (dtcName As DtcName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceDtcResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceDtcAsync : Azure.ResourceManager.Sql.Models.DtcName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&gt;&#xA;override this.GetManagedInstanceDtcAsync : Azure.ResourceManager.Sql.Models.DtcName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceDtcAsync (dtcName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDtcResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtcName" Type="Azure.ResourceManager.Sql.Models.DtcName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dtcName"> The name of the managed instance DTC. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets managed instance DTC settings.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/dtc/{dtcName}</description></item><item><term>Operation Id</term><description>ManagedInstanceDtcs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceDtcs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceDtcCollection GetManagedInstanceDtcs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceDtcCollection GetManagedInstanceDtcs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceDtcs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceDtcs () As ManagedInstanceDtcCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceDtcs : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceDtcCollection&#xA;override this.GetManagedInstanceDtcs : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceDtcCollection" Usage="managedInstanceResource.GetManagedInstanceDtcs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceDtcCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceDtcResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceDtcResources and their operations over a ManagedInstanceDtcResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt; GetManagedInstanceEncryptionProtector (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt; GetManagedInstanceEncryptionProtector(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtector(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtector (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceEncryptionProtectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&#xA;override this.GetManagedInstanceEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtector (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance encryption protector.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}</description></item><item><term>Operation Id</term><description>ManagedInstanceEncryptionProtectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt; GetManagedInstanceEncryptionProtectorAsync (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt; GetManagedInstanceEncryptionProtectorAsync(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtectorAsync(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtectorAsync (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceEncryptionProtectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;&#xA;override this.GetManagedInstanceEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtectorAsync (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance encryption protector.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}</description></item><item><term>Operation Id</term><description>ManagedInstanceEncryptionProtectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection GetManagedInstanceEncryptionProtectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection GetManagedInstanceEncryptionProtectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtectors () As ManagedInstanceEncryptionProtectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection&#xA;override this.GetManagedInstanceEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceEncryptionProtectorResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceEncryptionProtectorResources and their operations over a ManagedInstanceEncryptionProtectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt; GetManagedInstanceKey (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt; GetManagedInstanceKey(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKey (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceKeyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&#xA;override this.GetManagedInstanceKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;" Usage="managedInstanceResource.GetManagedInstanceKey (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the managed instance key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance key.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}</description></item><item><term>Operation Id</term><description>ManagedInstanceKeys_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt; GetManagedInstanceKeyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt; GetManagedInstanceKeyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKeyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceKeyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;&#xA;override this.GetManagedInstanceKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceKeyAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the managed instance key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance key.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}</description></item><item><term>Operation Id</term><description>ManagedInstanceKeys_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceKeyCollection GetManagedInstanceKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceKeyCollection GetManagedInstanceKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKeys () As ManagedInstanceKeyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKeys : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyCollection&#xA;override this.GetManagedInstanceKeys : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyCollection" Usage="managedInstanceResource.GetManagedInstanceKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceKeyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceKeyResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceKeyResources and their operations over a ManagedInstanceKeyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt; GetManagedInstanceOperation (Guid operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt; GetManagedInstanceOperation(valuetype System.Guid operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperation(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperation (operationId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceOperationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperation : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&#xA;override this.GetManagedInstanceOperation : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;" Usage="managedInstanceResource.GetManagedInstanceOperation (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The <see cref="T:System.Guid" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a management operation on a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}</description></item><item><term>Operation Id</term><description>ManagedInstanceOperations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt; GetManagedInstanceOperationAsync (Guid operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt; GetManagedInstanceOperationAsync(valuetype System.Guid operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperationAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperationAsync (operationId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceOperationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperationAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;&#xA;override this.GetManagedInstanceOperationAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceOperationAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The <see cref="T:System.Guid" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a management operation on a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}</description></item><item><term>Operation Id</term><description>ManagedInstanceOperations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceOperationCollection GetManagedInstanceOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceOperationCollection GetManagedInstanceOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperations () As ManagedInstanceOperationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperations : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationCollection&#xA;override this.GetManagedInstanceOperations : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationCollection" Usage="managedInstanceResource.GetManagedInstanceOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceOperationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceOperationResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceOperationResources and their operations over a ManagedInstanceOperationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt; GetManagedInstancePrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt; GetManagedInstancePrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstancePrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&#xA;override this.GetManagedInstancePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>ManagedInstancePrivateEndpointConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt; GetManagedInstancePrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt; GetManagedInstancePrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstancePrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetManagedInstancePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>ManagedInstancePrivateEndpointConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection GetManagedInstancePrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection GetManagedInstancePrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnections () As ManagedInstancePrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection&#xA;override this.GetManagedInstancePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstancePrivateEndpointConnectionResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstancePrivateEndpointConnectionResources and their operations over a ManagedInstancePrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt; GetManagedInstancePrivateLink (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt; GetManagedInstancePrivateLink(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLink (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstancePrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&#xA;override this.GetManagedInstancePrivateLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateLink (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources/{groupName}</description></item><item><term>Operation Id</term><description>ManagedInstancePrivateLinkResources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt; GetManagedInstancePrivateLinkAsync (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt; GetManagedInstancePrivateLinkAsync(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLinkAsync (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstancePrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;&#xA;override this.GetManagedInstancePrivateLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateLinkAsync (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources/{groupName}</description></item><item><term>Operation Id</term><description>ManagedInstancePrivateLinkResources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection GetManagedInstancePrivateLinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection GetManagedInstancePrivateLinks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLinks () As ManagedInstancePrivateLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLinks : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection&#xA;override this.GetManagedInstancePrivateLinks : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection" Usage="managedInstanceResource.GetManagedInstancePrivateLinks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstancePrivateLinkResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstancePrivateLinkResources and their operations over a ManagedInstancePrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerConfigurationOption">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt; GetManagedInstanceServerConfigurationOption (Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName serverConfigurationOptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt; GetManagedInstanceServerConfigurationOption(valuetype Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName serverConfigurationOptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerConfigurationOption(Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerConfigurationOption (serverConfigurationOptionName As ManagedInstanceServerConfigurationOptionName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceServerConfigurationOptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerConfigurationOption : Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&#xA;override this.GetManagedInstanceServerConfigurationOption : Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;" Usage="managedInstanceResource.GetManagedInstanceServerConfigurationOption (serverConfigurationOptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverConfigurationOptionName" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="serverConfigurationOptionName"> The name of the server configuration option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets managed instance server configuration option.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverConfigurationOptions/{serverConfigurationOptionName}</description></item><item><term>Operation Id</term><description>ServerConfigurationOptions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerConfigurationOptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&gt; GetManagedInstanceServerConfigurationOptionAsync (Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName serverConfigurationOptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&gt; GetManagedInstanceServerConfigurationOptionAsync(valuetype Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName serverConfigurationOptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerConfigurationOptionAsync(Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerConfigurationOptionAsync (serverConfigurationOptionName As ManagedInstanceServerConfigurationOptionName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceServerConfigurationOptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerConfigurationOptionAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&gt;&#xA;override this.GetManagedInstanceServerConfigurationOptionAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceServerConfigurationOptionAsync (serverConfigurationOptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverConfigurationOptionName" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceServerConfigurationOptionName" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="serverConfigurationOptionName"> The name of the server configuration option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets managed instance server configuration option.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverConfigurationOptions/{serverConfigurationOptionName}</description></item><item><term>Operation Id</term><description>ServerConfigurationOptions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerConfigurationOptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionCollection GetManagedInstanceServerConfigurationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionCollection GetManagedInstanceServerConfigurationOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerConfigurationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerConfigurationOptions () As ManagedInstanceServerConfigurationOptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerConfigurationOptions : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionCollection&#xA;override this.GetManagedInstanceServerConfigurationOptions : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionCollection" Usage="managedInstanceResource.GetManagedInstanceServerConfigurationOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerConfigurationOptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceServerConfigurationOptionResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceServerConfigurationOptionResources and their operations over a ManagedInstanceServerConfigurationOptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerTrustCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt; GetManagedInstanceServerTrustCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt; GetManagedInstanceServerTrustCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerTrustCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerTrustCertificate (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceServerTrustCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerTrustCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&#xA;override this.GetManagedInstanceServerTrustCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;" Usage="managedInstanceResource.GetManagedInstanceServerTrustCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName"> Name of of the certificate to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustCertificates/{certificateName}</description></item><item><term>Operation Id</term><description>ServerTrustCertificates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerTrustCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&gt; GetManagedInstanceServerTrustCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&gt; GetManagedInstanceServerTrustCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerTrustCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerTrustCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceServerTrustCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerTrustCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&gt;&#xA;override this.GetManagedInstanceServerTrustCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceServerTrustCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName"> Name of of the certificate to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust certificate that was uploaded from box to Sql Managed Instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustCertificates/{certificateName}</description></item><item><term>Operation Id</term><description>ServerTrustCertificates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceServerTrustCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateCollection GetManagedInstanceServerTrustCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateCollection GetManagedInstanceServerTrustCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceServerTrustCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceServerTrustCertificates () As ManagedInstanceServerTrustCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceServerTrustCertificates : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateCollection&#xA;override this.GetManagedInstanceServerTrustCertificates : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateCollection" Usage="managedInstanceResource.GetManagedInstanceServerTrustCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceServerTrustCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceServerTrustCertificateResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceServerTrustCertificateResources and their operations over a ManagedInstanceServerTrustCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceStartStopSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt; GetManagedInstanceStartStopSchedule (Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName startStopScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt; GetManagedInstanceStartStopSchedule(valuetype Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName startStopScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceStartStopSchedule(Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceStartStopSchedule (startStopScheduleName As ManagedInstanceStartStopScheduleName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceStartStopScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceStartStopSchedule : Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&#xA;override this.GetManagedInstanceStartStopSchedule : Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;" Usage="managedInstanceResource.GetManagedInstanceStartStopSchedule (startStopScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startStopScheduleName" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="startStopScheduleName"> Name of the managed instance Start/Stop schedule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's Start/Stop schedule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/startStopSchedules/{startStopScheduleName}</description></item><item><term>Operation Id</term><description>StartStopManagedInstanceSchedules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceStartStopScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&gt; GetManagedInstanceStartStopScheduleAsync (Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName startStopScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&gt; GetManagedInstanceStartStopScheduleAsync(valuetype Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName startStopScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceStartStopScheduleAsync(Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceStartStopScheduleAsync (startStopScheduleName As ManagedInstanceStartStopScheduleName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceStartStopScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceStartStopScheduleAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&gt;&#xA;override this.GetManagedInstanceStartStopScheduleAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceStartStopScheduleAsync (startStopScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startStopScheduleName" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceStartStopScheduleName" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="startStopScheduleName"> Name of the managed instance Start/Stop schedule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's Start/Stop schedule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/startStopSchedules/{startStopScheduleName}</description></item><item><term>Operation Id</term><description>StartStopManagedInstanceSchedules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceStartStopSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleCollection GetManagedInstanceStartStopSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleCollection GetManagedInstanceStartStopSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceStartStopSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceStartStopSchedules () As ManagedInstanceStartStopScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceStartStopSchedules : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleCollection&#xA;override this.GetManagedInstanceStartStopSchedules : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleCollection" Usage="managedInstanceResource.GetManagedInstanceStartStopSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceStartStopScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceStartStopScheduleResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceStartStopScheduleResources and their operations over a ManagedInstanceStartStopScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt; GetManagedInstanceVulnerabilityAssessment (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt; GetManagedInstanceVulnerabilityAssessment(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessment(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessment (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&#xA;override this.GetManagedInstanceVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessment (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's vulnerability assessment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}</description></item><item><term>Operation Id</term><description>ManagedInstanceVulnerabilityAssessments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt; GetManagedInstanceVulnerabilityAssessmentAsync (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt; GetManagedInstanceVulnerabilityAssessmentAsync(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessmentAsync(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessmentAsync (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetManagedInstanceVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessmentAsync (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's vulnerability assessment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}</description></item><item><term>Operation Id</term><description>ManagedInstanceVulnerabilityAssessments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection GetManagedInstanceVulnerabilityAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection GetManagedInstanceVulnerabilityAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessments () As ManagedInstanceVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection&#xA;override this.GetManagedInstanceVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceVulnerabilityAssessmentResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceVulnerabilityAssessmentResources and their operations over a ManagedInstanceVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerDnsAlias">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt; GetManagedServerDnsAlias (string dnsAliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt; GetManagedServerDnsAlias(string dnsAliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerDnsAlias(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerDnsAlias (dnsAliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedServerDnsAliasResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerDnsAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&#xA;override this.GetManagedServerDnsAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;" Usage="managedInstanceResource.GetManagedServerDnsAlias (dnsAliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsAliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsAliasName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server DNS alias.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/dnsAliases/{dnsAliasName}</description></item><item><term>Operation Id</term><description>ManagedServerDnsAliases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsAliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsAliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerDnsAliasAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&gt; GetManagedServerDnsAliasAsync (string dnsAliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&gt; GetManagedServerDnsAliasAsync(string dnsAliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerDnsAliasAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerDnsAliasAsync (dnsAliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedServerDnsAliasResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerDnsAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&gt;&#xA;override this.GetManagedServerDnsAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&gt;" Usage="managedInstanceResource.GetManagedServerDnsAliasAsync (dnsAliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerDnsAliasResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsAliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsAliasName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server DNS alias.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/dnsAliases/{dnsAliasName}</description></item><item><term>Operation Id</term><description>ManagedServerDnsAliases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsAliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsAliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerDnsAliases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedServerDnsAliasCollection GetManagedServerDnsAliases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedServerDnsAliasCollection GetManagedServerDnsAliases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerDnsAliases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerDnsAliases () As ManagedServerDnsAliasCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerDnsAliases : unit -&gt; Azure.ResourceManager.Sql.ManagedServerDnsAliasCollection&#xA;override this.GetManagedServerDnsAliases : unit -&gt; Azure.ResourceManager.Sql.ManagedServerDnsAliasCollection" Usage="managedInstanceResource.GetManagedServerDnsAliases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerDnsAliasCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedServerDnsAliasResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedServerDnsAliasResources and their operations over a ManagedServerDnsAliasResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection GetManagedServerSecurityAlertPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection GetManagedServerSecurityAlertPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicies () As ManagedServerSecurityAlertPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection&#xA;override this.GetManagedServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedServerSecurityAlertPolicyResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedServerSecurityAlertPolicyResources and their operations over a ManagedServerSecurityAlertPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt; GetManagedServerSecurityAlertPolicy (Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt; GetManagedServerSecurityAlertPolicy(valuetype Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicy(Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicy (securityAlertPolicyName As SqlSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedServerSecurityAlertPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&#xA;override this.GetManagedServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicy (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed server's threat detection policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}</description></item><item><term>Operation Id</term><description>ManagedServerSecurityAlertPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt; GetManagedServerSecurityAlertPolicyAsync (Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt; GetManagedServerSecurityAlertPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicyAsync(Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicyAsync (securityAlertPolicyName As SqlSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedServerSecurityAlertPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;&#xA;override this.GetManagedServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicyAsync (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SqlSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed server's threat detection policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}</description></item><item><term>Operation Id</term><description>ManagedServerSecurityAlertPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependencies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependencies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependencies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetOutboundNetworkDependencies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependencies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlOutboundEnvironmentEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependencies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;&#xA;override this.GetOutboundNetworkDependencies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;" Usage="managedInstanceResource.GetOutboundNetworkDependencies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the collection of outbound network dependencies for the given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/outboundNetworkDependenciesEndpoints</description></item><item><term>Operation Id</term><description>ManagedInstances_ListOutboundNetworkDependenciesByManagedInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependenciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetOutboundNetworkDependenciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependenciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlOutboundEnvironmentEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependenciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;&#xA;override this.GetOutboundNetworkDependenciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;" Usage="managedInstanceResource.GetOutboundNetworkDependenciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the collection of outbound network dependencies for the given managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/outboundNetworkDependenciesEndpoints</description></item><item><term>Operation Id</term><description>ManagedInstances_ListOutboundNetworkDependenciesByManagedInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.SqlOutboundEnvironmentEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt; GetRecoverableManagedDatabase (string recoverableDatabaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt; GetRecoverableManagedDatabase(string recoverableDatabaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabase (recoverableDatabaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoverableManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&#xA;override this.GetRecoverableManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetRecoverableManagedDatabase (recoverableDatabaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoverableDatabaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoverableDatabaseName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases/{recoverableDatabaseName}</description></item><item><term>Operation Id</term><description>RecoverableManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoverableDatabaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoverableDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt; GetRecoverableManagedDatabaseAsync (string recoverableDatabaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt; GetRecoverableManagedDatabaseAsync(string recoverableDatabaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabaseAsync (recoverableDatabaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoverableManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;&#xA;override this.GetRecoverableManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetRecoverableManagedDatabaseAsync (recoverableDatabaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoverableDatabaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoverableDatabaseName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases/{recoverableDatabaseName}</description></item><item><term>Operation Id</term><description>RecoverableManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoverableDatabaseName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoverableDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection GetRecoverableManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection GetRecoverableManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabases () As RecoverableManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection&#xA;override this.GetRecoverableManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection" Usage="managedInstanceResource.GetRecoverableManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecoverableManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of RecoverableManagedDatabaseResources and their operations over a RecoverableManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt; GetRestorableDroppedManagedDatabase (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt; GetRestorableDroppedManagedDatabase(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabase (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RestorableDroppedManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&#xA;override this.GetRestorableDroppedManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabase (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}</description></item><item><term>Operation Id</term><description>RestorableDroppedManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt; GetRestorableDroppedManagedDatabaseAsync (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt; GetRestorableDroppedManagedDatabaseAsync(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabaseAsync (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RestorableDroppedManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;&#xA;override this.GetRestorableDroppedManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabaseAsync (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped managed database.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}</description></item><item><term>Operation Id</term><description>RestorableDroppedManagedDatabases_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection GetRestorableDroppedManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection GetRestorableDroppedManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabases () As RestorableDroppedManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection&#xA;override this.GetRestorableDroppedManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RestorableDroppedManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of RestorableDroppedManagedDatabaseResources and their operations over a RestorableDroppedManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlAgentConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetSqlAgentConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlAgentConfiguration () As SqlAgentConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlAgentConfiguration : unit -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource&#xA;override this.GetSqlAgentConfiguration : unit -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource" Usage="managedInstanceResource.GetSqlAgentConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlAgentConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SqlAgentConfigurationResource along with the instance operations that can be performed on it in the ManagedInstance. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetSqlServerTrustGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerTrustGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlServerTrustGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerTrustGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&#xA;override this.GetSqlServerTrustGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;" Usage="managedInstanceResource.GetSqlServerTrustGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust groups by instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustGroups</description></item><item><term>Operation Id</term><description>ServerTrustGroups_ListByInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServerTrustGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt; GetSqlServerTrustGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetSqlServerTrustGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlServerTrustGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlServerTrustGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlServerTrustGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;&#xA;override this.GetSqlServerTrustGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;" Usage="managedInstanceResource.GetSqlServerTrustGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServerTrustGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust groups by instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustGroups</description></item><item><term>Operation Id</term><description>ServerTrustGroups_ListByInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SqlServerTrustGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries (Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries(class Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueries(Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueries (options As ManagedInstanceResourceGetTopQueriesOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueries : Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueries : Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueries (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries</description></item><item><term>Operation Id</term><description>ManagedInstances_ListByManagedInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries (int? numberOfQueries = default, string databases = default, string startTime = default, string endTime = default, Azure.ResourceManager.Sql.Models.QueryTimeGrainType? interval = default, Azure.ResourceManager.Sql.Models.AggregationFunctionType? aggregationFunction = default, Azure.ResourceManager.Sql.Models.SqlMetricType? observationMetric = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries(valuetype System.Nullable`1&lt;int32&gt; numberOfQueries, string databases, string startTime, string endTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; interval, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; aggregationFunction, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlMetricType&gt; observationMetric, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueries(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.QueryTimeGrainType},System.Nullable{Azure.ResourceManager.Sql.Models.AggregationFunctionType},System.Nullable{Azure.ResourceManager.Sql.Models.SqlMetricType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueries (Optional numberOfQueries As Nullable(Of Integer) = Nothing, Optional databases As String = Nothing, Optional startTime As String = Nothing, Optional endTime As String = Nothing, Optional interval As Nullable(Of QueryTimeGrainType) = Nothing, Optional aggregationFunction As Nullable(Of AggregationFunctionType) = Nothing, Optional observationMetric As Nullable(Of SqlMetricType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueries : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueries : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueries (numberOfQueries, databases, startTime, endTime, interval, aggregationFunction, observationMetric, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfQueries" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="databases" Type="System.String" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="endTime" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt;" />
        <Parameter Name="aggregationFunction" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt;" />
        <Parameter Name="observationMetric" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="numberOfQueries"> How many 'top queries' to return. Default is 5. </param>
        <param name="databases"> Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified. </param>
        <param name="startTime"> Start time for observed period. </param>
        <param name="endTime"> End time for observed period. </param>
        <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        <param name="aggregationFunction"> Aggregation function to be used, default value is 'sum'. </param>
        <param name="observationMetric"> Metric to be used for ranking top queries. Default is 'cpu'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries</description></item><item><term>Operation Id</term><description>ManagedInstances_ListByManagedInstance</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync (Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync(class Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueriesAsync(Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueriesAsync (options As ManagedInstanceResourceGetTopQueriesOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueriesAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueriesAsync : Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueriesAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Sql.Models.ManagedInstanceResourceGetTopQueriesOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries</description></item><item><term>Operation Id</term><description>ManagedInstances_ListByManagedInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync (int? numberOfQueries = default, string databases = default, string startTime = default, string endTime = default, Azure.ResourceManager.Sql.Models.QueryTimeGrainType? interval = default, Azure.ResourceManager.Sql.Models.AggregationFunctionType? aggregationFunction = default, Azure.ResourceManager.Sql.Models.SqlMetricType? observationMetric = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync(valuetype System.Nullable`1&lt;int32&gt; numberOfQueries, string databases, string startTime, string endTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; interval, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; aggregationFunction, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.SqlMetricType&gt; observationMetric, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueriesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.QueryTimeGrainType},System.Nullable{Azure.ResourceManager.Sql.Models.AggregationFunctionType},System.Nullable{Azure.ResourceManager.Sql.Models.SqlMetricType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueriesAsync (Optional numberOfQueries As Nullable(Of Integer) = Nothing, Optional databases As String = Nothing, Optional startTime As String = Nothing, Optional endTime As String = Nothing, Optional interval As Nullable(Of QueryTimeGrainType) = Nothing, Optional aggregationFunction As Nullable(Of AggregationFunctionType) = Nothing, Optional observationMetric As Nullable(Of SqlMetricType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueriesAsync : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueriesAsync : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueriesAsync (numberOfQueries, databases, startTime, endTime, interval, aggregationFunction, observationMetric, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfQueries" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="databases" Type="System.String" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="endTime" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt;" />
        <Parameter Name="aggregationFunction" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt;" />
        <Parameter Name="observationMetric" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.SqlMetricType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="numberOfQueries"> How many 'top queries' to return. Default is 5. </param>
        <param name="databases"> Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified. </param>
        <param name="startTime"> Start time for observed period. </param>
        <param name="endTime"> End time for observed period. </param>
        <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        <param name="aggregationFunction"> Aggregation function to be used, default value is 'sum'. </param>
        <param name="observationMetric"> Metric to be used for ranking top queries. Default is 'cpu'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries</description></item><item><term>Operation Id</term><description>ManagedInstances_ListByManagedInstance</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.ManagedInstanceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Sql.ManagedInstanceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Start (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Start(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Start(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Start (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Start : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Start : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Start (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Starts the managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/start</description></item><item><term>Operation Id</term><description>ManagedInstances_Start</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; StartAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; StartAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.StartAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.StartAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.StartAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Starts the managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/start</description></item><item><term>Operation Id</term><description>ManagedInstances_Start</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Stop (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Stop(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Stop(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Stop (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Stop : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Stop : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Stop (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Stops the managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/stop</description></item><item><term>Operation Id</term><description>ManagedInstances_Stop</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; StopAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; StopAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.StopAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.StopAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.StopAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Stops the managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/stop</description></item><item><term>Operation Id</term><description>ManagedInstances_Stop</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Update(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ManagedInstancePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As ManagedInstancePatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.ManagedInstancePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested managed instance resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ManagedInstancePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As ManagedInstancePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.ManagedInstancePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested managed instance resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a managed instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}</description></item><item><term>Operation Id</term><description>ManagedInstances_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
