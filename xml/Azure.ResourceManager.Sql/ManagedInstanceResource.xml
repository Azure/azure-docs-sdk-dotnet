<Type Name="ManagedInstanceResource" FullName="Azure.ResourceManager.Sql.ManagedInstanceResource">
  <TypeSignature Language="C#" Value="public class ManagedInstanceResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagedInstanceResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.ManagedInstanceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagedInstanceResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ManagedInstanceResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a ManagedInstance along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetManagedInstanceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetManagedInstance method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagedInstanceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateManagedInstanceTdeCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateManagedInstanceTdeCertificate (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateManagedInstanceTdeCertificate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateManagedInstanceTdeCertificate(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateManagedInstanceTdeCertificate (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateManagedInstanceTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateManagedInstanceTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.CreateManagedInstanceTdeCertificate (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates
            Operation Id: ManagedInstanceTdeCertificates_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateManagedInstanceTdeCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateManagedInstanceTdeCertificateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateManagedInstanceTdeCertificateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateManagedInstanceTdeCertificateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateManagedInstanceTdeCertificateAsync (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateManagedInstanceTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateManagedInstanceTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.CreateManagedInstanceTdeCertificateAsync (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates
            Operation Id: ManagedInstanceTdeCertificates_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string managedInstanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string managedInstanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, managedInstanceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, managedInstanceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="managedInstanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="managedInstanceName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Sql.ManagedInstanceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.ManagedInstanceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ManagedInstanceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Sql.ManagedInstanceData" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Failover">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Failover (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Failover(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Failover(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Failover (waitUntil As WaitUntil, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Failover : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Failover : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="managedInstanceResource.Failover (waitUntil, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Failovers a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/failover
            Operation Id: ManagedInstances_Failover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailoverAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; FailoverAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; FailoverAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.FailoverAsync(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FailoverAsync (waitUntil As WaitUntil, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member FailoverAsync : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.FailoverAsync : Azure.WaitUntil * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="managedInstanceResource.FailoverAsync (waitUntil, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Failovers a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/failover
            Operation Id: ManagedInstances_Failover
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Get (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Get(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; GetAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabases (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabases(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetInaccessibleManagedDatabases(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleManagedDatabases (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleManagedDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetInaccessibleManagedDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetInaccessibleManagedDatabases cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible managed databases in a managed instance
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/inaccessibleManagedDatabases
            Operation Id: ManagedDatabases_ListInaccessibleByInstance
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleManagedDatabasesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabasesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetInaccessibleManagedDatabasesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetInaccessibleManagedDatabasesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleManagedDatabasesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleManagedDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetInaccessibleManagedDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetInaccessibleManagedDatabasesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible managed databases in a managed instance
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/inaccessibleManagedDatabases
            Operation Id: ManagedDatabases_ListInaccessibleByInstance
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetManagedDatabase (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt; GetManagedDatabase(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabase (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&#xA;override this.GetManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetManagedDatabase (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}
            Operation Id: ManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt; GetManagedDatabaseAsync (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt; GetManagedDatabaseAsync(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabaseAsync (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;&#xA;override this.GetManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetManagedDatabaseAsync (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}
            Operation Id: ManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedDatabaseCollection GetManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedDatabaseCollection GetManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDatabases () As ManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.ManagedDatabaseCollection&#xA;override this.GetManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.ManagedDatabaseCollection" Usage="managedInstanceResource.GetManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedDatabaseResources and their operations over a ManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministrator">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt; GetManagedInstanceAdministrator (Azure.ResourceManager.Sql.Models.AdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt; GetManagedInstanceAdministrator(valuetype Azure.ResourceManager.Sql.Models.AdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministrator(Azure.ResourceManager.Sql.Models.AdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministrator (administratorName As AdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceAdministratorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministrator : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&#xA;override this.GetManagedInstanceAdministrator : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;" Usage="managedInstanceResource.GetManagedInstanceAdministrator (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.AdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The AdministratorName to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance administrator.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}
            Operation Id: ManagedInstanceAdministrators_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministratorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt; GetManagedInstanceAdministratorAsync (Azure.ResourceManager.Sql.Models.AdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt; GetManagedInstanceAdministratorAsync(valuetype Azure.ResourceManager.Sql.Models.AdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministratorAsync(Azure.ResourceManager.Sql.Models.AdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministratorAsync (administratorName As AdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceAdministratorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministratorAsync : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;&#xA;override this.GetManagedInstanceAdministratorAsync : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceAdministratorAsync (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAdministratorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.AdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The AdministratorName to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance administrator.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}
            Operation Id: ManagedInstanceAdministrators_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAdministrators">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection GetManagedInstanceAdministrators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection GetManagedInstanceAdministrators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAdministrators" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAdministrators () As ManagedInstanceAdministratorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAdministrators : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection&#xA;override this.GetManagedInstanceAdministrators : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection" Usage="managedInstanceResource.GetManagedInstanceAdministrators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAdministratorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceAdministratorResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceAdministratorResources and their operations over a ManagedInstanceAdministratorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthentication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt; GetManagedInstanceAzureADOnlyAuthentication (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt; GetManagedInstanceAzureADOnlyAuthentication(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthentication(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthentication (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceAzureADOnlyAuthenticationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&#xA;override this.GetManagedInstanceAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthentication (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}
            Operation Id: ManagedInstanceAzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthenticationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt; GetManagedInstanceAzureADOnlyAuthenticationAsync (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt; GetManagedInstanceAzureADOnlyAuthenticationAsync(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthenticationAsync(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthenticationAsync (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceAzureADOnlyAuthenticationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;&#xA;override this.GetManagedInstanceAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthenticationAsync (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}
            Operation Id: ManagedInstanceAzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceAzureADOnlyAuthentications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection GetManagedInstanceAzureADOnlyAuthentications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection GetManagedInstanceAzureADOnlyAuthentications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceAzureADOnlyAuthentications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceAzureADOnlyAuthentications () As ManagedInstanceAzureADOnlyAuthenticationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection&#xA;override this.GetManagedInstanceAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection" Usage="managedInstanceResource.GetManagedInstanceAzureADOnlyAuthentications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceAzureADOnlyAuthenticationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceAzureADOnlyAuthenticationResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceAzureADOnlyAuthenticationResources and their operations over a ManagedInstanceAzureADOnlyAuthenticationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt; GetManagedInstanceEncryptionProtector (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt; GetManagedInstanceEncryptionProtector(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtector(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtector (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceEncryptionProtectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&#xA;override this.GetManagedInstanceEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtector (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: ManagedInstanceEncryptionProtectors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt; GetManagedInstanceEncryptionProtectorAsync (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt; GetManagedInstanceEncryptionProtectorAsync(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtectorAsync(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtectorAsync (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceEncryptionProtectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;&#xA;override this.GetManagedInstanceEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtectorAsync (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: ManagedInstanceEncryptionProtectors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceEncryptionProtectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection GetManagedInstanceEncryptionProtectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection GetManagedInstanceEncryptionProtectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceEncryptionProtectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceEncryptionProtectors () As ManagedInstanceEncryptionProtectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection&#xA;override this.GetManagedInstanceEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection" Usage="managedInstanceResource.GetManagedInstanceEncryptionProtectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceEncryptionProtectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceEncryptionProtectorResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceEncryptionProtectorResources and their operations over a ManagedInstanceEncryptionProtectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt; GetManagedInstanceKey (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt; GetManagedInstanceKey(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKey (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceKeyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&#xA;override this.GetManagedInstanceKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;" Usage="managedInstanceResource.GetManagedInstanceKey (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the managed instance key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}
            Operation Id: ManagedInstanceKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt; GetManagedInstanceKeyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt; GetManagedInstanceKeyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKeyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceKeyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;&#xA;override this.GetManagedInstanceKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceKeyAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceKeyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the managed instance key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed instance key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}
            Operation Id: ManagedInstanceKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceKeyCollection GetManagedInstanceKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceKeyCollection GetManagedInstanceKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceKeys () As ManagedInstanceKeyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceKeys : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyCollection&#xA;override this.GetManagedInstanceKeys : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceKeyCollection" Usage="managedInstanceResource.GetManagedInstanceKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceKeyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceKeyResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceKeyResources and their operations over a ManagedInstanceKeyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt; GetManagedInstanceOperation (Guid operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt; GetManagedInstanceOperation(valuetype System.Guid operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperation(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperation (operationId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceOperationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperation : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&#xA;override this.GetManagedInstanceOperation : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;" Usage="managedInstanceResource.GetManagedInstanceOperation (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The Uuid to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a management operation on a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}
            Operation Id: ManagedInstanceOperations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt; GetManagedInstanceOperationAsync (Guid operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt; GetManagedInstanceOperationAsync(valuetype System.Guid operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperationAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperationAsync (operationId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceOperationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperationAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;&#xA;override this.GetManagedInstanceOperationAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceOperationAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceOperationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The Uuid to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a management operation on a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}
            Operation Id: ManagedInstanceOperations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceOperationCollection GetManagedInstanceOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceOperationCollection GetManagedInstanceOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceOperations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceOperations () As ManagedInstanceOperationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceOperations : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationCollection&#xA;override this.GetManagedInstanceOperations : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceOperationCollection" Usage="managedInstanceResource.GetManagedInstanceOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceOperationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceOperationResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceOperationResources and their operations over a ManagedInstanceOperationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt; GetManagedInstancePrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt; GetManagedInstancePrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstancePrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&#xA;override this.GetManagedInstancePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: ManagedInstancePrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt; GetManagedInstancePrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt; GetManagedInstancePrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstancePrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetManagedInstancePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: ManagedInstancePrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection GetManagedInstancePrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection GetManagedInstancePrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateEndpointConnections () As ManagedInstancePrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection&#xA;override this.GetManagedInstancePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection" Usage="managedInstanceResource.GetManagedInstancePrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstancePrivateEndpointConnectionResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstancePrivateEndpointConnectionResources and their operations over a ManagedInstancePrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt; GetManagedInstancePrivateLink (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt; GetManagedInstancePrivateLink(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLink (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstancePrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&#xA;override this.GetManagedInstancePrivateLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateLink (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources/{groupName}
            Operation Id: ManagedInstancePrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt; GetManagedInstancePrivateLinkAsync (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt; GetManagedInstancePrivateLinkAsync(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLinkAsync (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstancePrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;&#xA;override this.GetManagedInstancePrivateLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstancePrivateLinkAsync (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstancePrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources/{groupName}
            Operation Id: ManagedInstancePrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancePrivateLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection GetManagedInstancePrivateLinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection GetManagedInstancePrivateLinks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstancePrivateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstancePrivateLinks () As ManagedInstancePrivateLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstancePrivateLinks : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection&#xA;override this.GetManagedInstancePrivateLinks : unit -&gt; Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection" Usage="managedInstanceResource.GetManagedInstancePrivateLinks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstancePrivateLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstancePrivateLinkResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstancePrivateLinkResources and their operations over a ManagedInstancePrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt; GetManagedInstanceVulnerabilityAssessment (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt; GetManagedInstanceVulnerabilityAssessment(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessment(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessment (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&#xA;override this.GetManagedInstanceVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessment (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: ManagedInstanceVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt; GetManagedInstanceVulnerabilityAssessmentAsync (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt; GetManagedInstanceVulnerabilityAssessmentAsync(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessmentAsync(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessmentAsync (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetManagedInstanceVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessmentAsync (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the managed instance's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: ManagedInstanceVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstanceVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection GetManagedInstanceVulnerabilityAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection GetManagedInstanceVulnerabilityAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedInstanceVulnerabilityAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedInstanceVulnerabilityAssessments () As ManagedInstanceVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInstanceVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection&#xA;override this.GetManagedInstanceVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection" Usage="managedInstanceResource.GetManagedInstanceVulnerabilityAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedInstanceVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedInstanceVulnerabilityAssessmentResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedInstanceVulnerabilityAssessmentResources and their operations over a ManagedInstanceVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection GetManagedServerSecurityAlertPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection GetManagedServerSecurityAlertPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicies () As ManagedServerSecurityAlertPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection&#xA;override this.GetManagedServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagedServerSecurityAlertPolicyResources in the ManagedInstance. </summary>
        <returns> An object representing collection of ManagedServerSecurityAlertPolicyResources and their operations over a ManagedServerSecurityAlertPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt; GetManagedServerSecurityAlertPolicy (Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt; GetManagedServerSecurityAlertPolicy(valuetype Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicy(Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicy (securityAlertPolicyName As SecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedServerSecurityAlertPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&#xA;override this.GetManagedServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicy (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed server's threat detection policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: ManagedServerSecurityAlertPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedServerSecurityAlertPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt; GetManagedServerSecurityAlertPolicyAsync (Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt; GetManagedServerSecurityAlertPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetManagedServerSecurityAlertPolicyAsync(Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedServerSecurityAlertPolicyAsync (securityAlertPolicyName As SecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedServerSecurityAlertPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;&#xA;override this.GetManagedServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;" Usage="managedInstanceResource.GetManagedServerSecurityAlertPolicyAsync (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedServerSecurityAlertPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a managed server's threat detection policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: ManagedServerSecurityAlertPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt; GetRecoverableManagedDatabase (string recoverableDatabaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt; GetRecoverableManagedDatabase(string recoverableDatabaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabase (recoverableDatabaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoverableManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&#xA;override this.GetRecoverableManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetRecoverableManagedDatabase (recoverableDatabaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoverableDatabaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoverableDatabaseName"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases/{recoverableDatabaseName}
            Operation Id: RecoverableManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoverableDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoverableDatabaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt; GetRecoverableManagedDatabaseAsync (string recoverableDatabaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt; GetRecoverableManagedDatabaseAsync(string recoverableDatabaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabaseAsync (recoverableDatabaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoverableManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;&#xA;override this.GetRecoverableManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetRecoverableManagedDatabaseAsync (recoverableDatabaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoverableDatabaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoverableDatabaseName"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases/{recoverableDatabaseName}
            Operation Id: RecoverableManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoverableDatabaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoverableDatabaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection GetRecoverableManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection GetRecoverableManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRecoverableManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableManagedDatabases () As RecoverableManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection&#xA;override this.GetRecoverableManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection" Usage="managedInstanceResource.GetRecoverableManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecoverableManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of RecoverableManagedDatabaseResources and their operations over a RecoverableManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt; GetRestorableDroppedManagedDatabase (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt; GetRestorableDroppedManagedDatabase(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabase (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RestorableDroppedManagedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&#xA;override this.GetRestorableDroppedManagedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabase (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}
            Operation Id: RestorableDroppedManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt; GetRestorableDroppedManagedDatabaseAsync (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt; GetRestorableDroppedManagedDatabaseAsync(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabaseAsync (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RestorableDroppedManagedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;&#xA;override this.GetRestorableDroppedManagedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabaseAsync (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped managed database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}
            Operation Id: RestorableDroppedManagedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedManagedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection GetRestorableDroppedManagedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection GetRestorableDroppedManagedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetRestorableDroppedManagedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedManagedDatabases () As RestorableDroppedManagedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection&#xA;override this.GetRestorableDroppedManagedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection" Usage="managedInstanceResource.GetRestorableDroppedManagedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedManagedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RestorableDroppedManagedDatabaseResources in the ManagedInstance. </summary>
        <returns> An object representing collection of RestorableDroppedManagedDatabaseResources and their operations over a RestorableDroppedManagedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerTrustGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt; GetServerTrustGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ServerTrustGroupResource&gt; GetServerTrustGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetServerTrustGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerTrustGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServerTrustGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerTrustGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;&#xA;override this.GetServerTrustGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;" Usage="managedInstanceResource.GetServerTrustGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust groups by instance name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustGroups
            Operation Id: ServerTrustGroups_ListByInstance
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ServerTrustGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerTrustGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt; GetServerTrustGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ServerTrustGroupResource&gt; GetServerTrustGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetServerTrustGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerTrustGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServerTrustGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerTrustGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;&#xA;override this.GetServerTrustGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;" Usage="managedInstanceResource.GetServerTrustGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerTrustGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server trust groups by instance name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustGroups
            Operation Id: ServerTrustGroups_ListByInstance
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ServerTrustGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlAgentConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlAgentConfigurationResource GetSqlAgentConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetSqlAgentConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlAgentConfiguration () As SqlAgentConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlAgentConfiguration : unit -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource&#xA;override this.GetSqlAgentConfiguration : unit -&gt; Azure.ResourceManager.Sql.SqlAgentConfigurationResource" Usage="managedInstanceResource.GetSqlAgentConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlAgentConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SqlAgentConfigurationResource along with the instance operations that can be performed on it in the ManagedInstance. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.SqlAgentConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries (int? numberOfQueries = default, string databases = default, string startTime = default, string endTime = default, Azure.ResourceManager.Sql.Models.QueryTimeGrainType? interval = default, Azure.ResourceManager.Sql.Models.AggregationFunctionType? aggregationFunction = default, Azure.ResourceManager.Sql.Models.MetricType? observationMetric = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueries(valuetype System.Nullable`1&lt;int32&gt; numberOfQueries, string databases, string startTime, string endTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; interval, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; aggregationFunction, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.MetricType&gt; observationMetric, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueries(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.QueryTimeGrainType},System.Nullable{Azure.ResourceManager.Sql.Models.AggregationFunctionType},System.Nullable{Azure.ResourceManager.Sql.Models.MetricType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueries (Optional numberOfQueries As Nullable(Of Integer) = Nothing, Optional databases As String = Nothing, Optional startTime As String = Nothing, Optional endTime As String = Nothing, Optional interval As Nullable(Of QueryTimeGrainType) = Nothing, Optional aggregationFunction As Nullable(Of AggregationFunctionType) = Nothing, Optional observationMetric As Nullable(Of MetricType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueries : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueries : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueries (numberOfQueries, databases, startTime, endTime, interval, aggregationFunction, observationMetric, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfQueries" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="databases" Type="System.String" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="endTime" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt;" />
        <Parameter Name="aggregationFunction" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt;" />
        <Parameter Name="observationMetric" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="numberOfQueries"> How many 'top queries' to return. Default is 5. </param>
        <param name="databases"> Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified. </param>
        <param name="startTime"> Start time for observed period. </param>
        <param name="endTime"> End time for observed period. </param>
        <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        <param name="aggregationFunction"> Aggregation function to be used, default value is 'sum'. </param>
        <param name="observationMetric"> Metric to be used for ranking top queries. Default is 'cpu'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries
            Operation Id: ManagedInstances_ListByManagedInstance
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopQueriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync (int? numberOfQueries = default, string databases = default, string startTime = default, string endTime = default, Azure.ResourceManager.Sql.Models.QueryTimeGrainType? interval = default, Azure.ResourceManager.Sql.Models.AggregationFunctionType? aggregationFunction = default, Azure.ResourceManager.Sql.Models.MetricType? observationMetric = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.TopQueries&gt; GetTopQueriesAsync(valuetype System.Nullable`1&lt;int32&gt; numberOfQueries, string databases, string startTime, string endTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; interval, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; aggregationFunction, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.MetricType&gt; observationMetric, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.GetTopQueriesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.QueryTimeGrainType},System.Nullable{Azure.ResourceManager.Sql.Models.AggregationFunctionType},System.Nullable{Azure.ResourceManager.Sql.Models.MetricType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopQueriesAsync (Optional numberOfQueries As Nullable(Of Integer) = Nothing, Optional databases As String = Nothing, Optional startTime As String = Nothing, Optional endTime As String = Nothing, Optional interval As Nullable(Of QueryTimeGrainType) = Nothing, Optional aggregationFunction As Nullable(Of AggregationFunctionType) = Nothing, Optional observationMetric As Nullable(Of MetricType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TopQueries)" />
      <MemberSignature Language="F#" Value="abstract member GetTopQueriesAsync : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;&#xA;override this.GetTopQueriesAsync : Nullable&lt;int&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;" Usage="managedInstanceResource.GetTopQueriesAsync (numberOfQueries, databases, startTime, endTime, interval, aggregationFunction, observationMetric, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.TopQueries&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfQueries" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="databases" Type="System.String" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="endTime" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.QueryTimeGrainType&gt;" />
        <Parameter Name="aggregationFunction" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.AggregationFunctionType&gt;" />
        <Parameter Name="observationMetric" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.MetricType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="numberOfQueries"> How many 'top queries' to return. Default is 5. </param>
        <param name="databases"> Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified. </param>
        <param name="startTime"> Start time for observed period. </param>
        <param name="endTime"> End time for observed period. </param>
        <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        <param name="aggregationFunction"> Aggregation function to be used, default value is 'sum'. </param>
        <param name="observationMetric"> Metric to be used for ranking top queries. Default is 'cpu'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get top resource consuming queries of a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries
            Operation Id: ManagedInstances_ListByManagedInstance
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.TopQueries" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.ManagedInstanceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Sql.ManagedInstanceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Sql.ManagedInstanceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.Update(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ManagedInstancePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As ManagedInstancePatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ManagedInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;" Usage="managedInstanceResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.ManagedInstancePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested managed instance resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ManagedInstancePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ManagedInstancePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As ManagedInstancePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ManagedInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ManagedInstancePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;" Usage="managedInstanceResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ManagedInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.ManagedInstancePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested managed instance resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a managed instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
            Operation Id: ManagedInstances_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
