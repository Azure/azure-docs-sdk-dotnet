<Type Name="ServerJobAgentJobExecutionStepCollection" FullName="Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection">
  <TypeSignature Language="C#" Value="public class ServerJobAgentJobExecutionStepCollection : Azure.ResourceManager.ArmCollection, System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerJobAgentJobExecutionStepCollection extends Azure.ResourceManager.ArmCollection implements class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerJobAgentJobExecutionStepCollection&#xA;Inherits ArmCollection&#xA;Implements IAsyncEnumerable(Of ServerJobAgentJobExecutionStepResource), IEnumerable(Of ServerJobAgentJobExecutionStepResource)" />
  <TypeSignature Language="F#" Value="type ServerJobAgentJobExecutionStepCollection = class&#xA;    inherit ArmCollection&#xA;    interface seq&lt;ServerJobAgentJobExecutionStepResource&gt;&#xA;    interface IEnumerable&#xA;    interface IAsyncEnumerable&lt;ServerJobAgentJobExecutionStepResource&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionResource" />.
            To get a <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection" /> instance call the GetServerJobAgentJobExecutionSteps method from an instance of <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServerJobAgentJobExecutionStepCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string stepName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string stepName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.Exists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (stepName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="serverJobAgentJobExecutionStepCollection.Exists (stepName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stepName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stepName"> The name of the step. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}
            Operation Id: JobStepExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stepName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stepName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string stepName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string stepName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.ExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (stepName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="serverJobAgentJobExecutionStepCollection.ExistsAsync (stepName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stepName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stepName"> The name of the step. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}
            Operation Id: JobStepExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stepName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stepName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; Get (string stepName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; Get(string stepName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (stepName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerJobAgentJobExecutionStepResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" Usage="serverJobAgentJobExecutionStepCollection.Get (stepName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stepName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stepName"> The name of the step. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a step execution of a job execution.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}
            Operation Id: JobStepExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stepName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stepName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; GetAll (DateTimeOffset? createTimeMin = default, DateTimeOffset? createTimeMax = default, DateTimeOffset? endTimeMin = default, DateTimeOffset? endTimeMax = default, bool? isActive = default, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; GetAll(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createTimeMin, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createTimeMax, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endTimeMin, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endTimeMax, valuetype System.Nullable`1&lt;bool&gt; isActive, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.GetAll(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional createTimeMin As Nullable(Of DateTimeOffset) = Nothing, Optional createTimeMax As Nullable(Of DateTimeOffset) = Nothing, Optional endTimeMin As Nullable(Of DateTimeOffset) = Nothing, Optional endTimeMax As Nullable(Of DateTimeOffset) = Nothing, Optional isActive As Nullable(Of Boolean) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServerJobAgentJobExecutionStepResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&#xA;override this.GetAll : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" Usage="serverJobAgentJobExecutionStepCollection.GetAll (createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createTimeMin" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="createTimeMax" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endTimeMin" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endTimeMax" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="isActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createTimeMin"> If specified, only job executions created at or after the specified time are included. </param>
        <param name="createTimeMax"> If specified, only job executions created before the specified time are included. </param>
        <param name="endTimeMin"> If specified, only job executions completed at or after the specified time are included. </param>
        <param name="endTimeMax"> If specified, only job executions completed before the specified time are included. </param>
        <param name="isActive"> If specified, only active or only completed job executions are included. </param>
        <param name="skip"> The number of elements in the collection to skip. </param>
        <param name="top"> The number of elements to return from the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the step executions of a job execution.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps
            Operation Id: JobStepExecutions_ListByJobExecution
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; GetAllAsync (DateTimeOffset? createTimeMin = default, DateTimeOffset? createTimeMax = default, DateTimeOffset? endTimeMin = default, DateTimeOffset? endTimeMax = default, bool? isActive = default, int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; GetAllAsync(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createTimeMin, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createTimeMax, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endTimeMin, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endTimeMax, valuetype System.Nullable`1&lt;bool&gt; isActive, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.GetAllAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional createTimeMin As Nullable(Of DateTimeOffset) = Nothing, Optional createTimeMax As Nullable(Of DateTimeOffset) = Nothing, Optional endTimeMin As Nullable(Of DateTimeOffset) = Nothing, Optional endTimeMax As Nullable(Of DateTimeOffset) = Nothing, Optional isActive As Nullable(Of Boolean) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServerJobAgentJobExecutionStepResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&#xA;override this.GetAllAsync : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" Usage="serverJobAgentJobExecutionStepCollection.GetAllAsync (createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createTimeMin" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="createTimeMax" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endTimeMin" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endTimeMax" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="isActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createTimeMin"> If specified, only job executions created at or after the specified time are included. </param>
        <param name="createTimeMax"> If specified, only job executions created before the specified time are included. </param>
        <param name="endTimeMin"> If specified, only job executions completed at or after the specified time are included. </param>
        <param name="endTimeMax"> If specified, only job executions completed before the specified time are included. </param>
        <param name="isActive"> If specified, only active or only completed job executions are included. </param>
        <param name="skip"> The number of elements in the collection to skip. </param>
        <param name="top"> The number of elements to return from the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the step executions of a job execution.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps
            Operation Id: JobStepExecutions_ListByJobExecution
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&gt; GetAsync (string stepName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&gt; GetAsync(string stepName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (stepName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerJobAgentJobExecutionStepResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&gt;" Usage="serverJobAgentJobExecutionStepCollection.GetAsync (stepName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stepName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stepName"> The name of the step. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a step execution of a job execution.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}
            Operation Id: JobStepExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stepName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stepName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; IAsyncEnumerable&lt;ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.System#Collections#Generic#IAsyncEnumerable&lt;Azure#ResourceManager#Sql#ServerJobAgentJobExecutionStepResource&gt;#GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsyncEnumerator (cancellationToken As CancellationToken) As IAsyncEnumerator(Of ServerJobAgentJobExecutionStepResource) Implements IAsyncEnumerable(Of ServerJobAgentJobExecutionStepResource).GetAsyncEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&#xA;override this.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" Usage="serverJobAgentJobExecutionStepCollection.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; IEnumerable&lt;ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt; System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.System#Collections#Generic#IEnumerable&lt;Azure#ResourceManager#Sql#ServerJobAgentJobExecutionStepResource&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ServerJobAgentJobExecutionStepResource) Implements IEnumerable(Of ServerJobAgentJobExecutionStepResource).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;" Usage="serverJobAgentJobExecutionStepCollection.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerJobAgentJobExecutionStepCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="serverJobAgentJobExecutionStepCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
