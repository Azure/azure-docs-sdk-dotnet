<Type Name="SqlServerResource" FullName="Azure.ResourceManager.Sql.SqlServerResource">
  <TypeSignature Language="C#" Value="public class SqlServerResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.SqlServerResource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type SqlServerResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a SqlServer along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetSqlServerResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetSqlServer method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="sqlServerResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="sqlServerResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serverName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serverName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Sql.SqlServerResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serverName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="serverName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Sql.SqlServerResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTdeCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateTdeCertificate (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateTdeCertificate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.CreateTdeCertificate(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTdeCertificate (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateTdeCertificate : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="sqlServerResource.CreateTdeCertificate (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/tdeCertificates
            Operation Id: TdeCertificates_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTdeCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateTdeCertificateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateTdeCertificateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.TdeCertificate tdeCertificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.CreateTdeCertificateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.TdeCertificate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTdeCertificateAsync (waitUntil As WaitUntil, tdeCertificate As TdeCertificate, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateTdeCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.TdeCertificate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="sqlServerResource.CreateTdeCertificateAsync (waitUntil, tdeCertificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="tdeCertificate" Type="Azure.ResourceManager.Sql.Models.TdeCertificate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="tdeCertificate"> The requested TDE certificate to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a TDE certificate for a given server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/tdeCertificates
            Operation Id: TdeCertificates_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tdeCertificate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlServerData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Sql.SqlServerData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.SqlServerResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As SqlServerData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Sql.SqlServerData" Usage="Azure.ResourceManager.Sql.SqlServerResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlServerData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="sqlServerResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="sqlServerResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; Get (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; Get(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="sqlServerResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; GetAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; GetAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="sqlServerResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElasticPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt; GetElasticPool (string elasticPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ElasticPoolResource&gt; GetElasticPool(string elasticPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetElasticPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticPool (elasticPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetElasticPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;&#xA;override this.GetElasticPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;" Usage="sqlServerResource.GetElasticPool (elasticPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="elasticPoolName"> The name of the elastic pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an elastic pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}
            Operation Id: ElasticPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="elasticPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="elasticPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;&gt; GetElasticPoolAsync (string elasticPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ElasticPoolResource&gt;&gt; GetElasticPoolAsync(string elasticPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetElasticPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticPoolAsync (elasticPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetElasticPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;&gt;&#xA;override this.GetElasticPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;&gt;" Usage="sqlServerResource.GetElasticPoolAsync (elasticPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ElasticPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="elasticPoolName"> The name of the elastic pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an elastic pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}
            Operation Id: ElasticPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="elasticPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="elasticPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ElasticPoolCollection GetElasticPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ElasticPoolCollection GetElasticPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetElasticPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElasticPools () As ElasticPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetElasticPools : unit -&gt; Azure.ResourceManager.Sql.ElasticPoolCollection&#xA;override this.GetElasticPools : unit -&gt; Azure.ResourceManager.Sql.ElasticPoolCollection" Usage="sqlServerResource.GetElasticPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ElasticPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ElasticPoolResources in the SqlServer. </summary>
        <returns> An object representing collection of ElasticPoolResources and their operations over a ElasticPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt; GetEncryptionProtector (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.EncryptionProtectorResource&gt; GetEncryptionProtector(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetEncryptionProtector(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtector (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EncryptionProtectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&#xA;override this.GetEncryptionProtector : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;" Usage="sqlServerResource.GetEncryptionProtector (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: EncryptionProtectors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&gt; GetEncryptionProtectorAsync (Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&gt; GetEncryptionProtectorAsync(valuetype Azure.ResourceManager.Sql.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetEncryptionProtectorAsync(Azure.ResourceManager.Sql.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtectorAsync (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EncryptionProtectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&gt;&#xA;override this.GetEncryptionProtectorAsync : Azure.ResourceManager.Sql.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&gt;" Usage="sqlServerResource.GetEncryptionProtectorAsync (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.EncryptionProtectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Sql.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: EncryptionProtectors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.EncryptionProtectorCollection GetEncryptionProtectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.EncryptionProtectorCollection GetEncryptionProtectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetEncryptionProtectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtectors () As EncryptionProtectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.EncryptionProtectorCollection&#xA;override this.GetEncryptionProtectors : unit -&gt; Azure.ResourceManager.Sql.EncryptionProtectorCollection" Usage="sqlServerResource.GetEncryptionProtectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.EncryptionProtectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of EncryptionProtectorResources in the SqlServer. </summary>
        <returns> An object representing collection of EncryptionProtectorResources and their operations over a EncryptionProtectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyCollection GetExtendedServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyCollection GetExtendedServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetExtendedServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicies () As ExtendedServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyCollection&#xA;override this.GetExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyCollection" Usage="sqlServerResource.GetExtendedServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExtendedServerBlobAuditingPolicyResources in the SqlServer. </summary>
        <returns> An object representing collection of ExtendedServerBlobAuditingPolicyResources and their operations over a ExtendedServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt; GetExtendedServerBlobAuditingPolicy (Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt; GetExtendedServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetExtendedServerBlobAuditingPolicy(Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicy (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExtendedServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&#xA;override this.GetExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;" Usage="sqlServerResource.GetExtendedServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an extended server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings/{blobAuditingPolicyName}
            Operation Id: ExtendedServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&gt; GetExtendedServerBlobAuditingPolicyAsync (Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&gt; GetExtendedServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetExtendedServerBlobAuditingPolicyAsync(Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExtendedServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&gt;" Usage="sqlServerResource.GetExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ExtendedServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an extended server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings/{blobAuditingPolicyName}
            Operation Id: ExtendedServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFailoverGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt; GetFailoverGroup (string failoverGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FailoverGroupResource&gt; GetFailoverGroup(string failoverGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFailoverGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFailoverGroup (failoverGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FailoverGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFailoverGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;&#xA;override this.GetFailoverGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;" Usage="sqlServerResource.GetFailoverGroup (failoverGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failoverGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="failoverGroupName"> The name of the failover group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a failover group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}
            Operation Id: FailoverGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="failoverGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="failoverGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFailoverGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;&gt; GetFailoverGroupAsync (string failoverGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FailoverGroupResource&gt;&gt; GetFailoverGroupAsync(string failoverGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFailoverGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFailoverGroupAsync (failoverGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FailoverGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetFailoverGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;&gt;&#xA;override this.GetFailoverGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;&gt;" Usage="sqlServerResource.GetFailoverGroupAsync (failoverGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FailoverGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failoverGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="failoverGroupName"> The name of the failover group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a failover group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}
            Operation Id: FailoverGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="failoverGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="failoverGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFailoverGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.FailoverGroupCollection GetFailoverGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.FailoverGroupCollection GetFailoverGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFailoverGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFailoverGroups () As FailoverGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetFailoverGroups : unit -&gt; Azure.ResourceManager.Sql.FailoverGroupCollection&#xA;override this.GetFailoverGroups : unit -&gt; Azure.ResourceManager.Sql.FailoverGroupCollection" Usage="sqlServerResource.GetFailoverGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.FailoverGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of FailoverGroupResources in the SqlServer. </summary>
        <returns> An object representing collection of FailoverGroupResources and their operations over a FailoverGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt; GetFirewallRule (string firewallRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FirewallRuleResource&gt; GetFirewallRule(string firewallRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFirewallRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRule (firewallRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FirewallRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&#xA;override this.GetFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;" Usage="sqlServerResource.GetFirewallRule (firewallRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleName"> The name of the firewall rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}
            Operation Id: FirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt; GetFirewallRuleAsync (string firewallRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt; GetFirewallRuleAsync(string firewallRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFirewallRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRuleAsync (firewallRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FirewallRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;&#xA;override this.GetFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;" Usage="sqlServerResource.GetFirewallRuleAsync (firewallRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleName"> The name of the firewall rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}
            Operation Id: FirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.FirewallRuleCollection GetFirewallRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.FirewallRuleCollection GetFirewallRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetFirewallRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRules () As FirewallRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRules : unit -&gt; Azure.ResourceManager.Sql.FirewallRuleCollection&#xA;override this.GetFirewallRules : unit -&gt; Azure.ResourceManager.Sql.FirewallRuleCollection" Usage="sqlServerResource.GetFirewallRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.FirewallRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of FirewallRuleResources in the SqlServer. </summary>
        <returns> An object representing collection of FirewallRuleResources and their operations over a FirewallRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetInaccessibleDatabases (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetInaccessibleDatabases(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetInaccessibleDatabases(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleDatabases (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&#xA;override this.GetInaccessibleDatabases : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;" Usage="sqlServerResource.GetInaccessibleDatabases cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible databases in a logical server
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/inaccessibleDatabases
            Operation Id: Databases_ListInaccessibleByServer
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInaccessibleDatabasesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetInaccessibleDatabasesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetInaccessibleDatabasesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetInaccessibleDatabasesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInaccessibleDatabasesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetInaccessibleDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&#xA;override this.GetInaccessibleDatabasesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;" Usage="sqlServerResource.GetInaccessibleDatabasesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of inaccessible databases in a logical server
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/inaccessibleDatabases
            Operation Id: Databases_ListInaccessibleByServer
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SqlDatabaseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobAgent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt; GetJobAgent (string jobAgentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.JobAgentResource&gt; GetJobAgent(string jobAgentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetJobAgent(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAgent (jobAgentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobAgentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJobAgent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;&#xA;override this.GetJobAgent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;" Usage="sqlServerResource.GetJobAgent (jobAgentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobAgentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobAgentName"> The name of the job agent to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a job agent.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}
            Operation Id: JobAgents_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobAgentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobAgentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;&gt; GetJobAgentAsync (string jobAgentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.JobAgentResource&gt;&gt; GetJobAgentAsync(string jobAgentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetJobAgentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAgentAsync (jobAgentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobAgentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetJobAgentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;&gt;&#xA;override this.GetJobAgentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;&gt;" Usage="sqlServerResource.GetJobAgentAsync (jobAgentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.JobAgentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobAgentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobAgentName"> The name of the job agent to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a job agent.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}
            Operation Id: JobAgents_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobAgentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobAgentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAgents">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.JobAgentCollection GetJobAgents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.JobAgentCollection GetJobAgents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetJobAgents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAgents () As JobAgentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetJobAgents : unit -&gt; Azure.ResourceManager.Sql.JobAgentCollection&#xA;override this.GetJobAgents : unit -&gt; Azure.ResourceManager.Sql.JobAgentCollection" Usage="sqlServerResource.GetJobAgents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.JobAgentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of JobAgentResources in the SqlServer. </summary>
        <returns> An object representing collection of JobAgentResources and their operations over a JobAgentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt; GetOutboundFirewallRule (string outboundRuleFqdn, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt; GetOutboundFirewallRule(string outboundRuleFqdn, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetOutboundFirewallRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundFirewallRule (outboundRuleFqdn As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OutboundFirewallRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&#xA;override this.GetOutboundFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;" Usage="sqlServerResource.GetOutboundFirewallRule (outboundRuleFqdn, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outboundRuleFqdn" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="outboundRuleFqdn"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an outbound firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules/{outboundRuleFqdn}
            Operation Id: OutboundFirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="outboundRuleFqdn" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="outboundRuleFqdn" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&gt; GetOutboundFirewallRuleAsync (string outboundRuleFqdn, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&gt; GetOutboundFirewallRuleAsync(string outboundRuleFqdn, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetOutboundFirewallRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundFirewallRuleAsync (outboundRuleFqdn As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OutboundFirewallRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&gt;&#xA;override this.GetOutboundFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&gt;" Usage="sqlServerResource.GetOutboundFirewallRuleAsync (outboundRuleFqdn, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.OutboundFirewallRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outboundRuleFqdn" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="outboundRuleFqdn"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an outbound firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules/{outboundRuleFqdn}
            Operation Id: OutboundFirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="outboundRuleFqdn" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="outboundRuleFqdn" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundFirewallRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.OutboundFirewallRuleCollection GetOutboundFirewallRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.OutboundFirewallRuleCollection GetOutboundFirewallRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetOutboundFirewallRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundFirewallRules () As OutboundFirewallRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundFirewallRules : unit -&gt; Azure.ResourceManager.Sql.OutboundFirewallRuleCollection&#xA;override this.GetOutboundFirewallRules : unit -&gt; Azure.ResourceManager.Sql.OutboundFirewallRuleCollection" Usage="sqlServerResource.GetOutboundFirewallRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.OutboundFirewallRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of OutboundFirewallRuleResources in the SqlServer. </summary>
        <returns> An object representing collection of OutboundFirewallRuleResources and their operations over a OutboundFirewallRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt; GetPrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt; GetPrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&#xA;override this.GetPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;" Usage="sqlServerResource.GetPrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&gt; GetPrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&gt; GetPrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&gt;" Usage="sqlServerResource.GetPrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.PrivateEndpointConnectionCollection GetPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.PrivateEndpointConnectionCollection GetPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointConnections () As PrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.PrivateEndpointConnectionCollection&#xA;override this.GetPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Sql.PrivateEndpointConnectionCollection" Usage="sqlServerResource.GetPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.PrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateEndpointConnectionResources in the SqlServer. </summary>
        <returns> An object representing collection of PrivateEndpointConnectionResources and their operations over a PrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt; GetPrivateLinkResource (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.PrivateLinkResource&gt; GetPrivateLinkResource(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateLinkResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkResource (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;&#xA;override this.GetPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;" Usage="sqlServerResource.GetPrivateLinkResource (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateLinkResources/{groupName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;&gt; GetPrivateLinkResourceAsync (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.PrivateLinkResource&gt;&gt; GetPrivateLinkResourceAsync(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkResourceAsync (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;&gt;&#xA;override this.GetPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;&gt;" Usage="sqlServerResource.GetPrivateLinkResourceAsync (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.PrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private link resource for SQL server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateLinkResources/{groupName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.PrivateLinkResourceCollection GetPrivateLinkResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.PrivateLinkResourceCollection GetPrivateLinkResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetPrivateLinkResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkResources () As PrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkResources : unit -&gt; Azure.ResourceManager.Sql.PrivateLinkResourceCollection&#xA;override this.GetPrivateLinkResources : unit -&gt; Azure.ResourceManager.Sql.PrivateLinkResourceCollection" Usage="sqlServerResource.GetPrivateLinkResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.PrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateLinkResources in the SqlServer. </summary>
        <returns> An object representing collection of PrivateLinkResources and their operations over a PrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt; GetRecoverableDatabase (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt; GetRecoverableDatabase(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRecoverableDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableDatabase (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoverableDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&#xA;override this.GetRecoverableDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;" Usage="sqlServerResource.GetRecoverableDatabase (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable database, which is a resource representing a database's geo backup
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases/{databaseName}
            Operation Id: RecoverableDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&gt; GetRecoverableDatabaseAsync (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&gt; GetRecoverableDatabaseAsync(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRecoverableDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableDatabaseAsync (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoverableDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&gt;&#xA;override this.GetRecoverableDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&gt;" Usage="sqlServerResource.GetRecoverableDatabaseAsync (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RecoverableDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recoverable database, which is a resource representing a database's geo backup
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases/{databaseName}
            Operation Id: RecoverableDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RecoverableDatabaseCollection GetRecoverableDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RecoverableDatabaseCollection GetRecoverableDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRecoverableDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableDatabases () As RecoverableDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableDatabaseCollection&#xA;override this.GetRecoverableDatabases : unit -&gt; Azure.ResourceManager.Sql.RecoverableDatabaseCollection" Usage="sqlServerResource.GetRecoverableDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RecoverableDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecoverableDatabaseResources in the SqlServer. </summary>
        <returns> An object representing collection of RecoverableDatabaseResources and their operations over a RecoverableDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt; GetReplicationLinks (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ReplicationLinkResource&gt; GetReplicationLinks(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetReplicationLinks(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplicationLinks (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReplicationLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReplicationLinks : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;&#xA;override this.GetReplicationLinks : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;" Usage="sqlServerResource.GetReplicationLinks cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of replication links.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/replicationLinks
            Operation Id: ReplicationLinks_ListByServer
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ReplicationLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationLinksAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt; GetReplicationLinksAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ReplicationLinkResource&gt; GetReplicationLinksAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetReplicationLinksAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplicationLinksAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReplicationLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReplicationLinksAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;&#xA;override this.GetReplicationLinksAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;" Usage="sqlServerResource.GetReplicationLinksAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ReplicationLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of replication links.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/replicationLinks
            Operation Id: ReplicationLinks_ListByServer
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ReplicationLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt; GetRestorableDroppedDatabase (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt; GetRestorableDroppedDatabase(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRestorableDroppedDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedDatabase (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RestorableDroppedDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&#xA;override this.GetRestorableDroppedDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;" Usage="sqlServerResource.GetRestorableDroppedDatabase (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}
            Operation Id: RestorableDroppedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&gt; GetRestorableDroppedDatabaseAsync (string restorableDroppedDatabaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&gt; GetRestorableDroppedDatabaseAsync(string restorableDroppedDatabaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRestorableDroppedDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedDatabaseAsync (restorableDroppedDatabaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RestorableDroppedDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&gt;&#xA;override this.GetRestorableDroppedDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&gt;" Usage="sqlServerResource.GetRestorableDroppedDatabaseAsync (restorableDroppedDatabaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.RestorableDroppedDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedDatabaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedDatabaseId"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a restorable dropped database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}
            Operation Id: RestorableDroppedDatabases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedDatabaseId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedDatabaseId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.RestorableDroppedDatabaseCollection GetRestorableDroppedDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.RestorableDroppedDatabaseCollection GetRestorableDroppedDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetRestorableDroppedDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedDatabases () As RestorableDroppedDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedDatabaseCollection&#xA;override this.GetRestorableDroppedDatabases : unit -&gt; Azure.ResourceManager.Sql.RestorableDroppedDatabaseCollection" Usage="sqlServerResource.GetRestorableDroppedDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.RestorableDroppedDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RestorableDroppedDatabaseResources in the SqlServer. </summary>
        <returns> An object representing collection of RestorableDroppedDatabaseResources and their operations over a RestorableDroppedDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAdvisor">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt; GetServerAdvisor (string advisorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAdvisorResource&gt; GetServerAdvisor(string advisorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAdvisor(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAdvisor (advisorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerAdvisorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerAdvisor : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&#xA;override this.GetServerAdvisor : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;" Usage="sqlServerResource.GetServerAdvisor (advisorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advisorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="advisorName"> The name of the Server Advisor. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server advisor.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}
            Operation Id: ServerAdvisors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="advisorName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerAdvisorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&gt; GetServerAdvisorAsync (string advisorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&gt; GetServerAdvisorAsync(string advisorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAdvisorAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAdvisorAsync (advisorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerAdvisorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerAdvisorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&gt;&#xA;override this.GetServerAdvisorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&gt;" Usage="sqlServerResource.GetServerAdvisorAsync (advisorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAdvisorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advisorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="advisorName"> The name of the Server Advisor. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server advisor.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}
            Operation Id: ServerAdvisors_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="advisorName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="advisorName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerAdvisors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerAdvisorCollection GetServerAdvisors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerAdvisorCollection GetServerAdvisors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAdvisors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAdvisors () As ServerAdvisorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerAdvisors : unit -&gt; Azure.ResourceManager.Sql.ServerAdvisorCollection&#xA;override this.GetServerAdvisors : unit -&gt; Azure.ResourceManager.Sql.ServerAdvisorCollection" Usage="sqlServerResource.GetServerAdvisors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAdvisorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerAdvisorResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerAdvisorResources and their operations over a ServerAdvisorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAutomaticTuning">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerAutomaticTuningResource GetServerAutomaticTuning ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerAutomaticTuningResource GetServerAutomaticTuning() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAutomaticTuning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAutomaticTuning () As ServerAutomaticTuningResource" />
      <MemberSignature Language="F#" Value="abstract member GetServerAutomaticTuning : unit -&gt; Azure.ResourceManager.Sql.ServerAutomaticTuningResource&#xA;override this.GetServerAutomaticTuning : unit -&gt; Azure.ResourceManager.Sql.ServerAutomaticTuningResource" Usage="sqlServerResource.GetServerAutomaticTuning " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAutomaticTuningResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ServerAutomaticTuningResource along with the instance operations that can be performed on it in the SqlServer. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Sql.ServerAutomaticTuningResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADAdministrator">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt; GetServerAzureADAdministrator (Azure.ResourceManager.Sql.Models.AdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt; GetServerAzureADAdministrator(valuetype Azure.ResourceManager.Sql.Models.AdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADAdministrator(Azure.ResourceManager.Sql.Models.AdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADAdministrator (administratorName As AdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerAzureADAdministratorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADAdministrator : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&#xA;override this.GetServerAzureADAdministrator : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;" Usage="sqlServerResource.GetServerAzureADAdministrator (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.AdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The name of server active directory administrator. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory administrator.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}
            Operation Id: ServerAzureADAdministrators_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADAdministratorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&gt; GetServerAzureADAdministratorAsync (Azure.ResourceManager.Sql.Models.AdministratorName administratorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&gt; GetServerAzureADAdministratorAsync(valuetype Azure.ResourceManager.Sql.Models.AdministratorName administratorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADAdministratorAsync(Azure.ResourceManager.Sql.Models.AdministratorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADAdministratorAsync (administratorName As AdministratorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerAzureADAdministratorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADAdministratorAsync : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&gt;&#xA;override this.GetServerAzureADAdministratorAsync : Azure.ResourceManager.Sql.Models.AdministratorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&gt;" Usage="sqlServerResource.GetServerAzureADAdministratorAsync (administratorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADAdministratorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="administratorName" Type="Azure.ResourceManager.Sql.Models.AdministratorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="administratorName"> The name of server active directory administrator. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory administrator.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}
            Operation Id: ServerAzureADAdministrators_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADAdministrators">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerAzureADAdministratorCollection GetServerAzureADAdministrators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerAzureADAdministratorCollection GetServerAzureADAdministrators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADAdministrators" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADAdministrators () As ServerAzureADAdministratorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADAdministrators : unit -&gt; Azure.ResourceManager.Sql.ServerAzureADAdministratorCollection&#xA;override this.GetServerAzureADAdministrators : unit -&gt; Azure.ResourceManager.Sql.ServerAzureADAdministratorCollection" Usage="sqlServerResource.GetServerAzureADAdministrators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAzureADAdministratorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerAzureADAdministratorResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerAzureADAdministratorResources and their operations over a ServerAzureADAdministratorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADOnlyAuthentication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt; GetServerAzureADOnlyAuthentication (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt; GetServerAzureADOnlyAuthentication(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADOnlyAuthentication(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADOnlyAuthentication (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerAzureADOnlyAuthenticationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&#xA;override this.GetServerAzureADOnlyAuthentication : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;" Usage="sqlServerResource.GetServerAzureADOnlyAuthentication (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/{authenticationName}
            Operation Id: ServerAzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADOnlyAuthenticationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&gt; GetServerAzureADOnlyAuthenticationAsync (Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&gt; GetServerAzureADOnlyAuthenticationAsync(valuetype Azure.ResourceManager.Sql.Models.AuthenticationName authenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADOnlyAuthenticationAsync(Azure.ResourceManager.Sql.Models.AuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADOnlyAuthenticationAsync (authenticationName As AuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerAzureADOnlyAuthenticationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&gt;&#xA;override this.GetServerAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Sql.Models.AuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&gt;" Usage="sqlServerResource.GetServerAzureADOnlyAuthenticationAsync (authenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationName" Type="Azure.ResourceManager.Sql.Models.AuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationName"> The name of server azure active directory only authentication. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Azure Active Directory only authentication property.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/{authenticationName}
            Operation Id: ServerAzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAzureADOnlyAuthentications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationCollection GetServerAzureADOnlyAuthentications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationCollection GetServerAzureADOnlyAuthentications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerAzureADOnlyAuthentications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerAzureADOnlyAuthentications () As ServerAzureADOnlyAuthenticationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationCollection&#xA;override this.GetServerAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationCollection" Usage="sqlServerResource.GetServerAzureADOnlyAuthentications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerAzureADOnlyAuthenticationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerAzureADOnlyAuthenticationResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerAzureADOnlyAuthenticationResources and their operations over a ServerAzureADOnlyAuthenticationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerBlobAuditingPolicyCollection GetServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerBlobAuditingPolicyCollection GetServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicies () As ServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerBlobAuditingPolicyCollection&#xA;override this.GetServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerBlobAuditingPolicyCollection" Usage="sqlServerResource.GetServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerBlobAuditingPolicyResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerBlobAuditingPolicyResources and their operations over a ServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt; GetServerBlobAuditingPolicy (Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt; GetServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerBlobAuditingPolicy(Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicy (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicy : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&#xA;override this.GetServerBlobAuditingPolicy : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;" Usage="sqlServerResource.GetServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/{blobAuditingPolicyName}
            Operation Id: ServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&gt; GetServerBlobAuditingPolicyAsync (Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&gt; GetServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerBlobAuditingPolicyAsync(Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicyAsync (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicyAsync : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetServerBlobAuditingPolicyAsync : Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&gt;" Usage="sqlServerResource.GetServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Sql.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/{blobAuditingPolicyName}
            Operation Id: ServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerCommunicationLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt; GetServerCommunicationLink (string communicationLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt; GetServerCommunicationLink(string communicationLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerCommunicationLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerCommunicationLink (communicationLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerCommunicationLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerCommunicationLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&#xA;override this.GetServerCommunicationLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;" Usage="sqlServerResource.GetServerCommunicationLink (communicationLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="communicationLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="communicationLinkName"> The name of the server communication link. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a server communication link.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}
            Operation Id: ServerCommunicationLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="communicationLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="communicationLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerCommunicationLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&gt; GetServerCommunicationLinkAsync (string communicationLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&gt; GetServerCommunicationLinkAsync(string communicationLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerCommunicationLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerCommunicationLinkAsync (communicationLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerCommunicationLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerCommunicationLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&gt;&#xA;override this.GetServerCommunicationLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&gt;" Usage="sqlServerResource.GetServerCommunicationLinkAsync (communicationLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerCommunicationLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="communicationLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="communicationLinkName"> The name of the server communication link. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a server communication link.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}
            Operation Id: ServerCommunicationLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="communicationLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="communicationLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerCommunicationLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerCommunicationLinkCollection GetServerCommunicationLinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerCommunicationLinkCollection GetServerCommunicationLinks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerCommunicationLinks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerCommunicationLinks () As ServerCommunicationLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerCommunicationLinks : unit -&gt; Azure.ResourceManager.Sql.ServerCommunicationLinkCollection&#xA;override this.GetServerCommunicationLinks : unit -&gt; Azure.ResourceManager.Sql.ServerCommunicationLinkCollection" Usage="sqlServerResource.GetServerCommunicationLinks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerCommunicationLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerCommunicationLinkResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerCommunicationLinkResources and their operations over a ServerCommunicationLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerConnectionPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerConnectionPolicyCollection GetServerConnectionPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerConnectionPolicyCollection GetServerConnectionPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerConnectionPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerConnectionPolicies () As ServerConnectionPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerConnectionPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerConnectionPolicyCollection&#xA;override this.GetServerConnectionPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerConnectionPolicyCollection" Usage="sqlServerResource.GetServerConnectionPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerConnectionPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerConnectionPolicyResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerConnectionPolicyResources and their operations over a ServerConnectionPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerConnectionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt; GetServerConnectionPolicy (Azure.ResourceManager.Sql.Models.ConnectionPolicyName connectionPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt; GetServerConnectionPolicy(valuetype Azure.ResourceManager.Sql.Models.ConnectionPolicyName connectionPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerConnectionPolicy(Azure.ResourceManager.Sql.Models.ConnectionPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerConnectionPolicy (connectionPolicyName As ConnectionPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerConnectionPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerConnectionPolicy : Azure.ResourceManager.Sql.Models.ConnectionPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&#xA;override this.GetServerConnectionPolicy : Azure.ResourceManager.Sql.Models.ConnectionPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;" Usage="sqlServerResource.GetServerConnectionPolicy (connectionPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionPolicyName" Type="Azure.ResourceManager.Sql.Models.ConnectionPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionPolicyName"> The name of the connection policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server connection policy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}
            Operation Id: ServerConnectionPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerConnectionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&gt; GetServerConnectionPolicyAsync (Azure.ResourceManager.Sql.Models.ConnectionPolicyName connectionPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&gt; GetServerConnectionPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.ConnectionPolicyName connectionPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerConnectionPolicyAsync(Azure.ResourceManager.Sql.Models.ConnectionPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerConnectionPolicyAsync (connectionPolicyName As ConnectionPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerConnectionPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerConnectionPolicyAsync : Azure.ResourceManager.Sql.Models.ConnectionPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&gt;&#xA;override this.GetServerConnectionPolicyAsync : Azure.ResourceManager.Sql.Models.ConnectionPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&gt;" Usage="sqlServerResource.GetServerConnectionPolicyAsync (connectionPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerConnectionPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionPolicyName" Type="Azure.ResourceManager.Sql.Models.ConnectionPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionPolicyName"> The name of the connection policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server connection policy
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}
            Operation Id: ServerConnectionPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerDevOpsAuditingSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsCollection GetServerDevOpsAuditingSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsCollection GetServerDevOpsAuditingSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDevOpsAuditingSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDevOpsAuditingSettings () As ServerDevOpsAuditingSettingsCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerDevOpsAuditingSettings : unit -&gt; Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsCollection&#xA;override this.GetServerDevOpsAuditingSettings : unit -&gt; Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsCollection" Usage="sqlServerResource.GetServerDevOpsAuditingSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerDevOpsAuditingSettingsResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerDevOpsAuditingSettingsResources and their operations over a ServerDevOpsAuditingSettingsResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerDevOpsAuditingSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt; GetServerDevOpsAuditingSettings (string devOpsAuditingSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt; GetServerDevOpsAuditingSettings(string devOpsAuditingSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDevOpsAuditingSettings(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDevOpsAuditingSettings (devOpsAuditingSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerDevOpsAuditingSettingsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerDevOpsAuditingSettings : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&#xA;override this.GetServerDevOpsAuditingSettings : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;" Usage="sqlServerResource.GetServerDevOpsAuditingSettings (devOpsAuditingSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devOpsAuditingSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devOpsAuditingSettingsName"> The name of the devops audit settings. This should always be 'default'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server's DevOps audit settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/devOpsAuditingSettings/{devOpsAuditingSettingsName}
            Operation Id: ServerDevOpsAuditSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="devOpsAuditingSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devOpsAuditingSettingsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerDevOpsAuditingSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&gt; GetServerDevOpsAuditingSettingsAsync (string devOpsAuditingSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&gt; GetServerDevOpsAuditingSettingsAsync(string devOpsAuditingSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDevOpsAuditingSettingsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDevOpsAuditingSettingsAsync (devOpsAuditingSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerDevOpsAuditingSettingsResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerDevOpsAuditingSettingsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&gt;&#xA;override this.GetServerDevOpsAuditingSettingsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&gt;" Usage="sqlServerResource.GetServerDevOpsAuditingSettingsAsync (devOpsAuditingSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDevOpsAuditingSettingsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devOpsAuditingSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devOpsAuditingSettingsName"> The name of the devops audit settings. This should always be 'default'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server's DevOps audit settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/devOpsAuditingSettings/{devOpsAuditingSettingsName}
            Operation Id: ServerDevOpsAuditSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="devOpsAuditingSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devOpsAuditingSettingsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerDnsAlias">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt; GetServerDnsAlias (string dnsAliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDnsAliasResource&gt; GetServerDnsAlias(string dnsAliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDnsAlias(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDnsAlias (dnsAliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerDnsAliasResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerDnsAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&#xA;override this.GetServerDnsAlias : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;" Usage="sqlServerResource.GetServerDnsAlias (dnsAliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsAliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsAliasName"> The name of the server dns alias. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server DNS alias.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}
            Operation Id: ServerDnsAliases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsAliasName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsAliasName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerDnsAliasAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&gt; GetServerDnsAliasAsync (string dnsAliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&gt; GetServerDnsAliasAsync(string dnsAliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDnsAliasAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDnsAliasAsync (dnsAliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerDnsAliasResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerDnsAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&gt;&#xA;override this.GetServerDnsAliasAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&gt;" Usage="sqlServerResource.GetServerDnsAliasAsync (dnsAliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDnsAliasResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsAliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsAliasName"> The name of the server dns alias. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server DNS alias.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}
            Operation Id: ServerDnsAliases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsAliasName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsAliasName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerDnsAliases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerDnsAliasCollection GetServerDnsAliases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerDnsAliasCollection GetServerDnsAliases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerDnsAliases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerDnsAliases () As ServerDnsAliasCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerDnsAliases : unit -&gt; Azure.ResourceManager.Sql.ServerDnsAliasCollection&#xA;override this.GetServerDnsAliases : unit -&gt; Azure.ResourceManager.Sql.ServerDnsAliasCollection" Usage="sqlServerResource.GetServerDnsAliases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerDnsAliasCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerDnsAliasResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerDnsAliasResources and their operations over a ServerDnsAliasResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt; GetServerKey (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerKeyResource&gt; GetServerKey(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerKey (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerKeyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;&#xA;override this.GetServerKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;" Usage="sqlServerResource.GetServerKey (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the server key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}
            Operation Id: ServerKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;&gt; GetServerKeyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerKeyResource&gt;&gt; GetServerKeyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerKeyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerKeyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;&gt;&#xA;override this.GetServerKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;&gt;" Usage="sqlServerResource.GetServerKeyAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerKeyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the server key to be retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}
            Operation Id: ServerKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerKeyCollection GetServerKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerKeyCollection GetServerKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerKeys () As ServerKeyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerKeys : unit -&gt; Azure.ResourceManager.Sql.ServerKeyCollection&#xA;override this.GetServerKeys : unit -&gt; Azure.ResourceManager.Sql.ServerKeyCollection" Usage="sqlServerResource.GetServerKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerKeyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerKeyResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerKeyResources and their operations over a ServerKeyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt; GetServerOperations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.ServerOperation&gt; GetServerOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerOperations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerOperations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServerOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetServerOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;&#xA;override this.GetServerOperations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;" Usage="sqlServerResource.GetServerOperations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of operations performed on the server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/operations
            Operation Id: ServerOperations_ListByServer
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.ServerOperation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt; GetServerOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.ServerOperation&gt; GetServerOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServerOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetServerOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;&#xA;override this.GetServerOperationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;" Usage="sqlServerResource.GetServerOperationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of operations performed on the server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/operations
            Operation Id: ServerOperations_ListByServer
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.ServerOperation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerSecurityAlertPolicyCollection GetServerSecurityAlertPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerSecurityAlertPolicyCollection GetServerSecurityAlertPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerSecurityAlertPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicies () As ServerSecurityAlertPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerSecurityAlertPolicyCollection&#xA;override this.GetServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Sql.ServerSecurityAlertPolicyCollection" Usage="sqlServerResource.GetServerSecurityAlertPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerSecurityAlertPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerSecurityAlertPolicyResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerSecurityAlertPolicyResources and their operations over a ServerSecurityAlertPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt; GetServerSecurityAlertPolicy (Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt; GetServerSecurityAlertPolicy(valuetype Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerSecurityAlertPolicy(Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicy (securityAlertPolicyName As SecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerSecurityAlertPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&#xA;override this.GetServerSecurityAlertPolicy : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;" Usage="sqlServerResource.GetServerSecurityAlertPolicy (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a server's security alert policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: ServerSecurityAlertPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&gt; GetServerSecurityAlertPolicyAsync (Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&gt; GetServerSecurityAlertPolicyAsync(valuetype Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerSecurityAlertPolicyAsync(Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicyAsync (securityAlertPolicyName As SecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerSecurityAlertPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&gt;&#xA;override this.GetServerSecurityAlertPolicyAsync : Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&gt;" Usage="sqlServerResource.GetServerSecurityAlertPolicyAsync (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerSecurityAlertPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Sql.Models.SecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a server's security alert policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: ServerSecurityAlertPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt; GetServerUsages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.ServerUsage&gt; GetServerUsages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerUsages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerUsages (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;&#xA;override this.GetServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;" Usage="sqlServerResource.GetServerUsages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns server usages.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/usages
            Operation Id: ServerUsages_ListByServer
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.ServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt; GetServerUsagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.ServerUsage&gt; GetServerUsagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerUsagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerUsagesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;&#xA;override this.GetServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;" Usage="sqlServerResource.GetServerUsagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.ServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns server usages.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/usages
            Operation Id: ServerUsages_ListByServer
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.ServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerVulnerabilityAssessment(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessment (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&#xA;override this.GetServerVulnerabilityAssessment : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;" Usage="sqlServerResource.GetServerVulnerabilityAssessment (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the server's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: ServerVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync (Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync(valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerVulnerabilityAssessmentAsync(Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&gt;" Usage="sqlServerResource.GetServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the server's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: ServerVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServerVulnerabilityAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessments () As ServerVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentCollection&#xA;override this.GetServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentCollection" Usage="sqlServerResource.GetServerVulnerabilityAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServerVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerVulnerabilityAssessmentResources in the SqlServer. </summary>
        <returns> An object representing collection of ServerVulnerabilityAssessmentResources and their operations over a ServerVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceObjective">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt; GetServiceObjective (string serviceObjectiveName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServiceObjectiveResource&gt; GetServiceObjective(string serviceObjectiveName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServiceObjective(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceObjective (serviceObjectiveName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceObjectiveResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceObjective : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&#xA;override this.GetServiceObjective : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;" Usage="sqlServerResource.GetServiceObjective (serviceObjectiveName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceObjectiveName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceObjectiveName"> The name of the service objective to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a database service objective.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}
            Operation Id: ServiceObjectives_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceObjectiveName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceObjectiveName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceObjectiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&gt; GetServiceObjectiveAsync (string serviceObjectiveName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&gt; GetServiceObjectiveAsync(string serviceObjectiveName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServiceObjectiveAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceObjectiveAsync (serviceObjectiveName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceObjectiveResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceObjectiveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&gt;&#xA;override this.GetServiceObjectiveAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&gt;" Usage="sqlServerResource.GetServiceObjectiveAsync (serviceObjectiveName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServiceObjectiveResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceObjectiveName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceObjectiveName"> The name of the service objective to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a database service objective.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}
            Operation Id: ServiceObjectives_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceObjectiveName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceObjectiveName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceObjectives">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.ServiceObjectiveCollection GetServiceObjectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.ServiceObjectiveCollection GetServiceObjectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetServiceObjectives" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceObjectives () As ServiceObjectiveCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServiceObjectives : unit -&gt; Azure.ResourceManager.Sql.ServiceObjectiveCollection&#xA;override this.GetServiceObjectives : unit -&gt; Azure.ResourceManager.Sql.ServiceObjectiveCollection" Usage="sqlServerResource.GetServiceObjectives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.ServiceObjectiveCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServiceObjectiveResources in the SqlServer. </summary>
        <returns> An object representing collection of ServiceObjectiveResources and their operations over a ServiceObjectiveResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetSqlDatabase (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlDatabaseResource&gt; GetSqlDatabase(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSqlDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabase (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&#xA;override this.GetSqlDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;" Usage="sqlServerResource.GetSqlDatabase (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}
            Operation Id: Databases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&gt; GetSqlDatabaseAsync (string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&gt; GetSqlDatabaseAsync(string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSqlDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabaseAsync (databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&gt;&#xA;override this.GetSqlDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&gt;" Usage="sqlServerResource.GetSqlDatabaseAsync (databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}
            Operation Id: Databases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="databaseName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SqlDatabaseCollection GetSqlDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SqlDatabaseCollection GetSqlDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSqlDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDatabases () As SqlDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDatabases : unit -&gt; Azure.ResourceManager.Sql.SqlDatabaseCollection&#xA;override this.GetSqlDatabases : unit -&gt; Azure.ResourceManager.Sql.SqlDatabaseCollection" Usage="sqlServerResource.GetSqlDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SqlDatabaseResources in the SqlServer. </summary>
        <returns> An object representing collection of SqlDatabaseResources and their operations over a SqlDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSyncAgent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt; GetSyncAgent (string syncAgentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SyncAgentResource&gt; GetSyncAgent(string syncAgentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSyncAgent(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncAgent (syncAgentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SyncAgentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSyncAgent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;&#xA;override this.GetSyncAgent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;" Usage="sqlServerResource.GetSyncAgent (syncAgentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncAgentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="syncAgentName"> The name of the sync agent. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a sync agent.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}
            Operation Id: SyncAgents_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="syncAgentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="syncAgentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;&gt; GetSyncAgentAsync (string syncAgentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SyncAgentResource&gt;&gt; GetSyncAgentAsync(string syncAgentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSyncAgentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncAgentAsync (syncAgentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SyncAgentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSyncAgentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;&gt;&#xA;override this.GetSyncAgentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;&gt;" Usage="sqlServerResource.GetSyncAgentAsync (syncAgentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SyncAgentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncAgentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="syncAgentName"> The name of the sync agent. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a sync agent.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}
            Operation Id: SyncAgents_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="syncAgentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="syncAgentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncAgents">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.SyncAgentCollection GetSyncAgents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.SyncAgentCollection GetSyncAgents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetSyncAgents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSyncAgents () As SyncAgentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSyncAgents : unit -&gt; Azure.ResourceManager.Sql.SyncAgentCollection&#xA;override this.GetSyncAgents : unit -&gt; Azure.ResourceManager.Sql.SyncAgentCollection" Usage="sqlServerResource.GetSyncAgents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SyncAgentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SyncAgentResources in the SqlServer. </summary>
        <returns> An object representing collection of SyncAgentResources and their operations over a SyncAgentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt; GetVirtualNetworkRule (string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt; GetVirtualNetworkRule(string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetVirtualNetworkRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkRule (virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&#xA;override this.GetVirtualNetworkRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;" Usage="sqlServerResource.GetVirtualNetworkRule (virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual network rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}
            Operation Id: VirtualNetworkRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&gt; GetVirtualNetworkRuleAsync (string virtualNetworkRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&gt; GetVirtualNetworkRuleAsync(string virtualNetworkRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetVirtualNetworkRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkRuleAsync (virtualNetworkRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&gt;&#xA;override this.GetVirtualNetworkRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&gt;" Usage="sqlServerResource.GetVirtualNetworkRuleAsync (virtualNetworkRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.VirtualNetworkRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkRuleName"> The name of the virtual network rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual network rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}
            Operation Id: VirtualNetworkRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.VirtualNetworkRuleCollection GetVirtualNetworkRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.VirtualNetworkRuleCollection GetVirtualNetworkRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.GetVirtualNetworkRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkRules () As VirtualNetworkRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkRules : unit -&gt; Azure.ResourceManager.Sql.VirtualNetworkRuleCollection&#xA;override this.GetVirtualNetworkRules : unit -&gt; Azure.ResourceManager.Sql.VirtualNetworkRuleCollection" Usage="sqlServerResource.GetVirtualNetworkRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.VirtualNetworkRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkRuleResources in the SqlServer. </summary>
        <returns> An object representing collection of VirtualNetworkRuleResources and their operations over a VirtualNetworkRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.SqlServerResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Sql.SqlServerResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt; ImportDatabase (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition importNewDatabaseDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt; ImportDatabase(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition importNewDatabaseDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.ImportDatabase(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDatabase (waitUntil As WaitUntil, importNewDatabaseDefinition As ImportNewDatabaseDefinition, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ImportExportOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member ImportDatabase : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&#xA;override this.ImportDatabase : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;" Usage="sqlServerResource.ImportDatabase (waitUntil, importNewDatabaseDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="importNewDatabaseDefinition" Type="Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="importNewDatabaseDefinition"> The database import request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Imports a bacpac into a new database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import
            Operation Id: Servers_ImportDatabase
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importNewDatabaseDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&gt; ImportDatabaseAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition importNewDatabaseDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&gt; ImportDatabaseAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition importNewDatabaseDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.ImportDatabaseAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDatabaseAsync (waitUntil As WaitUntil, importNewDatabaseDefinition As ImportNewDatabaseDefinition, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ImportExportOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member ImportDatabaseAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&gt;&#xA;override this.ImportDatabaseAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&gt;" Usage="sqlServerResource.ImportDatabaseAsync (waitUntil, importNewDatabaseDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.Models.ImportExportOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="importNewDatabaseDefinition" Type="Azure.ResourceManager.Sql.Models.ImportNewDatabaseDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="importNewDatabaseDefinition"> The database import request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Imports a bacpac into a new database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import
            Operation Id: Servers_ImportDatabase
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importNewDatabaseDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="sqlServerResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="sqlServerResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt; ReplaceFirewallRule (Azure.ResourceManager.Sql.Models.FirewallRuleList firewallRuleList, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FirewallRuleResource&gt; ReplaceFirewallRule(class Azure.ResourceManager.Sql.Models.FirewallRuleList firewallRuleList, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.ReplaceFirewallRule(Azure.ResourceManager.Sql.Models.FirewallRuleList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceFirewallRule (firewallRuleList As FirewallRuleList, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FirewallRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceFirewallRule : Azure.ResourceManager.Sql.Models.FirewallRuleList * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&#xA;override this.ReplaceFirewallRule : Azure.ResourceManager.Sql.Models.FirewallRuleList * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;" Usage="sqlServerResource.ReplaceFirewallRule (firewallRuleList, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleList" Type="Azure.ResourceManager.Sql.Models.FirewallRuleList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleList"> The FirewallRuleList to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces all firewall rules on the server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules
            Operation Id: FirewallRules_Replace
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleList" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt; ReplaceFirewallRuleAsync (Azure.ResourceManager.Sql.Models.FirewallRuleList firewallRuleList, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt; ReplaceFirewallRuleAsync(class Azure.ResourceManager.Sql.Models.FirewallRuleList firewallRuleList, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.ReplaceFirewallRuleAsync(Azure.ResourceManager.Sql.Models.FirewallRuleList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceFirewallRuleAsync (firewallRuleList As FirewallRuleList, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FirewallRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceFirewallRuleAsync : Azure.ResourceManager.Sql.Models.FirewallRuleList * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;&#xA;override this.ReplaceFirewallRuleAsync : Azure.ResourceManager.Sql.Models.FirewallRuleList * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;" Usage="sqlServerResource.ReplaceFirewallRuleAsync (firewallRuleList, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.FirewallRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleList" Type="Azure.ResourceManager.Sql.Models.FirewallRuleList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleList"> The FirewallRuleList to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces all firewall rules on the server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules
            Operation Id: FirewallRules_Replace
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleList" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Sql.SqlServerResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Sql.SqlServerResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="sqlServerResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="sqlServerResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.SqlServerPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.SqlServerPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.Update(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.SqlServerPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As SqlServerPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.SqlServerPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.SqlServerPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;" Usage="sqlServerResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.SqlServerPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested server resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Sql.Models.SqlServerPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.SqlServerResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Sql.Models.SqlServerPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SqlServerResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Sql.Models.SqlServerPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As SqlServerPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SqlServerResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.SqlServerPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Sql.Models.SqlServerPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;" Usage="sqlServerResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.SqlServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Sql.Models.SqlServerPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The requested server resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}
            Operation Id: Servers_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
