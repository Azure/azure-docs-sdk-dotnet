<Type Name="IOperationStream3" FullName="System.Fabric.IOperationStream3">
  <TypeSignature Language="C#" Value="public interface IOperationStream3 : System.Fabric.IOperationStream2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationStream3 implements class System.Fabric.IOperationStream, class System.Fabric.IOperationStream2" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.IOperationStream3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationStream3&#xA;Implements IOperationStream2" />
  <TypeSignature Language="F#" Value="type IOperationStream3 = interface&#xA;    interface IOperationStream2&#xA;    interface IOperationStream" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Fabric.IOperationStream</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Fabric.IOperationStream2</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Fabric.IOperationStream2" /> with <see cref="T:System.Fabric.MemoryManagedOperationData" /> support. The 
            <see cref="T:System.Fabric.OperationData" /> instance returned by <see cref="P:System.Fabric.IOperation.Data" /> must not be used directly.
            Instead, call <see cref="M:System.Fabric.OperationData.AsMemoryManagedOperationData" /> on that instance to get the 
            <see cref="T:System.Fabric.MemoryManagedOperationData" /> instance to use.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMemoryManagedOperationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.IOperation&gt; GetMemoryManagedOperationAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.IOperation&gt; GetMemoryManagedOperationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IOperationStream3.GetMemoryManagedOperationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemoryManagedOperationAsync (cancellationToken As CancellationToken) As Task(Of IOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetMemoryManagedOperationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Fabric.IOperation&gt;" Usage="iOperationStream3.GetMemoryManagedOperationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.IOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
          <para>Similar to <see cref="M:System.Fabric.IOperationStream.GetOperationAsync(System.Threading.CancellationToken)" />.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
