<Type Name="RollingUpgradeMode" FullName="System.Fabric.RollingUpgradeMode">
  <TypeSignature Language="C#" Value="public enum RollingUpgradeMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RollingUpgradeMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.RollingUpgradeMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum RollingUpgradeMode" />
  <TypeSignature Language="F#" Value="type RollingUpgradeMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <para>Specifies the type of rolling upgrade when upgrading an application instance or cluster.</para>
    </summary>
    <remarks>
      <para>For more information, see Upgrade and Scale a Service Fabric Cluster and Upgrade an Application.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="Invalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.RollingUpgradeMode Invalid = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.RollingUpgradeMode.Invalid" />
      <MemberSignature Language="VB.NET" Value="Invalid" />
      <MemberSignature Language="F#" Value="Invalid = 0" Usage="System.Fabric.RollingUpgradeMode.Invalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.RollingUpgradeMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <para>All Service Fabric enumerations have reserved Invalid flag.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Monitored">
      <MemberSignature Language="C#" Value="Monitored" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.RollingUpgradeMode Monitored = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.RollingUpgradeMode.Monitored" />
      <MemberSignature Language="VB.NET" Value="Monitored" />
      <MemberSignature Language="F#" Value="Monitored = 3" Usage="System.Fabric.RollingUpgradeMode.Monitored" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.RollingUpgradeMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <para>Specifies that the upgrade should be monitored automatic.</para>
        </summary>
        <remarks>
          <para>After an upgrade domain (UD) is upgraded, Service Fabric will proceed to upgrade the next UD if the health of the UD and the cluster meets the 
            defined health policies for that upgrade. Otherwise, the entire upgrade is marked as failed and the upgrade failure action is taken. The default failure 
            action is to roll-back the entire upgrade.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmonitoredAuto">
      <MemberSignature Language="C#" Value="UnmonitoredAuto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.RollingUpgradeMode UnmonitoredAuto = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.RollingUpgradeMode.UnmonitoredAuto" />
      <MemberSignature Language="VB.NET" Value="UnmonitoredAuto" />
      <MemberSignature Language="F#" Value="UnmonitoredAuto = 1" Usage="System.Fabric.RollingUpgradeMode.UnmonitoredAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.RollingUpgradeMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <para>Specifies that the upgrade should be unmonitored automatic.</para>
        </summary>
        <remarks>
          <para>In this mode, Service Fabric automatically proceeds to upgrading the next upgrade domain without health checks (but still performing safety checks) until all upgrade domains are upgraded.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmonitoredDeferred">
      <MemberSignature Language="C#" Value="UnmonitoredDeferred" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.RollingUpgradeMode UnmonitoredDeferred = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.RollingUpgradeMode.UnmonitoredDeferred" />
      <MemberSignature Language="VB.NET" Value="UnmonitoredDeferred" />
      <MemberSignature Language="F#" Value="UnmonitoredDeferred = 4" Usage="System.Fabric.RollingUpgradeMode.UnmonitoredDeferred" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.RollingUpgradeMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <para>Specifies that the upgrade should be unmonitored deferred.</para>
        </summary>
        <remarks>
          <para>In this mode, the administrator needs to specify a list of nodes (or indicate all nodes) on which to apply upgrades, then manually disable and re-enable a node (using the 
            <see cref="M:System.Fabric.FabricClient.ClusterManagementClient.DeactivateNodeAsync(System.String,System.Fabric.NodeDeactivationIntent)" /> and 
            <see cref="M:System.Fabric.FabricClient.ClusterManagementClient.ActivateNodeAsync(System.String)" /> methods) to actually apply the upgrade on that node.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmonitoredManual">
      <MemberSignature Language="C#" Value="UnmonitoredManual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.RollingUpgradeMode UnmonitoredManual = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.RollingUpgradeMode.UnmonitoredManual" />
      <MemberSignature Language="VB.NET" Value="UnmonitoredManual" />
      <MemberSignature Language="F#" Value="UnmonitoredManual = 2" Usage="System.Fabric.RollingUpgradeMode.UnmonitoredManual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.RollingUpgradeMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>Specifies that the upgrade should be unmonitored manual.</para>
        </summary>
        <remarks>
          <para>In this mode, the administrator needs to instruct Service Fabric to move to the next upgrade domain (using the 
            <see cref="M:System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress)" /> or 
            <see cref="M:System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress)" /> methods) and continue 
            the upgrade.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
