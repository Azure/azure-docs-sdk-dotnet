<Type Name="TransactionIsolationLevel" FullName="System.Fabric.TransactionIsolationLevel">
  <TypeSignature Language="C#" Value="public enum TransactionIsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransactionIsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.TransactionIsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransactionIsolationLevel" />
  <TypeSignature Language="F#" Value="type TransactionIsolationLevel = " />
  <TypeSignature Language="C++ CLI" Value="public enum class TransactionIsolationLevel" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <para>Enumerates the set of possible isolation levels for a <see cref="T:System.Fabric.Transaction" />.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Fabric.TransactionIsolationLevel.Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <para>Indicates the default isolation level of the store.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel ReadCommitted = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 2" Usage="System.Fabric.TransactionIsolationLevel.ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that volatile data cannot be read during the transaction, but can be modified. Shared locks are held while data is being 
            read to avoid dirty reads, but data can be changed before the end of the transaction that results in non-repeatable reads or phantom data.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel ReadUncommitted = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 1" Usage="System.Fabric.TransactionIsolationLevel.ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <para>
            Indicates that volatile data can be read during the transaction. 
            </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel RepeatableRead = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 3" Usage="System.Fabric.TransactionIsolationLevel.RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that volatile data can be read but not modified during the transaction. Locks are placed on all data that is used in a 
            query to prevent other users from updating data. New rows can be inserted into data sets and are included in later reads in the current transaction.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel Serializable = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 5" Usage="System.Fabric.TransactionIsolationLevel.Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that volatile data are serializable. Volatile data can be read but not modified, and no new data can be added during the 
            transaction. Indicates that range locks will be put on data sets. The locks prevent updates or inserts in data sets until the transaction finishes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.TransactionIsolationLevel Snapshot = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.TransactionIsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 4" Usage="System.Fabric.TransactionIsolationLevel.Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <para>Indicates the snapshot level where volatile data can be read. Any data that is read will be a transaction-consistent version of the 
            data that existed at start of the transaction.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>