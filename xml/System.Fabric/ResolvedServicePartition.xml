<Type Name="ResolvedServicePartition" FullName="System.Fabric.ResolvedServicePartition">
  <TypeSignature Language="C#" Value="public sealed class ResolvedServicePartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResolvedServicePartition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.ResolvedServicePartition" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
            Contains information about the partition of the service that was resolved
            and the set of endpoints that can be used to access the partition.</para>
    </summary>
    <remarks>
      <para>
            The resolved service partition is obtained as a result of calling
            <see cref="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri)" /> and the other overloads.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareVersion">
      <MemberSignature Language="C#" Value="public int CompareVersion (System.Fabric.ResolvedServicePartition other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareVersion(class System.Fabric.ResolvedServicePartition other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.ResolvedServicePartition.CompareVersion(System.Fabric.ResolvedServicePartition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.ResolvedServicePartition" />
      </Parameters>
      <Docs>
        <param name="other">
          <para>The other resolved service partition to compare.</para>
        </param>
        <summary>
          <para>Compares two resolved service partitions and identifies which is newer. </para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Int32" />.</para>
        </returns>
        <remarks>
          <para>The <see cref="M:System.Fabric.ResolvedServicePartition.CompareVersion(System.Fabric.ResolvedServicePartition)" /> method takes in a 
            resolved service partition (RSP) argument with the parameter <paramref name="other" /> to enable the user to identify which RSP is more 
            up-to-date. A returned value of 0 indicates that the two RSPs have the same version. 1 indicates that the other RSP has an older version. 
            -1 indicates that the other RSP has a newer version. </para>
        </remarks>
        <exception cref="T:System.Fabric.FabricException">
          <para>The two <see cref="T:System.Fabric.ResolvedServicePartition" /> objects are from different service partitions. This can happen if the 
            service is deleted and re-created with the same name and partitioning between two resolve calls.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Fabric.ResolvedServiceEndpoint&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Fabric.ResolvedServiceEndpoint&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ResolvedServicePartition.Endpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Fabric.ResolvedServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the endpoints of the service partition.</para>
        </summary>
        <value>
          <para>A collection of <see cref="T:System.Fabric.ResolvedServiceEndpoint" />
            for the specified service partition.</para>
        </value>
        <remarks>
          <para>A resolved service endpoint contains the role of the
            stateful service replica or stateless service instance
            and the address where this replica can be reached.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndpoint">
      <MemberSignature Language="C#" Value="public System.Fabric.ResolvedServiceEndpoint GetEndpoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Fabric.ResolvedServiceEndpoint GetEndpoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.ResolvedServicePartition.GetEndpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.ResolvedServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns a single endpoint, instead of a collection of all endpoints. </para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Fabric.ResolvedServiceEndpoint" />.</para>
        </returns>
        <remarks>
          <para>Many times, you only need a single endpoint instead of all the endpoints. If the service is stateless, it returns a random endpoint. 
            If the service is a stateful service, than it returns the endpoint to which the Primary replica of the service partition listens. Note that if 
            the Primary replica currently does not exist, it throws <see cref="T:System.Fabric.FabricException" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public System.Fabric.ServicePartitionInformation Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.ServicePartitionInformation Info" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ResolvedServicePartition.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.ServicePartitionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets information about the partition of the service that was resolved.</para>
        </summary>
        <value>The information about the partition of the service that was resolved.</value>
        <remarks>
          <para>
            The service partition can be of different <see cref="T:System.Fabric.ServicePartitionKind" />.
            You can cast the service partition information to the correct derived type
            to get detailed information about the partition.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public Uri ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ResolvedServicePartition.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the name of the service instance.</para>
        </summary>
        <value>
          <para>The name of the service instance.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>