<Type Name="UpgradeSafetyCheckKind" FullName="System.Fabric.UpgradeSafetyCheckKind">
  <TypeSignature Language="C#" Value="public enum UpgradeSafetyCheckKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpgradeSafetyCheckKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.UpgradeSafetyCheckKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum UpgradeSafetyCheckKind" />
  <TypeSignature Language="F#" Value="type UpgradeSafetyCheckKind = " />
  <TypeSignature Language="C++ CLI" Value="public enum class UpgradeSafetyCheckKind" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <para>Enumerates the <see cref="T:System.Fabric.UpgradeSafetyCheck" /> that is being performed for a node during upgrade.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureAvailability">
      <MemberSignature Language="C#" Value="EnsureAvailability" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind EnsureAvailability = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.EnsureAvailability" />
      <MemberSignature Language="VB.NET" Value="EnsureAvailability" />
      <MemberSignature Language="F#" Value="EnsureAvailability = 7" Usage="System.Fabric.UpgradeSafetyCheckKind.EnsureAvailability" />
      <MemberSignature Language="C++ CLI" Value="EnsureAvailability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the 
            node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EnsurePartitionQuorum">
      <MemberSignature Language="C#" Value="EnsurePartitionQuorum" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind EnsurePartitionQuorum = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.EnsurePartitionQuorum" />
      <MemberSignature Language="VB.NET" Value="EnsurePartitionQuorum" />
      <MemberSignature Language="F#" Value="EnsurePartitionQuorum = 2" Usage="System.Fabric.UpgradeSafetyCheckKind.EnsurePartitionQuorum" />
      <MemberSignature Language="C++ CLI" Value="EnsurePartitionQuorum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EnsureSeedNodeQuorum">
      <MemberSignature Language="C#" Value="EnsureSeedNodeQuorum" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind EnsureSeedNodeQuorum = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.EnsureSeedNodeQuorum" />
      <MemberSignature Language="VB.NET" Value="EnsureSeedNodeQuorum" />
      <MemberSignature Language="F#" Value="EnsureSeedNodeQuorum = 1" Usage="System.Fabric.UpgradeSafetyCheckKind.EnsureSeedNodeQuorum" />
      <MemberSignature Language="C++ CLI" Value="EnsureSeedNodeQuorum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that if we bring down the node then this will result in global seed node quorum loss.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="Invalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind Invalid = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.Invalid" />
      <MemberSignature Language="VB.NET" Value="Invalid" />
      <MemberSignature Language="F#" Value="Invalid = 0" Usage="System.Fabric.UpgradeSafetyCheckKind.Invalid" />
      <MemberSignature Language="C++ CLI" Value="Invalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that the upgrade safety check kind is invalid. This value is not used.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitForInbuildReplica">
      <MemberSignature Language="C#" Value="WaitForInbuildReplica" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind WaitForInbuildReplica = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.WaitForInbuildReplica" />
      <MemberSignature Language="VB.NET" Value="WaitForInbuildReplica" />
      <MemberSignature Language="F#" Value="WaitForInbuildReplica = 6" Usage="System.Fabric.UpgradeSafetyCheckKind.WaitForInbuildReplica" />
      <MemberSignature Language="C++ CLI" Value="WaitForInbuildReplica" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying 
            data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitForPrimaryPlacement">
      <MemberSignature Language="C#" Value="WaitForPrimaryPlacement" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind WaitForPrimaryPlacement = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.WaitForPrimaryPlacement" />
      <MemberSignature Language="VB.NET" Value="WaitForPrimaryPlacement" />
      <MemberSignature Language="F#" Value="WaitForPrimaryPlacement = 3" Usage="System.Fabric.UpgradeSafetyCheckKind.WaitForPrimaryPlacement" />
      <MemberSignature Language="C++ CLI" Value="WaitForPrimaryPlacement" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary 
            to be moved back to this node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitForPrimarySwap">
      <MemberSignature Language="C#" Value="WaitForPrimarySwap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind WaitForPrimarySwap = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.WaitForPrimarySwap" />
      <MemberSignature Language="VB.NET" Value="WaitForPrimarySwap" />
      <MemberSignature Language="F#" Value="WaitForPrimarySwap = 4" Usage="System.Fabric.UpgradeSafetyCheckKind.WaitForPrimarySwap" />
      <MemberSignature Language="C++ CLI" Value="WaitForPrimarySwap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitForReconfiguration">
      <MemberSignature Language="C#" Value="WaitForReconfiguration" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind WaitForReconfiguration = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.WaitForReconfiguration" />
      <MemberSignature Language="VB.NET" Value="WaitForReconfiguration" />
      <MemberSignature Language="F#" Value="WaitForReconfiguration = 5" Usage="System.Fabric.UpgradeSafetyCheckKind.WaitForReconfiguration" />
      <MemberSignature Language="C++ CLI" Value="WaitForReconfiguration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to 
            be complete before staring upgrade on that node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitForResourceAvailability">
      <MemberSignature Language="C#" Value="WaitForResourceAvailability" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Fabric.UpgradeSafetyCheckKind WaitForResourceAvailability = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.UpgradeSafetyCheckKind.WaitForResourceAvailability" />
      <MemberSignature Language="VB.NET" Value="WaitForResourceAvailability" />
      <MemberSignature Language="F#" Value="WaitForResourceAvailability = 8" Usage="System.Fabric.UpgradeSafetyCheckKind.WaitForResourceAvailability" />
      <MemberSignature Language="C++ CLI" Value="WaitForResourceAvailability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.UpgradeSafetyCheckKind</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <para>Indicates that there is still not enough capacity for resource governed metrics to proceed with the upgrade. This can happen in case a service 
            package is increasing resource consumption. Service Fabric is making actions to ensure that the node has enough capacity. </para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>