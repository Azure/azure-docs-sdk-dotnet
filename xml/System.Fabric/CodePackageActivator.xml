<Type Name="CodePackageActivator" FullName="System.Fabric.CodePackageActivator">
  <TypeSignature Language="C#" Value="public sealed class CodePackageActivator : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePackageActivator extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.CodePackageActivator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePackageActivator&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type CodePackageActivator = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>Represents the activator for the codepackages in the service package. This is for internal use only</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AbortCodePackage">
      <MemberSignature Language="C#" Value="public void AbortCodePackage (System.Collections.Generic.IList&lt;string&gt; codePackageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AbortCodePackage(class System.Collections.Generic.IList`1&lt;string&gt; codePackageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.AbortCodePackage(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AbortCodePackage (codePackageNames As IList(Of String))" />
      <MemberSignature Language="F#" Value="member this.AbortCodePackage : System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="codePackageActivator.AbortCodePackage codePackageNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePackageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="codePackageNames">To be added.</param>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateCodePackageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ActivateCodePackageAsync (System.Collections.Generic.IList&lt;System.Fabric.CodePackageActivationInformation&gt; cpActivationInfoList, System.Collections.Generic.IDictionary&lt;string,string&gt; environment, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ActivateCodePackageAsync(class System.Collections.Generic.IList`1&lt;class System.Fabric.CodePackageActivationInformation&gt; cpActivationInfoList, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; environment, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.ActivateCodePackageAsync(System.Collections.Generic.IList{System.Fabric.CodePackageActivationInformation},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateCodePackageAsync (cpActivationInfoList As IList(Of CodePackageActivationInformation), environment As IDictionary(Of String, String), timeout As TimeSpan, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.ActivateCodePackageAsync : System.Collections.Generic.IList&lt;System.Fabric.CodePackageActivationInformation&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="codePackageActivator.ActivateCodePackageAsync (cpActivationInfoList, environment, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cpActivationInfoList" Type="System.Collections.Generic.IList&lt;System.Fabric.CodePackageActivationInformation&gt;" />
        <Parameter Name="environment" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cpActivationInfoList">To be added.</param>
        <param name="environment">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateCodePackageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ActivateCodePackageAsync (System.Collections.Generic.IList&lt;string&gt; codePackageNames, System.Collections.Generic.IDictionary&lt;string,string&gt; environment, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ActivateCodePackageAsync(class System.Collections.Generic.IList`1&lt;string&gt; codePackageNames, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; environment, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.ActivateCodePackageAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateCodePackageAsync (codePackageNames As IList(Of String), environment As IDictionary(Of String, String), timeout As TimeSpan, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.ActivateCodePackageAsync : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="codePackageActivator.ActivateCodePackageAsync (codePackageNames, environment, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePackageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="environment" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="codePackageNames">To be added.</param>
        <param name="environment">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePackageEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Fabric.CodePackageActivator.CodePackageEventArgs&gt; CodePackageEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Fabric.CodePackageActivator/CodePackageEventArgs&gt; CodePackageEvent" />
      <MemberSignature Language="DocId" Value="E:System.Fabric.CodePackageActivator.CodePackageEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event CodePackageEvent As EventHandler(Of CodePackageActivator.CodePackageEventArgs) " />
      <MemberSignature Language="F#" Value="member this.CodePackageEvent : EventHandler&lt;System.Fabric.CodePackageActivator.CodePackageEventArgs&gt; " Usage="member this.CodePackageEvent : System.EventHandler&lt;System.Fabric.CodePackageActivator.CodePackageEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Fabric.CodePackageActivator+CodePackageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeactivateCodePackageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeactivateCodePackageAsync (System.Collections.Generic.IList&lt;string&gt; codePackageNames, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeactivateCodePackageAsync(class System.Collections.Generic.IList`1&lt;string&gt; codePackageNames, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.DeactivateCodePackageAsync(System.Collections.Generic.IList{System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeactivateCodePackageAsync (codePackageNames As IList(Of String), timeout As TimeSpan, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.DeactivateCodePackageAsync : System.Collections.Generic.IList&lt;string&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="codePackageActivator.DeactivateCodePackageAsync (codePackageNames, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePackageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="codePackageNames">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="codePackageActivator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CodePackageActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.CodePackageActivator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="codePackageActivator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            For Internal only
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
