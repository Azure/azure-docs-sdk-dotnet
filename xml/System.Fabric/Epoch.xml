<Type Name="Epoch" FullName="System.Fabric.Epoch">
  <TypeSignature Language="C#" Value="public struct Epoch : IComparable&lt;System.Fabric.Epoch&gt;, IEquatable&lt;System.Fabric.Epoch&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Epoch extends System.ValueType implements class System.IComparable`1&lt;valuetype System.Fabric.Epoch&gt;, class System.IEquatable`1&lt;valuetype System.Fabric.Epoch&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Epoch" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Fabric.Epoch&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Fabric.Epoch&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para> Represents the current version of the partition in Service Fabric. </para>
    </summary>
    <remarks>
      <para>An Epoch is a configuration number for the partition as a whole. 
            When the configuration of the replica set changes, for example when the Primary replica changes, 
            the operations that are replicated from the new Primary replica are said to be a new Epoch 
            from the ones which were sent by the old Primary replica. 
            The fact that the Primary has changed is not directly visible to Secondary replicas, 
            which are usually unaffected by the failure that affected the original Primary replica. 
            To track that the Primary replica has changed has to be communicated to the Secondary replica. 
            This communication occurs via the <see cref="M:System.Fabric.IStateProvider.UpdateEpochAsync(System.Fabric.Epoch,System.Int64,System.Threading.CancellationToken)" /> method. 
            Most services can ignore the details of the inner fields of the Epoch as it is usually sufficient to know that the Epoch has changed 
            and to compare Epochs to determine relative ordering of operations and events in the system. 
            Comparison operations are provided for this purpose.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Epoch (long dataLossNumber, long configurationNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 dataLossNumber, int64 configurationNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.#ctor(System.Int64,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataLossNumber" Type="System.Int64" />
        <Parameter Name="configurationNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="dataLossNumber">
          <para>An <see cref="T:System.Int64" /> representing an increasing value which is updated 
            whenever data loss is suspected.</para>
        </param>
        <param name="configurationNumber">
          <para>An <see cref="T:System.Int64" /> representing an increasing value that is updated whenever 
            the configuration of this replica set changes.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.Epoch" /> class with the specified 
            data loss number and configuration number.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Fabric.Epoch other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Fabric.Epoch other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.CompareTo(System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="other">
          <para>The <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Compares this <see cref="T:System.Fabric.Epoch" /> object to the specified <paramref name="other" /><see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Int32" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationNumber">
      <MemberSignature Language="C#" Value="public long ConfigurationNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ConfigurationNumber" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Epoch.ConfigurationNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the current configuration number property in this <see cref="T:System.Fabric.Epoch" />.</para>
        </summary>
        <value>
          <para>Returns an <see cref="T:System.Int64" /> representing the configuration number.</para>
        </value>
        <remarks>
          <para>The configuration number is an increasing value that is updated whenever the configuration 
            of this replica set changes. The services are informed of the current configuration number 
            only when <see cref="M:System.Fabric.IReplicator.UpdateEpochAsync(System.Fabric.Epoch,System.Threading.CancellationToken)" />
            method is called as a result of an attempt to change the Primary replica of the replica set.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLossNumber">
      <MemberSignature Language="C#" Value="public long DataLossNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DataLossNumber" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Epoch.DataLossNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the current data loss number in this <see cref="T:System.Fabric.Epoch" />.</para>
        </summary>
        <value>
          <para>Returns an <see cref="T:System.Int64" /> representing the current data loss number.</para>
        </value>
        <remarks>
          <para>The data loss number property is an increasing value which is updated 
            whenever data loss is suspected, as when loss of a quorum of replicas in the replica set 
            that includes the Primary replica.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Fabric.Epoch other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Fabric.Epoch other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.Equals(System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="other">
          <para>The object to compare with the current <see cref="T:System.Fabric.Epoch" /> object.</para>
        </param>
        <summary>
          <para>Determines whether the specified <see cref="T:System.Fabric.Epoch" /> object is equal to the current <see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the specified <see cref="T:System.Fabric.Epoch" /> object is equal to the current <see cref="T:System.Fabric.Epoch" /> object; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <para>The object to compare with the current object.</para>
        </param>
        <summary>
          <para>Determines whether the specified object is equal to the current object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the specified object is equal to the current object; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Serves as a hash function for the <see cref="T:System.Fabric.Epoch" /> type.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Int32" /> representing a hash code for the current <see cref="T:System.Fabric.Epoch" />..</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_Equality(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether two specified <see cref="T:System.Fabric.Epoch" /> objects have the same value.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThan (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_GreaterThan(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether one specified <see cref="T:System.Fabric.Epoch" /> object is greater than another specified <see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is greater than the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThanOrEqual (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_GreaterThanOrEqual(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether one specified <see cref="T:System.Fabric.Epoch" /> object is greater than or equal to another specified <see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is greater than or equal to the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_Inequality(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether two specified <see cref="T:System.Fabric.Epoch" /> objects have different values.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is different than the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool op_LessThan (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_LessThan(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether one specified <see cref="T:System.Fabric.Epoch" /> object is less than another specified <see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is less than the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_LessThanOrEqual (System.Fabric.Epoch left, System.Fabric.Epoch right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Fabric.Epoch left, valuetype System.Fabric.Epoch right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Epoch.op_LessThanOrEqual(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Fabric.Epoch" />
        <Parameter Name="right" Type="System.Fabric.Epoch" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>The left <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <param name="right">
          <para>The right <see cref="T:System.Fabric.Epoch" /> object to compare.</para>
        </param>
        <summary>
          <para>Determines whether one specified <see cref="T:System.Fabric.Epoch" /> object is less than or equal to another specified <see cref="T:System.Fabric.Epoch" /> object.</para>
        </summary>
        <returns>
          <para>
            <languageKeyword>true</languageKeyword> if the value of <paramref name="left" /> is less than or equal to the value of <paramref name="right" />; 
                otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>