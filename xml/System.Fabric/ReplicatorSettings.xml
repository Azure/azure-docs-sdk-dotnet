<Type Name="ReplicatorSettings" FullName="System.Fabric.ReplicatorSettings">
  <TypeSignature Language="C#" Value="public sealed class ReplicatorSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReplicatorSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.ReplicatorSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Allows a stateful replica to configure the <see cref="T:System.Fabric.FabricReplicator" /> when creating it 
            via <see cref="M:System.Fabric.IStatefulServicePartition.CreateReplicator(System.Fabric.IStateProvider,System.Fabric.ReplicatorSettings)" />.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReplicatorSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.ReplicatorSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.ReplicatorSettings" /> class.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAcknowledgementInterval">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BatchAcknowledgementInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BatchAcknowledgementInterval" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.BatchAcknowledgementInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the amount of time that the replicator waits after receiving an operation before sending back an acknowledgment. </para>
        </summary>
        <value>
          <para>The amount of time that the replicator waits after receiving an operation before sending back an acknowledgment.</para>
        </value>
        <remarks>
          <para>Other operations received and acknowledged during this time period will have their acknowledgments sent back in a single message.</para>
          <para>Increasing the <see cref="P:System.Fabric.ReplicatorSettings.BatchAcknowledgementInterval" /> value decreases latency of individual replication 
            operations but increases throughput of the replicator.</para>
          <para>Default value is 0.05 Seconds (50 milliseconds)</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCopyQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; InitialCopyQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; InitialCopyQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.InitialCopyQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the initial size of the copy operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            copy <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service.</para>
        </summary>
        <value>
          <para>The initial size of the copy operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains copy 
            <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service.</para>
        </value>
        <remarks>
          <para>The default value is 64. Note that values for this parameter must be a power of 2.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialPrimaryReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; InitialPrimaryReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; InitialPrimaryReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.InitialPrimaryReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the initial size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s.The unit here is the number of operations in the queue.</para>
        </summary>
        <value>
          <para>The initial size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" /></para>
        </value>
        <remarks>
          <para>This setting is specific to the Replicator when the role of the service is Primary</para>
          <para>The default value is 64.  Note that values for this parameter must be a power of 2.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; InitialReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; InitialReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.InitialReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the initial size of the replication queue size.</para>
        </summary>
        <value>
          <para>The initial size of the replication queue size.</para>
        </value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialSecondaryReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; InitialSecondaryReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; InitialSecondaryReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.InitialSecondaryReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the initial size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s </para>
        </summary>
        <value>
          <para>The initial size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service. The unit here is the number of operations in the queue </para>
        </value>
        <remarks>
          <para>This setting is specific to the Replicator when the role of the service is Secondary/Idle</para>
          <para>The default value is 64.  Note that values for this parameter must be a power of 2.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Fabric.ReplicatorSettings LoadFrom (System.Fabric.CodePackageActivationContext codePackageActivationContext, string configPackageName, string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Fabric.ReplicatorSettings LoadFrom(class System.Fabric.CodePackageActivationContext codePackageActivationContext, string configPackageName, string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.ReplicatorSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.ReplicatorSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePackageActivationContext" Type="System.Fabric.CodePackageActivationContext" />
        <Parameter Name="configPackageName" Type="System.String" />
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePackageActivationContext">
          <para>The current code package activation context <see cref="T:System.Fabric.CodePackageActivationContext" /></para>
        </param>
        <param name="configPackageName">
          <para>The current configuration package name</para>
        </param>
        <param name="sectionName">
          <para>The section within the configuration file that defines all the replicator settings</para>
        </param>
        <summary>
          <para>Loads the <see cref="T:System.Fabric.ReplicatorSettings" /> object from the service configuration settings file.</para>
        </summary>
        <returns>
          <para>The loaded <see cref="T:System.Fabric.ReplicatorSettings" /> object from the service configuration settings file</para>
        </returns>
        <remarks>
          <para> The configuration settings file (settings.xml) within the service configuration folder generally contains all the replicator settings that is needed to pass in the <see cref="T:System.Fabric.ReplicatorSettings" /> object to the <see cref="M:System.Fabric.IStatefulServicePartition.CreateReplicator(System.Fabric.IStateProvider,System.Fabric.ReplicatorSettings)" /> method. Typically, the onus is on the service author to read the settings.xml file, parse the values and appropriately construct the <see cref="T:System.Fabric.ReplicatorSettings" /> object.</para>
          <para>With the current helper method, the service author can bypass the above process.</para>
          <para>The following are the parameter names that should be provided in the service configuration “settings.xml”, to be recognizable by windows fabric to perform the above parsing automatically:</para>
          <list type="number">
            <item>
              <description>
                <para>BatchAcknowledgementInterval –<see cref="P:System.Fabric.ReplicatorSettings.BatchAcknowledgementInterval" /> value in seconds</para>
              </description>
            </item>
            <item>
              <description>
                <para>InitialCopyQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.InitialCopyQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxCopyQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.MaxCopyQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxReplicationMessageSize -<see cref="P:System.Fabric.ReplicatorSettings.MaxReplicationMessageSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>RetryInterval -<see cref="P:System.Fabric.ReplicatorSettings.RetryInterval" /> value in seconds</para>
              </description>
            </item>
            <item>
              <description>
                <para>RequireServiceAck -<see cref="P:System.Fabric.ReplicatorSettings.RequireServiceAck" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>ReplicatorAddress or ReplicatorEndpoint – ReplicatorAddress should be of the form IPort. ReplicatorEndpoint must reference 
            a valid service endpoint resource from the service manifest -<see cref="P:System.Fabric.ReplicatorSettings.ReplicatorAddress" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>ReplicatorListenAddress or ReplicatorEndpoint – ReplicatorListenAddress should be of the form IPort. ReplicatorEndpoint must reference 
            a valid service endpoint resource from the service manifest -<see cref="P:System.Fabric.ReplicatorSettings.ReplicatorListenAddress" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>ReplicatorPublishAddress or ReplicatorEndpoint – ReplicatorPublishAddress should be of the form IPort. ReplicatorEndpoint must reference 
            a valid service endpoint resource from the service manifest -<see cref="P:System.Fabric.ReplicatorSettings.ReplicatorPublishAddress" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>SecondaryClearAcknowledgedOperations -<see cref="P:System.Fabric.ReplicatorSettings.SecondaryClearAcknowledgedOperations" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>PrimaryWaitForPendingQuorumsTimeout - <see cref="P:System.Fabric.ReplicatorSettings.PrimaryWaitForPendingQuorumsTimeout" /> value in seconds</para>
              </description>
            </item>
            <item>
              <description>
                <para>UseStreamFaultsAndEndOfStreamOperationAck -<see cref="P:System.Fabric.ReplicatorSettings.UseStreamFaultsAndEndOfStreamOperationAck" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>InitialPrimaryReplicationQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.InitialPrimaryReplicationQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>InitialSecondaryReplicationQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.InitialSecondaryReplicationQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxPrimaryReplicationQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxSecondaryReplicationQueueSize -<see cref="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueSize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxPrimaryReplicationQueueMemorySize -<see cref="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueMemorySize" /></para>
              </description>
            </item>
            <item>
              <description>
                <para>MaxSecondaryReplicationQueueMemorySize -<see cref="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueMemorySize" /></para>
              </description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCopyQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxCopyQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxCopyQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxCopyQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum size of the copy operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            copy <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service.</para>
        </summary>
        <value>
          <para>The maximum size of the copy operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains copy 
            <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service.</para>
        </value>
        <remarks>
          <para>If this queue size is reached at the secondary, operations will be buffered in the Primary’s copy queue. If that queue also fills, 
            then the Primary will begin seeing <see cref="F:System.Fabric.FabricErrorCode.ReplicationQueueFull" /> exceptions.</para>
          <para>The default value is 1024</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrimaryReplicationQueueMemorySize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxPrimaryReplicationQueueMemorySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxPrimaryReplicationQueueMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the maximum size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s</para>
        </summary>
        <value>
          <para>. Returns the maximum size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s The unit here is the virtual memory consumption of the queue .Returns <see cref="T:System.Int64" />.</para>
        </value>
        <remarks>
          <para>This setting is specific to the Replicator when the role of the service is Primary. The default value is 0. This implies there is no memory limit</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrimaryReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxPrimaryReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxPrimaryReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the maximum size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s</para>
        </summary>
        <value>
          <para>The maximum size of the primary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s. The unit here is the number of operations in the queue.</para>
        </value>
        <remarks>
          <para>If this queue size is reached, then the Primary will begin seeing <see cref="F:System.Fabric.FabricErrorCode.ReplicationQueueFull" /> exceptions.</para>
          <para>The default value is 1024 Note that values for this parameter must be a power of 2.</para>
          <para>This setting is specific to the Replicator when the role of the service is Primary</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReplicationMessageSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxReplicationMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxReplicationMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxReplicationMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum size of a message that can be transmitted via the replicator. These include replication messages, copy messages 
            and copy context messages. The unit of representation is bytes.</para>
        </summary>
        <value>
          <para>The maximum size of a message that can be transmitted via the replicator.</para>
        </value>
        <remarks>
          <para>The default value is 50MB</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReplicationQueueMemorySize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxReplicationQueueMemorySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxReplicationQueueMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxReplicationQueueMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum size for the replication queue memory.</para>
        </summary>
        <value>
          <para>The maximum size for the replication queue memory.</para>
        </value>
        <remarks>
          <para>The default value is 0. This implies there is no memory limit</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets or sets the maximum size for the replication queue.</para>
        </summary>
        <value>
          <para>the maximum size for the replication queue.</para>
        </value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSecondaryReplicationQueueMemorySize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxSecondaryReplicationQueueMemorySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxSecondaryReplicationQueueMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the maximum size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s.</para>
        </summary>
        <value>
          <para>Returns the maximum size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s. The unit here is the virtual memory consumption of the queue.</para>
        </value>
        <remarks>
          <para>This setting is specific to the Replicator when the role of the service is Secondary/Idle. The default value is 0. This implies there is no memory limit</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSecondaryReplicationQueueSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxSecondaryReplicationQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxSecondaryReplicationQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines the maximum size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s </para>
        </summary>
        <value>
          <para>The maximum size of the secondary replication operation queue inside <see cref="T:System.Fabric.FabricReplicator" />, which contains 
            replication <see cref="T:System.Fabric.IOperation" />s not yet pumped and processed by the service. The unit here is the number of operations in the queue</para>
        </value>
        <remarks>
          <para>If this queue size is reached, operations will be buffered in the Primary’s replication queue.  If that queue also fills, then the Primary 
            will begin seeing <see cref="F:System.Fabric.FabricErrorCode.ReplicationQueueFull" /> exceptions.</para>
          <para>The default value is 2048.Note that values for this parameter must be a power of 2.</para>
          <para>This setting is specific to the Replicator when the role of the service is Secondary/Idle</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryWaitForPendingQuorumsTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; PrimaryWaitForPendingQuorumsTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PrimaryWaitForPendingQuorumsTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.PrimaryWaitForPendingQuorumsTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines how long the primary replicator waits for receiving a quorum of acknowledgments for any pending replication operations before 
            processing a reconfiguration request, that could potentially result in ‘cancelling’ the pending replication operations.</para>
        </summary>
        <value>
          <para>Amount of time the primary replicator waits for receiving a quorum of acknowledgments for any pending replication operations when there is 
            a request for the primary replicator to process a reconfiguration <see cref="T:System.TimeSpan" />.</para>
        </value>
        <remarks>
          <para>The default value is 0. This implies that reconfigurations aren’t waited upon for receiving quorum on the pending replication operations. 
            This helps in completing reconfigurations sooner. Note that larger values for this parameter could potentially result in slower reconfigurations, 
            implying longer durations to fail-over a primary. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicatorAddress">
      <MemberSignature Language="C#" Value="public string ReplicatorAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplicatorAddress" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.ReplicatorAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Configures the address that this replicator will use when communicating with other Replicators.</para>
        </summary>
        <value>
          <para>The address that this replicator will use when communicating with other Replicators.</para>
        </value>
        <remarks>
          <para>String is formatted as “hostname:port”, where hostname can be FQDN or IP address. The default value is localhost:0. If replicator is running inside a container, you should try setting up <see cref="P:System.Fabric.ReplicatorSettings.ReplicatorListenAddress" /> and <see cref="P:System.Fabric.ReplicatorSettings.ReplicatorPublishAddress" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicatorListenAddress">
      <MemberSignature Language="C#" Value="public string ReplicatorListenAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplicatorListenAddress" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.ReplicatorListenAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Configures the listen address that this replicator will use to receieve information from other Replicators.</para>
        </summary>
        <value>
          <para>The listen address that this replicator will use to receive information from other Replicators.</para>
        </value>
        <remarks>
          <para>String is formatted as “hostname:port”, where hostname can be FQDN or IP address. The default value is localhost:0. hostname for listen address can be obtained from <see cref="P:System.Fabric.CodePackageActivationContext.ServiceListenAddress" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicatorPublishAddress">
      <MemberSignature Language="C#" Value="public string ReplicatorPublishAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplicatorPublishAddress" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.ReplicatorPublishAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Configures the publish address that this replicator will use to send information to other Replicators.</para>
        </summary>
        <value>
          <para>The publish address that this replicator will use to send information to other Replicators.</para>
        </value>
        <remarks>
          <para>String is formatted as “hostname:port”, where hostname can be FQDN or IP address. The default value is localhost:0. hostname for publish address can be obtained from <see cref="P:System.Fabric.CodePackageActivationContext.ServicePublishAddress" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireServiceAck">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; RequireServiceAck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RequireServiceAck" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.RequireServiceAck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Prevents the optimistic acknowledgment of operations in non-persistent services by requiring that the service calls 
            <see cref="M:System.Fabric.IOperation.Acknowledge" /> before it pumps the next operation.</para>
        </summary>
        <value>
          <para>
            <languageKeyword>true</languageKeyword> if the optimistic acknowledgment of operations in non-persistent services;otherwise, 
            <languageKeyword>false</languageKeyword>.</para>
        </value>
        <remarks>
          <para>Non-persistent services which require explicit acknowledgment can set this property to True in order to prevent optimistic acknowledgment 
            of the operations by the Replicator. This setting has no effect for persistent services. </para>
          <para>The default value is false.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryInterval">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; RetryInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; RetryInterval" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.RetryInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Defines how long the <see cref="T:System.Fabric.FabricReplicator" /> waits after it transmits a message from the primary to the 
            secondary for the secondary to acknowledge that it has received the message.</para>
        </summary>
        <value>
          <para>The time needed the <see cref="T:System.Fabric.FabricReplicator" /> waits after it transmits a message from the primary to the 
            secondary for the secondary to acknowledge that it has received the message.</para>
        </value>
        <remarks>
          <para>Receiving a message does not necessarily that the message has been processed.</para>
          <para>If this timer is exceeded, then the message is retransmitted.</para>
          <para>The default value is 5 seconds.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryClearAcknowledgedOperations">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; SecondaryClearAcknowledgedOperations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; SecondaryClearAcknowledgedOperations" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.SecondaryClearAcknowledgedOperations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Typically, operations in the secondary replicator are kept in the queue to be able to catchup replicas if it is promoted to a primary. With 
            this flag enabled, the secondary replicator releases the operation as soon as it is acknowledged by the user service.</para>
        </summary>
        <value>
          <para>
            <languageKeyword>true</languageKeyword> if the secondary replicator releases the operation as soon as it is acknowledged by the user service; 
            otherwise, <languageKeyword>false</languageKeyword>.</para>
        </value>
        <remarks>
          <para>The default value is false</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityCredentials">
      <MemberSignature Language="C#" Value="public System.Fabric.SecurityCredentials SecurityCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.SecurityCredentials SecurityCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.SecurityCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.SecurityCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Allows the service to define security credentials for securing the traffic between replicators.</para>
        </summary>
        <value>
          <para>The service to define security credentials for securing the traffic between replicators.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStreamFaultsAndEndOfStreamOperationAck">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; UseStreamFaultsAndEndOfStreamOperationAck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; UseStreamFaultsAndEndOfStreamOperationAck" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.ReplicatorSettings.UseStreamFaultsAndEndOfStreamOperationAck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>