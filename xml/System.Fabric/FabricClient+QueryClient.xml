<Type Name="FabricClient+QueryClient" FullName="System.Fabric.FabricClient+QueryClient">
  <TypeSignature Language="C#" Value="public sealed class FabricClient.QueryClient" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit FabricClient/QueryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.FabricClient.QueryClient" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents the fabric client that can be used to issue queries.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Gets the details for all applications created in the system. If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>If the provided application name has no matching applications, it returns a list of 0 entries.</para>
          <para>The returned task contains the list of applications as <see cref="T:System.Fabric.Query.ApplicationList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync (Uri applicationNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync(class System.Uri applicationNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="applicationNameFilter">
          <para>The name of the application to get details for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all applications or for a specific application created in the system. If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of applications as <see cref="T:System.Fabric.Query.ApplicationList" />.</para>
          <para>If the provided application name has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync (Uri applicationNameFilter, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync(class System.Uri applicationNameFilter, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationNameFilter">
          <para>The name of the application to get details for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <summary>
          <para>
            Gets the details for all applications or for a specific application created in the system. If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of applications as <see cref="T:System.Fabric.Query.ApplicationList" />.</para>
          <para>If the provided application name has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync (Uri applicationNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync(class System.Uri applicationNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationNameFilter">
          <para>The name of the application to get details for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all applications or for a specific application created in the system. If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of applications as <see cref="T:System.Fabric.Query.ApplicationList" />.</para>
          <para>If the provided application name has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync (Uri applicationNameFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationListAsync(class System.Uri applicationNameFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationNameFilter">
          <para>The name of the application to get details for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all applications or for a specific application created in the system. If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of applications as <see cref="T:System.Fabric.Query.ApplicationList" />.</para>
          <para>If the provided application name has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationLoadInformation&gt; GetApplicationLoadInformationAsync (string applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationLoadInformation&gt; GetApplicationLoadInformationAsync(string applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The URI of the application instance name.</para>
        </param>
        <summary>
          <para>Retrieves the load information of the specified application instance.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the information of an application as <see cref="T:System.Fabric.Query.ApplicationLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricElementNotFoundException">
          <para>
            <see cref="F:System.Fabric.FabricErrorCode.ApplicationNotFound" />: The application does not exist.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationLoadInformation&gt; GetApplicationLoadInformationAsync (string applicationName, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationLoadInformation&gt; GetApplicationLoadInformationAsync(string applicationName, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The URI of the application instance name.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Retrieves the load information of the specified application instance.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the information of an application as <see cref="T:System.Fabric.Query.ApplicationLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricElementNotFoundException">
          <para>
            <see cref="F:System.Fabric.FabricErrorCode.ApplicationNotFound" />: The application does not exist.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>The request timed out.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationNameResult&gt; GetApplicationNameAsync (Uri serviceName, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationNameResult&gt; GetApplicationNameAsync(class System.Uri serviceName, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationNameResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service to get the application name for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the application name for the specified service.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation. </para>
          <para>The returned task contains the application name as <see cref="T:System.Fabric.Query.ApplicationNameResult" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationPagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationPagedListAsync (System.Fabric.Description.ApplicationQueryDescription applicationQueryDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationPagedListAsync(class System.Fabric.Description.ApplicationQueryDescription applicationQueryDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationPagedListAsync(System.Fabric.Description.ApplicationQueryDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationQueryDescription" Type="System.Fabric.Description.ApplicationQueryDescription" />
      </Parameters>
      <Docs>
        <param name="applicationQueryDescription">
          <para>The <see cref="T:System.Fabric.Description.ApplicationQueryDescription" /> that determines which applications should be queried.</para>
        </param>
        <summary>
          <para>Gets the details of applications created that match filters specified in query description (if any).
            If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation.
            The value of TResult parameter is an <see cref="T:System.Fabric.Query.ApplicationList" /> that represents the list of applications that respect the filters in the <see cref="T:System.Fabric.Description.ApplicationQueryDescription" /> and fit the page.
            If the provided query description has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationPagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt; GetApplicationPagedListAsync (System.Fabric.Description.ApplicationQueryDescription applicationQueryDescription, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationList&gt; GetApplicationPagedListAsync(class System.Fabric.Description.ApplicationQueryDescription applicationQueryDescription, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationPagedListAsync(System.Fabric.Description.ApplicationQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationQueryDescription" Type="System.Fabric.Description.ApplicationQueryDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationQueryDescription">
          <para>The <see cref="T:System.Fabric.Description.ApplicationQueryDescription" /> that determines which applications should be queried.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>Gets the details of applications created that match filters specified in query description (if any).
            If the applications do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation.
            The value of TResult parameter is an <see cref="T:System.Fabric.Query.ApplicationList" /> that represents the list of applications that respect the filters in the <see cref="T:System.Fabric.Description.ApplicationQueryDescription" /> and fit the page.
            If the provided query description has no matching applications, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the details for all the application types provisioned or being provisioned in the system.
            For more functionality, please use <see cref="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync" />.
            This method will be deprecated in the future.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of application types as <see cref="T:System.Fabric.Query.ApplicationTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync (string applicationTypeNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync(string applicationTypeNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationTypeNameFilter">
          <para>The type name of the application to get service types for.</para>
        </param>
        <summary>
          <para>Gets the details for all the application types provisioned or being provisioned in the system or for the specified application type.
            For more functionality, please use <see cref="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync" />.
            This method will be deprecated in the future.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of application types as <see cref="T:System.Fabric.Query.ApplicationTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync (string applicationTypeNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypeList&gt; GetApplicationTypeListAsync(string applicationTypeNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationTypeNameFilter">
          <para>The type name of the application to get service types for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the details for all the application types provisioned or being provisioned in the system or for the specified application type.
            For more functionality, please use <see cref="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync" />.
            This method will be deprecated in the future.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of application types as <see cref="T:System.Fabric.Query.ApplicationTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypePagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets the details for all the application types provisioned or being provisioned in the system. 
                </para>
        </summary>
        <returns>
          <para>
                   A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation. 
                   The value of TResult parameter is an <see cref="T:System.Fabric.Query.ApplicationTypePagedList" />.
                </para>
          <para> 
                   If no application types are found matching the filters provided, this query returns no application types rather than an error.
                </para>
        </returns>
        <remarks>
          <para>
                    This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token which 
                    can be used to get the next page. For example, if there are
                    10000 application types but a page only fits the first 3000 application types, 3000 is returned.
                    To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.
                    A null continuation token is returned if there are no subsequent pages.
                </para>
          <para>
                    Each version of a particular application type is one entry in the result.
                </para>
        </remarks>
        <remarks>
          <para>
                    See more details about application types here: <see cref="T:System.Fabric.Query.ApplicationType" />.
                </para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypePagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync (System.Fabric.Description.PagedApplicationTypeQueryDescription queryDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync(class System.Fabric.Description.PagedApplicationTypeQueryDescription queryDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync(System.Fabric.Description.PagedApplicationTypeQueryDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryDescription" Type="System.Fabric.Description.PagedApplicationTypeQueryDescription" />
      </Parameters>
      <Docs>
        <param name="queryDescription">
          <para>
                    A <see cref="T:System.Fabric.Description.PagedApplicationTypeQueryDescription" /> 
                    object describing which application types to return.
                </para>
        </param>
        <summary>
          <para>
                    Gets the details for application types provisioned or being provisioned in the system which match filters
                    provided by the queryDescription argument.
                </para>
        </summary>
        <returns>
          <para>
                   A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation. 
                   The value of TResult parameter is an <see cref="T:System.Fabric.Query.ApplicationTypePagedList" />.
                </para>
          <para> 
                   If no application types are found matching the filters provided, this query returns no application types rather than an error.
                </para>
        </returns>
        <remarks>
          <para>
                    This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token which 
                    can be used to get the next page. For example, if there are
                    10000 application types but a page only fits the first 3000 application types, 3000 is returned.
                    To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.
                    A null continuation token is returned if there are no subsequent pages.
                </para>
          <para>
                    Each version of a particular application type is one entry in the result.
                </para>
        </remarks>
        <remarks>
          <para>
                    See more details about application types here: <see cref="T:System.Fabric.Query.ApplicationType" />.
                </para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypePagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync (System.Fabric.Description.PagedApplicationTypeQueryDescription queryDescription, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ApplicationTypePagedList&gt; GetApplicationTypePagedListAsync(class System.Fabric.Description.PagedApplicationTypeQueryDescription queryDescription, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync(System.Fabric.Description.PagedApplicationTypeQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ApplicationTypePagedList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryDescription" Type="System.Fabric.Description.PagedApplicationTypeQueryDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryDescription">
          <para>
                    A <see cref="T:System.Fabric.Description.PagedApplicationTypeQueryDescription" /> 
                    object describing which application types to return.
                </para>
        </param>
        <param name="timeout">
          <para>
                    Specifies the duration this operation has to complete before timing out.
                </para>
        </param>
        <param name="cancellationToken">
          <para>
                    Propagates notification that operations should be canceled.
                </para>
        </param>
        <summary>
          <para>
                    Gets the details for application types provisioned or being provisioned in the system which match filters
                    provided by the queryDescription argument.
                </para>
        </summary>
        <returns>
          <para>
                   A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation. 
                   The value of TResult parameter is an <see cref="T:System.Fabric.Query.ApplicationTypePagedList" />.
                </para>
          <para> 
                   If no application types are found matching the filters provided, this query returns no application types rather than an error.
                </para>
        </returns>
        <remarks>
          <para>
                    This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token which 
                    can be used to get the next page. For example, if there are
                    10000 application types but a page only fits the first 3000 application types, 3000 is returned.
                    To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.
                    A null continuation token is returned if there are no subsequent pages.
                </para>
          <para>
                    Each version of a particular application type is one entry in the result.
                </para>
        </remarks>
        <remarks>
          <para>
                    See more details about application types here: <see cref="T:System.Fabric.Query.ApplicationType" />.
                </para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ClusterLoadInformation&gt; GetClusterLoadInformationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ClusterLoadInformation&gt; GetClusterLoadInformationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ClusterLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the cluster load information.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>See <see cref="T:System.Fabric.Query.ClusterLoadInformation" />.</para>
          <para>The returned task contains the load information of the cluster as <see cref="T:System.Fabric.Query.ClusterLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ClusterLoadInformation&gt; GetClusterLoadInformationAsync (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ClusterLoadInformation&gt; GetClusterLoadInformationAsync(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ClusterLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the cluster load information.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of the cluster as <see cref="T:System.Fabric.Query.ClusterLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync (string nodeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync(string nodeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node to get applications for.</para>
        </param>
        <summary>
          <para>Gets the deployed application list.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed applications as <see cref="T:System.Fabric.Query.DeployedApplicationList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync (string nodeName, Uri applicationNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync(string nodeName, class System.Uri applicationNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node to get applications for.</para>
        </param>
        <param name="applicationNameFilter">
          <para>Filter results to include only applications matching this application name.</para>
        </param>
        <summary>
          <para>Gets the deployed applications on a node with the specified application name.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed applications as <see cref="T:System.Fabric.Query.DeployedApplicationList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedApplicationListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync (string nodeName, Uri applicationNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedApplicationList&gt; GetDeployedApplicationListAsync(string nodeName, class System.Uri applicationNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedApplicationList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationNameFilter" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node to get applications for.</para>
        </param>
        <param name="applicationNameFilter">
          <para>Filter results to include only applications matching this application name.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the deployed applications on a node with the specified application name.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed applications as <see cref="T:System.Fabric.Query.DeployedApplicationList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedCodePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync (string nodeName, Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync(string nodeName, class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <summary>
          <para>Gets the list of the deployed code packages.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed code packages as <see cref="T:System.Fabric.Query.DeployedCodePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedCodePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="codePackageNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <param name="codePackageNameFilter">
          <para>Filter results to include only those matching this code package name.</para>
        </param>
        <summary>
          <para>Gets the list of the deployed code packages.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed code packages as <see cref="T:System.Fabric.Query.DeployedCodePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedCodePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedCodePackageList&gt; GetDeployedCodePackageListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedCodePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="codePackageNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <param name="codePackageNameFilter">
          <para>Filter results to include only those matching this code package name.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the list of the deployed code packages.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed code packages as <see cref="T:System.Fabric.Query.DeployedCodePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaDetailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaDetail&gt; GetDeployedReplicaDetailAsync (string nodeName, Guid partitionId, long replicaId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaDetail&gt; GetDeployedReplicaDetailAsync(string nodeName, valuetype System.Guid partitionId, int64 replicaId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The node name from which the results are desired.</para>
        </param>
        <param name="partitionId">
          <para>The partition id for which the results are desired.</para>
        </param>
        <param name="replicaId">
          <para>The identifier for the replica or the instance for which the results are desired.</para>
        </param>
        <summary>
          <para>Returns details of a replica running on the specified node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information as <see cref="T:System.Fabric.Query.DeployedServiceReplicaDetail" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaDetailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaDetail&gt; GetDeployedReplicaDetailAsync (string nodeName, Guid partitionId, long replicaId, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaDetail&gt; GetDeployedReplicaDetailAsync(string nodeName, valuetype System.Guid partitionId, int64 replicaId, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaId" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The node name from which the results are desired.</para>
        </param>
        <param name="partitionId">
          <para>The partition id for which the results are desired.</para>
        </param>
        <param name="replicaId">
          <para>The identifier for the replica or the instance for which the results are desired.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Returns details of a replica running on the specified node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information as <see cref="T:System.Fabric.Query.DeployedServiceReplicaDetail" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync (string nodeName, Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync(string nodeName, class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <summary>
          <para>Gets the view of replicas from a node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service replicas as <see cref="T:System.Fabric.Query.DeployedServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync (string nodeName, Uri applicationName, Nullable&lt;Guid&gt; partitionIdFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync(string nodeName, class System.Uri applicationName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="partitionIdFilter">
          <para>Filter results to only include replicas matching this partition ID.</para>
        </param>
        <summary>
          <para>Gets the view of replicas from a node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service replicas as <see cref="T:System.Fabric.Query.DeployedServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, Nullable&lt;Guid&gt; partitionIdFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <param name="partitionIdFilter">
          <para>Filter results to only include replicas matching this partition ID.</para>
        </param>
        <summary>
          <para>Gets the view of replicas from a node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service replicas as <see cref="T:System.Fabric.Query.DeployedServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and
                <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, Nullable&lt;Guid&gt; partitionIdFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceReplicaList&gt; GetDeployedReplicaListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <param name="partitionIdFilter">
          <para>Filter results to only include replicas matching this partition ID.</para>
        </param>
        <param name="timeout">
          <para>The timespan that defines the maximum amount of time  will allow this operation to continue before returning a <see cref="T:System.TimeoutException" />.</para>
        </param>
        <param name="cancellationToken">
          <para>The optional cancellation token that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation may still be completed even if it is canceled.</para>
        </param>
        <summary>
          <para>Gets the view of replicas from a node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service replicas as <see cref="T:System.Fabric.Query.DeployedServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" /> and 
                <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServicePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync (string nodeName, Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync(string nodeName, class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <summary>
          <para>Gets the deployed service packages for the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service packages as <see cref="T:System.Fabric.Query.DeployedServicePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServicePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <summary>
          <para>Gets the deployed service packages for the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service packages as <see cref="T:System.Fabric.Query.DeployedServicePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServicePackageListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServicePackageList&gt; GetDeployedServicePackageListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServicePackageList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only those matching this service manifest name.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the deployed service packages for the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service packages as <see cref="T:System.Fabric.Query.DeployedServicePackageList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync (string nodeName, Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync(string nodeName, class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <summary>
          <para>Gets the deployed service types on the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service types as <see cref="T:System.Fabric.Query.DeployedServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="serviceTypeNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only service types matching this service manifest name.</para>
        </param>
        <param name="serviceTypeNameFilter">
          <para>Filter results to include only service types matching this name.</para>
        </param>
        <summary>
          <para>Gets the deployed service types on the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service types as <see cref="T:System.Fabric.Query.DeployedServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeployedServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync (string nodeName, Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.DeployedServiceTypeList&gt; GetDeployedServiceTypeListAsync(string nodeName, class System.Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.DeployedServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceManifestNameFilter" Type="System.String" />
        <Parameter Name="serviceTypeNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="applicationName">
          <para>The name of the application.</para>
        </param>
        <param name="serviceManifestNameFilter">
          <para>Filter results to include only service types matching this service manifest name.</para>
        </param>
        <param name="serviceTypeNameFilter">
          <para>Filter results to include only service types matching this name.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the deployed service types on the given node and application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of deployed service types as <see cref="T:System.Fabric.Query.DeployedServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Gets the details for all nodes in the cluster. If the nodes do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync (string nodeNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync(string nodeNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeNameFilter">
          <para>The name of the node to get details for. The node name is case-insensitive. Gets all nodes in the cluster if the given node name is null.</para>
        </param>
        <summary>
          <para>
            Gets the details for all nodes in the cluster or for the specified node. If the nodes do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync (string nodeNameFilter, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync(string nodeNameFilter, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeNameFilter" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeNameFilter">
          <para>The name of the node to get details for. The node name is case-insensitive. Gets all nodes if the given node name is null.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
          <returns>
            <para>A task that represents the asynchronous query operation.</para>
            <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
          </returns>
        </param>
        <summary>
          <para>
            Gets the details for all nodes in the cluster or for the specified node. If the nodes do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync (string nodeNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync(string nodeNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeNameFilter">
          <para>The name of the node to get details for. The node name is case-insensitive. Gets all nodes if the given node name is null.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all nodes in the cluster or for the specified node.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync (string nodeNameFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync(string nodeNameFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeNameFilter" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeNameFilter">
          <para>The name of the node to get details for. The node name is case-insensitive. Gets all nodes if the given node name is null.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all nodes in the cluster or for the specified node. If the nodes do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt; GetNodeListAsync (string nodeNameFilter, System.Fabric.Query.NodeStatusFilter nodeStatusFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeList&gt; GetNodeListAsync(string nodeNameFilter, valuetype System.Fabric.Query.NodeStatusFilter nodeStatusFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeNameFilter" Type="System.String" />
        <Parameter Name="nodeStatusFilter" Type="System.Fabric.Query.NodeStatusFilter" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeNameFilter">
          <para>The name of the node to get details for. The node name is case-insensitive. Gets all nodes if the given node name is null.</para>
        </param>
        <param name="nodeStatusFilter">
          <para>The node status(es) of the nodes to get details for.</para>
        </param>
        <param name="continuationToken">The continuation token obtained from a previous query.</param>
        <param name="timeout">Specifies the duration this operation has to complete before timing out.</param>
        <param name="cancellationToken">Propagates notification that operation should be canceled.</param>
        <summary>
            Gets the details for all nodes in the cluster or for the specified node. If the nodes do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of nodes as <see cref="T:System.Fabric.Query.NodeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeLoadInformation&gt; GetNodeLoadInformationAsync (string nodeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeLoadInformation&gt; GetNodeLoadInformationAsync(string nodeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <summary>
          <para>Get metrics and load information on the node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of the node as <see cref="T:System.Fabric.Query.NodeLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeLoadInformation&gt; GetNodeLoadInformationAsync (string nodeName, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.NodeLoadInformation&gt; GetNodeLoadInformationAsync(string nodeName, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.NodeLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeName">
          <para>The name of the node.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled</para>
        </param>
        <summary>
          <para>Get metrics and load information on the node.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of the node as <see cref="T:System.Fabric.Query.NodeLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionAsync (Guid partitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionAsync(valuetype System.Guid partitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID of the partition to get details for.</para>
        </param>
        <summary>
          <para>
            Gets the details for the specified partition.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionAsync (Guid partitionId, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionAsync(valuetype System.Guid partitionId, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID of the partition to get details for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for the specified partition.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync (Uri serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync(class System.Uri serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service to get partitions for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync (Uri serviceName, Nullable&lt;Guid&gt; partitionIdFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync(class System.Uri serviceName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="partitionIdFilter">
          <para>The partition ID of the partition to get details for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service or just the specified partition. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync (Uri serviceName, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync(class System.Uri serviceName, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync (Uri serviceName, Nullable&lt;Guid&gt; partitionIdFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync(class System.Uri serviceName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="partitionIdFilter">
          <para>The partition ID of the partition to get details for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service or just the specified partition. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync (Uri serviceName, Nullable&lt;Guid&gt; partitionIdFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServicePartitionList&gt; GetPartitionListAsync(class System.Uri serviceName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; partitionIdFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServicePartitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="partitionIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="partitionIdFilter">
          <para>The partition ID of the partition to get details for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service or just the specified partition. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of partitions as <see cref="T:System.Fabric.Query.ServicePartitionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.PartitionLoadInformation&gt; GetPartitionLoadInformationAsync (Guid partitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.PartitionLoadInformation&gt; GetPartitionLoadInformationAsync(valuetype System.Guid partitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.PartitionLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID of the partition to get load information for.</para>
        </param>
        <summary>
          <para>Gets the information about the partition load.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of a partition as <see cref="T:System.Fabric.Query.PartitionLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.PartitionLoadInformation&gt; GetPartitionLoadInformationAsync (Guid partitionId, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.PartitionLoadInformation&gt; GetPartitionLoadInformationAsync(valuetype System.Guid partitionId, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.PartitionLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID of the partition to get load information for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the information about the partition load.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of a partition as <see cref="T:System.Fabric.Query.PartitionLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricCodeVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets details for all cluster code versions provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric code versions as <see cref="T:System.Fabric.Query.ProvisionedFabricCodeVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricCodeVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync (string codeVersionFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync(string codeVersionFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeVersionFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeVersionFilter">
          <para>The code version to get details for.</para>
        </param>
        <summary>
          <para>Gets details for the specific cluster code version provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric code versions as <see cref="T:System.Fabric.Query.ProvisionedFabricCodeVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricCodeVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync (string codeVersionFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricCodeVersionList&gt; GetProvisionedFabricCodeVersionListAsync(string codeVersionFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricCodeVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeVersionFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="codeVersionFilter">
          <para>Code version to get details for.</para>
        </param>
        <param name="timeout">
          <para>The maximum time allowed for the operation to complete before TimeoutException is thrown.</para>
        </param>
        <param name="cancellationToken">
          <para>Reserved for future use.</para>
        </param>
        <summary>
          <para>Gets details for the specific cluster code version provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric code versions as <see cref="T:System.Fabric.Query.ProvisionedFabricCodeVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricConfigVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets details for all cluster config versions provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric config versions as <see cref="T:System.Fabric.Query.ProvisionedFabricConfigVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricConfigVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync (string configVersionFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync(string configVersionFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configVersionFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configVersionFilter">
          <para>The config version to get details for.</para>
        </param>
        <summary>
          <para>Gets details for a specific cluster config version provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric config versions as <see cref="T:System.Fabric.Query.ProvisionedFabricConfigVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedFabricConfigVersionListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync (string configVersionFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ProvisionedFabricConfigVersionList&gt; GetProvisionedFabricConfigVersionListAsync(string configVersionFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ProvisionedFabricConfigVersionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configVersionFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configVersionFilter">
          <para>The config version to get details for.</para>
        </param>
        <param name="timeout">
          <para>The maximum time allowed for the operation to complete before TimeoutException is thrown.</para>
        </param>
        <param name="cancellationToken">
          <para>Reserved for future use.</para>
        </param>
        <summary>
          <para>Gets details for a specific cluster config version provisioned in the system.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of provisioned Service Fabric config versions as <see cref="T:System.Fabric.Query.ProvisionedFabricConfigVersionList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all replicas of a partition. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match
                <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and 
                <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, long replicaIdOrInstanceIdFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceIdFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceIdFilter" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <param name="replicaIdOrInstanceIdFilter">
          <para>The replica identifier or instance identifier to get replicas for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all replicas of a partition that match the replica or instance filter and the status filter. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <summary>
          <para>
            Gets the details for all replicas of a partition. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match 
                <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, long replicaIdOrInstanceIdFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceIdFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceIdFilter" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <param name="replicaIdOrInstanceIdFilter">
          <para>The replica identifier or instance identifier to get replicas for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all replicas of a partition that match the replica or instance filter. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier of the partition to get replicas for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all replicas of a partition. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, long replicaIdOrInstanceIdFilter, System.Fabric.Query.ServiceReplicaStatusFilter replicaStatusFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceIdFilter, valuetype System.Fabric.Query.ServiceReplicaStatusFilter replicaStatusFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceIdFilter" Type="System.Int64" />
        <Parameter Name="replicaStatusFilter" Type="System.Fabric.Query.ServiceReplicaStatusFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <param name="replicaIdOrInstanceIdFilter">
          <para>The replica identifier or instance identifier to get replicas for.</para>
        </param>
        <param name="replicaStatusFilter">
          <para>The replica status(es) to get replicas for.</para>
        </param>
        <param name="timeout">Specifies the duration this operation has to complete before timing out.</param>
        <param name="cancellationToken">Propagates notification that operation should be canceled.</param>
        <summary>
          <para>
            Gets the details for all replicas of a partition that match the replica or instance filter and the status filter. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync (Guid partitionId, long replicaIdOrInstanceIdFilter, System.Fabric.Query.ServiceReplicaStatusFilter replicaStatusFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceReplicaList&gt; GetReplicaListAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceIdFilter, valuetype System.Fabric.Query.ServiceReplicaStatusFilter replicaStatusFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceReplicaList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceIdFilter" Type="System.Int64" />
        <Parameter Name="replicaStatusFilter" Type="System.Fabric.Query.ServiceReplicaStatusFilter" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition identifier for the partition to get replicas for.</para>
        </param>
        <param name="replicaIdOrInstanceIdFilter">
          <para>The replica identifier or instance identifier to get replicas for.</para>
        </param>
        <param name="replicaStatusFilter">
          <para>Filter results to include only those matching this replica status.</para>
        </param>
        <param name="continuationToken">The continuation token obtained from a previous query.</param>
        <param name="timeout">Specifies the duration this operation has to complete before timing out.</param>
        <param name="cancellationToken">Propagates notification that operation should be canceled.</param>
        <summary>
          <para>
            Gets the details for all replicas of a partition that match the replica or instance filter and the status filter. If the replicas do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the replica information of the partition as <see cref="T:System.Fabric.Query.ServiceReplicaList" />.</para>
        </returns>
        <remarks>
          <para>
                Service Fabric is a distributed system where many components have a view of the same entity. </para>
          <para>
                In an unstable or transient state, this view may not match <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" /> and <see cref="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" /></para>
        </remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ReplicaLoadInformation&gt; GetReplicaLoadInformationAsync (Guid partitionId, long replicaIdOrInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ReplicaLoadInformation&gt; GetReplicaLoadInformationAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ReplicaLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID.</para>
        </param>
        <param name="replicaIdOrInstanceId">
          <para>The replica ID (stateful service) or instance ID (stateless service).</para>
        </param>
        <summary>
          <para>Get a list of metric and their load on a replica.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of the replica as <see cref="T:System.Fabric.Query.ReplicaLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicaLoadInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ReplicaLoadInformation&gt; GetReplicaLoadInformationAsync (Guid partitionId, long replicaIdOrInstanceId, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ReplicaLoadInformation&gt; GetReplicaLoadInformationAsync(valuetype System.Guid partitionId, int64 replicaIdOrInstanceId, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ReplicaLoadInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="replicaIdOrInstanceId" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The partition ID.</para>
        </param>
        <param name="replicaIdOrInstanceId">
          <para>The replica ID (stateful service) or instance ID (stateless service).</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Get a list of metric and their load on a replica.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the load information of the replica as <see cref="T:System.Fabric.Query.ReplicaLoadInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync (Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync(class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The application name of the service group.</para>
        </param>
        <summary>
          <para>Get service group members of an application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group members as <see cref="T:System.Fabric.Query.ServiceGroupMemberList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync (Uri applicationName, Uri serviceNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The application name of the service group.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The service name of the service group.</para>
        </param>
        <summary>
          <para>Get service group members of an application.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group members as <see cref="T:System.Fabric.Query.ServiceGroupMemberList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync (Uri applicationName, Uri serviceNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberList&gt; GetServiceGroupMemberListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The application name of the service group.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The service name of the service group.</para>
        </param>
        <param name="timeout">
          <para>The timeout to the operation.</para>
        </param>
        <param name="cancellationToken">
          <para>Notifies the operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all partitions of a service. If the partitions do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group members as <see cref="T:System.Fabric.Query.ServiceGroupMemberList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync (string applicationTypeName, string applicationTypeVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The application type name of the service group.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version of the service group.</para>
        </param>
        <summary>
          <para>Get service group members types of service group(s).</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group member types as <see cref="T:System.Fabric.Query.ServiceGroupMemberTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync (string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
        <Parameter Name="serviceGroupTypeNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The application type name of the service group.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version of the service group.</para>
        </param>
        <param name="serviceGroupTypeNameFilter">
          <para>The name of the service group type to get.</para>
        </param>
        <summary>
          <para>Get service group members types of service group(s).</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group member types as <see cref="T:System.Fabric.Query.ServiceGroupMemberTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupMemberTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync (string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceGroupMemberTypeList&gt; GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceGroupMemberTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
        <Parameter Name="serviceGroupTypeNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The application type name of the service group.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version of the service group.</para>
        </param>
        <param name="serviceGroupTypeNameFilter">
          <para>The name of the service group type to get.</para>
        </param>
        <param name="timeout">
          <para>The timeout to the operation.</para>
        </param>
        <param name="cancellationToken">
          <para>Notifies the operation should be canceled.</para>
        </param>
        <summary>
          <para>Get service group members types of service group(s).</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service group member types as <see cref="T:System.Fabric.Query.ServiceGroupMemberTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServiceListAsync (Uri applicationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServiceListAsync(class System.Uri applicationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The name of the application to get services for.</para>
        </param>
        <summary>
          <para>
            Gets the information about all services belonging to the application specified by the application name URI. If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of services as <see cref="T:System.Fabric.Query.ServiceList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServiceListAsync (Uri applicationName, Uri serviceNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServiceListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The name of the application to get services for.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The name of the services to get details for.</para>
        </param>
        <summary>
          <para>
            Gets the details for all services of an application or just the specified service. If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of services as <see cref="T:System.Fabric.Query.ServiceList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServiceListAsync (Uri applicationName, Uri serviceNameFilter, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServiceListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The name of the application to get services for.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The name of the services to get details for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <summary>
          <para>
            Gets the details for all services of an application or just the specified service. If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of services as <see cref="T:System.Fabric.Query.ServiceList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServiceListAsync (Uri applicationName, Uri serviceNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServiceListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The name of the application to get services for.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The name of the services to get details for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all services of an application or just the specified service. If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of services as <see cref="T:System.Fabric.Query.ServiceList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServiceListAsync (Uri applicationName, Uri serviceNameFilter, string continuationToken, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServiceListAsync(class System.Uri applicationName, class System.Uri serviceNameFilter, string continuationToken, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceNameFilter" Type="System.Uri" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>The name of the application to get services for.</para>
        </param>
        <param name="serviceNameFilter">
          <para>The name of the services to get details for.</para>
        </param>
        <param name="continuationToken">
          <para>The continuation token obtained from a previous query.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>
            Gets the details for all services of an application or just the specified service. If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.
            </para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous operation.</para>
          <para>The returned task contains the list of services as <see cref="T:System.Fabric.Query.ServiceList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceNameResult&gt; GetServiceNameAsync (Guid partitionId, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceNameResult&gt; GetServiceNameAsync(valuetype System.Guid partitionId, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceNameResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">
          <para>The id of the partition to get the service name for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the service name for the specified partition.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the service name as <see cref="T:System.Fabric.Query.ServiceNameResult" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServicePagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServicePagedListAsync (System.Fabric.Description.ServiceQueryDescription serviceQueryDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServicePagedListAsync(class System.Fabric.Description.ServiceQueryDescription serviceQueryDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServicePagedListAsync(System.Fabric.Description.ServiceQueryDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceQueryDescription" Type="System.Fabric.Description.ServiceQueryDescription" />
      </Parameters>
      <Docs>
        <param name="serviceQueryDescription">
          <para>The <see cref="T:System.Fabric.Description.ServiceQueryDescription" /> that determines which services should be queried.</para>
        </param>
        <summary>
          <para>Gets the details for all services of an application or just the specified services that match filters specified in query description (if any). 
            If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation. 
            The value of TResult parameter is a <see cref="T:System.Fabric.Query.ServiceList" /> that represents the list of services that respect the filters in the <see cref="T:System.Fabric.Query.ServiceList" /> and fit the page.
            If the provided query description has no matching services, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServicePagedListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt; GetServicePagedListAsync (System.Fabric.Description.ServiceQueryDescription serviceQueryDescription, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceList&gt; GetServicePagedListAsync(class System.Fabric.Description.ServiceQueryDescription serviceQueryDescription, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServicePagedListAsync(System.Fabric.Description.ServiceQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceQueryDescription" Type="System.Fabric.Description.ServiceQueryDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceQueryDescription">
          <para>The <see cref="T:System.Fabric.Description.ServiceQueryDescription" /> that determines which services should be queried.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operation should be canceled.</para>
        </param>
        <summary>
          <para>Gets the details for all services of an application or just the specified services that match filters specified in query description (if any). 
            If the services do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation. 
            The value of TResult parameter is a <see cref="T:System.Fabric.Query.ServiceList" /> that represents the list of services that respect the filters in the <see cref="T:System.Fabric.Query.ServiceList" /> and fit the page.
            If the provided query description has no matching services, it returns a list of 0 entries.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync (string applicationTypeName, string applicationTypeVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The type name of the application to get service types for.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version to get service types for.</para>
        </param>
        <summary>
          <para>Gets the list of service types.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service types as <see cref="T:System.Fabric.Query.ServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync (string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
        <Parameter Name="serviceTypeNameFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The type name of the application to get service types for.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version to get service types for.</para>
        </param>
        <param name="serviceTypeNameFilter">
          <para>The name of the service type to get details for.</para>
        </param>
        <summary>
          <para>Gets the list of service types.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service types as <see cref="T:System.Fabric.Query.ServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTypeListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync (string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.ServiceTypeList&gt; GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.ServiceTypeList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationTypeName" Type="System.String" />
        <Parameter Name="applicationTypeVersion" Type="System.String" />
        <Parameter Name="serviceTypeNameFilter" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationTypeName">
          <para>The type name of the application to get service types for.</para>
        </param>
        <param name="applicationTypeVersion">
          <para>The application type version to get service types for.</para>
        </param>
        <param name="serviceTypeNameFilter">
          <para>The name of the service type to get details for.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Gets the list of service types.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the list of service types as <see cref="T:System.Fabric.Query.ServiceTypeList" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnplacedReplicaInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.UnplacedReplicaInformation&gt; GetUnplacedReplicaInformationAsync (string serviceName, Guid partitionId, bool onlyQueryPrimaries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.UnplacedReplicaInformation&gt; GetUnplacedReplicaInformationAsync(string serviceName, valuetype System.Guid partitionId, bool onlyQueryPrimaries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.UnplacedReplicaInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="onlyQueryPrimaries" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="partitionId">
          <para>The partition ID.</para>
        </param>
        <param name="onlyQueryPrimaries">
          <para>Return only the unplaced replica diagnostics for only the attempted primary replica placements in order to limit output.</para>
        </param>
        <summary>
          <para>Get diagnostics information about services with unplaced replicas.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the information of an unplaced replica as <see cref="T:System.Fabric.Query.UnplacedReplicaInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>This operation has a timeout of 60 seconds.</para>
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnplacedReplicaInformationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Query.UnplacedReplicaInformation&gt; GetUnplacedReplicaInformationAsync (string serviceName, Guid partitionId, bool onlyQueryPrimaries, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Query.UnplacedReplicaInformation&gt; GetUnplacedReplicaInformationAsync(string serviceName, valuetype System.Guid partitionId, bool onlyQueryPrimaries, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Query.UnplacedReplicaInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="partitionId" Type="System.Guid" />
        <Parameter Name="onlyQueryPrimaries" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName">
          <para>The name of the service.</para>
        </param>
        <param name="partitionId">
          <para>The partition ID.</para>
        </param>
        <param name="onlyQueryPrimaries">
          <para>Return only the unplaced replica diagnostics for only the attempted primary replica placements in order to limit output.</para>
        </param>
        <param name="timeout">
          <para>Specifies the duration this operation has to complete before timing out.</para>
        </param>
        <param name="cancellationToken">
          <para>Propagates notification that operations should be canceled.</para>
        </param>
        <summary>
          <para>Get diagnostics information about services with unplaced replicas.</para>
        </summary>
        <returns>
          <para>A task that represents the asynchronous query operation.</para>
          <para>The returned task contains the information of an unplaced replica as <see cref="T:System.Fabric.Query.UnplacedReplicaInformation" />.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.TimeoutException">
          <para>
                See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
        <exception cref="T:System.Fabric.FabricException">
          <para>
                See also <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-errors-and-exceptions" /> for handling common FabricClient failures.</para>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>