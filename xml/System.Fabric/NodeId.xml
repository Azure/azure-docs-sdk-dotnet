<Type Name="NodeId" FullName="System.Fabric.NodeId">
  <TypeSignature Language="C#" Value="public class NodeId" />
  <TypeSignature Language="ILAsm" Value=".class public ansi beforefieldinit NodeId extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.NodeId" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Class to encapsulate a node ID.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeId (System.Numerics.BigInteger high, System.Numerics.BigInteger low);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.BigInteger high, valuetype System.Numerics.BigInteger low) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.#ctor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="high" Type="System.Numerics.BigInteger" />
        <Parameter Name="low" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="high">
          <para>The high order component of the <see cref="T:System.Fabric.NodeId" /> object.</para>
        </param>
        <param name="low">
          <para>The low order component of the <see cref="T:System.Fabric.NodeId" /> object.</para>
        </param>
        <summary>
          <para>Initializes a new <see cref="T:System.Fabric.NodeId" /> object, with the specified high and low order components.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <para>The object to compare with the current <see cref="T:System.Fabric.NodeId" />.</para>
        </param>
        <summary>
          <para>Indicates whether this <see cref="T:System.Fabric.NodeId" /> object and the specified object are equal.</para>
        </summary>
        <returns>
          <para>Returns a <see cref="T:System.Boolean" /> value that is <languageKeyword>true</languageKeyword> 
            if the objects are the same type and represent the same value; otherwise <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns the hash code for this <see cref="T:System.Fabric.NodeId" /> object.</para>
        </summary>
        <returns>
          <para>A 32-bit signed integer hash code.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="High">
      <MemberSignature Language="C#" Value="public System.Numerics.BigInteger High { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Numerics.BigInteger High" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.NodeId.High" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The high order component of the <see cref="T:System.Fabric.NodeId" /> object.</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Numerics.BigInteger" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Low">
      <MemberSignature Language="C#" Value="public System.Numerics.BigInteger Low { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Numerics.BigInteger Low" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.NodeId.Low" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The low order component of the <see cref="T:System.Fabric.NodeId" /> object.</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Numerics.BigInteger" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Fabric.NodeId value1, System.Fabric.NodeId value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Fabric.NodeId value1, class System.Fabric.NodeId value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.op_Equality(System.Fabric.NodeId,System.Fabric.NodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Fabric.NodeId" />
        <Parameter Name="value2" Type="System.Fabric.NodeId" />
      </Parameters>
      <Docs>
        <param name="value1">
          <para>A <see cref="T:System.Fabric.NodeId" /> object to compare with <paramref name="value2" />.</para>
        </param>
        <param name="value2">
          <para>A <see cref="T:System.Fabric.NodeId" /> object to compare with <paramref name="value1" />.</para>
        </param>
        <summary>
          <para>Determines whether two <see cref="T:System.Fabric.NodeId" /> objects have the same value.</para>
        </summary>
        <returns>
          <para>Returns a <see cref="T:System.Boolean" /> value that is <languageKeyword>true</languageKeyword> if the objects are equivalent;
            otherwise <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Fabric.NodeId value1, System.Fabric.NodeId value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Fabric.NodeId value1, class System.Fabric.NodeId value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.op_Inequality(System.Fabric.NodeId,System.Fabric.NodeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Fabric.NodeId" />
        <Parameter Name="value2" Type="System.Fabric.NodeId" />
      </Parameters>
      <Docs>
        <param name="value1">
          <para>A <see cref="T:System.Fabric.NodeId" /> object to compare with <paramref name="value2" />.</para>
        </param>
        <param name="value2">
          <para>A <see cref="T:System.Fabric.NodeId" /> object to compare with <paramref name="value1" />.</para>
        </param>
        <summary>
          <para>Determines whether two <see cref="T:System.Fabric.NodeId" /> objects have different values.</para>
        </summary>
        <returns>
          <para>Returns a <see cref="T:System.Boolean" /> value that is <languageKeyword>true</languageKeyword> if the objects have different values; 
            otherwise <languageKeyword>false</languageKeyword>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Creates and returns a string representation of the current node ID.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.String" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string from, out System.Fabric.NodeId parsedNodeId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string from, class System.Fabric.NodeId parsedNodeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.NodeId.TryParse(System.String,System.Fabric.NodeId@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="parsedNodeId" Type="System.Fabric.NodeId&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="from">
          <para>A string containing the node ID to convert.</para>
        </param>
        <param name="parsedNodeId">
          <para>When this method returns, contains a new <see cref="T:System.Fabric.NodeId" /> object equivalent to the node ID contained in <paramref name="from" />, 
            if the conversion succeeded, or <languageKeyword>null</languageKeyword> if the conversion failed. This parameter is passed uninitialized.</para>
        </param>
        <summary>
          <para>Converts the string representation of a node ID to its <see cref="T:System.Fabric.NodeId" /> object equivalent. A return value indicates whether the operation succeeded.</para>
        </summary>
        <returns>
          <returns>A boolean indicating if the parse was successful</returns>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>