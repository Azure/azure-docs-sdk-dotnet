<Type Name="IStatelessServiceInstance" FullName="System.Fabric.IStatelessServiceInstance">
  <TypeSignature Language="C#" Value="public interface IStatelessServiceInstance" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStatelessServiceInstance" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.IStatelessServiceInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>Defines behavior that governs the lifecycle of a stateless service instance, such as startup, initialization, and shutdown. </para>
      <remarks>
            Stateless service types must implement this interface. The <see href="https://docs.microsoft.com/dotnet/api/microsoft.servicefabric.services.runtime.statelessservice">Reliable Stateless service</see> implements this interface and handles instance lifecycle internally.
            </remarks>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IStatelessServiceInstance.Abort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Terminates this instance ungracefully with this synchronous method call. </para>
        </summary>
        <remarks>
          <para>Examples of ungraceful termination are network issues resulting in Service Fabric process shutdown and the use of 
            <see cref="M:System.Fabric.IServicePartition.ReportFault(System.Fabric.FaultType)" /> to report a <see cref="F:System.Fabric.FaultType.Permanent" /> fault. 
            When the service instance receives this method, it should immediately release and clean up all references and return.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IStatelessServiceInstance.CloseAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing. It can be used to send a notification
            that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</para>
        </param>
        <summary>
          <para>Closes this service instance gracefully when the service instance is being shut down.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Threading.Tasks.Task" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Fabric.StatelessServiceInitializationParameters initializationParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Fabric.StatelessServiceInitializationParameters initializationParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IStatelessServiceInstance.Initialize(System.Fabric.StatelessServiceInitializationParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializationParameters" Type="System.Fabric.StatelessServiceInitializationParameters" />
      </Parameters>
      <Docs>
        <param name="initializationParameters">
          <para>The <see cref="T:System.Fabric.StatelessServiceInitializationParameters" /> for this service.</para>
        </param>
        <summary>
          <para> Initializes a newly created service instance.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; OpenAsync (System.Fabric.IStatelessServicePartition partition, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; OpenAsync(class System.Fabric.IStatelessServicePartition partition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IStatelessServiceInstance.OpenAsync(System.Fabric.IStatelessServicePartition,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification="Approved public API.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.Fabric.IStatelessServicePartition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partition">
          <para>
                The <see cref="T:System.Fabric.IStatelessServicePartition" /> that this instance is associated with</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing. It can be used to send a notification that the operation
            should be canceled. Note that cancellation is advisory and that the operation may still be completed even if it is canceled.</para>
        </param>
        <summary>
          <para>Opens an initialized service instance so that it can be contacted by clients.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Threading.Tasks.Task`1" /> of type <see cref="T:System.String" />.</para>
        </returns>
        <remarks>
          <para>Opening an instance stateless service indicates that the service is now resolvable and discoverable by service clients. The string that is returned
            is the address of this service instance. The address is associated with the service name via Service Fabric naming and returned to clients 
            that resolve the service via <see cref="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri)" />.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>