<Type Name="FabricClient+ServiceGroupManagementClient" FullName="System.Fabric.FabricClient+ServiceGroupManagementClient">
  <TypeSignature Language="C#" Value="public class FabricClient.ServiceGroupManagementClient" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit FabricClient/ServiceGroupManagementClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.FabricClient.ServiceGroupManagementClient" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Allows client side creation, deletion, and inspection of service groups inside the cluster, 
            just like the <see cref="T:System.Fabric.FabricClient.ServiceManagementClient" /> for regular services.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupAsync (System.Fabric.Description.ServiceGroupDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupAsync(class System.Fabric.Description.ServiceGroupDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Fabric.Description.ServiceGroupDescription" />
      </Parameters>
      <Docs>
        <param name="description">The <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> which describes the group and its members.</param>
        <summary>
            Asynchronously creates a service group from the given <see cref="T:System.Fabric.Description.ServiceGroupDescription" />.
            </summary>
        <returns>The task representing the asynchronous service group creation operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupAsync (System.Fabric.Description.ServiceGroupDescription description, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupAsync(class System.Fabric.Description.ServiceGroupDescription description, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Fabric.Description.ServiceGroupDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="description">The <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> which describes the group and its members.</param>
        <param name="timeout">Timespan that defines the maximum amount of time Service Fabric will allow this operation to continue before returning 
            a Timeout Exception.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing.  It can be 
            used to send a notification that the operation should be canceled.  Note that cancellation is advisory and that the operation may 
            still be completed even if it is canceled.</param>
        <summary>
            Asynchronously creates a service group from the given <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> with the provided timeout 
            and <see cref="T:System.Threading.CancellationToken" />.
            </summary>
        <returns>The task representing the asynchronous service group creation operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceGroupFromTemplateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync (System.Fabric.Description.ServiceGroupFromTemplateDescription serviceGroupFromTemplateDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync(class System.Fabric.Description.ServiceGroupFromTemplateDescription serviceGroupFromTemplateDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Fabric.Description.ServiceGroupFromTemplateDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupFromTemplateDescription" Type="System.Fabric.Description.ServiceGroupFromTemplateDescription" />
      </Parameters>
      <Docs>
        <param name="serviceGroupFromTemplateDescription">
          <para>Describes the Service Group to be created from Service Group Template specified in Application Manifest.</para>
        </param>
        <summary>
          <para>Creates a service group from a Service Group Template that is pre-defined in the current Application Manifest.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group creation operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceGroupFromTemplateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync (System.Fabric.Description.ServiceGroupFromTemplateDescription serviceGroupFromTemplateDescription, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync(class System.Fabric.Description.ServiceGroupFromTemplateDescription serviceGroupFromTemplateDescription, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Fabric.Description.ServiceGroupFromTemplateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupFromTemplateDescription" Type="System.Fabric.Description.ServiceGroupFromTemplateDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceGroupFromTemplateDescription">
          <para>Describes the Service Group to be created from Service Group Template specified in Application Manifest.</para>
        </param>
        <param name="timeout">
          <para>Maximum allowed time for the operation to complete before TimeoutException is thrown.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing.  It can be used to send a notification that the operation should be canceled.  Note that cancellation is advisory and that the operation may still be completed even if it is cancelled.</para>
        </param>
        <summary>
          <para>Creates a service group from a Service Group Template that is pre-defined in the current Application Manifest.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group creation operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceGroupFromTemplateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync (Uri applicationName, Uri serviceName, string serviceTypeName, byte[] initializationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync(class System.Uri applicationName, class System.Uri serviceName, string serviceTypeName, unsigned int8[] initializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="serviceTypeName" Type="System.String" />
        <Parameter Name="initializationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>Application name for the Service Group</para>
        </param>
        <param name="serviceName">
          <para>Service name for the Service Group</para>
        </param>
        <param name="serviceTypeName">
          <para>Service Type Name for the Service Group</para>
        </param>
        <param name="initializationData">
          <para>Initialization data to pass into the Service Group instance</para>
        </param>
        <summary>
          <para>Creates a Service Group from a Service Group Template that is pre-defined in the current Application Manifest.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group creation operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceGroupFromTemplateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync (Uri applicationName, Uri serviceName, string serviceTypeName, byte[] initializationData, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateServiceGroupFromTemplateAsync(class System.Uri applicationName, class System.Uri serviceName, string serviceTypeName, unsigned int8[] initializationData, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[],System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.Uri" />
        <Parameter Name="serviceName" Type="System.Uri" />
        <Parameter Name="serviceTypeName" Type="System.String" />
        <Parameter Name="initializationData" Type="System.Byte[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName">
          <para>Application name for the Service Group</para>
        </param>
        <param name="serviceName">
          <para>Service name for the Service Group</para>
        </param>
        <param name="serviceTypeName">
          <para>Service Type Name for the Service Group</para>
        </param>
        <param name="initializationData">
          <para>Initialization data to pass into the Service Group instance</para>
        </param>
        <param name="timeout">
          <para>Maximum allowed time for the operation to complete before TimeoutException is thrown.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing.  It can be used to send a notification that the operation should be canceled.  Note that cancellation is advisory and that the operation may still be completed even if it is cancelled.</para>
        </param>
        <summary>
          <para>Creates a service group from a Service Group Template that is pre-defined in the current Application Manifest.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group creation operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteServiceGroupAsync (Uri serviceGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteServiceGroupAsync(class System.Uri serviceGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.DeleteServiceGroupAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceGroupName">
          <para>The name of the service group to be deleted.</para>
        </param>
        <summary>
          <para>Asynchronously deletes the specified service group.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group delete operation.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteServiceGroupAsync (Uri serviceGroupName, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteServiceGroupAsync(class System.Uri serviceGroupName, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.DeleteServiceGroupAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupName" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceGroupName">
          <para>The name of the service group to be deleted.</para>
        </param>
        <param name="timeout">
          <para>Timespan that defines the maximum amount of time Service Fabric will allow this operation to continue before returning a Timeout Exception.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing.  It can be used to send a notification that the operation should be canceled.  Note that cancellation is advisory and that the operation may still be completed even if it is cancelled.</para>
        </param>
        <summary>
          <para>Asynchronously deletes the specified service group with the provided timeout and <see cref="T:System.Threading.CancellationToken" />.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous service group delete operation.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupDescriptionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Description.ServiceGroupDescription&gt; GetServiceGroupDescriptionAsync (Uri serviceGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Description.ServiceGroupDescription&gt; GetServiceGroupDescriptionAsync(class System.Uri serviceGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.GetServiceGroupDescriptionAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Description.ServiceGroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceGroupName">
          <para>The name of the service group whose <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> should be fetched.</para>
        </param>
        <summary>
          <para>Asynchronously fetches the <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> for the specified service group, if it exists.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous operation.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupDescriptionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Fabric.Description.ServiceGroupDescription&gt; GetServiceGroupDescriptionAsync (Uri serviceGroupName, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Fabric.Description.ServiceGroupDescription&gt; GetServiceGroupDescriptionAsync(class System.Uri serviceGroupName, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.GetServiceGroupDescriptionAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Fabric.Description.ServiceGroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceGroupName" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceGroupName">
          <para>The name of the service group whose <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> should be fetched.</para>
        </param>
        <param name="timeout">
          <para>Timespan that defines the maximum amount of time Service Fabric will allow this operation to continue before returning a Timeout Exception.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing.  It can be used to send a notification that the operation should be canceled.  Note that cancellation is advisory and that the operation may still be completed even if it is cancelled.</para>
        </param>
        <summary>
          <para>Asynchronously fetches the <see cref="T:System.Fabric.Description.ServiceGroupDescription" /> for the specified service group, if it exists, with the provided timeout and <see cref="T:System.Threading.CancellationToken" />.</para>
        </summary>
        <returns>
          <para>The task representing the asynchronous operation.</para>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricObjectClosedException">
          <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UpdateServiceGroupAsync (Uri name, System.Fabric.Description.ServiceGroupUpdateDescription updateDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UpdateServiceGroupAsync(class System.Uri name, class System.Fabric.Description.ServiceGroupUpdateDescription updateDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.UpdateServiceGroupAsync(System.Uri,System.Fabric.Description.ServiceGroupUpdateDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
        <Parameter Name="updateDescription" Type="System.Fabric.Description.ServiceGroupUpdateDescription" />
      </Parameters>
      <Docs>
        <param name="name">The URI name of the service group being updated.</param>
        <param name="updateDescription">The <see cref="T:System.Fabric.Description.ServiceGroupUpdateDescription" /> that specifies the updated configuration for the service group.</param>
        <summary>
            Asynchronously updates a service group with the specified description.
            </summary>
        <returns>The task representing the asynchronous service group update operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UpdateServiceGroupAsync (Uri name, System.Fabric.Description.ServiceGroupUpdateDescription updateDescription, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UpdateServiceGroupAsync(class System.Uri name, class System.Fabric.Description.ServiceGroupUpdateDescription updateDescription, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.ServiceGroupManagementClient.UpdateServiceGroupAsync(System.Uri,System.Fabric.Description.ServiceGroupUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
        <Parameter Name="updateDescription" Type="System.Fabric.Description.ServiceGroupUpdateDescription" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The URI name of the service being updated.</param>
        <param name="updateDescription">The <see cref="T:System.Fabric.Description.ServiceGroupUpdateDescription" /> that specifies the updated configuration for the service.</param>
        <param name="timeout">The maximum amount of time the system will allow this API to take before returning <see cref="T:System.TimeoutException" />.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing. It can be used to propagate notification that the operation should be canceled.</param>
        <summary>
            Asynchronously updates a service group with specified description.
            </summary>
        <returns>The task representing the asynchronous service group update operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>