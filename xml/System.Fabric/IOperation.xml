<Type Name="IOperation" FullName="System.Fabric.IOperation">
  <TypeSignature Language="C#" Value="public interface IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperation" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.IOperation" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>Describes the data that is obtained from the state replicator. </para>
    </summary>
    <remarks>
      <para>
        <see cref="T:System.Fabric.IOperation" /> is the base interface that describes state changes that are delivered to a Secondary replica. </para>
      <para>
                They contain the <see cref="M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" /> and the sequence number and other identifying information.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Acknowledge">
      <MemberSignature Language="C#" Value="public void Acknowledge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Acknowledge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IOperation.Acknowledge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Acknowledges that this operation has been successfully applied at the Secondary replica.  </para>
        </summary>
        <remarks>
          <para>Services should call this method when they have obtained an <see cref="T:System.Fabric.IOperation" />
            from the replicator and successfully applied it to their local store.
            For persisted services, calling this method is mandatory because the <see cref="T:System.Fabric.FabricReplicator" />
            does not release additional objects that implement <see cref="T:System.Fabric.IOperation" />. For volatile services, the replicator
            implicitly acknowledges operations when they are received unless they are configured otherwise by setting the value
            <see cref="P:System.Fabric.ReplicatorSettings.RequireServiceAck" /> to true.
            An operation must be acknowledged by a quorum of replicas before the Primary replica receives the
            <see cref="M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" /> operation complete responses.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AtomicGroupId">
      <MemberSignature Language="C#" Value="public long AtomicGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AtomicGroupId" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.IOperation.AtomicGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Identifies the atomic group, if this object that implements <see cref="T:System.Fabric.IOperation" />
            is a part of an atomic group. Atomic groups are only available when a service is a part of service group.</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Int64" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Fabric.OperationData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.OperationData Data" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.IOperation.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.OperationData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="T:System.Fabric.OperationData" /> that are provided by the Primary replica.</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Fabric.OperationData" />.</para>
        </value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationType">
      <MemberSignature Language="C#" Value="public System.Fabric.OperationType OperationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Fabric.OperationType OperationType" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.IOperation.OperationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.OperationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the type of this operation. </para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Fabric.OperationType" />.</para>
        </value>
        <remarks>
          <para>The <see cref="T:System.Fabric.OperationType" /> indicates the type of operation. "Normal" operations are those operations that are sent by non-service grouped services as part of either the copy or replication streams. Other types of operations represent control operations that are specific to service groups.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceNumber">
      <MemberSignature Language="C#" Value="public long SequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.IOperation.SequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the sequence number of this operation. </para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Int64" />.</para>
        </value>
        <remarks>
          <para>
                The sequence number is provided as a part of the <see cref="P:System.Fabric.IOperation.SequenceNumber" /></para>
          <para>
                For operations received from the replication stream (<see cref="M:System.Fabric.IStateReplicator.GetReplicationStream" />) the sequence number is the same that the Primary replica that are receives from <see cref="M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" /> method.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>