<Type Name="IAtomicGroupStateReplicator" FullName="System.Fabric.IAtomicGroupStateReplicator">
  <TypeSignature Language="C#" Value="public interface IAtomicGroupStateReplicator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAtomicGroupStateReplicator" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.IAtomicGroupStateReplicator" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>Exposes replication-related functions for atomic groups. </para>
    </summary>
    <remarks>
      <para>The <see cref="T:System.Fabric.IAtomicGroupStateReplicator" /> is available if the service is a member of a service group. The service must implement <see cref="T:System.Fabric.IAtomicGroupStateProvider" /> and be stateful. When creating a <see cref="T:System.Fabric.FabricReplicator" /> via <see cref="M:System.Fabric.IStatefulServicePartition.CreateReplicator(System.Fabric.IStateProvider,System.Fabric.ReplicatorSettings)" />, instead of passing in a regular <see cref="T:System.Fabric.IStateProvider" />, the service can pass in the <see cref="T:System.Fabric.IAtomicGroupStateProvider" /> that it implements instead. As a result, it receives a <see cref="T:System.Fabric.IAtomicGroupStateReplicator" />.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateAtomicGroup">
      <MemberSignature Language="C#" Value="public long CreateAtomicGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 CreateAtomicGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IAtomicGroupStateReplicator.CreateAtomicGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Creates a new atomic group and obtains the ID of the atomic group.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Int64" /> the ID of the created atomic group.</para>
        </returns>
        <remarks>
          <para>Atomic groups are used to coordinate a set of changes across the members of a service group.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicateAtomicGroupCommitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; ReplicateAtomicGroupCommitAsync (long atomicGroupId, System.Threading.CancellationToken cancellationToken, out long commitSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int64&gt; ReplicateAtomicGroupCommitAsync(int64 atomicGroupId, valuetype System.Threading.CancellationToken cancellationToken, int64 commitSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupCommitAsync(System.Int64,System.Threading.CancellationToken,System.Int64@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atomicGroupId" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="commitSequenceNumber" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="atomicGroupId">
          <para>The ID of the group to be committed.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</para>
        </param>
        <param name="commitSequenceNumber">
          <para>The LSN of the commit operation, as an out parameter.</para>
        </param>
        <summary>
          <para>Asynchronously commits state replication for the atomic group.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Threading.Tasks.Task`1" /> of type long, the LSN of the commit operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicateAtomicGroupOperationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; ReplicateAtomicGroupOperationAsync (long atomicGroupId, System.Fabric.OperationData operationData, System.Threading.CancellationToken cancellationToken, out long sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int64&gt; ReplicateAtomicGroupOperationAsync(int64 atomicGroupId, class System.Fabric.OperationData operationData, valuetype System.Threading.CancellationToken cancellationToken, int64 sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupOperationAsync(System.Int64,System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atomicGroupId" Type="System.Int64" />
        <Parameter Name="operationData" Type="System.Fabric.OperationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="sequenceNumber" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="atomicGroupId">
          <para>The ID of the atomic group that is obtained from <see cref="M:System.Fabric.IAtomicGroupStateReplicator.CreateAtomicGroup" /> and includes the <see cref="T:System.Fabric.OperationData" />.</para>
        </param>
        <param name="operationData">
          <para>An <see cref="T:System.Fabric.OperationData" /> to be replicated.</para>
        </param>
        <param name="cancellationToken">
          <para>The CancellationToken object that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</para>
        </param>
        <param name="sequenceNumber">
          <para>The LSN of the operation, as an out parameter.</para>
        </param>
        <summary>
          <para>Replicates some <see cref="T:System.Fabric.OperationData" /> as a part of an atomic group.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Threading.Tasks.Task`1" /> of type long, the LSN of the replicated atomic group operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicateAtomicGroupRollbackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; ReplicateAtomicGroupRollbackAsync (long atomicGroupId, System.Threading.CancellationToken cancellationToken, out long rollbackSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int64&gt; ReplicateAtomicGroupRollbackAsync(int64 atomicGroupId, valuetype System.Threading.CancellationToken cancellationToken, int64 rollbackSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupRollbackAsync(System.Int64,System.Threading.CancellationToken,System.Int64@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atomicGroupId" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="rollbackSequenceNumber" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="atomicGroupId">
          <para>The ID of the atomic group to roll back.</para>
        </param>
        <param name="cancellationToken">
          <para>The <see cref="T:System.Threading.CancellationToken" /> object that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</para>
        </param>
        <param name="rollbackSequenceNumber">
          <para>The LSN of the rollback operation, as an out parameter.</para>
        </param>
        <summary>
          <para>Asynchronously rolls-back state replication for the atomic group.</para>
        </summary>
        <returns>
          <para>Returns <see cref="T:System.Threading.Tasks.Task`1" /> of type long, the LSN of the rollback operation.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>