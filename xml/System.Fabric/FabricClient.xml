<Type Name="FabricClient" FullName="System.Fabric.FabricClient">
  <TypeSignature Language="C#" Value="public sealed class FabricClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FabricClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.FabricClient" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FabricClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type FabricClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:ElementsMustAppearInTheCorrectOrder", Justification="Preserve order of public members from V1.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1204:StaticElementsMustAppearBeforeInstanceElements", Justification="Current grouping improves readability.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1202:ElementsMustBeOrderedByAccess", Justification="Current grouping improves readability.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Creates and manages Service Fabric services and other entities.</para>
    </summary>
    <remarks>
      <para>It is highly recommended that you share FabricClients as much as possible.
                This is because the FabricClient has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class. This constructor should be used by code that is running inside the cluster. It allows the <see cref="T:System.Fabric.FabricClient" /> instance to connect to the cluster via the local Gateway service running on the same node.</para>
        </summary>
        <remarks>
          <para>Since this constructor uses the local Gateway service running on
            the same node to connect to th cluster, your client can bypass an extra network hop.
            To connect to a cluster from code running outside the cluster, use a different constructor
            which allows you to explicitly specify the connection parameters.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.FabricClientRole clientRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Fabric.FabricClientRole clientRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientRole)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientRole As FabricClientRole)" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.FabricClientRole -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient clientRole" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientRole" Type="System.Fabric.FabricClientRole" />
      </Parameters>
      <Docs>
        <param name="clientRole">
          <para>The fabric client role.</para>
        </param>
        <summary>
          <para>
            Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with the specified fabric client role - <see cref="T:System.Fabric.FabricClientRole" />.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.FabricClientSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.FabricClientSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As FabricClientSettings)" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.FabricClientSettings -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Fabric.FabricClientSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <para>The fabric client settings used by the fabric client.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with the desired <see cref="T:System.Fabric.FabricClientSettings" />.
            If the <see cref="T:System.Fabric.FabricClient" /> is on the same cluster as the service, then use a Local <see cref="T:System.Fabric.FabricClient" />. Local <see cref="T:System.Fabric.FabricClient" /> is a feature of Service Fabric that allows the <see cref="T:System.Fabric.FabricClient" /> to connect to the local Gateway Service instead of choosing from a list. This way, your client can bypass an extra network hop. In case a service is resolving another service partition in the same cluster, then it is recommended that you use Local <see cref="T:System.Fabric.FabricClient" />, as it enables automatic load balancing and improves performance.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient hostEndpoints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hostEndpoints">
          <para>Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given Service Fabric Gateway addresses. These host-endpoints are list of ':' delimited strings where the first part is the ip of the cluster and the second part is the client-connection endpoint-port. </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.FabricClientSettings settings, params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.FabricClientSettings settings, string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As FabricClientSettings, ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.FabricClientSettings * string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient (settings, hostEndpoints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Fabric.FabricClientSettings" />
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <para>The fabric client settings.</para>
        </param>
        <param name="hostEndpoints">
          <para>Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given
            Service Fabric Gateway addresses and the desired <see cref="T:System.Fabric.FabricClientSettings" />.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.SecurityCredentials credential, params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.SecurityCredentials credential, string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As SecurityCredentials, ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.SecurityCredentials * string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient (credential, hostEndpoints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="System.Fabric.SecurityCredentials" />
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="credential">
          <para>
            <see cref="T:System.Fabric.SecurityCredentials" /> defines the security settings for the<see cref="T:System.Fabric.FabricClient" />.</para>
        </param>
        <param name="hostEndpoints">
          <para>Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given Service Fabric Gateway addresses and <see cref="T:System.Fabric.SecurityCredentials" />.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (TimeSpan keepAliveInterval, params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan keepAliveInterval, string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.TimeSpan,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keepAliveInterval As TimeSpan, ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : TimeSpan * string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient (keepAliveInterval, hostEndpoints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>System.Obsolete("Deprecated", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keepAliveInterval">
          <para>Defines the periodic keep alive message interval.</para>
        </param>
        <param name="hostEndpoints">
          <para> Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>DEPRECATED. Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given keepAliveInterval
            and Service Fabric Gateway addresses (hostEndpoints).</para>
        </summary>
        <remarks>
          <para>If there are external devices in between the connection from the client to the cluster that require periodic messages to keep the connection alive,
            then make sure to use the KeepAlive feature of FabricClient. During the initialization of the FabricClient, users can specify a TimeSpan keepAliveInterval.
            If this argument is specified, then the FabricClient will periodically ping the Service Fabric Gateway Service it is currently communicating with,
            as long as there is a pending operation. An example of a scenario where this feature is useful is Windows Azure. If the <see cref="T:System.Fabric.FabricClient" />
            is outside of Windows Azure and the cluster is inside of Windows Azure, then all connections will go through the Azure Load Balancer (ALB).
            ALB terminates connections that are idle for more than 60 seconds. Hence, in these situations, <see cref="T:System.Fabric.FabricClient" /> should be created with
            KeepAliveInterval set to &lt;59 seconds (20 -30 is recommended).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.SecurityCredentials credential, System.Fabric.FabricClientSettings settings, params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.SecurityCredentials credential, class System.Fabric.FabricClientSettings settings, string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.Fabric.FabricClientSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As SecurityCredentials, settings As FabricClientSettings, ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.SecurityCredentials * System.Fabric.FabricClientSettings * string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient (credential, settings, hostEndpoints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="System.Fabric.SecurityCredentials" />
        <Parameter Name="settings" Type="System.Fabric.FabricClientSettings" />
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="credential">
          <para>
            <see cref="T:System.Fabric.SecurityCredentials" /> defines the security settings for the<see cref="T:System.Fabric.FabricClient" />.</para>
        </param>
        <param name="settings">
          <para>The fabric client settings.</para>
        </param>
        <param name="hostEndpoints">
          <para>Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given Service Fabric Gateway addresses, <see cref="T:System.Fabric.SecurityCredentials" /> and <see cref="T:System.Fabric.FabricClientSettings" />.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FabricClient (System.Fabric.SecurityCredentials credential, TimeSpan keepAliveInterval, params string[] hostEndpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.SecurityCredentials credential, valuetype System.TimeSpan keepAliveInterval, string[] hostEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.TimeSpan,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As SecurityCredentials, keepAliveInterval As TimeSpan, ParamArray hostEndpoints As String())" />
      <MemberSignature Language="F#" Value="new System.Fabric.FabricClient : System.Fabric.SecurityCredentials * TimeSpan * string[] -&gt; System.Fabric.FabricClient" Usage="new System.Fabric.FabricClient (credential, keepAliveInterval, hostEndpoints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>System.Obsolete("Deprecated", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="credential" Type="System.Fabric.SecurityCredentials" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="hostEndpoints" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="credential">Defines the security credentials.</param>
        <param name="keepAliveInterval">
          <para>Defines the periodic keep alive message interval.</para>
        </param>
        <param name="hostEndpoints">
          <para> Defines the set of Gateway addresses the <see cref="T:System.Fabric.FabricClient" /> can use to connect to the cluster.</para>
        </param>
        <summary>
          <para>DEPRECATED. Initializes a new instance of the <see cref="T:System.Fabric.FabricClient" /> class with given credentials, keepAliveInterval
            and Service Fabric Gateway addresses (hostEndpoints).</para>
        </summary>
        <remarks>
          <para>If there are external devices in between the connection from the client to the cluster that require periodic messages to keep the connection alive,
            then make sure to use the KeepAlive feature of FabricClient. During the initialization of the FabricClient, users can specify a TimeSpan keepAliveInterval.
            If this argument is specified, then the FabricClient will periodically ping the Service Fabric Gateway Service it is currently communicating with,
            as long as there is a pending operation. An example of a scenario where this feature is useful is Windows Azure. If the <see cref="T:System.Fabric.FabricClient" />
            is outside of Windows Azure and the cluster is inside of Windows Azure, then all connections will go through the Azure Load Balancer (ALB).
            ALB terminates connections that are idle for more than 60 seconds. Hence, in these situations, <see cref="T:System.Fabric.FabricClient" /> should be created with
            KeepAliveInterval set to &lt;59 seconds (20 -30 is recommended).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.ApplicationManagementClient ApplicationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/ApplicationManagementClient ApplicationManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.ApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManager As FabricClient.ApplicationManagementClient" />
      <MemberSignature Language="F#" Value="member this.ApplicationManager : System.Fabric.FabricClient.ApplicationManagementClient" Usage="System.Fabric.FabricClient.ApplicationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ApplicationManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="P:System.Fabric.FabricClient.ApplicationManager" /> that can be used to perform operations related to applications and application types.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.ApplicationManager" /> that can be used to perform operations related to applications and application types.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsRetrieval">
      <MemberSignature Language="C#" Value="public event System.Fabric.FabricClient.ClaimsRetrievalEventHandler ClaimsRetrieval;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Fabric.FabricClient/ClaimsRetrievalEventHandler ClaimsRetrieval" />
      <MemberSignature Language="DocId" Value="E:System.Fabric.FabricClient.ClaimsRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Event ClaimsRetrieval As FabricClient.ClaimsRetrievalEventHandler " />
      <MemberSignature Language="F#" Value="member this.ClaimsRetrieval : System.Fabric.FabricClient.ClaimsRetrievalEventHandler " Usage="member this.ClaimsRetrieval : System.Fabric.FabricClient.ClaimsRetrievalEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ClaimsRetrievalEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the client needs to provide a claims token for authorization with the gateway
            </summary>
        <remarks>
          <para>
            See <see href="https://docs.microsoft.com/azure/service-fabric/service-fabric-connect-to-secure-cluster#connect-to-a-secure-cluster-using-the-fabricclient-apis" /> for connecting to secure cluster using Azure Active Directory authentication.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientConnected">
      <MemberSignature Language="C#" Value="public event EventHandler ClientConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientConnected" />
      <MemberSignature Language="DocId" Value="E:System.Fabric.FabricClient.ClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public Event ClientConnected As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ClientConnected : EventHandler " Usage="member this.ClientConnected : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the client is connected to gateway.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnected">
      <MemberSignature Language="C#" Value="public event EventHandler ClientDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Fabric.FabricClient.ClientDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Event ClientDisconnected As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ClientDisconnected : EventHandler " Usage="member this.ClientDisconnected : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the client is disconnected from the gateway.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.ClusterManagementClient ClusterManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/ClusterManagementClient ClusterManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.ClusterManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClusterManager As FabricClient.ClusterManagementClient" />
      <MemberSignature Language="F#" Value="member this.ClusterManager : System.Fabric.FabricClient.ClusterManagementClient" Usage="System.Fabric.FabricClient.ClusterManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ClusterManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="P:System.Fabric.FabricClient.ClusterManager" /> that can be used to perform operations related to the Service Fabric cluster.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.ClusterManager" /> that can be used to perform operations related to the Service Fabric cluster.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeDeploymentManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.ComposeDeploymentClient ComposeDeploymentManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/ComposeDeploymentClient ComposeDeploymentManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.ComposeDeploymentManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComposeDeploymentManager As FabricClient.ComposeDeploymentClient" />
      <MemberSignature Language="F#" Value="member this.ComposeDeploymentManager : System.Fabric.FabricClient.ComposeDeploymentClient" Usage="System.Fabric.FabricClient.ComposeDeploymentManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ComposeDeploymentClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="T:System.Fabric.FabricClient.ComposeDeploymentClient" /> that can be used to perform operations related to compose deployment.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.ComposeDeploymentManager" /> that can be used to perform operations related to compose deployment.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fabricClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Disposes of the fabric client.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FabricSystemApplication">
      <MemberSignature Language="C#" Value="public readonly Uri FabricSystemApplication;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class System.Uri FabricSystemApplication" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.FabricClient.FabricSystemApplication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly FabricSystemApplication As Uri " />
      <MemberSignature Language="F#" Value="val mutable FabricSystemApplication : Uri" Usage="System.Fabric.FabricClient.FabricSystemApplication" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The Service Fabric System application.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.FaultManagementClient FaultManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/FaultManagementClient FaultManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.FaultManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FaultManager As FabricClient.FaultManagementClient" />
      <MemberSignature Language="F#" Value="member this.FaultManager : System.Fabric.FabricClient.FaultManagementClient" Usage="System.Fabric.FabricClient.FaultManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+FaultManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Fabric.FabricClient.FaultManagementClient" /> to induce faults. For example, RestartNodeAsync.
            </summary>
        <value>
          <para>Returns <see cref="T:System.Fabric.FabricClient.FaultManagementClient" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FabricClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fabricClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Destructor of fabric client.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.HealthClient HealthManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/HealthClient HealthManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.HealthManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HealthManager As FabricClient.HealthClient" />
      <MemberSignature Language="F#" Value="member this.HealthManager : System.Fabric.FabricClient.HealthClient" Usage="System.Fabric.FabricClient.HealthManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+HealthClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the health client that can be used to perform health related operations, like report health or get entity health.</para>
        </summary>
        <value>
          <para>The health client that can be used to perform health related operations, like report health or get entity health.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InfrastructureManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.InfrastructureServiceClient InfrastructureManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/InfrastructureServiceClient InfrastructureManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.InfrastructureManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InfrastructureManager As FabricClient.InfrastructureServiceClient" />
      <MemberSignature Language="F#" Value="member this.InfrastructureManager : System.Fabric.FabricClient.InfrastructureServiceClient" Usage="System.Fabric.FabricClient.InfrastructureManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+InfrastructureServiceClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="T:System.Fabric.FabricClient.InfrastructureServiceClient" /> that can be used to perform operations related to the infrastructure on which the cluster is running.</para>
          <para>This property supports the Service Fabric platform; it is not meant to be called directly from your code.</para>
        </summary>
        <value>
          <para>The <see cref="T:System.Fabric.FabricClient.InfrastructureServiceClient" /> that can be used to perform operations related to the infrastructure on which the cluster is running.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.PropertyManagementClient PropertyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/PropertyManagementClient PropertyManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.PropertyManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyManager As FabricClient.PropertyManagementClient" />
      <MemberSignature Language="F#" Value="member this.PropertyManager : System.Fabric.FabricClient.PropertyManagementClient" Usage="System.Fabric.FabricClient.PropertyManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+PropertyManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="P:System.Fabric.FabricClient.PropertyManager" /> that can be used to perform operations related to names and properties.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.PropertyManager" /> that can be used to perform operations related to names and properties.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.QueryClient QueryManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/QueryClient QueryManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.QueryManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryManager As FabricClient.QueryClient" />
      <MemberSignature Language="F#" Value="member this.QueryManager : System.Fabric.FabricClient.QueryClient" Usage="System.Fabric.FabricClient.QueryManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+QueryClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the query manager that can be used to execute queries against the Service Fabric cluster.</para>
        </summary>
        <value>
          <para>The query manager that can be used to execute queries against the Service Fabric cluster.</para>
        </value>
        <remarks>
          <para>The query manager can be used to execute queries against the cluster.
            Most of the queries are distributed. They call multiple system components to get different information.
            The calls to the system components are executed in parallel and the returned results are aggregated based on a common key.
            For example, to get the list of nodes in the cluster, the <see cref="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync" /> query goes to
            Failover Manager, Cluster Manager, and Health Manager system services.
            For this reason, some queries are expensive.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.RepairManagementClient RepairManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/RepairManagementClient RepairManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.RepairManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepairManager As FabricClient.RepairManagementClient" />
      <MemberSignature Language="F#" Value="member this.RepairManager : System.Fabric.FabricClient.RepairManagementClient" Usage="System.Fabric.FabricClient.RepairManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+RepairManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="T:System.Fabric.FabricClient.RepairManagementClient" /> that can be used to manage repair tasks.</para>
          <para>This property supports the Service Fabric platform; it is not meant to be called directly from your code.</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.Fabric.FabricClient.RepairManagementClient" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceGroupManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.ServiceGroupManagementClient ServiceGroupManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/ServiceGroupManagementClient ServiceGroupManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.ServiceGroupManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceGroupManager As FabricClient.ServiceGroupManagementClient" />
      <MemberSignature Language="F#" Value="member this.ServiceGroupManager : System.Fabric.FabricClient.ServiceGroupManagementClient" Usage="System.Fabric.FabricClient.ServiceGroupManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ServiceGroupManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="P:System.Fabric.FabricClient.ServiceGroupManager" /> that can be used to perform operations related to service groups.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.ServiceGroupManager" /> that can be used to perform operations related to service groups.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.ServiceManagementClient ServiceManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/ServiceManagementClient ServiceManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.ServiceManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceManager As FabricClient.ServiceManagementClient" />
      <MemberSignature Language="F#" Value="member this.ServiceManager : System.Fabric.FabricClient.ServiceManagementClient" Usage="System.Fabric.FabricClient.ServiceManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+ServiceManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="P:System.Fabric.FabricClient.ServiceManager" /> that can be used to perform operations related to services and service types.</para>
        </summary>
        <value>
          <para>The <see cref="P:System.Fabric.FabricClient.ServiceManager" /> that can be used to perform operations related to services and service types.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClientSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClientSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As FabricClientSettings" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Fabric.FabricClientSettings" Usage="System.Fabric.FabricClient.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClientSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the fabric client settings.</para>
        </summary>
        <value>
          <para>The fabric client settings.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestManager">
      <MemberSignature Language="C#" Value="public System.Fabric.FabricClient.TestManagementClient TestManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient/TestManagementClient TestManager" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.FabricClient.TestManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TestManager As FabricClient.TestManagementClient" />
      <MemberSignature Language="F#" Value="member this.TestManager : System.Fabric.FabricClient.TestManagementClient" Usage="System.Fabric.FabricClient.TestManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient+TestManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Fabric.FabricClient.TestManagementClient" /> to perform complex actions that go through FaultAnalysisService. For example, StartPartitionDataLossAsync.
            This also supports APIs for validation (that do not go through FaultAnalysisService). For example, ValidateServiceAsync.
            </summary>
        <value>
          <para>Returns <see cref="T:System.Fabric.FabricClient.TestManagementClient" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecurityCredentials">
      <MemberSignature Language="C#" Value="public void UpdateSecurityCredentials (System.Fabric.SecurityCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSecurityCredentials(class System.Fabric.SecurityCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.UpdateSecurityCredentials(System.Fabric.SecurityCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateSecurityCredentials (credentials As SecurityCredentials)" />
      <MemberSignature Language="F#" Value="member this.UpdateSecurityCredentials : System.Fabric.SecurityCredentials -&gt; unit" Usage="fabricClient.UpdateSecurityCredentials credentials" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentials" Type="System.Fabric.SecurityCredentials" />
      </Parameters>
      <Docs>
        <param name="credentials">The new security credentials to be used.</param>
        <summary>
            Updates the fabric client security credentials.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSettings">
      <MemberSignature Language="C#" Value="public void UpdateSettings (System.Fabric.FabricClientSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSettings(class System.Fabric.FabricClientSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.FabricClient.UpdateSettings(System.Fabric.FabricClientSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateSettings (settings As FabricClientSettings)" />
      <MemberSignature Language="F#" Value="member this.UpdateSettings : System.Fabric.FabricClientSettings -&gt; unit" Usage="fabricClient.UpdateSettings settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="System.Fabric.FabricClientSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <para>The new fabric client settings to be used.</para>
        </param>
        <summary>
          <para>Updates the fabric client settings.</para>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>The specified fabric client settings can’t be null.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <see cref="P:System.Fabric.FabricClientSettings.AuthTokenBufferSize" /> must be greater or equal to zero.</para>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>