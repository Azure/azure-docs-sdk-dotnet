<Type Name="MockableMarketplaceOrderingSubscriptionResource" FullName="Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMarketplaceOrderingSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMarketplaceOrderingSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMarketplaceOrderingSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMarketplaceOrderingSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMarketplaceOrderingSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreement">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt; GetMarketplaceAgreement (string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt; GetMarketplaceAgreement(string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreement(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreement (publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MarketplaceAgreementResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreement : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&#xA;override this.GetMarketplaceAgreement : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreement (publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_GetAgreement</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt; GetMarketplaceAgreementAsync (string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt; GetMarketplaceAgreementAsync(string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreementAsync (publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MarketplaceAgreementResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreementAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt;&#xA;override this.GetMarketplaceAgreementAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt;" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementAsync (publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_GetAgreement</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreements">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection GetMarketplaceAgreements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection GetMarketplaceAgreements() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreements" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreements () As MarketplaceAgreementCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreements : unit -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection&#xA;override this.GetMarketplaceAgreements : unit -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of MarketplaceAgreementResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of MarketplaceAgreementResources and their operations over a MarketplaceAgreementResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt; GetMarketplaceAgreementTerm (Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt; GetMarketplaceAgreementTerm(valuetype Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerm(Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreementTerm (offerType As AgreementOfferType, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MarketplaceAgreementTermResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreementTerm : Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&#xA;override this.GetMarketplaceAgreementTerm : Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerm (offerType, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerType" Type="Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="offerType"> Offer Type, currently only virtualmachine type is supported. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace terms.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/offerTypes/{offerType}/publishers/{publisherId}/offers/{offerId}/plans/{planId}/agreements/current</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_Get</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt; GetMarketplaceAgreementTermAsync (Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt; GetMarketplaceAgreementTermAsync(valuetype Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTermAsync(Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreementTermAsync (offerType As AgreementOfferType, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MarketplaceAgreementTermResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreementTermAsync : Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt;&#xA;override this.GetMarketplaceAgreementTermAsync : Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt;" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTermAsync (offerType, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerType" Type="Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="offerType"> Offer Type, currently only virtualmachine type is supported. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace terms.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/offerTypes/{offerType}/publishers/{publisherId}/offers/{offerId}/plans/{planId}/agreements/current</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_Get</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTerms">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection GetMarketplaceAgreementTerms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection GetMarketplaceAgreementTerms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerms" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMarketplaceAgreementTerms () As MarketplaceAgreementTermCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMarketplaceAgreementTerms : unit -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection&#xA;override this.GetMarketplaceAgreementTerms : unit -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection" Usage="mockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of MarketplaceAgreementTermResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of MarketplaceAgreementTermResources and their operations over a MarketplaceAgreementTermResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
