<Type Name="DialogServiceConnector" FullName="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector">
  <TypeSignature Language="C#" Value="public sealed class DialogServiceConnector : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DialogServiceConnector extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DialogServiceConnector&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type DialogServiceConnector = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>1.16.0.28</AssemblyVersion>
    <AssemblyVersion>1.17.0.28</AssemblyVersion>
    <AssemblyVersion>1.18.0.28</AssemblyVersion>
    <AssemblyVersion>1.19.0.28</AssemblyVersion>
    <AssemblyVersion>1.20.0.28</AssemblyVersion>
    <AssemblyVersion>1.21.0.28</AssemblyVersion>
    <AssemblyVersion>1.22.0.28</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Connects to a speech enabled dialog.
            Added in 1.5.0
            </summary>
    <remarks>
            See also: 
            * [Integrate with a client application using Speech SDK](/azure/cognitive-services/speech-service/how-to-custom-commands-setup-speech-sdk)
            * [Voice assistants frequently asked questions](/azure/cognitive-services/speech-service/faq-voice-assistants)
            * [What is Custom Commands?](/azure/cognitive-services/speech-service/custom-commands)
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogServiceConnector (Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.#ctor(Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (config As DialogServiceConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector : Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig -&gt; Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector" Usage="new Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector config" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="config" Type="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig" />
      </Parameters>
      <Docs>
        <param name="config">Dialog service config.</param>
        <summary>
            Creates a dialog service connector using the default microphone input for a specified dialog service configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogServiceConnector (Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig config, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig config, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.#ctor(Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (config As DialogServiceConfig, audioConfig As AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector : Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector" Usage="new Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector (config, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="config" Type="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="config">Dialog service config.</param>
        <param name="audioConfig">Audio config.</param>
        <summary>
            Creates a dialog service connector using the specified dialog and audio configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivityReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs&gt; ActivityReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs&gt; ActivityReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.ActivityReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActivityReceived As EventHandler(Of ActivityReceivedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.ActivityReceived : EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs&gt; " Usage="member this.ActivityReceived : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal that an activity was received from the backing dialog. See also <see cref="T:Microsoft.CognitiveServices.Speech.Dialog.ActivityReceivedEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationToken">
      <MemberSignature Language="C#" Value="public string AuthorizationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.AuthorizationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationToken As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationToken : string with get, set" Usage="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.AuthorizationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets authorization token used to communicate with the service.
            </summary>
        <value>To be added.</value>
        <remarks>
            The caller needs to ensure that the authorization token is valid. Before the authorization token
            expires, the caller needs to refresh it by calling this setter with a new valid token.
            Otherwise, the recognizer will encounter errors during recognition.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs&gt; Canceled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs&gt; Canceled" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Canceled As EventHandler(Of SpeechRecognitionCanceledEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Canceled : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs&gt; " Usage="member this.Canceled : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal for events relating to the cancellation of an interaction. See also <see cref="T:Microsoft.CognitiveServices.Speech.SpeechRecognitionCanceledEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.ConnectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.ConnectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Connects with the Speech service as an asynchronous operation.
            </summary>
        <returns>An asynchronous operation that starts the connection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DisconnectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DisconnectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.DisconnectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.DisconnectAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.DisconnectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disconnects from the Speech service as an asynchronous operation.
            </summary>
        <returns>An asynchronous operation that starts the disconnection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dialogServiceConnector.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of associated resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DialogServiceConnector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dialogServiceConnector.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenOnceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionResult&gt; ListenOnceAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SpeechRecognitionResult&gt; ListenOnceAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.ListenOnceAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ListenOnceAsync () As Task(Of SpeechRecognitionResult)" />
      <MemberSignature Language="F#" Value="member this.ListenOnceAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionResult&gt;" Usage="dialogServiceConnector.ListenOnceAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Starts a listening session as an asynchronous operation. 
             </summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>
             The end of a single utterance is determined by listening for silence at the end, or until a timeout period has elapsed. 
             The task returns the recognized speech in <see cref="T:Microsoft.CognitiveServices.Speech.SpeechRecognitionResult" />.Text.
            
             See also: [Integrate with a client application using Speech SDK](/azure/cognitive-services/speech-service/how-to-custom-commands-setup-speech-sdk)
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.CognitiveServices.Speech.PropertyCollection" Usage="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of properties and their values defined for this <see cref="T:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>
            Note: The property collection is only valid until the recognizer owning this Properties is disposed or finalized.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; Recognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; Recognized" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Recognized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Recognized As EventHandler(Of SpeechRecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognized : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; " Usage="member this.Recognized : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal for events containing speech recognition results. See also <see cref="T:Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognizing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; Recognizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; Recognizing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.Recognizing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Recognizing As EventHandler(Of SpeechRecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognizing : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; " Usage="member this.Recognizing : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal for events containing intermediate recognition results. See also <see cref="T:Microsoft.CognitiveServices.Speech.SpeechRecognitionEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; SendActivityAsync (string activityJSON);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; SendActivityAsync(string activityJSON) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SendActivityAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendActivityAsync (activityJSON As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="member this.SendActivityAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="dialogServiceConnector.SendActivityAsync activityJSON" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityJSON" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activityJSON">Activity to send as a serialized JSON object</param>
        <summary>
             Sends an activity to the backing dialog as an asynchronous operation.
             </summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>
             The task completes when the client receives a confirmation from Direct Line Speech service 
             that the Direct Line Speech service received the Activity string.
             This does _not_ indicate that the Bot received the Activity string.
            
             When the task completes, the return string value contains the Session ID GUID. 
             You can use this Session ID GUID to connect client application events with Bot traffic.
             This Session ID GUID is part of the Activity payload the Bot gets from the Direct Line Speech service.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStarted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SessionStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionStarted As EventHandler(Of SessionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SessionStarted : EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " Usage="member this.SessionStarted : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal that indicates the start of a listening session. See also <see cref="T:Microsoft.CognitiveServices.Speech.SessionEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStopped" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SessionStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionStopped As EventHandler(Of SessionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SessionStopped : EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " Usage="member this.SessionStopped : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal that indicates the end of a listening session. See also <see cref="T:Microsoft.CognitiveServices.Speech.SessionEventArgs" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechActivityTemplate">
      <MemberSignature Language="C#" Value="public string SpeechActivityTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpeechActivityTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SpeechActivityTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeechActivityTemplate As String" />
      <MemberSignature Language="F#" Value="member this.SpeechActivityTemplate : string with get, set" Usage="Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SpeechActivityTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the JSON template that will be provided to the speech service for the next conversation. The
            service will attempt to merge this template into all activities sent to the dialog backend, whether
            originated by the client with SendActivityAsync or generated by the service, as is the case with
            speech-to-text results.
            </summary>
        <value>To be added.</value>
        <remarks>
            Properties from the template will be stamped on each generated activity.
            This property can be set to null, an empty string, or a syntactically valid JSON object.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechEndDetected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechEndDetected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechEndDetected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SpeechEndDetected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeechEndDetected As EventHandler(Of RecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SpeechEndDetected : EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " Usage="member this.SpeechEndDetected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the end of speech data is detected for the current phrase.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechStartDetected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechStartDetected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechStartDetected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.SpeechStartDetected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeechStartDetected As EventHandler(Of RecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SpeechStartDetected : EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " Usage="member this.SpeechStartDetected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when speech data is first detected in the input audio for current phrase.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousListeningAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartContinuousListeningAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartContinuousListeningAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.StartContinuousListeningAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StartContinuousListeningAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StartContinuousListeningAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.StartContinuousListeningAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Begins a continuous listening session as an asynchronous operation.
             </summary>
        <returns> A task that will complete once continuous listening has successfully begun. </returns>
        <remarks>
             In contrast to ListenOnceAsync, continuous listening will not stop after a single final recognition result
             is received and will instead continue to provide audio for future utterances.
            
             SpeechRecognitionResults will arrive asynchronously and must be retrieved from the <see cref="E:Microsoft.CognitiveServices.Speech.SpeechRecognizer.Recognized" />
             event.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartKeywordRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartKeywordRecognitionAsync (Microsoft.CognitiveServices.Speech.KeywordRecognitionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartKeywordRecognitionAsync(class Microsoft.CognitiveServices.Speech.KeywordRecognitionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.StartKeywordRecognitionAsync(Microsoft.CognitiveServices.Speech.KeywordRecognitionModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartKeywordRecognitionAsync (model As KeywordRecognitionModel) As Task" />
      <MemberSignature Language="F#" Value="member this.StartKeywordRecognitionAsync : Microsoft.CognitiveServices.Speech.KeywordRecognitionModel -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.StartKeywordRecognitionAsync model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.CognitiveServices.Speech.KeywordRecognitionModel" />
      </Parameters>
      <Docs>
        <param name="model">Specifies the keyword model to be used.</param>
        <summary>
            Starts keyword recognition asynchronously.
            </summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopKeywordRecognitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopKeywordRecognitionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopKeywordRecognitionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.StopKeywordRecognitionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopKeywordRecognitionAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopKeywordRecognitionAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.StopKeywordRecognitionAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops keyword recognition asynchronously.
            </summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListeningAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopListeningAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopListeningAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.StopListeningAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopListeningAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopListeningAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dialogServiceConnector.StopListeningAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Requests that an active listening operation stop immediately. This interrupts
            any ongoing speaking, and provides a result that only reflects the audio data captured so far.
            </summary>
        <returns> A task representing the asynchronous operation that stops an active listening session. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnStatusReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.TurnStatusReceivedEventArgs&gt; TurnStatusReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Dialog.TurnStatusReceivedEventArgs&gt; TurnStatusReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Dialog.DialogServiceConnector.TurnStatusReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TurnStatusReceived As EventHandler(Of TurnStatusReceivedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.TurnStatusReceived : EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.TurnStatusReceivedEventArgs&gt; " Usage="member this.TurnStatusReceived : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.TurnStatusReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Dialog.TurnStatusReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signal raised when a turn status update is received.
            </summary>
        <remarks>
            This event indicates success or failure of execution
            on the dialog backend, including in instances where communication with the backend fails due to
            network routing or other conditions that prevent a normal response from the backend.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
