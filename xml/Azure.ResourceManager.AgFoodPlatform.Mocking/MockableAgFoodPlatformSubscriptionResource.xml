<Type Name="MockableAgFoodPlatformSubscriptionResource" FullName="Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableAgFoodPlatformSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAgFoodPlatformSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAgFoodPlatformSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAgFoodPlatformSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAgFoodPlatformSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityLocation (Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityLocation(class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityLocation (content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityLocation : Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&#xA;override this.CheckNameAvailabilityLocation : Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;" Usage="mockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocation (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityLocationAsync (Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityLocationAsync(class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocationAsync(Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityLocationAsync (content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityLocationAsync : Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt;&#xA;override this.CheckNameAvailabilityLocationAsync : Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt;" Usage="mockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocationAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeats">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeats (int? maxPageSize = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeats(valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.GetFarmBeats(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFarmBeats (Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of FarmBeatResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFarmBeats : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&#xA;override this.GetFarmBeats : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;" Usage="mockableAgFoodPlatformSubscriptionResource.GetFarmBeats (maxPageSize, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the FarmBeats instances for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats</description></item><item><term>Operation Id</term><description>FarmBeatsModels_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeatsAsync (int? maxPageSize = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeatsAsync(valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.GetFarmBeatsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFarmBeatsAsync (Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of FarmBeatResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFarmBeatsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&#xA;override this.GetFarmBeatsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;" Usage="mockableAgFoodPlatformSubscriptionResource.GetFarmBeatsAsync (maxPageSize, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the FarmBeats instances for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats</description></item><item><term>Operation Id</term><description>FarmBeatsModels_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
