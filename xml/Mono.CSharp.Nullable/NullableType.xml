<Type Name="NullableType" FullName="Mono.CSharp.Nullable.NullableType">
  <TypeSignature Language="C#" Value="public class NullableType : Mono.CSharp.TypeExpr" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NullableType extends Mono.CSharp.TypeExpr" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Nullable.NullableType" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.TypeExpr</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullableType (Mono.CSharp.TypeSpec type, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.TypeSpec type, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Nullable.NullableType.#ctor(Mono.CSharp.TypeSpec,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsType">
      <MemberSignature Language="C#" Value="public override Mono.CSharp.TypeSpec ResolveAsType (Mono.CSharp.IMemberContext ec, bool allowUnboundTypeArguments = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Mono.CSharp.TypeSpec ResolveAsType(class Mono.CSharp.IMemberContext ec, bool allowUnboundTypeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Nullable.NullableType.ResolveAsType(Mono.CSharp.IMemberContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.TypeSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.IMemberContext" />
        <Parameter Name="allowUnboundTypeArguments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="allowUnboundTypeArguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>