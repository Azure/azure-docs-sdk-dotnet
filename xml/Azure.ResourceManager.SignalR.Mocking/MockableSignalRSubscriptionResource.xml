<Type Name="MockableSignalRSubscriptionResource" FullName="Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableSignalRSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSignalRSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSignalRSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSignalRSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSignalRSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSignalRNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt; CheckSignalRNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt; CheckSignalRNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.CheckSignalRNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSignalRNameAvailability (location As AzureLocation, content As SignalRNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SignalRNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckSignalRNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&#xA;override this.CheckSignalRNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;" Usage="mockableSignalRSubscriptionResource.CheckSignalRNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> the region. </param>
        <param name="content"> Parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the resource name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>SignalR_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignalRNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&gt; CheckSignalRNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&gt; CheckSignalRNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.CheckSignalRNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSignalRNameAvailabilityAsync (location As AzureLocation, content As SignalRNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SignalRNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckSignalRNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&gt;&#xA;override this.CheckSignalRNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&gt;" Usage="mockableSignalRSubscriptionResource.CheckSignalRNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.SignalR.Models.SignalRNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> the region. </param>
        <param name="content"> Parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the resource name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>SignalR_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignalRs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt; GetSignalRs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SignalR.SignalRResource&gt; GetSignalRs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.GetSignalRs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignalRs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SignalRResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSignalRs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;&#xA;override this.GetSignalRs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;" Usage="mockableSignalRSubscriptionResource.GetSignalRs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Handles requests to list all resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/signalR</description></item><item><term>Operation Id</term><description>SignalR_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignalRsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt; GetSignalRsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SignalR.SignalRResource&gt; GetSignalRsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.GetSignalRsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignalRsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SignalRResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSignalRsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;&#xA;override this.GetSignalRsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;" Usage="mockableSignalRSubscriptionResource.GetSignalRsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.SignalRResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Handles requests to list all resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/signalR</description></item><item><term>Operation Id</term><description>SignalR_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SignalR.SignalRResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt; GetUsages (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRUsage&gt; GetUsages(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SignalRUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;&#xA;override this.GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;" Usage="mockableSignalRSubscriptionResource.GetUsages (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> the location like "eastus". </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List resource usage quotas by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SignalR.Models.SignalRUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt; GetUsagesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRUsage&gt; GetUsagesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Mocking.MockableSignalRSubscriptionResource.GetUsagesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SignalRUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;&#xA;override this.GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;" Usage="mockableSignalRSubscriptionResource.GetUsagesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SignalR.Models.SignalRUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> the location like "eastus". </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List resource usage quotas by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item><item><term>Default Api Version</term><description>2022-02-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SignalR.Models.SignalRUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
