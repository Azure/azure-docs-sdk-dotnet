<Type Name="UriFactory" FullName="Microsoft.Azure.Documents.Client.UriFactory">
  <TypeSignature Language="C#" Value="public static class UriFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UriFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.Client.UriFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
    <AssemblyVersion>1.14.0.0</AssemblyVersion>
    <AssemblyVersion>1.16.0.0</AssemblyVersion>
    <AssemblyVersion>1.17.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper class to assist in creating the various Uris needed for use with the DocumentClient instance in the Azure DocumentDB database service.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
    <example>
            The example below uses UriFactory to create a DocumentCollectionLink and then uses that to create a Document.
            <code language="c#"><![CDATA[ 
            Uri collUri = UriFactory.CreateDocumentCollectionUri("MyDb", "MyCollection");
            var doc = await client.CreateDocumentAsync(collUri, new {id = "MyDoc"});
            ]]></code></example>
  </Docs>
  <Members>
    <Member MemberName="CreateAttachmentUri">
      <MemberSignature Language="C#" Value="public static Uri CreateAttachmentUri (string databaseId, string collectionId, string documentId, string attachmentId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateAttachmentUri(string databaseId, string collectionId, string documentId, string attachmentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateAttachmentUri(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="documentId" Type="System.String" />
        <Parameter Name="attachmentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="documentId">The document id</param>
        <param name="attachmentId">The attachment id</param>
        <summary>
            Given a database, collection, document, and attachment id, this creates an attachment link.
            </summary>
        <returns>
            An attachment link in the format of /dbs/{0}/colls/{1}/docs/{2}/attachments/{3} with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" />, {2} being the <paramref name="documentId" /> and {3} being <paramref name="attachmentId" /></returns>
        <remarks>Would be used when replacing, or deleting an <see cref="T:Microsoft.Azure.Documents.Attachment" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateCollectionUri">
      <MemberSignature Language="C#" Value="public static Uri CreateCollectionUri (string databaseId, string collectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateCollectionUri(string databaseId, string collectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateCollectionUri(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateCollectionUri method is deprecated, please use CreateDocumentCollectionUri method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <summary>
            Given a database and collection id, this creates a collection link.
            </summary>
        <returns>
            A collection link in the format of /dbs/{0}/colls/{1}/ with {0} being a Uri escaped version of the <paramref name="databaseId" /> and {1} being <paramref name="collectionId" /></returns>
        <remarks>Would be used when updating or deleting a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" />, creating a <see cref="T:Microsoft.Azure.Documents.Document" />, a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" />, a <see cref="T:Microsoft.Azure.Documents.Trigger" />, a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" />, or when executing a query with CreateDocumentQuery in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateConflictUri">
      <MemberSignature Language="C#" Value="public static Uri CreateConflictUri (string databaseId, string collectionId, string conflictId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateConflictUri(string databaseId, string collectionId, string conflictId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateConflictUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="conflictId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="conflictId">The conflict id</param>
        <summary>
            Given a database, collection and conflict id, this creates a conflict link.
            </summary>
        <returns>
            A conflict link in the format of /dbs/{0}/colls/{1}/conflicts/{2}/ with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" /> and {2} being the <paramref name="conflictId" /></returns>
        <remarks>Would be used when creating a <see cref="T:Microsoft.Azure.Documents.Conflict" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseUri">
      <MemberSignature Language="C#" Value="public static Uri CreateDatabaseUri (string databaseId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateDatabaseUri(string databaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateDatabaseUri(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <summary>
            Given a database id, this creates a database link.
            </summary>
        <returns>
            A database link in the format of /dbs/{0}/ with {0} being a Uri escaped version of the <paramref name="databaseId" /></returns>
        <remarks>Would be used when creating or deleting a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> or a <see cref="T:Microsoft.Azure.Documents.User" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionUri">
      <MemberSignature Language="C#" Value="public static Uri CreateDocumentCollectionUri (string databaseId, string collectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateDocumentCollectionUri(string databaseId, string collectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateDocumentCollectionUri(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <summary>
            Given a database and collection id, this creates a collection link.
            </summary>
        <returns>
            A collection link in the format of /dbs/{0}/colls/{1}/ with {0} being a Uri escaped version of the <paramref name="databaseId" /> and {1} being <paramref name="collectionId" /></returns>
        <remarks>Would be used when updating or deleting a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" />, creating a <see cref="T:Microsoft.Azure.Documents.Document" />, a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" />, a <see cref="T:Microsoft.Azure.Documents.Trigger" />, a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" />, or when executing a query with CreateDocumentQuery in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentUri">
      <MemberSignature Language="C#" Value="public static Uri CreateDocumentUri (string databaseId, string collectionId, string documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateDocumentUri(string databaseId, string collectionId, string documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateDocumentUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="documentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="documentId">The document id</param>
        <summary>
            Given a database, collection and document id, this creates a document link.
            </summary>
        <returns>
            A document link in the format of /dbs/{0}/colls/{1}/docs/{2}/ with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" /> and {2} being the <paramref name="documentId" /></returns>
        <remarks>Would be used when creating an <see cref="T:Microsoft.Azure.Documents.Attachment" />, or when replacing or deleting a <see cref="T:Microsoft.Azure.Documents.Document" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartitionKeyRangesUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartitionKeyRangesUri (string databaseId, string collectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartitionKeyRangesUri(string databaseId, string collectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreatePartitionKeyRangesUri(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <summary>
            Given a database and collection, this creates a partition key ranges link in the Azure DocumentDB database service.
            </summary>
        <returns>
            A partition key ranges link in the format of /dbs/{0}/colls/{1}/pkranges with {0} being a Uri escaped version of the <paramref name="databaseId" /> and {1} being <paramref name="collectionId" />.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePermissionUri (string databaseId, string userId, string permissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePermissionUri(string databaseId, string userId, string permissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreatePermissionUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="permissionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="userId">The user id</param>
        <param name="permissionId">The permission id</param>
        <summary>
            Given a database and user id, this creates a permission link.
            </summary>
        <returns>
            A permission link in the format of /dbs/{0}/users/{1}/permissions/{2} with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="userId" /> and {2} being <paramref name="permissionId" /></returns>
        <remarks>Would be used when replacing or deleting a <see cref="T:Microsoft.Azure.Documents.Permission" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureUri">
      <MemberSignature Language="C#" Value="public static Uri CreateStoredProcedureUri (string databaseId, string collectionId, string storedProcedureId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateStoredProcedureUri(string databaseId, string collectionId, string storedProcedureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateStoredProcedureUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="storedProcedureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="storedProcedureId">The stored procedure id</param>
        <summary>
            Given a database, collection and stored proc id, this creates a stored proc link.
            </summary>
        <returns>
            A stored procedure link in the format of /dbs/{0}/colls/{1}/sprocs/{2}/ with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" /> and {2} being the <paramref name="storedProcedureId" /></returns>
        <remarks>Would be used when replacing, executing, or deleting a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerUri">
      <MemberSignature Language="C#" Value="public static Uri CreateTriggerUri (string databaseId, string collectionId, string triggerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateTriggerUri(string databaseId, string collectionId, string triggerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateTriggerUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="triggerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="triggerId">The trigger id</param>
        <summary>
            Given a database, collection and trigger id, this creates a trigger link.
            </summary>
        <returns>
            A trigger link in the format of /dbs/{0}/colls/{1}/triggers/{2}/ with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" /> and {2} being the <paramref name="triggerId" /></returns>
        <remarks>Would be used when replacing, executing, or deleting a <see cref="T:Microsoft.Azure.Documents.Trigger" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionUri">
      <MemberSignature Language="C#" Value="public static Uri CreateUserDefinedFunctionUri (string databaseId, string collectionId, string udfId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateUserDefinedFunctionUri(string databaseId, string collectionId, string udfId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateUserDefinedFunctionUri(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="udfId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="collectionId">The collection id</param>
        <param name="udfId">The udf id</param>
        <summary>
            Given a database, collection and udf id, this creates a udf link.
            </summary>
        <returns>
            A udf link in the format of /dbs/{0}/colls/{1}/udfs/{2}/ with {0} being a Uri escaped version of the <paramref name="databaseId" />, {1} being <paramref name="collectionId" /> and {2} being the <paramref name="udfId" /></returns>
        <remarks>Would be used when replacing, executing, or deleting a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserUri">
      <MemberSignature Language="C#" Value="public static Uri CreateUserUri (string databaseId, string userId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreateUserUri(string databaseId, string userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.UriFactory.CreateUserUri(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
        <AssemblyVersion>1.16.0.0</AssemblyVersion>
        <AssemblyVersion>1.17.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">The database id</param>
        <param name="userId">The user id</param>
        <summary>
            Given a database and user id, this creates a user link.
            </summary>
        <returns>
            A user link in the format of /dbs/{0}/users/{1}/ with {0} being a Uri escaped version of the <paramref name="databaseId" /> and {1} being <paramref name="userId" /></returns>
        <remarks>Would be used when creating a <see cref="T:Microsoft.Azure.Documents.Permission" />, or when replacing or deleting a <see cref="T:Microsoft.Azure.Documents.User" /> in Azure DocumentDB.</remarks>
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>