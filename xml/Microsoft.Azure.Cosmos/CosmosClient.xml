<Type Name="CosmosClient" FullName="Microsoft.Azure.Cosmos.CosmosClient">
  <TypeSignature Language="C#" Value="public class CosmosClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Cosmos.CosmosClient" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type CosmosClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Provides a client-side logical representation of the Azure Cosmos DB database account.
             This client can be used to configure and execute requests in the Azure Cosmos DB database service.
             
             CosmosClient is thread-safe. Its recommended to maintain a single instance of CosmosClient per lifetime 
             of the application which enables efficient connection management and performance.
             </summary>
    <remarks>To be added.</remarks>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient uses the <see cref="P:Microsoft.Azure.Cosmos.CosmosClient.CosmosConfiguration" /> to get all the configuration values.
             <code language="c#"><![CDATA[
             CosmosConfiguration cosmosConfiguration = new CosmosConfiguration(
                 accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                 accountKey: "SuperSecretKey")
                 .UseCurrentRegion(LocationNames.EastUS2, LocationNames.WestUS);
             
             using (CosmosClient cosmosClient = new CosmosClient(cosmosConfiguration))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient is created with the AccountEndpoint and AccountKey.
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                 accountKey: "SuperSecretKey"))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient is created with the connection string.
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 connectionString: "AccountEndpoint=https://testcosmos.documents.azure.com:443/;AccountKey=SuperSecretKey;"))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosClient (Microsoft.Azure.Cosmos.CosmosConfiguration cosmosConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Cosmos.CosmosConfiguration cosmosConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor(Microsoft.Azure.Cosmos.CosmosConfiguration)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.CosmosClient : Microsoft.Azure.Cosmos.CosmosConfiguration -&gt; Microsoft.Azure.Cosmos.CosmosClient" Usage="new Microsoft.Azure.Cosmos.CosmosClient cosmosConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cosmosConfiguration" Type="Microsoft.Azure.Cosmos.CosmosConfiguration" />
      </Parameters>
      <Docs>
        <param name="cosmosConfiguration">The <see cref="P:Microsoft.Azure.Cosmos.CosmosClient.CosmosConfiguration" /> used to initialize the cosmos client.</param>
        <summary>
             Create a new CosmosClient with the cosmosConfiguration
             </summary>
        <remarks>To be added.</remarks>
        <example>
             This example creates a CosmosClient
             <code language="c#"><![CDATA[
             CosmosConfiguration configuration = new CosmosConfiguration("accountEndpoint", "accountkey");
             using (CosmosClient cosmosClient = new CosmosClient(configuration)
             {
                 // Create a database and other CosmosClient operations
             }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.CosmosClient : string -&gt; Microsoft.Azure.Cosmos.CosmosClient" Usage="new Microsoft.Azure.Cosmos.CosmosClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to the cosmos account. Example: https://mycosmosaccount.documents.azure.com:443/;AccountKey=SuperSecretKey;</param>
        <summary>
             Create a new CosmosClient with the connection
             </summary>
        <remarks>To be added.</remarks>
        <example>
             This example creates a CosmosClient
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 connectionString: "https://testcosmos.documents.azure.com:443/;AccountKey=SuperSecretKey;"))
             {
                 // Create a database and other CosmosClient operations
             }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosClient (string accountEndPoint, string accountKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string accountEndPoint, string accountKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (accountEndPoint As String, accountKey As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.CosmosClient : string * string -&gt; Microsoft.Azure.Cosmos.CosmosClient" Usage="new Microsoft.Azure.Cosmos.CosmosClient (accountEndPoint, accountKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="accountEndPoint" Type="System.String" />
        <Parameter Name="accountKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accountEndPoint">The cosmos service endpoint to use to create the client.</param>
        <param name="accountKey">The cosmos account key to use to create the client.</param>
        <summary>
             Create a new CosmosClient with the account endpoint URI string and account key
             </summary>
        <remarks>To be added.</remarks>
        <example>
             This example creates a CosmosClient
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                 accountKey: "SuperSecretKey"))
             {
                 // Create a database and other CosmosClient operations
             }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Databases">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.CosmosDatabases Databases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Cosmos.CosmosDatabases Databases" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.CosmosClient.Databases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Databases As CosmosDatabases" />
      <MemberSignature Language="F#" Value="member this.Databases : Microsoft.Azure.Cosmos.CosmosDatabases" Usage="Microsoft.Azure.Cosmos.CosmosClient.Databases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.CosmosDatabases</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Used for creating new databases, or querying/reading all databases.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
             This example creates a cosmos database and container
             <code language="c#"><![CDATA[
             CosmosDatabase database = this.cosmosClient.Databases.CreateDatabaseAsync(Guid.NewGuid().ToString());
             CosmosContainerResponse container = database.Containers.CreateContainerAsync(Guid.NewGuid().ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cosmosClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of cosmos client
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cosmosClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">True if disposing</param>
        <summary>
            Dispose of cosmos client
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.CosmosAccountSettings&gt; GetAccountSettingsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Cosmos.CosmosAccountSettings&gt; GetAccountSettingsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.GetAccountSettingsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountSettingsAsync () As Task(Of CosmosAccountSettings)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountSettingsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.CosmosAccountSettings&gt;&#xA;override this.GetAccountSettingsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.CosmosAccountSettings&gt;" Usage="cosmosClient.GetAccountSettingsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.CosmosAccountSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Read the <see cref="T:Microsoft.Azure.Cosmos.CosmosAccountSettings" /> from the Azure Cosmos DB service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Azure.Cosmos.CosmosAccountSettings" /> wrapped in a <see cref="T:System.Threading.Tasks.Task" /> object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>