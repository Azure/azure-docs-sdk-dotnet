<Type Name="JobOutput" FullName="Microsoft.Azure.Management.Media.Models.JobOutput">
  <TypeSignature Language="C#" Value="public class JobOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JobOutput extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Media.Models.JobOutput" />
  <TypeSignature Language="VB.NET" Value="Public Class JobOutput" />
  <TypeSignature Language="F#" Value="type JobOutput = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes all the properties of a JobOutput.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Media.Models.JobOutput.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the JobOutput class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobOutput (Microsoft.Azure.Management.Media.Models.JobError error = default, Microsoft.Azure.Management.Media.Models.JobState state = default, int progress = 0, string label = default, DateTime? startTime = default, DateTime? endTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.Media.Models.JobError error, valuetype Microsoft.Azure.Management.Media.Models.JobState state, int32 progress, string label, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startTime, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Media.Models.JobOutput.#ctor(Microsoft.Azure.Management.Media.Models.JobError,Microsoft.Azure.Management.Media.Models.JobState,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional error As JobError = Nothing, Optional state As JobState = Nothing, Optional progress As Integer = 0, Optional label As String = Nothing, Optional startTime As Nullable(Of DateTime) = Nothing, Optional endTime As Nullable(Of DateTime) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Media.Models.JobOutput : Microsoft.Azure.Management.Media.Models.JobError * Microsoft.Azure.Management.Media.Models.JobState * int * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Microsoft.Azure.Management.Media.Models.JobOutput" Usage="new Microsoft.Azure.Management.Media.Models.JobOutput (error, state, progress, label, startTime, endTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="error" Type="Microsoft.Azure.Management.Media.Models.JobError" />
        <Parameter Name="state" Type="Microsoft.Azure.Management.Media.Models.JobState" />
        <Parameter Name="progress" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endTime" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="error">If the JobOutput is in the Error state, it
            contains the details of the error.</param>
        <param name="state">Describes the state of the JobOutput. Possible
            values include: 'Canceled', 'Canceling', 'Error', 'Finished',
            'Processing', 'Queued', 'Scheduled'</param>
        <param name="progress">If the JobOutput is in a Processing state,
            this contains the Job completion percentage. The value is an
            estimate and not intended to be used to predict Job completion
            times. To determine if the JobOutput is complete, use the State
            property.</param>
        <param name="label">A label that is assigned to a JobOutput in
            order to help uniquely identify it. This is useful when your
            Transform has more than one TransformOutput, whereby your Job has
            more than one JobOutput. In such cases, when you submit the Job,
            you will add two or more JobOutputs, in the same order as
            TransformOutputs in the Transform. Subsequently, when you retrieve
            the Job, either through events or on a GET request, you can use the
            label to easily identify the JobOutput. If a label is not provided,
            a default value of '{presetName}_{outputIndex}' will be used, where
            the preset name is the name of the preset in the corresponding
            TransformOutput and the output index is the relative index of the
            this JobOutput within the Job. Note that this index is the same as
            the relative index of the corresponding TransformOutput within its
            Transform.</param>
        <param name="startTime">The UTC date and time at which this Job
            Output began processing.</param>
        <param name="endTime">The UTC date and time at which this Job
            Output finished processing.</param>
        <summary>
            Initializes a new instance of the JobOutput class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTime">
      <MemberSignature Language="C#" Value="public DateTime? EndTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; EndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.EndTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndTime As Nullable(Of DateTime)" />
      <MemberSignature Language="F#" Value="member this.EndTime : Nullable&lt;DateTime&gt;" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.EndTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="endTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="endTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the UTC date and time at which this Job Output finished
            processing.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Media.Models.JobError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Media.Models.JobError Error" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As JobError" />
      <MemberSignature Language="F#" Value="member this.Error : Microsoft.Azure.Management.Media.Models.JobError" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="error")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="error")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Media.Models.JobError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets if the JobOutput is in the Error state, it contains the
            details of the error.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="label")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="label")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a label that is assigned to a JobOutput in order to
            help uniquely identify it. This is useful when your Transform has
            more than one TransformOutput, whereby your Job has more than one
            JobOutput. In such cases, when you submit the Job, you will add two
            or more JobOutputs, in the same order as TransformOutputs in the
            Transform. Subsequently, when you retrieve the Job, either through
            events or on a GET request, you can use the label to easily
            identify the JobOutput. If a label is not provided, a default value
            of '{presetName}_{outputIndex}' will be used, where the preset name
            is the name of the preset in the corresponding TransformOutput and
            the output index is the relative index of the this JobOutput within
            the Job. Note that this index is the same as the relative index of
            the corresponding TransformOutput within its Transform.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public int Progress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Progress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.Progress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Progress As Integer" />
      <MemberSignature Language="F#" Value="member this.Progress : int" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.Progress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="progress")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="progress")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets if the JobOutput is in a Processing state, this contains the
            Job completion percentage. The value is an estimate and not
            intended to be used to predict Job completion times. To determine
            if the JobOutput is complete, use the State property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public DateTime? StartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; StartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.StartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTime As Nullable(Of DateTime)" />
      <MemberSignature Language="F#" Value="member this.StartTime : Nullable&lt;DateTime&gt;" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.StartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="startTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="startTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the UTC date and time at which this Job Output began
            processing.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Media.Models.JobState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.Media.Models.JobState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Media.Models.JobOutput.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As JobState" />
      <MemberSignature Language="F#" Value="member this.State : Microsoft.Azure.Management.Media.Models.JobState" Usage="Microsoft.Azure.Management.Media.Models.JobOutput.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="state")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="state")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Media.Models.JobState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets describes the state of the JobOutput. Possible values include:
            'Canceled', 'Canceling', 'Error', 'Finished', 'Processing',
            'Queued', 'Scheduled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
