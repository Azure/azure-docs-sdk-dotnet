<Type Name="IExtensionImageOperations" FullName="Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations">
  <TypeSignature Language="C#" Value="public interface IExtensionImageOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtensionImageOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtensionImageOperations" />
  <TypeSignature Language="F#" Value="type IExtensionImageOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The Service Management API includes operations for managing the service
            and virtual machine extension images in your publisher subscription.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginRegisteringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt; BeginRegisteringAsync (Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters parameters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.AzureOperationResponse&gt; BeginRegisteringAsync(class Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRegisteringAsync (parameters As ExtensionImageRegisterParameters, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginRegisteringAsync : Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;" Usage="iExtensionImageOperations.BeginRegisteringAsync (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters supplied to the Register Virtual Machine Extension Image
            operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Register a new extension. An extension is identified by the
            combination of its ProviderNamespace and Type (case-sensitive
            string). It is not allowed to register an extension with the same
            identity (i.e. combination of ProviderNamespace and Type) of an
            already-registered extension. To register new version of an
            existing extension, the Update Extension API should be used.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnregisteringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt; BeginUnregisteringAsync (string providerNamespace, string type, string version, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.AzureOperationResponse&gt; BeginUnregisteringAsync(string providerNamespace, string type, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUnregisteringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnregisteringAsync (providerNamespace As String, type As String, version As String, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginUnregisteringAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;" Usage="iExtensionImageOperations.BeginUnregisteringAsync (providerNamespace, type, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerNamespace">
            The provider namespace of the extension image to unregister.
            </param>
        <param name="type">
            The type of the extension image to unregister.
            </param>
        <param name="version">
            The version of the extension image to unregister.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Unregister a version of an extension that was previously registered
            using either the Register Extension or Update Extension APIs. An
            extension version is identified by the combination of its
            ProviderNamespace, Type and Version which are specified when
            registering the extension. Unregistering is only allowed for
            internal extensions, that is, the extensions for which the
            IsInternalExtension field is set to 'true' during registration or
            during an update. There is a quota (15) on the number of
            extensions that can be registered per subscription. If your
            subscription runs out of quota, you will wither need to unregister
            some of the internal extensions or contact Azure (same email used
            to become a publisher)  to increase the quota.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdatingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt; BeginUpdatingAsync (Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters parameters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.AzureOperationResponse&gt; BeginUpdatingAsync(class Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUpdatingAsync (parameters As ExtensionImageUpdateParameters, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdatingAsync : Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;" Usage="iExtensionImageOperations.BeginUpdatingAsync (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters supplied to the Update Virtual Machine Extension Image
            operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Update a new extension. It is allowed to update an extension which
            had already been registered with the same identity (i.e.
            combination of ProviderNamespace and Type) but with different
            version. It will fail if the extension to update has an identity
            that has not been registered before, or there is already an
            extension with the same identity and same version.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt; RegisterAsync (Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters parameters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.OperationStatusResponse&gt; RegisterAsync(class Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterAsync (parameters As ExtensionImageRegisterParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAsync : Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;" Usage="iExtensionImageOperations.RegisterAsync (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters supplied to the Register Virtual Machine Extension Image
            operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Register a new extension. An extension is identified by the
            combination of its ProviderNamespace and Type (case-sensitive
            string). It is not allowed to register an extension with the same
            identity (i.e. combination of ProviderNamespace and Type) of an
            already-registered extension. To register new version of an
            existing extension, the Update Extension API should be used.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself. If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request. If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request and error information regarding
            the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt; UnregisterAsync (string providerNamespace, string type, string version, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.OperationStatusResponse&gt; UnregisterAsync(string providerNamespace, string type, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UnregisterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterAsync (providerNamespace As String, type As String, version As String, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;" Usage="iExtensionImageOperations.UnregisterAsync (providerNamespace, type, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerNamespace">
            The provider namespace of the extension image to unregister.
            </param>
        <param name="type">
            The type of the extension image to unregister.
            </param>
        <param name="version">
            The version of the extension image to unregister.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Unregister a version of an extension that was previously registered
            using either the Register Extension or Update Extension APIs. An
            extension version is identified by the combination of its
            ProviderNamespace, Type and Version which are specified when
            registering the extension. Unregistering is only allowed for
            internal extensions, that is, the extensions for which the
            IsInternalExtension field is set to 'true' during registration or
            during an update. There is a quota (15) on the number of
            extensions that can be registered per subscription. If your
            subscription runs out of quota, you will wither need to unregister
            some of the internal extensions or contact Azure (same email used
            to become a publisher)  to increase the quota.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself. If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request. If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request and error information regarding
            the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt; UpdateAsync (Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters parameters, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.OperationStatusResponse&gt; UpdateAsync(class Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateAsync (parameters As ExtensionImageUpdateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;" Usage="iExtensionImageOperations.UpdateAsync (parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.Compute</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.OperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameters">
            Parameters supplied to the Update Virtual Machine Extension Image
            operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            Update a new extension. It is allowed to update an extension which
            had already been registered with the same identity (i.e.
            combination of ProviderNamespace and Type) but with different
            version. It will fail if the extension to update has an identity
            that has not been registered before, or there is already an
            extension with the same identity and same version.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself. If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request. If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request and error information regarding
            the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
