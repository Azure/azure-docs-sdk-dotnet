<Type Name="CarbonEmissionQueryFilter" FullName="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter">
  <TypeSignature Language="C#" Value="public abstract class CarbonEmissionQueryFilter : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CarbonEmissionQueryFilter extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CarbonEmissionQueryFilter&#xA;Implements IJsonModel(Of CarbonEmissionQueryFilter), IPersistableModel(Of CarbonEmissionQueryFilter)" />
  <TypeSignature Language="F#" Value="type CarbonEmissionQueryFilter = class&#xA;    interface IJsonModel&lt;CarbonEmissionQueryFilter&gt;&#xA;    interface IPersistableModel&lt;CarbonEmissionQueryFilter&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.CarbonOptimization.Models.UnknownCarbonEmissionQueryFilter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.CarbonOptimization.Models.UnknownCarbonEmissionQueryFilter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Shared query filter parameter to configure carbon emissions data queries for all different report type defined in ReportTypeEnum.
            Please note <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.ItemDetailsQueryFilter" />, <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.MonthlySummaryReportQueryFilter" />, <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.OverallSummaryReportQueryFilter" />, <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.TopItemsMonthlySummaryReportQueryFilter" /> and <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.TopItemsSummaryReportQueryFilter" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CarbonEmissionQueryFilter (Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange dateRange, System.Collections.Generic.IEnumerable&lt;string&gt; subscriptionList, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt; carbonScopeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange dateRange, class System.Collections.Generic.IEnumerable`1&lt;string&gt; subscriptionList, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt; carbonScopeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.#ctor(Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (dateRange As CarbonEmissionQueryDateRange, subscriptionList As IEnumerable(Of String), carbonScopeList As IEnumerable(Of CarbonEmissionScope))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt; -&gt; Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" Usage="new Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter (dateRange, subscriptionList, carbonScopeList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateRange" Type="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange" />
        <Parameter Name="subscriptionList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="carbonScopeList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt;" />
      </Parameters>
      <Docs>
        <param name="dateRange"> The start and end dates for carbon emissions data. Required. For ItemDetailsReport and TopItemsSummaryReport, only one month of data is supported at a time, so start and end dates should be equal within DateRange (e.g., start: 2024-06-01 and end: 2024-06-01). </param>
        <param name="subscriptionList"> List of subscription IDs for which carbon emissions data is requested. Required. Each subscription ID should be in lowercase format. The max length of list is 100. </param>
        <param name="carbonScopeList"> List of carbon emission scopes. Required. Accepts one or more values from EmissionScopeEnum (e.g., Scope1, Scope2, Scope3) in list form. The output will include the total emissions for the specified scopes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dateRange" />, <paramref name="subscriptionList" /> or <paramref name="carbonScopeList" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CarbonScopeList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt; CarbonScopeList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt; CarbonScopeList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.CarbonScopeList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarbonScopeList As IList(Of CarbonEmissionScope)" />
      <MemberSignature Language="F#" Value="member this.CarbonScopeList : System.Collections.Generic.IList&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt;" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.CarbonScopeList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of carbon emission scopes. Required. Accepts one or more values from EmissionScopeEnum (e.g., Scope1, Scope2, Scope3) in list form. The output will include the total emissions for the specified scopes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateRange">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange DateRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange DateRange" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.DateRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateRange As CarbonEmissionQueryDateRange" />
      <MemberSignature Language="F#" Value="member this.DateRange : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.DateRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryDateRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The start and end dates for carbon emissions data. Required. For ItemDetailsReport and TopItemsSummaryReport, only one month of data is supported at a time, so start and end dates should be equal within DateRange (e.g., start: 2024-06-01 and end: 2024-06-01). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="carbonEmissionQueryFilter.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Core.AzureLocation&gt; LocationList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Core.AzureLocation&gt; LocationList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.LocationList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationList As IList(Of AzureLocation)" />
      <MemberSignature Language="F#" Value="member this.LocationList : System.Collections.Generic.IList&lt;Azure.Core.AzureLocation&gt;" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.LocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Core.AzureLocation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of locations(Azure Region Display Name) for carbon emissions data, with each location specified in lowercase (e.g., 'east us'). Optional. You can use the command 'az account list-locations -o table' to find Azure Region Display Names. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceGroupUrlList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ResourceGroupUrlList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ResourceGroupUrlList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.ResourceGroupUrlList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceGroupUrlList As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ResourceGroupUrlList : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.ResourceGroupUrlList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of resource group URLs for carbon emissions data. Optional. Each URL must follow the format '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}', and should be in all lowercase. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceTypeList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Core.ResourceType&gt; ResourceTypeList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Core.ResourceType&gt; ResourceTypeList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.ResourceTypeList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceTypeList As IList(Of ResourceType)" />
      <MemberSignature Language="F#" Value="member this.ResourceTypeList : System.Collections.Generic.IList&lt;Azure.Core.ResourceType&gt;" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.ResourceTypeList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Core.ResourceType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of resource types for carbon emissions data. Optional. Each resource type should be specified in lowercase, following the format 'microsoft.{service}/{resourceType}', e.g., 'microsoft.storage/storageaccounts'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SubscriptionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SubscriptionList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.SubscriptionList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubscriptionList As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.SubscriptionList : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.SubscriptionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of subscription IDs for which carbon emissions data is requested. Required. Each subscription ID should be in lowercase format. The max length of list is 100. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter IJsonModel&lt;CarbonEmissionQueryFilter&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#CarbonOptimization#Models#CarbonEmissionQueryFilter&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As CarbonEmissionQueryFilter Implements IJsonModel(Of CarbonEmissionQueryFilter).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" Usage="carbonEmissionQueryFilter.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;CarbonEmissionQueryFilter&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#CarbonOptimization#Models#CarbonEmissionQueryFilter&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of CarbonEmissionQueryFilter).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="carbonEmissionQueryFilter.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter IPersistableModel&lt;CarbonEmissionQueryFilter&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#CarbonOptimization#Models#CarbonEmissionQueryFilter&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As CarbonEmissionQueryFilter Implements IPersistableModel(Of CarbonEmissionQueryFilter).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" Usage="carbonEmissionQueryFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;CarbonEmissionQueryFilter&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#CarbonOptimization#Models#CarbonEmissionQueryFilter&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of CarbonEmissionQueryFilter).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="carbonEmissionQueryFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;CarbonEmissionQueryFilter&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#CarbonOptimization#Models#CarbonEmissionQueryFilter&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of CarbonEmissionQueryFilter).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="carbonEmissionQueryFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
