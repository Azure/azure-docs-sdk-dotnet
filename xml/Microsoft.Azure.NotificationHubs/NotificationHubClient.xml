<Type Name="NotificationHubClient" FullName="Microsoft.Azure.NotificationHubs.NotificationHubClient">
  <TypeSignature Language="C#" Value="public class NotificationHubClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotificationHubClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.NotificationHubs.NotificationHubClient" />
  <TypeSignature Language="VB.NET" Value="Public Class NotificationHubClient" />
  <TypeSignature Language="F#" Value="type NotificationHubClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.16.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a notification hub client.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CancelNotificationAsync (string scheduledNotificationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CancelNotificationAsync(string scheduledNotificationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CancelNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelNotificationAsync (scheduledNotificationId As String) As Task" />
      <MemberSignature Language="F#" Value="member this.CancelNotificationAsync : string -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.CancelNotificationAsync scheduledNotificationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduledNotificationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scheduledNotificationId">The scheduled notification identifier.</param>
        <summary>
            Cancels the notification asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdmNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt; CreateAdmNativeRegistrationAsync (string admRegistrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt; CreateAdmNativeRegistrationAsync(string admRegistrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAdmNativeRegistrationAsync (admRegistrationId As String) As Task(Of AdmRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAdmNativeRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt;" Usage="notificationHubClient.CreateAdmNativeRegistrationAsync admRegistrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admRegistrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admRegistrationId">The administrative registration identifier.</param>
        <summary>Asynchronously creates a native administrative registration.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdmNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt; CreateAdmNativeRegistrationAsync (string admRegistrationId, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt; CreateAdmNativeRegistrationAsync(string admRegistrationId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAdmNativeRegistrationAsync (admRegistrationId As String, tags As IEnumerable(Of String)) As Task(Of AdmRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAdmNativeRegistrationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt;" Usage="notificationHubClient.CreateAdmNativeRegistrationAsync (admRegistrationId, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admRegistrationId" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admRegistrationId">The administrative registration identifier.</param>
        <param name="tags">The tags for the registration.</param>
        <summary>Asynchronously creates a native administrative registration.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdmTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt; CreateAdmTemplateRegistrationAsync (string admRegistrationId, string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt; CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAdmTemplateRegistrationAsync (admRegistrationId As String, jsonPayload As String) As Task(Of AdmTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAdmTemplateRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateAdmTemplateRegistrationAsync (admRegistrationId, jsonPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admRegistrationId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admRegistrationId">The administrative registration identifier.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously creates an administrative template registration.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdmTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt; CreateAdmTemplateRegistrationAsync (string admRegistrationId, string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt; CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAdmTemplateRegistrationAsync (admRegistrationId As String, jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of AdmTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAdmTemplateRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateAdmTemplateRegistrationAsync (admRegistrationId, jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admRegistrationId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admRegistrationId">The administrative registration identifier.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates an administrative template registration.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAppleNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt; CreateAppleNativeRegistrationAsync (string deviceToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt; CreateAppleNativeRegistrationAsync(string deviceToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAppleNativeRegistrationAsync (deviceToken As String) As Task(Of AppleRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAppleNativeRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt;" Usage="notificationHubClient.CreateAppleNativeRegistrationAsync deviceToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="deviceToken">The device token.</param>
        <summary>Asynchronously creates an Apple native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAppleNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt; CreateAppleNativeRegistrationAsync (string deviceToken, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt; CreateAppleNativeRegistrationAsync(string deviceToken, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAppleNativeRegistrationAsync (deviceToken As String, tags As IEnumerable(Of String)) As Task(Of AppleRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAppleNativeRegistrationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt;" Usage="notificationHubClient.CreateAppleNativeRegistrationAsync (deviceToken, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceToken" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="deviceToken">The device token.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates an Apple native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAppleTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt; CreateAppleTemplateRegistrationAsync (string deviceToken, string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt; CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAppleTemplateRegistrationAsync (deviceToken As String, jsonPayload As String) As Task(Of AppleTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAppleTemplateRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateAppleTemplateRegistrationAsync (deviceToken, jsonPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceToken" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="deviceToken">The device token.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously creates an Apple template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAppleTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt; CreateAppleTemplateRegistrationAsync (string deviceToken, string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt; CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAppleTemplateRegistrationAsync (deviceToken As String, jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of AppleTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateAppleTemplateRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateAppleTemplateRegistrationAsync (deviceToken, jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceToken" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="deviceToken">The device token.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates an Apple template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBaiduNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt; CreateBaiduNativeRegistrationAsync (string userId, string channelId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt; CreateBaiduNativeRegistrationAsync(string userId, string channelId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateBaiduNativeRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBaiduNativeRegistrationAsync (userId As String, channelId As String) As Task(Of BaiduRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateBaiduNativeRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt;" Usage="notificationHubClient.CreateBaiduNativeRegistrationAsync (userId, channelId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userId">The user identifier.</param>
        <param name="channelId">The channel identifier.</param>
        <summary>
            Creates the baidu native registration asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBaiduNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt; CreateBaiduNativeRegistrationAsync (string userId, string channelId, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt; CreateBaiduNativeRegistrationAsync(string userId, string channelId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateBaiduNativeRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBaiduNativeRegistrationAsync (userId As String, channelId As String, tags As IEnumerable(Of String)) As Task(Of BaiduRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateBaiduNativeRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt;" Usage="notificationHubClient.CreateBaiduNativeRegistrationAsync (userId, channelId, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="userId">The user identifier.</param>
        <param name="channelId">The channel identifier.</param>
        <param name="tags">The tags.</param>
        <summary>
            Creates the baidu native registration asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBaiduTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt; CreateBaiduTemplateRegistrationAsync (string userId, string channelId, string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt; CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateBaiduTemplateRegistrationAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBaiduTemplateRegistrationAsync (userId As String, channelId As String, jsonPayload As String) As Task(Of BaiduTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateBaiduTemplateRegistrationAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateBaiduTemplateRegistrationAsync (userId, channelId, jsonPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userId">The user identifier.</param>
        <param name="channelId">The channel identifier.</param>
        <param name="jsonPayload">The json payload.</param>
        <summary>
            Creates the baidu template registration asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBaiduTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt; CreateBaiduTemplateRegistrationAsync (string userId, string channelId, string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt; CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateBaiduTemplateRegistrationAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBaiduTemplateRegistrationAsync (userId As String, channelId As String, jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of BaiduTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateBaiduTemplateRegistrationAsync : string * string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateBaiduTemplateRegistrationAsync (userId, channelId, jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="userId">The user identifier.</param>
        <param name="channelId">The channel identifier.</param>
        <param name="jsonPayload">The json payload.</param>
        <param name="tags">The tags.</param>
        <summary>
            Creates the baidu template registration asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientFromConnectionString">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.NotificationHubs.NotificationHubClient CreateClientFromConnectionString (string connectionString, string notificationHubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.NotificationHubs.NotificationHubClient CreateClientFromConnectionString(string connectionString, string notificationHubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientFromConnectionString (connectionString As String, notificationHubPath As String) As NotificationHubClient" />
      <MemberSignature Language="F#" Value="static member CreateClientFromConnectionString : string * string -&gt; Microsoft.Azure.NotificationHubs.NotificationHubClient" Usage="Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateClientFromConnectionString (connectionString, notificationHubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.NotificationHubs.NotificationHubClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="notificationHubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string.</param>
        <param name="notificationHubPath">The notification hub path.</param>
        <summary>Creates a client from connection string.</summary>
        <returns>The created <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientFromConnectionString">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.NotificationHubs.NotificationHubClient CreateClientFromConnectionString (string connectionString, string notificationHubPath, bool enableTestSend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.NotificationHubs.NotificationHubClient CreateClientFromConnectionString(string connectionString, string notificationHubPath, bool enableTestSend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientFromConnectionString (connectionString As String, notificationHubPath As String, enableTestSend As Boolean) As NotificationHubClient" />
      <MemberSignature Language="F#" Value="static member CreateClientFromConnectionString : string * string * bool -&gt; Microsoft.Azure.NotificationHubs.NotificationHubClient" Usage="Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateClientFromConnectionString (connectionString, notificationHubPath, enableTestSend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.NotificationHubs.NotificationHubClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="notificationHubPath" Type="System.String" />
        <Parameter Name="enableTestSend" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string.</param>
        <param name="notificationHubPath">The notification hub path.</param>
        <param name="enableTestSend">true to enable test send; otherwise, false.</param>
        <summary>Creates a client from connection string.</summary>
        <returns>The created <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGcmNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt; CreateGcmNativeRegistrationAsync (string gcmRegistrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt; CreateGcmNativeRegistrationAsync(string gcmRegistrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGcmNativeRegistrationAsync (gcmRegistrationId As String) As Task(Of GcmRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateGcmNativeRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt;" Usage="notificationHubClient.CreateGcmNativeRegistrationAsync gcmRegistrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gcmRegistrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="gcmRegistrationId">The GCM registration ID.</param>
        <summary>Asynchronously creates GCM native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGcmNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt; CreateGcmNativeRegistrationAsync (string gcmRegistrationId, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt; CreateGcmNativeRegistrationAsync(string gcmRegistrationId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGcmNativeRegistrationAsync (gcmRegistrationId As String, tags As IEnumerable(Of String)) As Task(Of GcmRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateGcmNativeRegistrationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt;" Usage="notificationHubClient.CreateGcmNativeRegistrationAsync (gcmRegistrationId, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gcmRegistrationId" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="gcmRegistrationId">The GCM registration ID.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates GCM native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGcmTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt; CreateGcmTemplateRegistrationAsync (string gcmRegistrationId, string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt; CreateGcmTemplateRegistrationAsync(string gcmRegistrationId, string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGcmTemplateRegistrationAsync (gcmRegistrationId As String, jsonPayload As String) As Task(Of GcmTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateGcmTemplateRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateGcmTemplateRegistrationAsync (gcmRegistrationId, jsonPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gcmRegistrationId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="gcmRegistrationId">The GCM registration ID.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously creates GCM template registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGcmTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt; CreateGcmTemplateRegistrationAsync (string gcmRegistrationId, string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt; CreateGcmTemplateRegistrationAsync(string gcmRegistrationId, string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGcmTemplateRegistrationAsync (gcmRegistrationId As String, jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of GcmTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateGcmTemplateRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateGcmTemplateRegistrationAsync (gcmRegistrationId, jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gcmRegistrationId" Type="System.String" />
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="gcmRegistrationId">The GCM registration ID.</param>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates GCM template registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMpnsNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt; CreateMpnsNativeRegistrationAsync (string channelUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt; CreateMpnsNativeRegistrationAsync(string channelUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMpnsNativeRegistrationAsync (channelUri As String) As Task(Of MpnsRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateMpnsNativeRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt;" Usage="notificationHubClient.CreateMpnsNativeRegistrationAsync channelUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <summary>Asynchronously creates MPNS native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMpnsNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt; CreateMpnsNativeRegistrationAsync (string channelUri, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt; CreateMpnsNativeRegistrationAsync(string channelUri, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMpnsNativeRegistrationAsync (channelUri As String, tags As IEnumerable(Of String)) As Task(Of MpnsRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateMpnsNativeRegistrationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt;" Usage="notificationHubClient.CreateMpnsNativeRegistrationAsync (channelUri, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates MPNS native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMpnsTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt; CreateMpnsTemplateRegistrationAsync (string channelUri, string xmlTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt; CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMpnsTemplateRegistrationAsync (channelUri As String, xmlTemplate As String) As Task(Of MpnsTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateMpnsTemplateRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateMpnsTemplateRegistrationAsync (channelUri, xmlTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="xmlTemplate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="xmlTemplate">The XML template.</param>
        <summary>Asynchronously creates MPNS template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMpnsTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt; CreateMpnsTemplateRegistrationAsync (string channelUri, string xmlTemplate, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt; CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMpnsTemplateRegistrationAsync (channelUri As String, xmlTemplate As String, tags As IEnumerable(Of String)) As Task(Of MpnsTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateMpnsTemplateRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateMpnsTemplateRegistrationAsync (channelUri, xmlTemplate, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="xmlTemplate" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="xmlTemplate">The XML template.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates MPNS template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateInstallation">
      <MemberSignature Language="C#" Value="public void CreateOrUpdateInstallation (Microsoft.Azure.NotificationHubs.Installation installation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateOrUpdateInstallation(class Microsoft.Azure.NotificationHubs.Installation installation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateOrUpdateInstallation(Microsoft.Azure.NotificationHubs.Installation)" />
      <MemberSignature Language="F#" Value="member this.CreateOrUpdateInstallation : Microsoft.Azure.NotificationHubs.Installation -&gt; unit" Usage="notificationHubClient.CreateOrUpdateInstallation installation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installation" Type="Microsoft.Azure.NotificationHubs.Installation" />
      </Parameters>
      <Docs>
        <param name="installation">The device installation object.</param>
        <summary>
            Creates or updates a device installation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateInstallationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateOrUpdateInstallationAsync (Microsoft.Azure.NotificationHubs.Installation installation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateOrUpdateInstallationAsync(class Microsoft.Azure.NotificationHubs.Installation installation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateOrUpdateInstallationAsync(Microsoft.Azure.NotificationHubs.Installation)" />
      <MemberSignature Language="F#" Value="member this.CreateOrUpdateInstallationAsync : Microsoft.Azure.NotificationHubs.Installation -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.CreateOrUpdateInstallationAsync installation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installation" Type="Microsoft.Azure.NotificationHubs.Installation" />
      </Parameters>
      <Docs>
        <param name="installation">The device installation object.</param>
        <summary>
            Creates or updates a device installation asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the installation object is null</exception>
        <exception cref="T:System.InvalidOperationException">InstallationId must be specified</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateRegistrationAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; CreateOrUpdateRegistrationAsync&lt;T&gt; (T registration) where T : Microsoft.Azure.NotificationHubs.RegistrationDescription;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; CreateOrUpdateRegistrationAsync&lt;(class Microsoft.Azure.NotificationHubs.RegistrationDescription) T&gt;(!!T registration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateOrUpdateRegistrationAsync``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOrUpdateRegistrationAsync(Of T As RegistrationDescription) (registration As T) As Task(Of T)" />
      <MemberSignature Language="F#" Value="member this.CreateOrUpdateRegistrationAsync : 'T -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)&gt; (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)" Usage="notificationHubClient.CreateOrUpdateRegistrationAsync registration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Azure.NotificationHubs.RegistrationDescription</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="registration" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of registration.</typeparam>
        <param name="registration">The registration to be created or updated.</param>
        <summary>Asynchronously creates or updates the client registration.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when RegistrationId object is null</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRegistrationAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; CreateRegistrationAsync&lt;T&gt; (T registration) where T : Microsoft.Azure.NotificationHubs.RegistrationDescription;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; CreateRegistrationAsync&lt;(class Microsoft.Azure.NotificationHubs.RegistrationDescription) T&gt;(!!T registration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationAsync``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRegistrationAsync(Of T As RegistrationDescription) (registration As T) As Task(Of T)" />
      <MemberSignature Language="F#" Value="member this.CreateRegistrationAsync : 'T -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)&gt; (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)" Usage="notificationHubClient.CreateRegistrationAsync registration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Azure.NotificationHubs.RegistrationDescription</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="registration" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of registration.</typeparam>
        <param name="registration">The registration to create.</param>
        <summary>Asynchronously creates a registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            NotificationHubPath in RegistrationDescription is not valid.
            or
            RegistrationId should be null or empty
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRegistrationIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; CreateRegistrationIdAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateRegistrationIdAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateRegistrationIdAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRegistrationIdAsync () As Task(Of String)" />
      <MemberSignature Language="F#" Value="member this.CreateRegistrationIdAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="notificationHubClient.CreateRegistrationIdAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronously creates a registration identifier.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt; CreateWindowsNativeRegistrationAsync (string channelUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt; CreateWindowsNativeRegistrationAsync(string channelUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWindowsNativeRegistrationAsync (channelUri As String) As Task(Of WindowsRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateWindowsNativeRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt;" Usage="notificationHubClient.CreateWindowsNativeRegistrationAsync channelUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <summary>Asynchronously creates Windows native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsNativeRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt; CreateWindowsNativeRegistrationAsync (string channelUri, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt; CreateWindowsNativeRegistrationAsync(string channelUri, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWindowsNativeRegistrationAsync (channelUri As String, tags As IEnumerable(Of String)) As Task(Of WindowsRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateWindowsNativeRegistrationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt;" Usage="notificationHubClient.CreateWindowsNativeRegistrationAsync (channelUri, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates Windows native registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt; CreateWindowsTemplateRegistrationAsync (string channelUri, string xmlTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt; CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWindowsTemplateRegistrationAsync (channelUri As String, xmlTemplate As String) As Task(Of WindowsTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateWindowsTemplateRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateWindowsTemplateRegistrationAsync (channelUri, xmlTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="xmlTemplate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="xmlTemplate">The XML template.</param>
        <summary>Asynchronously creates Windows template registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsTemplateRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt; CreateWindowsTemplateRegistrationAsync (string channelUri, string xmlTemplate, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt; CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWindowsTemplateRegistrationAsync (channelUri As String, xmlTemplate As String, tags As IEnumerable(Of String)) As Task(Of WindowsTemplateRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.CreateWindowsTemplateRegistrationAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt;" Usage="notificationHubClient.CreateWindowsTemplateRegistrationAsync (channelUri, xmlTemplate, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelUri" Type="System.String" />
        <Parameter Name="xmlTemplate" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="channelUri">The channel URI.</param>
        <param name="xmlTemplate">The XML template.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously creates Windows template registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteInstallation">
      <MemberSignature Language="C#" Value="public void DeleteInstallation (string installationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteInstallation(string installationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteInstallation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteInstallation (installationId As String)" />
      <MemberSignature Language="F#" Value="member this.DeleteInstallation : string -&gt; unit" Usage="notificationHubClient.DeleteInstallation installationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <summary>
            Deletes the installation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteInstallationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteInstallationAsync (string installationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteInstallationAsync(string installationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteInstallationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteInstallationAsync (installationId As String) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteInstallationAsync : string -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.DeleteInstallationAsync installationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <summary>
            Deletes the installation asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the installationId object is null</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteRegistrationAsync (Microsoft.Azure.NotificationHubs.RegistrationDescription registration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteRegistrationAsync(class Microsoft.Azure.NotificationHubs.RegistrationDescription registration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteRegistrationAsync(Microsoft.Azure.NotificationHubs.RegistrationDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteRegistrationAsync (registration As RegistrationDescription) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteRegistrationAsync : Microsoft.Azure.NotificationHubs.RegistrationDescription -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.DeleteRegistrationAsync registration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registration" Type="Microsoft.Azure.NotificationHubs.RegistrationDescription" />
      </Parameters>
      <Docs>
        <param name="registration">The registration to delete.</param>
        <summary>Asynchronously deletes the registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when registration object is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteRegistrationAsync (string registrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteRegistrationAsync(string registrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteRegistrationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteRegistrationAsync (registrationId As String) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteRegistrationAsync : string -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.DeleteRegistrationAsync registrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registrationId">The registration ID.</param>
        <summary>Asynchronously deletes the registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteRegistrationAsync (string registrationId, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteRegistrationAsync(string registrationId, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteRegistrationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteRegistrationAsync (registrationId As String, etag As String) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteRegistrationAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.DeleteRegistrationAsync (registrationId, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.String" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registrationId">The registration ID.</param>
        <param name="etag">The entity tag.</param>
        <summary>Asynchronously deletes the registration.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">registrationId</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistrationsByChannelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteRegistrationsByChannelAsync (string pnsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteRegistrationsByChannelAsync(string pnsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.DeleteRegistrationsByChannelAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteRegistrationsByChannelAsync (pnsHandle As String) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteRegistrationsByChannelAsync : string -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.DeleteRegistrationsByChannelAsync pnsHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pnsHandle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pnsHandle">The PNS handle.</param>
        <summary>Asynchronously deletes the registrations by channel.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">pnsHandle</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableTestSend">
      <MemberSignature Language="C#" Value="public bool EnableTestSend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTestSend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.NotificationHubs.NotificationHubClient.EnableTestSend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnableTestSend As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableTestSend : bool" Usage="Microsoft.Azure.NotificationHubs.NotificationHubClient.EnableTestSend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the client enables a test send.</summary>
        <value>true if the client enables a test send; otherwise, false.</value>
        <remarks>
            When test send is enabled, the following occurs:
            <ul><li>All notifications only reach up to 10 devices for each send call.</li><li>The <b>Send*</b> methods return a list of the outcomes for all those notification deliveries. The possible outcomes are
            the same as displayed in telemetry. Outcomes includes things like authentication errors, throttling errors, successful deliveries,
            and so on.</li></ul><p>This mode is for test purposes only, not for production, and is throttled.</p></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRegistrationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetAllRegistrationsAsync (int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetAllRegistrationsAsync(int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetAllRegistrationsAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllRegistrationsAsync (top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetAllRegistrationsAsync : int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetAllRegistrationsAsync top" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="top">The location of the registration.</param>
        <summary>Asynchronously retrieves all registrations in this notification hub.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRegistrationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetAllRegistrationsAsync (string continuationToken, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetAllRegistrationsAsync(string continuationToken, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetAllRegistrationsAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllRegistrationsAsync (continuationToken As String, top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetAllRegistrationsAsync : string * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetAllRegistrationsAsync (continuationToken, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="continuationToken">The continuation token.</param>
        <param name="top">The location of the registration.</param>
        <summary>Asynchronously retrieves all registrations in this notification hub.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseUri">
      <MemberSignature Language="C#" Value="public Uri GetBaseUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetBaseUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetBaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseUri () As Uri" />
      <MemberSignature Language="F#" Value="member this.GetBaseUri : unit -&gt; Uri" Usage="notificationHubClient.GetBaseUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the value of the BaseUri attached property.</summary>
        <returns>The base URI of a given element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstallation">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.NotificationHubs.Installation GetInstallation (string installationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.NotificationHubs.Installation GetInstallation(string installationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetInstallation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstallation (installationId As String) As Installation" />
      <MemberSignature Language="F#" Value="member this.GetInstallation : string -&gt; Microsoft.Azure.NotificationHubs.Installation" Usage="notificationHubClient.GetInstallation installationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.NotificationHubs.Installation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <summary>
            Gets a device installation object.
            </summary>
        <returns>The device installation object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstallationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.Installation&gt; GetInstallationAsync (string installationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.Installation&gt; GetInstallationAsync(string installationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetInstallationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstallationAsync (installationId As String) As Task(Of Installation)" />
      <MemberSignature Language="F#" Value="member this.GetInstallationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.Installation&gt;" Usage="notificationHubClient.GetInstallationAsync installationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.Installation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <summary>
            Gets the installation asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the installationId object is null</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt; GetNotificationHubJobAsync (string jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationHubJob&gt; GetNotificationHubJobAsync(string jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetNotificationHubJobAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNotificationHubJobAsync (jobId As String) As Task(Of NotificationHubJob)" />
      <MemberSignature Language="F#" Value="member this.GetNotificationHubJobAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;" Usage="notificationHubClient.GetNotificationHubJobAsync jobId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobId">The jobId is returned after creating a new job using <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob)" />.</param>
        <summary>
            Given a jobId, returns the associated <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" />. This method
            is used to get the status of the job to see if that job completed, failed, or is still in progress.
            This API is only available for Standard namespaces.
            </summary>
        <returns>
            The current state of the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob)" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubJobsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;&gt; GetNotificationHubJobsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;&gt; GetNotificationHubJobsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetNotificationHubJobsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNotificationHubJobsAsync () As Task(Of IEnumerable(Of NotificationHubJob))" />
      <MemberSignature Language="F#" Value="member this.GetNotificationHubJobsAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;&gt;" Usage="notificationHubClient.GetNotificationHubJobsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns all known <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" />s. This method
            is used to get the status of all job to see if those jobs completed, failed, or are still in progress.
            This API is only available for Standard namespaces.
            </summary>
        <returns>
            The current state of the <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" />s.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationOutcomeDetailsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationDetails&gt; GetNotificationOutcomeDetailsAsync (string notificationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationDetails&gt; GetNotificationOutcomeDetailsAsync(string notificationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetNotificationOutcomeDetailsAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNotificationOutcomeDetailsAsync (notificationId As String) As Task(Of NotificationDetails)" />
      <MemberSignature Language="F#" Value="member this.GetNotificationOutcomeDetailsAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationDetails&gt;" Usage="notificationHubClient.GetNotificationOutcomeDetailsAsync notificationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="notificationId">
          <see cref="P:Microsoft.Azure.NotificationHubs.NotificationOutcome.NotificationId" /> which was returned
            when calling Send*.</param>
        <summary>
            Retrieves the results of a Send* operation. This can retrieve intermediate results if the send is being processed
            or final results if the Send* has completed. This API can only be called for Standard namespaces.
            </summary>
        <returns>
            The result of the Send operation, as expressed by a <see cref="T:Microsoft.Azure.NotificationHubs.NotificationOutcome" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">notificationId</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrationAsync&lt;TRegistrationDescription&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TRegistrationDescription&gt; GetRegistrationAsync&lt;TRegistrationDescription&gt; (string registrationId) where TRegistrationDescription : Microsoft.Azure.NotificationHubs.RegistrationDescription;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TRegistrationDescription&gt; GetRegistrationAsync&lt;(class Microsoft.Azure.NotificationHubs.RegistrationDescription) TRegistrationDescription&gt;(string registrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetRegistrationAsync``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegistrationAsync(Of TRegistrationDescription As RegistrationDescription) (registrationId As String) As Task(Of TRegistrationDescription)" />
      <MemberSignature Language="F#" Value="member this.GetRegistrationAsync : string -&gt; System.Threading.Tasks.Task&lt;'RegistrationDescription (requires 'RegistrationDescription :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)&gt; (requires 'RegistrationDescription :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)" Usage="notificationHubClient.GetRegistrationAsync registrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TRegistrationDescription&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRegistrationDescription">
          <Constraints>
            <BaseTypeName>Microsoft.Azure.NotificationHubs.RegistrationDescription</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="registrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TRegistrationDescription">The type of registration description.</typeparam>
        <param name="registrationId">The registration ID.</param>
        <summary>Asynchronously retrieves a registration with a given ID. The type of the registration depends upon the specified <paramref name="TRegistrationDescription" /> parameter.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when registrationId is null</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrationsByChannelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByChannelAsync (string pnsHandle, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByChannelAsync(string pnsHandle, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegistrationsByChannelAsync (pnsHandle As String, top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetRegistrationsByChannelAsync : string * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetRegistrationsByChannelAsync (pnsHandle, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pnsHandle" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pnsHandle">The PNS handle.</param>
        <param name="top">The location of the registration.</param>
        <summary>Asynchronously gets the registrations by channel.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrationsByChannelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByChannelAsync (string pnsHandle, string continuationToken, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByChannelAsync(string pnsHandle, string continuationToken, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegistrationsByChannelAsync (pnsHandle As String, continuationToken As String, top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetRegistrationsByChannelAsync : string * string * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetRegistrationsByChannelAsync (pnsHandle, continuationToken, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pnsHandle" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pnsHandle">The PNS handle.</param>
        <param name="continuationToken">The continuation token.</param>
        <param name="top">The location of the registration.</param>
        <summary>Asynchronously gets the registrations by channel.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">pnsHandle</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrationsByTagAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByTagAsync (string tag, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByTagAsync(string tag, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegistrationsByTagAsync (tag As String, top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetRegistrationsByTagAsync : string * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetRegistrationsByTagAsync (tag, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tag">The tag.</param>
        <param name="top">The location where to get the registrations.</param>
        <summary>Asynchronously gets the registrations by tag.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrationsByTagAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByTagAsync (string tag, string continuationToken, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1&lt;class Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt; GetRegistrationsByTagAsync(string tag, string continuationToken, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegistrationsByTagAsync (tag As String, continuationToken As String, top As Integer) As Task(Of CollectionQueryResult(Of RegistrationDescription))" />
      <MemberSignature Language="F#" Value="member this.GetRegistrationsByTagAsync : string * string * int -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;" Usage="notificationHubClient.GetRegistrationsByTagAsync (tag, continuationToken, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.CollectionQueryResult&lt;Microsoft.Azure.NotificationHubs.RegistrationDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tag">The tag.</param>
        <param name="continuationToken">The continuation token.</param>
        <param name="top">The location where to get the registrations.</param>
        <summary>Asynchronously gets the registrations by tag.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when tag object is null</exception>
      </Docs>
    </Member>
    <Member MemberName="PatchInstallation">
      <MemberSignature Language="C#" Value="public void PatchInstallation (string installationId, System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PatchInstallation(string installationId, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.PatchInstallation(System.String,System.Collections.Generic.IList{Microsoft.Azure.NotificationHubs.PartialUpdateOperation})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PatchInstallation (installationId As String, operations As IList(Of PartialUpdateOperation))" />
      <MemberSignature Language="F#" Value="member this.PatchInstallation : string * System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; -&gt; unit" Usage="notificationHubClient.PatchInstallation (installationId, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
        <Parameter Name="operations" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt;" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <param name="operations">The collection of update operations.</param>
        <summary>
            Patches the installation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchInstallationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PatchInstallationAsync (string installationId, System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PatchInstallationAsync(string installationId, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.PatchInstallationAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.NotificationHubs.PartialUpdateOperation})" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchInstallationAsync (installationId As String, operations As IList(Of PartialUpdateOperation)) As Task" />
      <MemberSignature Language="F#" Value="member this.PatchInstallationAsync : string * System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt; -&gt; System.Threading.Tasks.Task" Usage="notificationHubClient.PatchInstallationAsync (installationId, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="installationId" Type="System.String" />
        <Parameter Name="operations" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.NotificationHubs.PartialUpdateOperation&gt;" />
      </Parameters>
      <Docs>
        <param name="installationId">The installation identifier.</param>
        <param name="operations">The collection of update operations.</param>
        <summary>
            Patches the installation asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when the installationId or operations object is null
            </exception>
        <exception cref="T:System.InvalidOperationException">Thrown when the operations list is empty</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistrationExistsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; RegistrationExistsAsync (string registrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; RegistrationExistsAsync(string registrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.RegistrationExistsAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegistrationExistsAsync (registrationId As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RegistrationExistsAsync : string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="notificationHubClient.RegistrationExistsAsync registrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registrationId">The registration ID.</param>
        <summary>Asynchronously indicates that the registration already exists.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification, DateTimeOffset scheduledTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification, valuetype System.DateTimeOffset scheduledTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.ScheduleNotificationAsync(Microsoft.Azure.NotificationHubs.Notification,System.DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.ScheduleNotificationAsync : Microsoft.Azure.NotificationHubs.Notification * DateTimeOffset -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;" Usage="notificationHubClient.ScheduleNotificationAsync (notification, scheduledTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
        <Parameter Name="scheduledTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="notification">The notification.</param>
        <param name="scheduledTime">The scheduled time.</param>
        <summary>
            Schedules the notification asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification, DateTimeOffset scheduledTime, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification, valuetype System.DateTimeOffset scheduledTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.ScheduleNotificationAsync(Microsoft.Azure.NotificationHubs.Notification,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="F#" Value="member this.ScheduleNotificationAsync : Microsoft.Azure.NotificationHubs.Notification * DateTimeOffset * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;" Usage="notificationHubClient.ScheduleNotificationAsync (notification, scheduledTime, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
        <Parameter Name="scheduledTime" Type="System.DateTimeOffset" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="notification">The notification.</param>
        <param name="scheduledTime">The scheduled time.</param>
        <param name="tags">The tags.</param>
        <summary>
            Schedules the notification asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when tags object is null</exception>
        <exception cref="T:System.ArgumentException">tags argument should contain at least one tag</exception>
      </Docs>
    </Member>
    <Member MemberName="ScheduleNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification, DateTimeOffset scheduledTime, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.ScheduledNotification&gt; ScheduleNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification, valuetype System.DateTimeOffset scheduledTime, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.ScheduleNotificationAsync(Microsoft.Azure.NotificationHubs.Notification,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="F#" Value="member this.ScheduleNotificationAsync : Microsoft.Azure.NotificationHubs.Notification * DateTimeOffset * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;" Usage="notificationHubClient.ScheduleNotificationAsync (notification, scheduledTime, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.ScheduledNotification&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
        <Parameter Name="scheduledTime" Type="System.DateTimeOffset" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="notification">The notification.</param>
        <param name="scheduledTime">The scheduled time.</param>
        <param name="tagExpression">The tag expression.</param>
        <summary>
            Schedules the notification asynchronously.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAdmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync (string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync(string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAdmNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAdmNativeNotificationAsync (jsonPayload As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAdmNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAdmNativeNotificationAsync jsonPayload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously sends the administrative native notification.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAdmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync (string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync(string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAdmNativeNotificationAsync (jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAdmNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAdmNativeNotificationAsync (jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">The tags.</param>
        <summary>Asynchronously sends the administrative native notification.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAdmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync (string jsonPayload, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAdmNativeNotificationAsync(string jsonPayload, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAdmNativeNotificationAsync (jsonPayload As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAdmNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAdmNativeNotificationAsync (jsonPayload, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tagExpression">The tag expression.</param>
        <summary>Asynchronously sends the administrative native notification.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAppleNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync (string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync(string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAppleNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAppleNativeNotificationAsync (jsonPayload As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAppleNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAppleNativeNotificationAsync jsonPayload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously sends an Apple native notification. To specify an expiry, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAppleNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync (string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync(string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAppleNativeNotificationAsync (jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAppleNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAppleNativeNotificationAsync (jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends an Apple native notification to a non-empty set of tags (maximum 20). This is equivalent to a tagged expression with boolean ORs ("||"). To specify an expiry, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAppleNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync (string jsonPayload, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendAppleNativeNotificationAsync(string jsonPayload, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAppleNativeNotificationAsync (jsonPayload As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendAppleNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendAppleNativeNotificationAsync (jsonPayload, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends an Apple native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify an expiry, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBaiduNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendBaiduNativeNotificationAsync (message As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendBaiduNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendBaiduNativeNotificationAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">This is a json request. Baidu documents the format for the json <a href="http://push.baidu.com/doc/restapi/restapi">here</a>.</param>
        <summary>
            Sends a Baidu native notification.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.NotificationHubs.NotificationOutcome" /> which describes the result of the Send operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBaiduNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync (string message, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync(string message, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendBaiduNativeNotificationAsync (message As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendBaiduNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendBaiduNativeNotificationAsync (message, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="message">This is a json request. Baidu documents the format for the json <a href="http://push.baidu.com/doc/restapi/restapi">here</a>.</param>
        <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
        <summary>
            Sends Baidu native notification to a tag expression (a single tag "tag" is a valid tag expression).
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.NotificationHubs.NotificationOutcome" /> which describes the result of the Send operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBaiduNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync (string message, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendBaiduNativeNotificationAsync(string message, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendBaiduNativeNotificationAsync (message As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendBaiduNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendBaiduNativeNotificationAsync (message, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">This is a json request. Baidu documents the format for the json <a href="http://push.baidu.com/doc/restapi/restapi">here</a>.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>
            Sends Baidu native notification to a tag expression (a single tag "tag" is a valid tag expression).
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.NotificationHubs.NotificationOutcome" /> which describes the result of the Send operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGcmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync (string jsonPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync(string jsonPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendGcmNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendGcmNativeNotificationAsync (jsonPayload As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendGcmNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendGcmNativeNotificationAsync jsonPayload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <summary>Asynchronously sends GCM native notification.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGcmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync (string jsonPayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync(string jsonPayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendGcmNativeNotificationAsync (jsonPayload As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendGcmNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendGcmNativeNotificationAsync (jsonPayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends a GCM native notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGcmNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync (string jsonPayload, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendGcmNativeNotificationAsync(string jsonPayload, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendGcmNativeNotificationAsync (jsonPayload As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendGcmNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendGcmNativeNotificationAsync (jsonPayload, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonPayload" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonPayload">The JSON payload.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends GCM native notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMpnsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync (string nativePayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync(string nativePayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMpnsNativeNotificationAsync (nativePayload As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendMpnsNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendMpnsNativeNotificationAsync nativePayload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativePayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nativePayload">The native payload.</param>
        <summary>Asynchronously sends MPNS native notification. To specify headers for MPNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMpnsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync (string nativePayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync(string nativePayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMpnsNativeNotificationAsync (nativePayload As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendMpnsNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendMpnsNativeNotificationAsync (nativePayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativePayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="nativePayload">The notification payload.</param>
        <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends MPNS native notification to a non-empty set of tags (maximum 20). This is equivalent to a tag expression with boolean ORs ("||"). To specify headers for MPNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMpnsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync (string nativePayload, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendMpnsNativeNotificationAsync(string nativePayload, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMpnsNativeNotificationAsync (nativePayload As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendMpnsNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendMpnsNativeNotificationAsync (nativePayload, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativePayload" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nativePayload">The native payload.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends MPNS native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify headers for MPNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" />
      <MemberSignature Language="F#" Value="member this.SendNotificationAsync : Microsoft.Azure.NotificationHubs.Notification -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendNotificationAsync notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
      </Parameters>
      <Docs>
        <param name="notification">The notification to send.</param>
        <summary>Asynchronously sends a notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">notification</exception>
      </Docs>
    </Member>
    <Member MemberName="SendNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="F#" Value="member this.SendNotificationAsync : Microsoft.Azure.NotificationHubs.Notification * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendNotificationAsync (notification, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="notification">The notification to send.</param>
        <param name="tags">A non-empty set of tags (max 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends a notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when notification or tag object is null
            </exception>
        <exception cref="T:System.ArgumentException">
            notification.Tag property should not be null
            or
            tags argument should contain at least one tag
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync (Microsoft.Azure.NotificationHubs.Notification notification, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendNotificationAsync(class Microsoft.Azure.NotificationHubs.Notification notification, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification,System.String)" />
      <MemberSignature Language="F#" Value="member this.SendNotificationAsync : Microsoft.Azure.NotificationHubs.Notification * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendNotificationAsync (notification, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="Microsoft.Azure.NotificationHubs.Notification" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="notification">The notification to send.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends a notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">notification</exception>
        <exception cref="T:System.ArgumentException">notification.Tag property should be null</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTemplateNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTemplateNotificationAsync (properties As IDictionary(Of String, String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendTemplateNotificationAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendTemplateNotificationAsync properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">The properties of the template.</param>
        <summary>Asynchronously sends a template notification.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTemplateNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; properties, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; properties, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTemplateNotificationAsync (properties As IDictionary(Of String, String), tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendTemplateNotificationAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendTemplateNotificationAsync (properties, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">The properties of the template.</param>
        <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends a template notification to a non-empty set of tags (maximum 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTemplateNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; properties, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendTemplateNotificationAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; properties, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTemplateNotificationAsync (properties As IDictionary(Of String, String), tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendTemplateNotificationAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendTemplateNotificationAsync (properties, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="properties">The properties of the template.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends a template notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendWindowsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync (string windowsNativePayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync(string windowsNativePayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendWindowsNativeNotificationAsync (windowsNativePayload As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendWindowsNativeNotificationAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendWindowsNativeNotificationAsync windowsNativePayload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsNativePayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="windowsNativePayload">The Windows native payload.</param>
        <summary>Asynchronously sends a Windows native notification. To specify headers for WNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendWindowsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync (string windowsNativePayload, System.Collections.Generic.IEnumerable&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync(string windowsNativePayload, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function SendWindowsNativeNotificationAsync (windowsNativePayload As String, tags As IEnumerable(Of String)) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendWindowsNativeNotificationAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendWindowsNativeNotificationAsync (windowsNativePayload, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsNativePayload" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="windowsNativePayload">The Windows native payload.</param>
        <param name="tags">A non-empty set of tags (max 20 tags). Each string in the set can contain a single tag.</param>
        <summary>Asynchronously sends a Windows native notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||"). To specify headers for WNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendWindowsNativeNotificationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync (string windowsNativePayload, string tagExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationOutcome&gt; SendWindowsNativeNotificationAsync(string windowsNativePayload, string tagExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendWindowsNativeNotificationAsync (windowsNativePayload As String, tagExpression As String) As Task(Of NotificationOutcome)" />
      <MemberSignature Language="F#" Value="member this.SendWindowsNativeNotificationAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;" Usage="notificationHubClient.SendWindowsNativeNotificationAsync (windowsNativePayload, tagExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationOutcome&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsNativePayload" Type="System.String" />
        <Parameter Name="tagExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="windowsNativePayload">The Windows native payload.</param>
        <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
        <summary>Asynchronously sends a Windows native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify headers for WNS, use the <see cref="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SendNotificationAsync(Microsoft.Azure.NotificationHubs.Notification)" /> method.</summary>
        <returns>The task that completes the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitNotificationHubJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt; SubmitNotificationHubJobAsync (Microsoft.Azure.NotificationHubs.NotificationHubJob job);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.NotificationHubs.NotificationHubJob&gt; SubmitNotificationHubJobAsync(class Microsoft.Azure.NotificationHubs.NotificationHubJob job) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.SubmitNotificationHubJobAsync(Microsoft.Azure.NotificationHubs.NotificationHubJob)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubmitNotificationHubJobAsync (job As NotificationHubJob) As Task(Of NotificationHubJob)" />
      <MemberSignature Language="F#" Value="member this.SubmitNotificationHubJobAsync : Microsoft.Azure.NotificationHubs.NotificationHubJob -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;" Usage="notificationHubClient.SubmitNotificationHubJobAsync job" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.NotificationHubs.NotificationHubJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="job" Type="Microsoft.Azure.NotificationHubs.NotificationHubJob" />
      </Parameters>
      <Docs>
        <param name="job">The <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" /> to
            export registrations, import registrations, or create registrations.</param>
        <summary>
            Creates a <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" />. This API is only
            available for Standard namespaces.
            </summary>
        <returns>
            The submitted <see cref="T:Microsoft.Azure.NotificationHubs.NotificationHubJob" />s.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRegistrationAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; UpdateRegistrationAsync&lt;T&gt; (T registration) where T : Microsoft.Azure.NotificationHubs.RegistrationDescription;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; UpdateRegistrationAsync&lt;(class Microsoft.Azure.NotificationHubs.RegistrationDescription) T&gt;(!!T registration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.NotificationHubs.NotificationHubClient.UpdateRegistrationAsync``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateRegistrationAsync(Of T As RegistrationDescription) (registration As T) As Task(Of T)" />
      <MemberSignature Language="F#" Value="member this.UpdateRegistrationAsync : 'T -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)&gt; (requires 'T :&gt; Microsoft.Azure.NotificationHubs.RegistrationDescription)" Usage="notificationHubClient.UpdateRegistrationAsync registration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.NotificationHubs</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Azure.NotificationHubs.RegistrationDescription</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="registration" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of registration.</typeparam>
        <param name="registration">The registration to update.</param>
        <summary>Asynchronously updates the registration.</summary>
        <returns>A task that will complete when the update finishes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when RegistrationId or ETag object is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>