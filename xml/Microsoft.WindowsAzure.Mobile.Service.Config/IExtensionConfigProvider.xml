<Type Name="IExtensionConfigProvider" FullName="Microsoft.WindowsAzure.Mobile.Service.Config.IExtensionConfigProvider">
  <TypeSignature Language="C#" Value="public interface IExtensionConfigProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtensionConfigProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Mobile.Service.Config.IExtensionConfigProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtensionConfigProvider" />
  <TypeSignature Language="F#" Value="type IExtensionConfigProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            3rd party extensions can participate in the configuration process by hooking in as part of the 
            service configuration. This allows 3rd party extensions to add their dependencies to the
            dependency resolver so that they can leverage the power of dependency injection as well.
            By declaring an assembly-level <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Config.ExtensionConfigProviderAttribute" /> containing 
            a type implementing the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Config.IExtensionConfigProvider" /> interface, the extension
            will get called as part of the configuration building process.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.Http.HttpConfiguration config, Autofac.ContainerBuilder containerBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.Http.HttpConfiguration config, class Autofac.ContainerBuilder containerBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Mobile.Service.Config.IExtensionConfigProvider.Initialize(System.Web.Http.HttpConfiguration,Autofac.ContainerBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (config As HttpConfiguration, containerBuilder As ContainerBuilder)" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.Http.HttpConfiguration * Autofac.ContainerBuilder -&gt; unit" Usage="iExtensionConfigProvider.Initialize (config, containerBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" />
        <Parameter Name="containerBuilder" Type="Autofac.ContainerBuilder" />
      </Parameters>
      <Docs>
        <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
        <param name="containerBuilder">The Autofac <see cref="T:Autofac.ContainerBuilder" /> used for dependency resolution.</param>
        <summary>
            Initializes the extension.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
