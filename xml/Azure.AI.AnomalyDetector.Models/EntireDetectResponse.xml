<Type Name="EntireDetectResponse" FullName="Azure.AI.AnomalyDetector.Models.EntireDetectResponse">
  <TypeSignature Language="C#" Value="public class EntireDetectResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntireDetectResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.Models.EntireDetectResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class EntireDetectResponse" />
  <TypeSignature Language="F#" Value="type EntireDetectResponse = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The response of entire anomaly detection. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExpectedValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;float&gt; ExpectedValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float32&gt; ExpectedValues" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.ExpectedValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpectedValues As IReadOnlyList(Of Single)" />
      <MemberSignature Language="F#" Value="member this.ExpectedValues : System.Collections.Generic.IReadOnlyList&lt;single&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.ExpectedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> ExpectedValues contain expected value for each input point. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;bool&gt; IsAnomaly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;bool&gt; IsAnomaly" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnomaly As IReadOnlyList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsAnomaly : System.Collections.Generic.IReadOnlyList&lt;bool&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> IsAnomaly contains anomaly properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;bool&gt; IsNegativeAnomaly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;bool&gt; IsNegativeAnomaly" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsNegativeAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNegativeAnomaly As IReadOnlyList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsNegativeAnomaly : System.Collections.Generic.IReadOnlyList&lt;bool&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsNegativeAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> IsNegativeAnomaly contains anomaly status in negative direction for each input point. True means a negative anomaly has been detected. A negative anomaly means the point is detected as an anomaly and its real value is smaller than the expected one. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;bool&gt; IsPositiveAnomaly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;bool&gt; IsPositiveAnomaly" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsPositiveAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPositiveAnomaly As IReadOnlyList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsPositiveAnomaly : System.Collections.Generic.IReadOnlyList&lt;bool&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.IsPositiveAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> IsPositiveAnomaly contain anomaly status in positive direction for each input point. True means a positive anomaly has been detected. A positive anomaly means the point is detected as an anomaly and its real value is larger than the expected one. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerMargins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;float&gt; LowerMargins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float32&gt; LowerMargins" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.LowerMargins" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LowerMargins As IReadOnlyList(Of Single)" />
      <MemberSignature Language="F#" Value="member this.LowerMargins : System.Collections.Generic.IReadOnlyList&lt;single&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.LowerMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> LowerMargins contain lower margin of each input point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. Points between the boundary can be marked as normal ones in client side. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Period">
      <MemberSignature Language="C#" Value="public int Period { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Period" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.Period" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Period As Integer" />
      <MemberSignature Language="F#" Value="member this.Period : int" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.Period" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Frequency extracted from the series, zero means no recurrent pattern has been found. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Severity">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;float&gt; Severity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float32&gt; Severity" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.Severity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Severity As IReadOnlyList(Of Single)" />
      <MemberSignature Language="F#" Value="member this.Severity : System.Collections.Generic.IReadOnlyList&lt;single&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.Severity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The severity score for each input point. The larger the value is, the more sever the anomaly is. For normal points, the "severity" is always 0. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpperMargins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;float&gt; UpperMargins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;float32&gt; UpperMargins" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.Models.EntireDetectResponse.UpperMargins" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpperMargins As IReadOnlyList(Of Single)" />
      <MemberSignature Language="F#" Value="member this.UpperMargins : System.Collections.Generic.IReadOnlyList&lt;single&gt;" Usage="Azure.AI.AnomalyDetector.Models.EntireDetectResponse.UpperMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
