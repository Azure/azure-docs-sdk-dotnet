<Type Name="AnomalyDetectorModelFactory" FullName="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory">
  <TypeSignature Language="C#" Value="public static class AnomalyDetectorModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AnomalyDetectorModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AnomalyDetectorModelFactory" />
  <TypeSignature Language="F#" Value="type AnomalyDetectorModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnomalyInterpretation">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.AnomalyInterpretation AnomalyInterpretation (string variable = default, float? contributionScore = default, Azure.AI.AnomalyDetector.Models.CorrelationChanges correlationChanges = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.AnomalyInterpretation AnomalyInterpretation(string variable, valuetype System.Nullable`1&lt;float32&gt; contributionScore, class Azure.AI.AnomalyDetector.Models.CorrelationChanges correlationChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyInterpretation(System.String,System.Nullable{System.Single},Azure.AI.AnomalyDetector.Models.CorrelationChanges)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyInterpretation (Optional variable As String = Nothing, Optional contributionScore As Nullable(Of Single) = Nothing, Optional correlationChanges As CorrelationChanges = Nothing) As AnomalyInterpretation" />
      <MemberSignature Language="F#" Value="static member AnomalyInterpretation : string * Nullable&lt;single&gt; * Azure.AI.AnomalyDetector.Models.CorrelationChanges -&gt; Azure.AI.AnomalyDetector.Models.AnomalyInterpretation" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyInterpretation (variable, contributionScore, correlationChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.AnomalyInterpretation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" />
        <Parameter Name="contributionScore" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="correlationChanges" Type="Azure.AI.AnomalyDetector.Models.CorrelationChanges" />
      </Parameters>
      <Docs>
        <param name="variable" />
        <param name="contributionScore" />
        <param name="correlationChanges" />
        <summary> Initializes a new instance of AnomalyInterpretation. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.AnomalyInterpretation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnomalyState">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.AnomalyState AnomalyState (DateTimeOffset timestamp = default, Azure.AI.AnomalyDetector.Models.AnomalyValue value = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.AnomalyState AnomalyState(valuetype System.DateTimeOffset timestamp, class Azure.AI.AnomalyDetector.Models.AnomalyValue value, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyState(System.DateTimeOffset,Azure.AI.AnomalyDetector.Models.AnomalyValue,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.ErrorResponse})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyState (Optional timestamp As DateTimeOffset = Nothing, Optional value As AnomalyValue = Nothing, Optional errors As IEnumerable(Of ErrorResponse) = Nothing) As AnomalyState" />
      <MemberSignature Language="F#" Value="static member AnomalyState : DateTimeOffset * Azure.AI.AnomalyDetector.Models.AnomalyValue * seq&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; -&gt; Azure.AI.AnomalyDetector.Models.AnomalyState" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyState (timestamp, value, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.AnomalyState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTimeOffset" />
        <Parameter Name="value" Type="Azure.AI.AnomalyDetector.Models.AnomalyValue" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"> timestamp. </param>
        <param name="value" />
        <param name="errors"> Error message for the current timestamp. </param>
        <summary> Initializes a new instance of AnomalyState. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.AnomalyState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnomalyValue">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.AnomalyValue AnomalyValue (bool isAnomaly = false, float severity = 0, float score = 0, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyInterpretation&gt; interpretation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.AnomalyValue AnomalyValue(bool isAnomaly, float32 severity, float32 score, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.AnomalyInterpretation&gt; interpretation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyValue(System.Boolean,System.Single,System.Single,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.AnomalyInterpretation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyValue (Optional isAnomaly As Boolean = false, Optional severity As Single = 0, Optional score As Single = 0, Optional interpretation As IEnumerable(Of AnomalyInterpretation) = Nothing) As AnomalyValue" />
      <MemberSignature Language="F#" Value="static member AnomalyValue : bool * single * single * seq&lt;Azure.AI.AnomalyDetector.Models.AnomalyInterpretation&gt; -&gt; Azure.AI.AnomalyDetector.Models.AnomalyValue" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.AnomalyValue (isAnomaly, severity, score, interpretation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.AnomalyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isAnomaly" Type="System.Boolean" />
        <Parameter Name="severity" Type="System.Single" />
        <Parameter Name="score" Type="System.Single" />
        <Parameter Name="interpretation" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyInterpretation&gt;" />
      </Parameters>
      <Docs>
        <param name="isAnomaly"> True if an anomaly is detected at the current timestamp. </param>
        <param name="severity"> Indicates the significance of the anomaly. The higher the severity, the more significant the anomaly. </param>
        <param name="score"> Raw score from the model. </param>
        <param name="interpretation" />
        <summary> Initializes a new instance of AnomalyValue. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.AnomalyValue" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePointDetectResponse">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse ChangePointDetectResponse (int? period = default, System.Collections.Generic.IEnumerable&lt;bool&gt; isChangePoint = default, System.Collections.Generic.IEnumerable&lt;float&gt; confidenceScores = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse ChangePointDetectResponse(valuetype System.Nullable`1&lt;int32&gt; period, class System.Collections.Generic.IEnumerable`1&lt;bool&gt; isChangePoint, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; confidenceScores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ChangePointDetectResponse(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Boolean},System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangePointDetectResponse (Optional period As Nullable(Of Integer) = Nothing, Optional isChangePoint As IEnumerable(Of Boolean) = Nothing, Optional confidenceScores As IEnumerable(Of Single) = Nothing) As ChangePointDetectResponse" />
      <MemberSignature Language="F#" Value="static member ChangePointDetectResponse : Nullable&lt;int&gt; * seq&lt;bool&gt; * seq&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ChangePointDetectResponse (period, isChangePoint, confidenceScores)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="period" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isChangePoint" Type="System.Collections.Generic.IEnumerable&lt;System.Boolean&gt;" />
        <Parameter Name="confidenceScores" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="period"> Frequency extracted from the series, zero means no recurrent pattern has been found. </param>
        <param name="isChangePoint"> isChangePoint contains change point properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series. </param>
        <param name="confidenceScores"> the change point confidence of each point. </param>
        <summary> Initializes a new instance of ChangePointDetectResponse. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationChanges">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.CorrelationChanges CorrelationChanges (System.Collections.Generic.IEnumerable&lt;string&gt; changedVariables = default, System.Collections.Generic.IEnumerable&lt;float&gt; changedValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.CorrelationChanges CorrelationChanges(class System.Collections.Generic.IEnumerable`1&lt;string&gt; changedVariables, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; changedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.CorrelationChanges(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CorrelationChanges (Optional changedVariables As IEnumerable(Of String) = Nothing, Optional changedValues As IEnumerable(Of Single) = Nothing) As CorrelationChanges" />
      <MemberSignature Language="F#" Value="static member CorrelationChanges : seq&lt;string&gt; * seq&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.Models.CorrelationChanges" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.CorrelationChanges (changedVariables, changedValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.CorrelationChanges</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedVariables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="changedValues" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="changedVariables"> correlated variables. </param>
        <param name="changedValues"> changes in correlation. </param>
        <summary> Initializes a new instance of CorrelationChanges. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.CorrelationChanges" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.DetectionResult DetectionResult (Guid resultId = default, Azure.AI.AnomalyDetector.Models.DetectionResultSummary summary = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt; results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.DetectionResult DetectionResult(valuetype System.Guid resultId, class Azure.AI.AnomalyDetector.Models.DetectionResultSummary summary, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.AnomalyState&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DetectionResult(System.Guid,Azure.AI.AnomalyDetector.Models.DetectionResultSummary,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.AnomalyState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DetectionResult (Optional resultId As Guid = Nothing, Optional summary As DetectionResultSummary = Nothing, Optional results As IEnumerable(Of AnomalyState) = Nothing) As DetectionResult" />
      <MemberSignature Language="F#" Value="static member DetectionResult : Guid * Azure.AI.AnomalyDetector.Models.DetectionResultSummary * seq&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt; -&gt; Azure.AI.AnomalyDetector.Models.DetectionResult" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DetectionResult (resultId, summary, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.DetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultId" Type="System.Guid" />
        <Parameter Name="summary" Type="Azure.AI.AnomalyDetector.Models.DetectionResultSummary" />
        <Parameter Name="results" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt;" />
      </Parameters>
      <Docs>
        <param name="resultId" />
        <param name="summary" />
        <param name="results"> Detection result for each timestamp. </param>
        <summary> Initializes a new instance of DetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.DetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectionResultSummary">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.DetectionResultSummary DetectionResultSummary (Azure.AI.AnomalyDetector.Models.DetectionStatus status = Azure.AI.AnomalyDetector.Models.DetectionStatus.Created, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates = default, Azure.AI.AnomalyDetector.Models.DetectionRequest setupInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.DetectionResultSummary DetectionResultSummary(valuetype Azure.AI.AnomalyDetector.Models.DetectionStatus status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates, class Azure.AI.AnomalyDetector.Models.DetectionRequest setupInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DetectionResultSummary(Azure.AI.AnomalyDetector.Models.DetectionStatus,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.ErrorResponse},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.VariableState},Azure.AI.AnomalyDetector.Models.DetectionRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DetectionResultSummary (Optional status As DetectionStatus = Azure.AI.AnomalyDetector.Models.DetectionStatus.Created, Optional errors As IEnumerable(Of ErrorResponse) = Nothing, Optional variableStates As IEnumerable(Of VariableState) = Nothing, Optional setupInfo As DetectionRequest = Nothing) As DetectionResultSummary" />
      <MemberSignature Language="F#" Value="static member DetectionResultSummary : Azure.AI.AnomalyDetector.Models.DetectionStatus * seq&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; * seq&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; * Azure.AI.AnomalyDetector.Models.DetectionRequest -&gt; Azure.AI.AnomalyDetector.Models.DetectionResultSummary" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DetectionResultSummary (status, errors, variableStates, setupInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.DetectionResultSummary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.AI.AnomalyDetector.Models.DetectionStatus" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt;" />
        <Parameter Name="variableStates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt;" />
        <Parameter Name="setupInfo" Type="Azure.AI.AnomalyDetector.Models.DetectionRequest" />
      </Parameters>
      <Docs>
        <param name="status"> Status of detection results. One of CREATED, RUNNING, READY, and FAILED. </param>
        <param name="errors"> Error message when detection is failed. </param>
        <param name="variableStates" />
        <param name="setupInfo"> Detection request. </param>
        <summary> Initializes a new instance of DetectionResultSummary. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.DetectionResultSummary" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagnosticsInfo">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.DiagnosticsInfo DiagnosticsInfo (Azure.AI.AnomalyDetector.Models.ModelState modelState = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.DiagnosticsInfo DiagnosticsInfo(class Azure.AI.AnomalyDetector.Models.ModelState modelState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DiagnosticsInfo(Azure.AI.AnomalyDetector.Models.ModelState,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.VariableState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiagnosticsInfo (Optional modelState As ModelState = Nothing, Optional variableStates As IEnumerable(Of VariableState) = Nothing) As DiagnosticsInfo" />
      <MemberSignature Language="F#" Value="static member DiagnosticsInfo : Azure.AI.AnomalyDetector.Models.ModelState * seq&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; -&gt; Azure.AI.AnomalyDetector.Models.DiagnosticsInfo" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.DiagnosticsInfo (modelState, variableStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.DiagnosticsInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelState" Type="Azure.AI.AnomalyDetector.Models.ModelState" />
        <Parameter Name="variableStates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt;" />
      </Parameters>
      <Docs>
        <param name="modelState" />
        <param name="variableStates" />
        <summary> Initializes a new instance of DiagnosticsInfo. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.DiagnosticsInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireDetectResponse">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.EntireDetectResponse EntireDetectResponse (int period = 0, System.Collections.Generic.IEnumerable&lt;float&gt; expectedValues = default, System.Collections.Generic.IEnumerable&lt;float&gt; upperMargins = default, System.Collections.Generic.IEnumerable&lt;float&gt; lowerMargins = default, System.Collections.Generic.IEnumerable&lt;bool&gt; isAnomaly = default, System.Collections.Generic.IEnumerable&lt;bool&gt; isNegativeAnomaly = default, System.Collections.Generic.IEnumerable&lt;bool&gt; isPositiveAnomaly = default, System.Collections.Generic.IEnumerable&lt;float&gt; severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.EntireDetectResponse EntireDetectResponse(int32 period, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; expectedValues, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; upperMargins, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; lowerMargins, class System.Collections.Generic.IEnumerable`1&lt;bool&gt; isAnomaly, class System.Collections.Generic.IEnumerable`1&lt;bool&gt; isNegativeAnomaly, class System.Collections.Generic.IEnumerable`1&lt;bool&gt; isPositiveAnomaly, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.EntireDetectResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Single},System.Collections.Generic.IEnumerable{System.Single},System.Collections.Generic.IEnumerable{System.Single},System.Collections.Generic.IEnumerable{System.Boolean},System.Collections.Generic.IEnumerable{System.Boolean},System.Collections.Generic.IEnumerable{System.Boolean},System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntireDetectResponse (Optional period As Integer = 0, Optional expectedValues As IEnumerable(Of Single) = Nothing, Optional upperMargins As IEnumerable(Of Single) = Nothing, Optional lowerMargins As IEnumerable(Of Single) = Nothing, Optional isAnomaly As IEnumerable(Of Boolean) = Nothing, Optional isNegativeAnomaly As IEnumerable(Of Boolean) = Nothing, Optional isPositiveAnomaly As IEnumerable(Of Boolean) = Nothing, Optional severity As IEnumerable(Of Single) = Nothing) As EntireDetectResponse" />
      <MemberSignature Language="F#" Value="static member EntireDetectResponse : int * seq&lt;single&gt; * seq&lt;single&gt; * seq&lt;single&gt; * seq&lt;bool&gt; * seq&lt;bool&gt; * seq&lt;bool&gt; * seq&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.Models.EntireDetectResponse" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.EntireDetectResponse (period, expectedValues, upperMargins, lowerMargins, isAnomaly, isNegativeAnomaly, isPositiveAnomaly, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.EntireDetectResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="period" Type="System.Int32" />
        <Parameter Name="expectedValues" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        <Parameter Name="upperMargins" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        <Parameter Name="lowerMargins" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        <Parameter Name="isAnomaly" Type="System.Collections.Generic.IEnumerable&lt;System.Boolean&gt;" />
        <Parameter Name="isNegativeAnomaly" Type="System.Collections.Generic.IEnumerable&lt;System.Boolean&gt;" />
        <Parameter Name="isPositiveAnomaly" Type="System.Collections.Generic.IEnumerable&lt;System.Boolean&gt;" />
        <Parameter Name="severity" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="period"> Frequency extracted from the series, zero means no recurrent pattern has been found. </param>
        <param name="expectedValues"> ExpectedValues contain expected value for each input point. The index of the array is consistent with the input series. </param>
        <param name="upperMargins"> UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series. </param>
        <param name="lowerMargins"> LowerMargins contain lower margin of each input point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. Points between the boundary can be marked as normal ones in client side. The index of the array is consistent with the input series. </param>
        <param name="isAnomaly"> IsAnomaly contains anomaly properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series. </param>
        <param name="isNegativeAnomaly"> IsNegativeAnomaly contains anomaly status in negative direction for each input point. True means a negative anomaly has been detected. A negative anomaly means the point is detected as an anomaly and its real value is smaller than the expected one. The index of the array is consistent with the input series. </param>
        <param name="isPositiveAnomaly"> IsPositiveAnomaly contain anomaly status in positive direction for each input point. True means a positive anomaly has been detected. A positive anomaly means the point is detected as an anomaly and its real value is larger than the expected one. The index of the array is consistent with the input series. </param>
        <param name="severity"> The severity score for each input point. The larger the value is, the more sever the anomaly is. For normal points, the "severity" is always 0. </param>
        <summary> Initializes a new instance of EntireDetectResponse. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.EntireDetectResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorResponse">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.ErrorResponse ErrorResponse (string code = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.ErrorResponse ErrorResponse(string code, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ErrorResponse(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorResponse (Optional code As String = Nothing, Optional message As String = Nothing) As ErrorResponse" />
      <MemberSignature Language="F#" Value="static member ErrorResponse : string * string -&gt; Azure.AI.AnomalyDetector.Models.ErrorResponse" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ErrorResponse (code, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.ErrorResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> The error code. </param>
        <param name="message"> The message explaining the error reported by the service. </param>
        <summary> Initializes a new instance of ErrorResponse. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.ErrorResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.LastDetectionResult LastDetectionResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt; results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.LastDetectionResult LastDetectionResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.VariableState&gt; variableStates, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.AnomalyState&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.LastDetectionResult(System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.VariableState},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.AnomalyState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastDetectionResult (Optional variableStates As IEnumerable(Of VariableState) = Nothing, Optional results As IEnumerable(Of AnomalyState) = Nothing) As LastDetectionResult" />
      <MemberSignature Language="F#" Value="static member LastDetectionResult : seq&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt; * seq&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt; -&gt; Azure.AI.AnomalyDetector.Models.LastDetectionResult" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.LastDetectionResult (variableStates, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.LastDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableStates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.VariableState&gt;" />
        <Parameter Name="results" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.AnomalyState&gt;" />
      </Parameters>
      <Docs>
        <param name="variableStates" />
        <param name="results" />
        <summary> Initializes a new instance of LastDetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.LastDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastDetectResponse">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.LastDetectResponse LastDetectResponse (int period = 0, int suggestedWindow = 0, float expectedValue = 0, float upperMargin = 0, float lowerMargin = 0, bool isAnomaly = false, bool isNegativeAnomaly = false, bool isPositiveAnomaly = false, float? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.LastDetectResponse LastDetectResponse(int32 period, int32 suggestedWindow, float32 expectedValue, float32 upperMargin, float32 lowerMargin, bool isAnomaly, bool isNegativeAnomaly, bool isPositiveAnomaly, valuetype System.Nullable`1&lt;float32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.LastDetectResponse(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastDetectResponse (Optional period As Integer = 0, Optional suggestedWindow As Integer = 0, Optional expectedValue As Single = 0, Optional upperMargin As Single = 0, Optional lowerMargin As Single = 0, Optional isAnomaly As Boolean = false, Optional isNegativeAnomaly As Boolean = false, Optional isPositiveAnomaly As Boolean = false, Optional severity As Nullable(Of Single) = Nothing) As LastDetectResponse" />
      <MemberSignature Language="F#" Value="static member LastDetectResponse : int * int * single * single * single * bool * bool * bool * Nullable&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.Models.LastDetectResponse" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.LastDetectResponse (period, suggestedWindow, expectedValue, upperMargin, lowerMargin, isAnomaly, isNegativeAnomaly, isPositiveAnomaly, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.LastDetectResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="period" Type="System.Int32" />
        <Parameter Name="suggestedWindow" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="System.Single" />
        <Parameter Name="upperMargin" Type="System.Single" />
        <Parameter Name="lowerMargin" Type="System.Single" />
        <Parameter Name="isAnomaly" Type="System.Boolean" />
        <Parameter Name="isNegativeAnomaly" Type="System.Boolean" />
        <Parameter Name="isPositiveAnomaly" Type="System.Boolean" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="period"> Frequency extracted from the series, zero means no recurrent pattern has been found. </param>
        <param name="suggestedWindow"> Suggested input series points needed for detecting the latest point. </param>
        <param name="expectedValue"> Expected value of the latest point. </param>
        <param name="upperMargin"> Upper margin of the latest point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. If the value of latest point is between upperBoundary and lowerBoundary, it should be treated as normal value. By adjusting marginScale value, anomaly status of latest point can be changed. </param>
        <param name="lowerMargin"> Lower margin of the latest point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. </param>
        <param name="isAnomaly"> Anomaly status of the latest point, true means the latest point is an anomaly either in negative direction or positive direction. </param>
        <param name="isNegativeAnomaly"> Anomaly status in negative direction of the latest point. True means the latest point is an anomaly and its real value is smaller than the expected one. </param>
        <param name="isPositiveAnomaly"> Anomaly status in positive direction of the latest point. True means the latest point is an anomaly and its real value is larger than the expected one. </param>
        <param name="severity"> The severity score for the last input point. The larger the value is, the more sever the anomaly is. For normal points, the "severity" is always 0. </param>
        <summary> Initializes a new instance of LastDetectResponse. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.LastDetectResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.Model Model (Guid modelId = default, DateTimeOffset createdTime = default, DateTimeOffset lastUpdatedTime = default, Azure.AI.AnomalyDetector.Models.ModelInfo modelInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.Model Model(valuetype System.Guid modelId, valuetype System.DateTimeOffset createdTime, valuetype System.DateTimeOffset lastUpdatedTime, class Azure.AI.AnomalyDetector.Models.ModelInfo modelInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.Model(System.Guid,System.DateTimeOffset,System.DateTimeOffset,Azure.AI.AnomalyDetector.Models.ModelInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Model (Optional modelId As Guid = Nothing, Optional createdTime As DateTimeOffset = Nothing, Optional lastUpdatedTime As DateTimeOffset = Nothing, Optional modelInfo As ModelInfo = Nothing) As Model" />
      <MemberSignature Language="F#" Value="static member Model : Guid * DateTimeOffset * DateTimeOffset * Azure.AI.AnomalyDetector.Models.ModelInfo -&gt; Azure.AI.AnomalyDetector.Models.Model" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.Model (modelId, createdTime, lastUpdatedTime, modelInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.Model</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="createdTime" Type="System.DateTimeOffset" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="modelInfo" Type="Azure.AI.AnomalyDetector.Models.ModelInfo" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="createdTime"> Date and time (UTC) when the model was created. </param>
        <param name="lastUpdatedTime"> Date and time (UTC) when the model was last updated. </param>
        <param name="modelInfo"> Train result of a model including status, errors and diagnose info for model and variables. </param>
        <summary> Initializes a new instance of Model. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.Model" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelInfo">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.ModelInfo ModelInfo (int? slidingWindow = default, Azure.AI.AnomalyDetector.Models.AlignPolicy alignPolicy = default, string source = default, DateTimeOffset startTime = default, DateTimeOffset endTime = default, string displayName = default, Azure.AI.AnomalyDetector.Models.ModelStatus? status = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors = default, Azure.AI.AnomalyDetector.Models.DiagnosticsInfo diagnosticsInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.ModelInfo ModelInfo(valuetype System.Nullable`1&lt;int32&gt; slidingWindow, class Azure.AI.AnomalyDetector.Models.AlignPolicy alignPolicy, string source, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, string displayName, valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.Models.ModelStatus&gt; status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; errors, class Azure.AI.AnomalyDetector.Models.DiagnosticsInfo diagnosticsInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelInfo(System.Nullable{System.Int32},Azure.AI.AnomalyDetector.Models.AlignPolicy,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.Nullable{Azure.AI.AnomalyDetector.Models.ModelStatus},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.Models.ErrorResponse},Azure.AI.AnomalyDetector.Models.DiagnosticsInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelInfo (Optional slidingWindow As Nullable(Of Integer) = Nothing, Optional alignPolicy As AlignPolicy = Nothing, Optional source As String = Nothing, Optional startTime As DateTimeOffset = Nothing, Optional endTime As DateTimeOffset = Nothing, Optional displayName As String = Nothing, Optional status As Nullable(Of ModelStatus) = Nothing, Optional errors As IEnumerable(Of ErrorResponse) = Nothing, Optional diagnosticsInfo As DiagnosticsInfo = Nothing) As ModelInfo" />
      <MemberSignature Language="F#" Value="static member ModelInfo : Nullable&lt;int&gt; * Azure.AI.AnomalyDetector.Models.AlignPolicy * string * DateTimeOffset * DateTimeOffset * string * Nullable&lt;Azure.AI.AnomalyDetector.Models.ModelStatus&gt; * seq&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt; * Azure.AI.AnomalyDetector.Models.DiagnosticsInfo -&gt; Azure.AI.AnomalyDetector.Models.ModelInfo" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelInfo (slidingWindow, alignPolicy, source, startTime, endTime, displayName, status, errors, diagnosticsInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.ModelInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slidingWindow" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="alignPolicy" Type="Azure.AI.AnomalyDetector.Models.AlignPolicy" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.AI.AnomalyDetector.Models.ModelStatus&gt;" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.Models.ErrorResponse&gt;" />
        <Parameter Name="diagnosticsInfo" Type="Azure.AI.AnomalyDetector.Models.DiagnosticsInfo" />
      </Parameters>
      <Docs>
        <param name="slidingWindow"> An optional field, indicating how many previous points will be used to compute the anomaly score of the subsequent point. </param>
        <param name="alignPolicy" />
        <param name="source"> Source link to the input variables. Each variable should be a csv file with two columns, `timestamp` and `value`. By default, the file name of the variable will be used as its variable name. </param>
        <param name="startTime"> A required field, indicating the start time of training data. Should be date-time. </param>
        <param name="endTime"> A required field, indicating the end time of training data. Should be date-time. </param>
        <param name="displayName"> An optional field. The name of the model whose maximum length is 24. </param>
        <param name="status"> Model training status. </param>
        <param name="errors"> Error messages when failed to create a model. </param>
        <param name="diagnosticsInfo" />
        <summary> Initializes a new instance of ModelInfo. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.ModelInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelSnapshot">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.ModelSnapshot ModelSnapshot (Guid modelId = default, DateTimeOffset createdTime = default, DateTimeOffset lastUpdatedTime = default, Azure.AI.AnomalyDetector.Models.ModelStatus status = Azure.AI.AnomalyDetector.Models.ModelStatus.Created, string displayName = default, int variablesCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.ModelSnapshot ModelSnapshot(valuetype System.Guid modelId, valuetype System.DateTimeOffset createdTime, valuetype System.DateTimeOffset lastUpdatedTime, valuetype Azure.AI.AnomalyDetector.Models.ModelStatus status, string displayName, int32 variablesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelSnapshot(System.Guid,System.DateTimeOffset,System.DateTimeOffset,Azure.AI.AnomalyDetector.Models.ModelStatus,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelSnapshot (Optional modelId As Guid = Nothing, Optional createdTime As DateTimeOffset = Nothing, Optional lastUpdatedTime As DateTimeOffset = Nothing, Optional status As ModelStatus = Azure.AI.AnomalyDetector.Models.ModelStatus.Created, Optional displayName As String = Nothing, Optional variablesCount As Integer = 0) As ModelSnapshot" />
      <MemberSignature Language="F#" Value="static member ModelSnapshot : Guid * DateTimeOffset * DateTimeOffset * Azure.AI.AnomalyDetector.Models.ModelStatus * string * int -&gt; Azure.AI.AnomalyDetector.Models.ModelSnapshot" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelSnapshot (modelId, createdTime, lastUpdatedTime, status, displayName, variablesCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.ModelSnapshot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="createdTime" Type="System.DateTimeOffset" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="status" Type="Azure.AI.AnomalyDetector.Models.ModelStatus" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="variablesCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="createdTime"> Date and time (UTC) when the model was created. </param>
        <param name="lastUpdatedTime"> Date and time (UTC) when the model was last updated. </param>
        <param name="status"> Model training status. </param>
        <param name="displayName" />
        <param name="variablesCount"> Total number of variables. </param>
        <summary> Initializes a new instance of ModelSnapshot. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.ModelSnapshot" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.ModelState ModelState (System.Collections.Generic.IEnumerable&lt;int&gt; epochIds = default, System.Collections.Generic.IEnumerable&lt;float&gt; trainLosses = default, System.Collections.Generic.IEnumerable&lt;float&gt; validationLosses = default, System.Collections.Generic.IEnumerable&lt;float&gt; latenciesInSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.ModelState ModelState(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; epochIds, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; trainLosses, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; validationLosses, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; latenciesInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelState(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Single},System.Collections.Generic.IEnumerable{System.Single},System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelState (Optional epochIds As IEnumerable(Of Integer) = Nothing, Optional trainLosses As IEnumerable(Of Single) = Nothing, Optional validationLosses As IEnumerable(Of Single) = Nothing, Optional latenciesInSeconds As IEnumerable(Of Single) = Nothing) As ModelState" />
      <MemberSignature Language="F#" Value="static member ModelState : seq&lt;int&gt; * seq&lt;single&gt; * seq&lt;single&gt; * seq&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.Models.ModelState" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.ModelState (epochIds, trainLosses, validationLosses, latenciesInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.ModelState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="epochIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="trainLosses" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        <Parameter Name="validationLosses" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
        <Parameter Name="latenciesInSeconds" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="epochIds"> Epoch id. </param>
        <param name="trainLosses" />
        <param name="validationLosses" />
        <param name="latenciesInSeconds" />
        <summary> Initializes a new instance of ModelState. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.ModelState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VariableState">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.Models.VariableState VariableState (string variable = default, float? filledNARatio = default, int? effectiveCount = default, DateTimeOffset? startTime = default, DateTimeOffset? endTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.Models.VariableState VariableState(string variable, valuetype System.Nullable`1&lt;float32&gt; filledNARatio, valuetype System.Nullable`1&lt;int32&gt; effectiveCount, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.VariableState(System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VariableState (Optional variable As String = Nothing, Optional filledNARatio As Nullable(Of Single) = Nothing, Optional effectiveCount As Nullable(Of Integer) = Nothing, Optional startTime As Nullable(Of DateTimeOffset) = Nothing, Optional endTime As Nullable(Of DateTimeOffset) = Nothing) As VariableState" />
      <MemberSignature Language="F#" Value="static member VariableState : string * Nullable&lt;single&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.AI.AnomalyDetector.Models.VariableState" Usage="Azure.AI.AnomalyDetector.Models.AnomalyDetectorModelFactory.VariableState (variable, filledNARatio, effectiveCount, startTime, endTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Models.VariableState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" />
        <Parameter Name="filledNARatio" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="effectiveCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="variable"> Variable name. </param>
        <param name="filledNARatio"> Proportion of NaN values filled of the variable. </param>
        <param name="effectiveCount"> Number of effective points counted. </param>
        <param name="startTime"> Start time of the variable. </param>
        <param name="endTime"> End time of the variable. </param>
        <summary> Initializes a new instance of VariableState. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.Models.VariableState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
