<Type Name="IPartitionProcessor" FullName="Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IPartitionProcessor">
  <TypeSignature Language="C#" Value="public interface IPartitionProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPartitionProcessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IPartitionProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPartitionProcessor" />
  <TypeSignature Language="F#" Value="type IPartitionProcessor = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
    <AssemblyVersion>2.0.4.0</AssemblyVersion>
    <AssemblyVersion>2.0.6.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an API to run continious processing on a single partition of some resource.
            Created by <see cref="M:Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IPartitionProcessorFactory.Create(Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease,Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IChangeFeedObserver)" /> after some lease is acquired by the current host.
            Processing can perform the following tasks in a loop:
              1. Read some data from the resource partition.
              2. Handle possible problems with the read.
              3. Pass the obtained data to an observer by calling <see cref="M:Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IChangeFeedObserver.ProcessChangesAsync(Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IChangeFeedObserverContext,System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Documents.Document},System.Threading.CancellationToken)" /> with the context <see cref="T:Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IChangeFeedObserverContext" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="RunAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RunAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RunAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.FeedProcessing.IPartitionProcessor.RunAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iPartitionProcessor.RunAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.0.4.0</AssemblyVersion>
        <AssemblyVersion>2.0.6.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation token to be used to stop processing</param>
        <summary>
            Perform partition processing.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>