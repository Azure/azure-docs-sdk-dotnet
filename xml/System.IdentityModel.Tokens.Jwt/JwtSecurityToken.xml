<Type Name="JwtSecurityToken" FullName="System.IdentityModel.Tokens.Jwt.JwtSecurityToken">
  <TypeSignature Language="C#" Value="public class JwtSecurityToken : Microsoft.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JwtSecurityToken extends Microsoft.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class JwtSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="F#" Value="type JwtSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
    <AssemblyVersion>5.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> designed for representing a JSON Web Token (JWT).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtSecurityToken (string jwtEncodedString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string jwtEncodedString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jwtEncodedString As String)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken : string -&gt; System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken jwtEncodedString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jwtEncodedString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jwtEncodedString">A JSON Web Token that has been serialized in JWS Compact serialized format.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> from a string in JWS Compact serialized format.
            </summary>
        <remarks>
            The contents of this <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> have not been validated, the JSON Web Token is simply decoded. Validation can be accomplished using <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters,Microsoft.IdentityModel.Tokens.SecurityToken@)" /></remarks>
        <exception cref="T:System.ArgumentNullException">'jwtEncodedString' is null.</exception>
        <exception cref="T:System.ArgumentException">'jwtEncodedString' is not in JWS Compact serialized format.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtSecurityToken (System.IdentityModel.Tokens.Jwt.JwtHeader header, System.IdentityModel.Tokens.Jwt.JwtPayload payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.Jwt.JwtHeader header, class System.IdentityModel.Tokens.Jwt.JwtPayload payload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (header As JwtHeader, payload As JwtPayload)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken : System.IdentityModel.Tokens.Jwt.JwtHeader * System.IdentityModel.Tokens.Jwt.JwtPayload -&gt; System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken (header, payload)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="header" Type="System.IdentityModel.Tokens.Jwt.JwtHeader" />
        <Parameter Name="payload" Type="System.IdentityModel.Tokens.Jwt.JwtPayload" />
      </Parameters>
      <Docs>
        <param name="header">Contains JSON objects representing the cryptographic operations applied to the JWT and optionally any additional properties of the JWT</param>
        <param name="payload">Contains JSON objects representing the claims contained in the JWT. Each claim is a JSON object of the form { Name, Value }</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> class where the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> contains the crypto algorithms applied to the encoded <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> and <see cref="T:System.IdentityModel.Tokens.Jwt.JwtPayload" />. The jwtEncodedString is the result of those operations.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">'payload' is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtSecurityToken (System.IdentityModel.Tokens.Jwt.JwtHeader header, System.IdentityModel.Tokens.Jwt.JwtPayload payload, string rawHeader, string rawPayload, string rawSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.Jwt.JwtHeader header, class System.IdentityModel.Tokens.Jwt.JwtPayload payload, string rawHeader, string rawPayload, string rawSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (header As JwtHeader, payload As JwtPayload, rawHeader As String, rawPayload As String, rawSignature As String)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken : System.IdentityModel.Tokens.Jwt.JwtHeader * System.IdentityModel.Tokens.Jwt.JwtPayload * string * string * string -&gt; System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken (header, payload, rawHeader, rawPayload, rawSignature)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="header" Type="System.IdentityModel.Tokens.Jwt.JwtHeader" />
        <Parameter Name="payload" Type="System.IdentityModel.Tokens.Jwt.JwtPayload" />
        <Parameter Name="rawHeader" Type="System.String" />
        <Parameter Name="rawPayload" Type="System.String" />
        <Parameter Name="rawSignature" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">Contains JSON objects representing the cryptographic operations applied to the JWT and optionally any additional properties of the JWT</param>
        <param name="payload">Contains JSON objects representing the claims contained in the JWT. Each claim is a JSON object of the form { Name, Value }</param>
        <param name="rawHeader">base64urlencoded JwtHeader</param>
        <param name="rawPayload">base64urlencoded JwtPayload</param>
        <param name="rawSignature">base64urlencoded JwtSignature</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> class where the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> contains the crypto algorithms applied to the encoded <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> and <see cref="T:System.IdentityModel.Tokens.Jwt.JwtPayload" />. The jwtEncodedString is the result of those operations.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">'rawSignature' is null.</exception>
        <exception cref="T:System.ArgumentException">'rawHeader' or 'rawPayload' is null or whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtSecurityToken (string issuer = null, string audience = null, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims = null, Nullable&lt;DateTime&gt; notBefore = null, Nullable&lt;DateTime&gt; expires = null, Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuer, string audience, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBefore, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; expires, class Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken : string * string * seq&lt;System.Security.Claims.Claim&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Microsoft.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken (issuer, audience, claims, notBefore, expires, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="audience" Type="System.String" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="notBefore" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="expires" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="signingCredentials" Type="Microsoft.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="issuer">If this value is not null, a { iss, 'issuer' } claim will be added.</param>
        <param name="audience">If this value is not null, a { aud, 'audience' } claim will be added</param>
        <param name="claims">If this value is not null then for each <see cref="T:System.Security.Claims.Claim" /> a { 'Claim.Type', 'Claim.Value' } is added. If duplicate claims are found then a { 'Claim.Type', List&lt;object&gt; } will be created to contain the duplicate values.</param>
        <param name="notBefore">If notbefore.HasValue a { nbf, 'value' } claim is added.</param>
        <param name="expires">If expires.HasValue a { exp, 'value' } claim is added.</param>
        <param name="signingCredentials">The <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningCredentials" /> that will be used to sign the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" />. See <see cref="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor(Microsoft.IdentityModel.Tokens.SigningCredentials)" /> for details pertaining to the Header Parameter(s).</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> class specifying optional parameters.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">If 'expires' &lt;= 'notbefore'.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtSecurityToken (System.IdentityModel.Tokens.Jwt.JwtHeader header, System.IdentityModel.Tokens.Jwt.JwtSecurityToken innerToken, string rawHeader, string rawEncryptedKey, string rawInitializationVector, string rawCiphertext, string rawAuthenticationTag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.Jwt.JwtHeader header, class System.IdentityModel.Tokens.Jwt.JwtSecurityToken innerToken, string rawHeader, string rawEncryptedKey, string rawInitializationVector, string rawCiphertext, string rawAuthenticationTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtSecurityToken,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (header As JwtHeader, innerToken As JwtSecurityToken, rawHeader As String, rawEncryptedKey As String, rawInitializationVector As String, rawCiphertext As String, rawAuthenticationTag As String)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken : System.IdentityModel.Tokens.Jwt.JwtHeader * System.IdentityModel.Tokens.Jwt.JwtSecurityToken * string * string * string * string * string -&gt; System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="new System.IdentityModel.Tokens.Jwt.JwtSecurityToken (header, innerToken, rawHeader, rawEncryptedKey, rawInitializationVector, rawCiphertext, rawAuthenticationTag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="header" Type="System.IdentityModel.Tokens.Jwt.JwtHeader" />
        <Parameter Name="innerToken" Type="System.IdentityModel.Tokens.Jwt.JwtSecurityToken" />
        <Parameter Name="rawHeader" Type="System.String" />
        <Parameter Name="rawEncryptedKey" Type="System.String" />
        <Parameter Name="rawInitializationVector" Type="System.String" />
        <Parameter Name="rawCiphertext" Type="System.String" />
        <Parameter Name="rawAuthenticationTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">Defines cryptographic operations applied to the 'innerToken'.</param>
        <param name="innerToken"></param>
        <param name="rawHeader">base64urlencoded JwtHeader</param>
        <param name="rawEncryptedKey">base64urlencoded key</param>
        <param name="rawInitializationVector">base64urlencoded initialization vector.</param>
        <param name="rawCiphertext">base64urlencoded encrypted innerToken</param>
        <param name="rawAuthenticationTag">base64urlencoded authentication tag.</param>
        <summary>
            Initializes an instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> where the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> contains the crypto algorithms applied to the innerToken <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">'rawAuthenticationTag' is null or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Actor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actor As String" />
      <MemberSignature Language="F#" Value="member this.Actor : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 'value' of the 'actor' claim { actort, 'value' }.
            </summary>
        <value>To be added.</value>
        <remarks>If the 'actor' claim is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Audiences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; Audiences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Audiences" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Audiences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Audiences As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.Audiences : seq&lt;string&gt;" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Audiences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of 'audience' claim { aud, 'value' }.
            </summary>
        <value>To be added.</value>
        <remarks>If the 'audience' claim is not found, enumeration will be empty.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Security.Claims.Claim" />(s) for this token.
            If this is a JWE token, this property only returns the encrypted claims;
             the unencrypted claims should be read from the header seperately.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:System.Security.Claims.Claim" />(s) returned will NOT have the <see cref="P:System.Security.Claims.Claim.Type" /> translated according to <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.InboundClaimTypeMap" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedHeader">
      <MemberSignature Language="C#" Value="public virtual string EncodedHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedHeader" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncodedHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodedHeader As String" />
      <MemberSignature Language="F#" Value="member this.EncodedHeader : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncodedHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Base64UrlEncoded <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> associated with this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedPayload">
      <MemberSignature Language="C#" Value="public virtual string EncodedPayload { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedPayload" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncodedPayload" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodedPayload As String" />
      <MemberSignature Language="F#" Value="member this.EncodedPayload : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncodedPayload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Base64UrlEncoded <see cref="T:System.IdentityModel.Tokens.Jwt.JwtPayload" /> associated with this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : Microsoft.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets teh <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.EncryptingCredentials" /> to use when writing this token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.Jwt.JwtHeader Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.Jwt.JwtHeader Header" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As JwtHeader" />
      <MemberSignature Language="F#" Value="member this.Header : System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Jwt.JwtHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> associated with this instance if the token is signed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 'value' of the 'JWT ID' claim { jti, ''value' }.
            </summary>
        <value>To be added.</value>
        <remarks>If the 'JWT ID' claim is not found, an empty string is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.Jwt.JwtSecurityToken InnerToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.Jwt.JwtSecurityToken InnerToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.InnerToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerToken As JwtSecurityToken" />
      <MemberSignature Language="F#" Value="member this.InnerToken : System.IdentityModel.Tokens.Jwt.JwtSecurityToken" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.InnerToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Jwt.JwtSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> associated with this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public override string Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Issuer As String" />
      <MemberSignature Language="F#" Value="member this.Issuer : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 'value' of the 'issuer' claim { iss, 'value' }.
            </summary>
        <value>To be added.</value>
        <remarks>If the 'issuer' claim is not found, an empty string is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Payload">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.Jwt.JwtPayload Payload { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.Jwt.JwtPayload Payload" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Payload" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Payload As JwtPayload" />
      <MemberSignature Language="F#" Value="member this.Payload : System.IdentityModel.Tokens.Jwt.JwtPayload" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Payload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Jwt.JwtPayload</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtPayload" /> associated with this instance.
            Note that if this JWT is nested ( <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.InnerToken" /> != null, this property represnts the payload of the most inner token.
            This property can be null if the content type of the most inner token is unrecognized, in that case
             the content of the token is the string returned by PlainText property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawAuthenticationTag">
      <MemberSignature Language="C#" Value="public string RawAuthenticationTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawAuthenticationTag" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawAuthenticationTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawAuthenticationTag As String" />
      <MemberSignature Language="F#" Value="member this.RawAuthenticationTag : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawAuthenticationTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawCiphertext">
      <MemberSignature Language="C#" Value="public string RawCiphertext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawCiphertext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawCiphertext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawCiphertext As String" />
      <MemberSignature Language="F#" Value="member this.RawCiphertext : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawCiphertext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public string RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawData" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As String" />
      <MemberSignature Language="F#" Value="member this.RawData : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawEncryptedKey">
      <MemberSignature Language="C#" Value="public string RawEncryptedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawEncryptedKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawEncryptedKey As String" />
      <MemberSignature Language="F#" Value="member this.RawEncryptedKey : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawEncryptedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawHeader">
      <MemberSignature Language="C#" Value="public string RawHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawHeader" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawHeader As String" />
      <MemberSignature Language="F#" Value="member this.RawHeader : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawInitializationVector">
      <MemberSignature Language="C#" Value="public string RawInitializationVector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawInitializationVector" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawInitializationVector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawInitializationVector As String" />
      <MemberSignature Language="F#" Value="member this.RawInitializationVector : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawInitializationVector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawPayload">
      <MemberSignature Language="C#" Value="public string RawPayload { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawPayload" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawPayload" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawPayload As String" />
      <MemberSignature Language="F#" Value="member this.RawPayload : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawPayload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSignature">
      <MemberSignature Language="C#" Value="public string RawSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawSignature" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawSignature As String" />
      <MemberSignature Language="F#" Value="member this.RawSignature : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.RawSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original raw data of this instance when it was created.
            </summary>
        <value>To be added.</value>
        <remarks>The original JSON Compact serialized format passed to one of the two constructors <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.String)" />
            or <see cref="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.#ctor(System.IdentityModel.Tokens.Jwt.JwtHeader,System.IdentityModel.Tokens.Jwt.JwtPayload,System.String,System.String,System.String)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKey">
      <MemberSignature Language="C#" Value="public override Microsoft.IdentityModel.Tokens.SecurityKey SecurityKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.SecurityKey SecurityKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SecurityKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKey As SecurityKey" />
      <MemberSignature Language="F#" Value="member this.SecurityKey : Microsoft.IdentityModel.Tokens.SecurityKey" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SecurityKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SecurityKey" />s for this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the signature algorithm associated with this instance.
            </summary>
        <value>To be added.</value>
        <remarks>If there is a <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningCredentials" /> associated with this instance, a value will be returned.  Null otherwise.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : Microsoft.IdentityModel.Tokens.SigningCredentials" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningCredentials" /> to use when writing this token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public override Microsoft.IdentityModel.Tokens.SecurityKey SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.SecurityKey SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SigningKey As SecurityKey" />
      <MemberSignature Language="F#" Value="member this.SigningKey : Microsoft.IdentityModel.Tokens.SecurityKey with get, set" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SecurityKey" /> that signed this instance.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler" />.ValidateSignature(...) sets this value when a <see cref="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SecurityKey" /> is used to successfully validate a signature.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Subject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subject As String" />
      <MemberSignature Language="F#" Value="member this.Subject : string" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "value" of the 'subject' claim { sub, 'value' }.
            </summary>
        <value>To be added.</value>
        <remarks>If the 'subject' claim is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jwtSecurityToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> and <see cref="T:System.IdentityModel.Tokens.Jwt.JwtPayload" /></summary>
        <returns>A string containing the header and payload in JSON format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 'value' of the 'notbefore' claim { nbf, 'value' } converted to a <see cref="T:System.DateTime" /> assuming 'value' is seconds since UnixEpoch (UTC 1970-01-01T0:0:0Z).
            </summary>
        <value>To be added.</value>
        <remarks>If the 'notbefore' claim is not found, then <see cref="F:System.DateTime.MinValue" /> is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 'value' of the 'expiration' claim { exp, 'value' } converted to a <see cref="T:System.DateTime" /> assuming 'value' is seconds since UnixEpoch (UTC 1970-01-01T0:0:0Z).
            </summary>
        <value>To be added.</value>
        <remarks>If the 'expiration' claim is not found, then <see cref="F:System.DateTime.MinValue" /> is returned.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>