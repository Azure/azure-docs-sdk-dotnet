<Type Name="JwtHeader" FullName="System.IdentityModel.Tokens.Jwt.JwtHeader">
  <TypeSignature Language="C#" Value="public class JwtHeader : System.Collections.Generic.Dictionary&lt;string,object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JwtHeader extends System.Collections.Generic.Dictionary`2&lt;string, object&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />
  <TypeSignature Language="VB.NET" Value="Public Class JwtHeader&#xA;Inherits Dictionary(Of String, Object)" />
  <TypeSignature Language="F#" Value="type JwtHeader = class&#xA;    inherit Dictionary&lt;string, obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
    <AssemblyVersion>5.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.String</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Object</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> which contains JSON objects representing the cryptographic operations applied to the JWT and optionally any additional properties of the JWT. 
            The member names within the JWT Header are referred to as Header Parameter Names.
            <para>These names MUST be unique and the values must be <see cref="T:System.String" />(s). The corresponding values are referred to as Header Parameter Values.</para></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> class. Default string comparer <see cref="P:System.StringComparer.Ordinal" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtHeader (Microsoft.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor(Microsoft.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtHeader : Microsoft.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="new System.IdentityModel.Tokens.Jwt.JwtHeader encryptingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptingCredentials" Type="Microsoft.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="encryptingCredentials">
          <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.EncryptingCredentials" /> used creating a JWE Compact JSON.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.
            With the Header Parameters:
            <para>{ { typ, JWT }, { alg, EncryptingCredentials.Alg }, { enc, EncryptingCredentials.Enc } }</para></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'encryptingCredentials' is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtHeader (Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor(Microsoft.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtHeader : Microsoft.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="new System.IdentityModel.Tokens.Jwt.JwtHeader signingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingCredentials" Type="Microsoft.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="signingCredentials">
          <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.SigningCredentials" /> used creating a JWS Compact JSON.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.
            With the Header Parameters:
            <para>{ { typ, JWT }, { alg, SigningCredentials.Algorithm } }</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtHeader (Microsoft.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials, System.Collections.Generic.IDictionary&lt;string,string&gt; outboundAlgorithmMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; outboundAlgorithmMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor(Microsoft.IdentityModel.Tokens.EncryptingCredentials,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtHeader : Microsoft.IdentityModel.Tokens.EncryptingCredentials * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="new System.IdentityModel.Tokens.Jwt.JwtHeader (encryptingCredentials, outboundAlgorithmMap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptingCredentials" Type="Microsoft.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="outboundAlgorithmMap" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="encryptingCredentials">
          <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.EncryptingCredentials" /> used when creating a JWS Compact JSON.</param>
        <param name="outboundAlgorithmMap">provides a mapping for the 'alg' value so that values are within the JWT namespace.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.
            With the Header Parameters:
            <para>{ { typ, JWT }, { alg, SigningCredentials.Algorithm } }</para></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'signingCredentials' is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JwtHeader (Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials, System.Collections.Generic.IDictionary&lt;string,string&gt; outboundAlgorithmMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; outboundAlgorithmMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.#ctor(Microsoft.IdentityModel.Tokens.SigningCredentials,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Jwt.JwtHeader : Microsoft.IdentityModel.Tokens.SigningCredentials * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="new System.IdentityModel.Tokens.Jwt.JwtHeader (signingCredentials, outboundAlgorithmMap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingCredentials" Type="Microsoft.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="outboundAlgorithmMap" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="signingCredentials">
          <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.SigningCredentials" /> used when creating a JWS Compact JSON.</param>
        <param name="outboundAlgorithmMap">provides a mapping for the 'alg' value so that values are within the JWT namespace.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.
            With the Header Parameters:
            <para>{ { typ, JWT }, { alg, SigningCredentials.Algorithm } }</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alg">
      <MemberSignature Language="C#" Value="public string Alg { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alg" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.Alg" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alg As String" />
      <MemberSignature Language="F#" Value="member this.Alg : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Alg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the signature algorithm that was used to create the signature.
            </summary>
        <value>To be added.</value>
        <remarks>If the signature algorithm is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64UrlDeserialize">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Tokens.Jwt.JwtHeader Base64UrlDeserialize (string base64UrlEncodedJsonString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Tokens.Jwt.JwtHeader Base64UrlDeserialize(string base64UrlEncodedJsonString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.Base64UrlDeserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Base64UrlDeserialize (base64UrlEncodedJsonString As String) As JwtHeader" />
      <MemberSignature Language="F#" Value="static member Base64UrlDeserialize : string -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Base64UrlDeserialize base64UrlEncodedJsonString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Jwt.JwtHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base64UrlEncodedJsonString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="base64UrlEncodedJsonString">Base64url encoded JSON to deserialize.</param>
        <summary>
            Deserializes Base64UrlEncoded JSON into a <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> instance.
            </summary>
        <returns>An instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.</returns>
        <remarks>Use <see cref="P:System.IdentityModel.Tokens.Jwt.JsonExtensions.Deserializer" /> to customize JSON serialization.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64UrlEncode">
      <MemberSignature Language="C#" Value="public virtual string Base64UrlEncode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Base64UrlEncode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.Base64UrlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Base64UrlEncode () As String" />
      <MemberSignature Language="F#" Value="abstract member Base64UrlEncode : unit -&gt; string&#xA;override this.Base64UrlEncode : unit -&gt; string" Usage="jwtHeader.Base64UrlEncode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Encodes this instance as Base64UrlEncoded JSON.
            </summary>
        <returns>Base64UrlEncoded JSON.</returns>
        <remarks>Use <see cref="P:System.IdentityModel.Tokens.Jwt.JsonExtensions.Serializer" /> to customize JSON serialization.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cty">
      <MemberSignature Language="C#" Value="public string Cty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Cty" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.Cty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cty As String" />
      <MemberSignature Language="F#" Value="member this.Cty : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Cty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the content mime type (Cty) of the token.
            </summary>
        <value>To be added.</value>
        <remarks>If the content mime type is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Tokens.Jwt.JwtHeader Deserialize (string jsonString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Tokens.Jwt.JwtHeader Deserialize(string jsonString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (jsonString As String) As JwtHeader" />
      <MemberSignature Language="F#" Value="static member Deserialize : string -&gt; System.IdentityModel.Tokens.Jwt.JwtHeader" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Deserialize jsonString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Jwt.JwtHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jsonString"> The JSON to deserialize.</param>
        <summary>
            Deserialzes JSON into a <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" /> instance.
            </summary>
        <returns>An instance of <see cref="T:System.IdentityModel.Tokens.Jwt.JwtHeader" />.</returns>
        <remarks>Use <see cref="P:System.IdentityModel.Tokens.Jwt.JsonExtensions.Deserializer" /> to customize JSON serialization.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enc">
      <MemberSignature Language="C#" Value="public string Enc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enc" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.Enc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Enc As String" />
      <MemberSignature Language="F#" Value="member this.Enc : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Enc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the encryption algorithm (Enc) of the token.
            </summary>
        <value>To be added.</value>
        <remarks>If the content mime type is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : Microsoft.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.EncryptingCredentials" /> passed in the constructor.
            </summary>
        <value>To be added.</value>
        <remarks>This value may be null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public string IV { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IV" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.IV" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IV As String" />
      <MemberSignature Language="F#" Value="member this.IV : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.IV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the iv of symmetric key wrap.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kid">
      <MemberSignature Language="C#" Value="public string Kid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Kid" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.Kid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kid As String" />
      <MemberSignature Language="F#" Value="member this.Kid : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Kid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the key identifier for the security key used to sign the token
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToJson">
      <MemberSignature Language="C#" Value="public virtual string SerializeToJson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SerializeToJson() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Jwt.JwtHeader.SerializeToJson" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeToJson () As String" />
      <MemberSignature Language="F#" Value="abstract member SerializeToJson : unit -&gt; string&#xA;override this.SerializeToJson : unit -&gt; string" Usage="jwtHeader.SerializeToJson " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes this instance to JSON.
            </summary>
        <returns>This instance as JSON.</returns>
        <remarks>Use <see cref="P:System.IdentityModel.Tokens.Jwt.JsonExtensions.Serializer" /> to customize JSON serialization.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : Microsoft.IdentityModel.Tokens.SigningCredentials" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.IdentityModel.Tokens.Jwt.JwtHeader.SigningCredentials" /> passed in the constructor.
            </summary>
        <value>To be added.</value>
        <remarks>This value may be null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Typ">
      <MemberSignature Language="C#" Value="public string Typ { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Typ" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.Typ" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typ As String" />
      <MemberSignature Language="F#" Value="member this.Typ : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.Typ" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mime type (Typ) of the token.
            </summary>
        <value>To be added.</value>
        <remarks>If the mime type is not found, null is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X5t">
      <MemberSignature Language="C#" Value="public string X5t { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string X5t" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Jwt.JwtHeader.X5t" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X5t As String" />
      <MemberSignature Language="F#" Value="member this.X5t : string" Usage="System.IdentityModel.Tokens.Jwt.JwtHeader.X5t" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Tokens.Jwt</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the thumbprint of the certificate used to sign the token
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>