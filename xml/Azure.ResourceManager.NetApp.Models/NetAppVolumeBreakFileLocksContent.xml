<Type Name="NetAppVolumeBreakFileLocksContent" FullName="Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent">
  <TypeSignature Language="C#" Value="public class NetAppVolumeBreakFileLocksContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetAppVolumeBreakFileLocksContent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent" />
  <TypeSignature Language="VB.NET" Value="Public Class NetAppVolumeBreakFileLocksContent" />
  <TypeSignature Language="F#" Value="type NetAppVolumeBreakFileLocksContent = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Break file locks request. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetAppVolumeBreakFileLocksContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of NetAppVolumeBreakFileLocksContent. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIP">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress ClientIP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress ClientIP" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent.ClientIP" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientIP As IPAddress" />
      <MemberSignature Language="F#" Value="member this.ClientIP : System.Net.IPAddress with get, set" Usage="Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent.ClientIP" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> To clear file locks on a volume for a particular client. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmRunningDisruptiveOperation">
      <MemberSignature Language="C#" Value="public bool? ConfirmRunningDisruptiveOperation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ConfirmRunningDisruptiveOperation" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent.ConfirmRunningDisruptiveOperation" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfirmRunningDisruptiveOperation As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ConfirmRunningDisruptiveOperation : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.NetApp.Models.NetAppVolumeBreakFileLocksContent.ConfirmRunningDisruptiveOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NetApp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Break File locks could be a disruptive operation for application as locks on the volume will be broken, if want to process, set to true. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
