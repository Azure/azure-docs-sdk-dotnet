<Type Name="MonitoringClient" FullName="Azure.Analytics.Synapse.Monitoring.MonitoringClient">
  <TypeSignature Language="C#" Value="public class MonitoringClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MonitoringClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Monitoring.MonitoringClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MonitoringClient" />
  <TypeSignature Language="F#" Value="type MonitoringClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Monitoring service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MonitoringClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of MonitoringClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonitoringClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Monitoring.MonitoringClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Monitoring.MonitoringClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Monitoring.MonitoringClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As MonitoringClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Monitoring.MonitoringClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Monitoring.MonitoringClientOptions -&gt; Azure.Analytics.Synapse.Monitoring.MonitoringClient" Usage="new Azure.Analytics.Synapse.Monitoring.MonitoringClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Monitoring.MonitoringClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of MonitoringClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkJobList">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt; GetSparkJobList (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt; GetSparkJobList(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.GetSparkJobList(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkJobList (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkJobListViewResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkJobList : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&#xA;override this.GetSparkJobList : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;" Usage="monitoringClient.GetSparkJobList cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get list of spark applications for the workspace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkJobListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&gt; GetSparkJobListAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&gt; GetSparkJobListAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.GetSparkJobListAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkJobListAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkJobListViewResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkJobListAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&gt;&#xA;override this.GetSparkJobListAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&gt;" Usage="monitoringClient.GetSparkJobListAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SparkJobListViewResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get list of spark applications for the workspace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlJobQueryString">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt; GetSqlJobQueryString (string filter = default, string orderby = default, string skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt; GetSqlJobQueryString(string filter, string orderby, string skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.GetSqlJobQueryString(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlJobQueryString (Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional skip As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlQueryStringDataModel)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlJobQueryString : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&#xA;override this.GetSqlJobQueryString : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;" Usage="monitoringClient.GetSqlJobQueryString (filter, orderby, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The <see cref="T:System.String" /> to use. </param>
        <param name="orderby"> The <see cref="T:System.String" /> to use. </param>
        <param name="skip"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get SQL OD/DW Query for the workspace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlJobQueryStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&gt; GetSqlJobQueryStringAsync (string filter = default, string orderby = default, string skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&gt; GetSqlJobQueryStringAsync(string filter, string orderby, string skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Monitoring.MonitoringClient.GetSqlJobQueryStringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlJobQueryStringAsync (Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional skip As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlQueryStringDataModel))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlJobQueryStringAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&gt;&#xA;override this.GetSqlJobQueryStringAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&gt;" Usage="monitoringClient.GetSqlJobQueryStringAsync (filter, orderby, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Monitoring</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Monitoring.Models.SqlQueryStringDataModel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The <see cref="T:System.String" /> to use. </param>
        <param name="orderby"> The <see cref="T:System.String" /> to use. </param>
        <param name="skip"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get SQL OD/DW Query for the workspace. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
