<?xml version="1.0" encoding="utf-8"?>
<Framework Name="azure-dotnet-legacy">
  <Assemblies>
    <Assembly Name="Microsoft.Azure.Devices.Client" Version="1.36.6.0" />
    <Assembly Name="Microsoft.Azure.Devices.Provisioning.Transport.Amqp" Version="1.13.7.0" />
    <Assembly Name="Microsoft.Azure.EventHubs" Version="4.3.2.0" />
    <Assembly Name="Microsoft.Azure.EventHubs.Processor" Version="4.3.2.0" />
    <Assembly Name="Microsoft.Azure.KeyVault.Core" Version="3.0.5.0" />
    <Assembly Name="Microsoft.Azure.KeyVault.Cryptography" Version="3.0.5.0" />
    <Assembly Name="Microsoft.Azure.KeyVault" Version="3.0.5.0" />
    <Assembly Name="Microsoft.Azure.KeyVault.WebKey" Version="3.0.5.0" />
    <Assembly Name="Microsoft.Azure.Management.Kusto" Version="3.0.0.0" />
    <Assembly Name="Microsoft.Azure.Storage.Blob" Version="11.1.0.0" />
    <Assembly Name="Microsoft.Azure.Storage.Common" Version="11.1.0.0" />
    <Assembly Name="Microsoft.Azure.Storage.File" Version="11.1.1.0" />
    <Assembly Name="Microsoft.Azure.Storage.Queue" Version="11.1.0.0" />
    <Assembly Name="Microsoft.Azure.WebJobs.Extensions.DurableTask" Version="1.0.0.0" />
    <Assembly Name="Microsoft.ServiceFabric.Internal" Version="8.0.0.0" />
    <Assembly Name="Microsoft.ServiceFabric.Internal.Strings" Version="8.0.0.0" />
    <Assembly Name="Microsoft.ServiceFabric.Preview" Version="8.0.0.0" />
    <Assembly Name="StartupServicesModel" Version="8.0.0.0" />
    <Assembly Name="System.Fabric" Version="8.0.0.0" />
    <Assembly Name="System.Fabric.Management.ServiceModel" Version="8.0.0.0" />
    <Assembly Name="System.Fabric.Strings" Version="8.0.0.0" />
  </Assemblies>
  <Namespace Name="Microsoft.Azure.Devices.Client">
    <Type Name="Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings" Id="T:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings">
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.AbsoluteMaxPoolSize" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.Equals(Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.ConnectionIdleTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.MaxPoolSize" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.Pooling" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AmqpTransportSettings" Id="T:Microsoft.Azure.Devices.Client.AmqpTransportSettings">
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultIdleTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultOpenTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultOperationTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultPrefetchCount" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType,System.UInt32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType,System.UInt32,Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.Equals(Microsoft.Azure.Devices.Client.AmqpTransportSettings)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.AmqpConnectionPoolSettings" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.CertificateRevocationCheck" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.IdleTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.OpenTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.OperationTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.PrefetchCount" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.Proxy" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.RemoteCertificateValidationCallback" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AuthenticationMethodFactory" Id="T:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory">
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithRegistrySymmetricKey(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithRegistrySymmetricKey(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithSharedAccessPolicyKey(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithToken(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithToken(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.#ctor(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.GetTokenAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.SafeCreateNewToken(System.String,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.ExpiresOn" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.IsExpiring" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.RefreshesOn" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ClientOptions" Id="T:Microsoft.Azure.Devices.Client.ClientOptions">
      <Member Id="M:Microsoft.Azure.Devices.Client.ClientOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.FileUploadTransportSettings" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.ModelId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.SdkAssignsMessageId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatus" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatus">
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Connected" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disabled" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disconnected" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disconnected_Retrying" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason">
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Bad_Credential" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Client_Close" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Communication_Error" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Connection_Ok" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Device_Disabled" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Expired_SAS_Token" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.No_Network" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Retry_Expired" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler" />
    <Type Name="Microsoft.Azure.Devices.Client.DeliveryAcknowledgement" Id="T:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement">
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.Full" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.NegativeOnly" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.None" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.PositiveOnly" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback" Id="T:Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.KeyAsBase64String" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.PolicyName" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.#ctor(System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.DeviceId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.#ctor(System.String,Microsoft.Azure.Devices.Shared.SecurityProviderTpm)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.#ctor(System.String,Microsoft.Azure.Devices.Shared.SecurityProviderTpm,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.SafeCreateNewToken(System.String,System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.Certificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.ChainCertificates" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.DeviceId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceClient" Id="T:Microsoft.Azure.Devices.Client.DeviceClient">
      <Member Id="F:Microsoft.Azure.Devices.Client.DeviceClient.DefaultOperationTimeoutInMilliseconds" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteFileUploadAsync(Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetFileUploadSasUriAsync(Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetTwinAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetTwinAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetConnectionStatusChangesHandler(Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallback(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetReceiveMessageHandlerAsync(Microsoft.Azure.Devices.Client.ReceiveMessageCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetRetryPolicy(Microsoft.Azure.Devices.Client.IRetryPolicy)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UploadToBlobAsync(System.String,System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UploadToBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.DiagnosticSamplingPercentage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.ProductInfo" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ExponentialBackoff" Id="T:Microsoft.Azure.Devices.Client.ExponentialBackoff">
      <Member Id="M:Microsoft.Azure.Devices.Client.ExponentialBackoff.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ExponentialBackoff.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Http1TransportSettings" Id="T:Microsoft.Azure.Devices.Client.Http1TransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.Http1TransportSettings.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Http1TransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.Proxy" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IAuthenticationMethod" Id="T:Microsoft.Azure.Devices.Client.IAuthenticationMethod">
      <Member Id="M:Microsoft.Azure.Devices.Client.IAuthenticationMethod.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder" Id="T:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder">
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.ToString" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.AuthenticationMethod" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.GatewayHostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.HostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.ModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessKey" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessKeyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessSignature" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.UsingX509Cert" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IReadOnlyIndicator" Id="T:Microsoft.Azure.Devices.Client.IReadOnlyIndicator">
      <Member Id="P:Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IRetryPolicy" Id="T:Microsoft.Azure.Devices.Client.IRetryPolicy">
      <Member Id="M:Microsoft.Azure.Devices.Client.IRetryPolicy.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ITransportSettings" Id="T:Microsoft.Azure.Devices.Client.ITransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Message" Id="T:Microsoft.Azure.Devices.Client.Message">
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.CloneWithBody(System.Byte[]@)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.GetBodyStream" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.GetBytes" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.SetAsSecurityMessage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.BodyStream" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ComponentName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ConnectionDeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ConnectionModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ContentType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.CreationTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.DeliveryCount" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.InputName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.IsSecurityMessage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.LockToken" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.MessageId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.MessageSchema" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.Properties" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.SequenceNumber" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.To" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.UserId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MessageHandler" Id="T:Microsoft.Azure.Devices.Client.MessageHandler" />
    <Type Name="Microsoft.Azure.Devices.Client.MessageResponse" Id="T:Microsoft.Azure.Devices.Client.MessageResponse">
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.Abandoned" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.Completed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.None" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodCallback" Id="T:Microsoft.Azure.Devices.Client.MethodCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.MethodRequest" Id="T:Microsoft.Azure.Devices.Client.MethodRequest">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Byte[],System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.ConnectionTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.Data" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.DataAsJson" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.Name" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.ResponseTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodRequestInternal" Id="T:Microsoft.Azure.Devices.Client.MethodRequestInternal">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequestInternal.Dispose" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponse" Id="T:Microsoft.Azure.Devices.Client.MethodResponse">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponse.#ctor(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponse.#ctor(System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.Result" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.ResultAsJson" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponseInternal" Id="T:Microsoft.Azure.Devices.Client.MethodResponseInternal">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponseInternal.Dispose" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponseStatusCode" Id="T:Microsoft.Azure.Devices.Client.MethodResponseStatusCode">
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.BadRequest" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.MethodNotImplemented" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.UserCodeException" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.KeyAsBase64String" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.ModuleId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.ModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.#ctor(System.String,System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.ModuleId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleClient" Id="T:Microsoft.Azure.Devices.Client.ModuleClient">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CloseAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.GetTwinAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.GetTwinAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,Microsoft.Azure.Devices.Client.MethodRequest)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,Microsoft.Azure.Devices.Client.MethodRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,System.String,Microsoft.Azure.Devices.Client.MethodRequest)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,System.String,Microsoft.Azure.Devices.Client.MethodRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.OpenAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(System.String,Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(System.String,Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetConnectionStatusChangesHandler(Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetInputMessageHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MessageHandler,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetInputMessageHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MessageHandler,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMessageHandlerAsync(Microsoft.Azure.Devices.Client.MessageHandler,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMessageHandlerAsync(Microsoft.Azure.Devices.Client.MessageHandler,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetRetryPolicy(Microsoft.Azure.Devices.Client.IRetryPolicy)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.DiagnosticSamplingPercentage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.OperationTimeoutInMilliseconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.ProductInfo" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.NoRetry" Id="T:Microsoft.Azure.Devices.Client.NoRetry">
      <Member Id="M:Microsoft.Azure.Devices.Client.NoRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.NoRetry.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ContainsKey(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Dictionary" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Item(`0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Item(`0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2/KeyCollection" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Add(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Contains(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Remove(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2/ValueCollection" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Add(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Contains(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Remove(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReceiveMessageCallback" Id="T:Microsoft.Azure.Devices.Client.ReceiveMessageCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.RetryPolicyType" Id="T:Microsoft.Azure.Devices.Client.RetryPolicyType">
      <Member Id="F:Microsoft.Azure.Devices.Client.RetryPolicyType.Exponential_Backoff_With_Jitter" />
      <Member Id="F:Microsoft.Azure.Devices.Client.RetryPolicyType.No_Retry" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder" Id="T:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder">
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Sign(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.ToSignature" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.KeyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Target" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.TimeToLive" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.TransportType" Id="T:Microsoft.Azure.Devices.Client.TransportType">
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp_Tcp_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp_WebSocket_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Http1" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt_Tcp_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt_WebSocket_Only" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Common">
    <Type Name="Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer" Id="T:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer">
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer/TokenType" Id="T:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType">
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType.Key" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Errors">
    <Type Name="Microsoft.Azure.Devices.Client.Errors.ErrorCode" Id="T:Microsoft.Azure.Devices.Client.Errors.ErrorCode">
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.AuthorizationRulesExceededQuota" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.GarbageCollectionFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidEventHubAccessRight" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidIotHubName" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidOperationId" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubActivationFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubDeletionFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubExportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubImportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubInvalidProperties" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubInvalidStateTransition" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubNameNotAvailable" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubNotFoundInDatabase" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubsExportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubsImportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubStateTransitionNotDefined" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubUpdateFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.KeyNameNotFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.MultipleMatchingResourcesFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.NoMatchingResourceFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.NoMatchingResourcePoolFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.None" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.OrchestrationRunningOnIotHub" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.OrchestrationStateInvalid" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.ResourcePoolNotFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.SystemPropertiesNotAllowed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabApplicationCleanupNotAttempted" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabApplicationUpgradeFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabClusterUpgradeFailed" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Exceptions">
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String,System.Guid)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Boolean,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception,System.Boolean,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor(System.String,System.Exception)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.HsmAuthentication">
    <Type Name="Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException" Id="T:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException">
      <Member Id="M:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.#ctor(System.String,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.StatusCode" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Transport">
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.IsSuccess" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.StatusCode" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.StatusDescription" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest.BlobName" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.GetBlobUri" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.BlobName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.ContainerName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.HostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.SasToken" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Transport.Mqtt">
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.#ctor(System.Exception,DotNetty.Transport.Channels.IChannelHandlerContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.Context" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage">
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.Message" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.QoS" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CertificateRevocationCheck" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.Proxy" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RemoteCertificateValidationCallback" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState">
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Closed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Error" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.NotInitialized" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Open" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Opening" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Receiving" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Subscribing" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.#ctor(DotNetty.Codecs.Mqtt.Packets.QualityOfService,Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Provisioning.Client.Transport">
    <Type Name="Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportHandlerAmqp" Id="T:Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportHandlerAmqp">
      <Member Id="M:Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportHandlerAmqp.#ctor(Microsoft.Azure.Devices.Shared.TransportFallbackType)" />
      <Member Id="M:Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportHandlerAmqp.RegisterAsync(Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportRegisterMessage,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Devices.Provisioning.Client.Transport.ProvisioningTransportHandlerAmqp.FallbackType" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.EventHubs">
    <Type Name="Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider" Id="T:Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider">
      <Member Id="M:Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider.GetTokenAsync(System.String,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider/AuthenticationCallback" Id="T:Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider.AuthenticationCallback" />
    <Type Name="Microsoft.Azure.EventHubs.BatchOptions" Id="T:Microsoft.Azure.EventHubs.BatchOptions">
      <Member Id="M:Microsoft.Azure.EventHubs.BatchOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.EventHubs.BatchOptions.MaxMessageSize" />
      <Member Id="P:Microsoft.Azure.EventHubs.BatchOptions.PartitionKey" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ClientEntity" Id="T:Microsoft.Azure.EventHubs.ClientEntity">
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.Close" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.CloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.GetNextId" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.OnRetryPolicyUpdate" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.RegisterPlugin(Microsoft.Azure.EventHubs.Core.EventHubsPlugin)" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.ThrowIfClosed" />
      <Member Id="M:Microsoft.Azure.EventHubs.ClientEntity.UnregisterPlugin(System.String)" />
      <Member Id="P:Microsoft.Azure.EventHubs.ClientEntity.ClientId" />
      <Member Id="P:Microsoft.Azure.EventHubs.ClientEntity.IsClosed" />
      <Member Id="P:Microsoft.Azure.EventHubs.ClientEntity.RegisteredPlugins" />
      <Member Id="P:Microsoft.Azure.EventHubs.ClientEntity.RetryPolicy" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventData" Id="T:Microsoft.Azure.EventHubs.EventData">
      <Member Id="M:Microsoft.Azure.EventHubs.EventData.#ctor(System.ArraySegment{System.Byte})" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventData.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventData.Dispose" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.Body" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.ContentType" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.Properties" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.SystemProperties" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventData/SystemPropertiesCollection" Id="T:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection">
      <Member Id="M:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection.#ctor(System.Int64,System.DateTime,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection.EnqueuedTimeUtc" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection.Offset" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection.PartitionKey" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventData.SystemPropertiesCollection.SequenceNumber" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventDataBatch" Id="T:Microsoft.Azure.EventHubs.EventDataBatch">
      <Member Id="M:Microsoft.Azure.EventHubs.EventDataBatch.#ctor(System.Int64,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventDataBatch.Dispose" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventDataBatch.ToEnumerable" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventDataBatch.TryAdd(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventDataBatch.Count" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventDataBatch.Size" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventDataDiagnosticExtensions" Id="T:Microsoft.Azure.EventHubs.EventDataDiagnosticExtensions">
      <Member Id="M:Microsoft.Azure.EventHubs.EventDataDiagnosticExtensions.ExtractActivity(Microsoft.Azure.EventHubs.EventData,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubClient" Id="T:Microsoft.Azure.EventHubs.EventHubClient">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.Create(Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateBatch" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateBatch(Microsoft.Azure.EventHubs.BatchOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateEpochReceiver(System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,System.Int64,Microsoft.Azure.EventHubs.ReceiverOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateFromConnectionString(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreatePartitionSender(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateReceiver(System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,Microsoft.Azure.EventHubs.ReceiverOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateWithAzureActiveDirectory(System.Uri,System.String,Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider.AuthenticationCallback,System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateWithManagedIdentity(System.Uri,System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.CreateWithTokenProvider(System.Uri,System.String,Microsoft.Azure.EventHubs.ITokenProvider,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.GetPartitionRuntimeInformationAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.GetRuntimeInformationAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.OnCloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.OnCreateReceiver(System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,System.Nullable{System.Int64},Microsoft.Azure.EventHubs.ReceiverOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.OnGetPartitionRuntimeInformationAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.OnGetRuntimeInformationAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.OnRetryPolicyUpdate" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.SendAsync(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.SendAsync(Microsoft.Azure.EventHubs.EventData,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.SendAsync(Microsoft.Azure.EventHubs.EventDataBatch)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.SendAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData})" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubClient.SendAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData},System.String)" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubClient.EnableReceiverRuntimeMetric" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubClient.EventHubName" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubClient.WebProxy" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation" Id="T:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.#ctor" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.BeginSequenceNumber" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.IsEmpty" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.LastEnqueuedOffset" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.LastEnqueuedSequenceNumber" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.LastEnqueuedTimeUtc" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubPartitionRuntimeInformation.Path" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubRuntimeInformation" Id="T:Microsoft.Azure.EventHubs.EventHubRuntimeInformation">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubRuntimeInformation.#ctor" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubRuntimeInformation.CreatedAt" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubRuntimeInformation.PartitionCount" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubRuntimeInformation.PartitionIds" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubRuntimeInformation.Path" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubsCommunicationException" Id="T:Microsoft.Azure.EventHubs.EventHubsCommunicationException">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsCommunicationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsCommunicationException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder" Id="T:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.#ctor(System.Uri,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.#ctor(System.Uri,System.String,System.String,System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.#ctor(System.Uri,System.String,System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.Clone" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.ToString" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.Authentication" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.Endpoint" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.EntityPath" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.OperationTimeout" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.SasKey" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.SasKeyName" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.SharedAccessSignature" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder.TransportType" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubsException" Id="T:Microsoft.Azure.EventHubs.EventHubsException">
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsException.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsException.#ctor(System.Boolean,System.Exception)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsException.#ctor(System.Boolean,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.Exception,Microsoft.Azure.EventHubs.EventHubsException.ErrorSourceType)" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsException.ErrorSource" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsException.EventHubsNamespace" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsException.IsTransient" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventHubsException.Message" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubsException/ErrorSourceType" Id="T:Microsoft.Azure.EventHubs.EventHubsException.ErrorSourceType">
      <Member Id="F:Microsoft.Azure.EventHubs.EventHubsException.ErrorSourceType.ServerError" />
      <Member Id="F:Microsoft.Azure.EventHubs.EventHubsException.ErrorSourceType.UserError" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.EventHubsTimeoutException" Id="T:Microsoft.Azure.EventHubs.EventHubsTimeoutException" />
    <Type Name="Microsoft.Azure.EventHubs.EventPosition" Id="T:Microsoft.Azure.EventHubs.EventPosition">
      <Member Id="M:Microsoft.Azure.EventHubs.EventPosition.FromEnd" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventPosition.FromEnqueuedTime(System.DateTime)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventPosition.FromOffset(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventPosition.FromSequenceNumber(System.Int64,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.EventHubs.EventPosition.FromStart" />
      <Member Id="P:Microsoft.Azure.EventHubs.EventPosition.SequenceNumber" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.IPartitionReceiveHandler" Id="T:Microsoft.Azure.EventHubs.IPartitionReceiveHandler">
      <Member Id="M:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessErrorAsync(System.Exception)" />
      <Member Id="M:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.ProcessEventsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData})" />
      <Member Id="P:Microsoft.Azure.EventHubs.IPartitionReceiveHandler.MaxBatchSize" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ITokenProvider" Id="T:Microsoft.Azure.EventHubs.ITokenProvider">
      <Member Id="M:Microsoft.Azure.EventHubs.ITokenProvider.GetTokenAsync(System.String,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.JsonSecurityToken" Id="T:Microsoft.Azure.EventHubs.JsonSecurityToken">
      <Member Id="M:Microsoft.Azure.EventHubs.JsonSecurityToken.#ctor(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ManagedIdentityTokenProvider" Id="T:Microsoft.Azure.EventHubs.ManagedIdentityTokenProvider">
      <Member Id="M:Microsoft.Azure.EventHubs.ManagedIdentityTokenProvider.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.ManagedIdentityTokenProvider.#ctor(Microsoft.Azure.Services.AppAuthentication.AzureServiceTokenProvider)" />
      <Member Id="M:Microsoft.Azure.EventHubs.ManagedIdentityTokenProvider.GetTokenAsync(System.String,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.MessageSizeExceededException" Id="T:Microsoft.Azure.EventHubs.MessageSizeExceededException" />
    <Type Name="Microsoft.Azure.EventHubs.MessagingEntityNotFoundException" Id="T:Microsoft.Azure.EventHubs.MessagingEntityNotFoundException" />
    <Type Name="Microsoft.Azure.EventHubs.PartitionReceiver" Id="T:Microsoft.Azure.EventHubs.PartitionReceiver">
      <Member Id="F:Microsoft.Azure.EventHubs.PartitionReceiver.DefaultConsumerGroupName" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.#ctor(Microsoft.Azure.EventHubs.EventHubClient,System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,System.Nullable{System.Int64},Microsoft.Azure.EventHubs.ReceiverOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.CloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.OnCloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.OnReceiveAsync(System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.OnSetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.ReceiveAsync(System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionReceiver.SetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler,System.Boolean)" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.ConsumerGroupName" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.Epoch" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.EventHubClient" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.EventPosition" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.Identifier" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.PrefetchCount" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.ReceiverRuntimeMetricEnabled" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionReceiver.RuntimeInfo" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.PartitionSender" Id="T:Microsoft.Azure.EventHubs.PartitionSender">
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.CloseAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.CreateBatch" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.CreateBatch(Microsoft.Azure.EventHubs.BatchOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.SendAsync(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.SendAsync(Microsoft.Azure.EventHubs.EventDataBatch)" />
      <Member Id="M:Microsoft.Azure.EventHubs.PartitionSender.SendAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData})" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionSender.EventHubClient" />
      <Member Id="P:Microsoft.Azure.EventHubs.PartitionSender.PartitionId" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.PublisherRevokedException" Id="T:Microsoft.Azure.EventHubs.PublisherRevokedException">
      <Member Id="M:Microsoft.Azure.EventHubs.PublisherRevokedException.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.QuotaExceededException" Id="T:Microsoft.Azure.EventHubs.QuotaExceededException">
      <Member Id="M:Microsoft.Azure.EventHubs.QuotaExceededException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.QuotaExceededException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ReceiverDisconnectedException" Id="T:Microsoft.Azure.EventHubs.ReceiverDisconnectedException" />
    <Type Name="Microsoft.Azure.EventHubs.ReceiverOptions" Id="T:Microsoft.Azure.EventHubs.ReceiverOptions">
      <Member Id="M:Microsoft.Azure.EventHubs.ReceiverOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverOptions.EnableReceiverRuntimeMetric" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverOptions.Identifier" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ReceiverRuntimeInformation" Id="T:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation">
      <Member Id="M:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.Update(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.LastEnqueuedOffset" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.LastEnqueuedTimeUtc" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.LastSequenceNumber" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.ReceiverRuntimeInformation.RetrievalTime" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.RetryExponential" Id="T:Microsoft.Azure.EventHubs.RetryExponential">
      <Member Id="M:Microsoft.Azure.EventHubs.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryExponential.Clone" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryExponential.OnGetNextRetryInterval(System.Exception,System.TimeSpan,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.RetryPolicy" Id="T:Microsoft.Azure.EventHubs.RetryPolicy">
      <Member Id="M:Microsoft.Azure.EventHubs.RetryPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryPolicy.Clone" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryPolicy.GetNextRetryInterval(System.Exception,System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryPolicy.IsRetryableException(System.Exception)" />
      <Member Id="M:Microsoft.Azure.EventHubs.RetryPolicy.OnGetNextRetryInterval(System.Exception,System.TimeSpan,System.Int32,System.Int32)" />
      <Member Id="P:Microsoft.Azure.EventHubs.RetryPolicy.Default" />
      <Member Id="P:Microsoft.Azure.EventHubs.RetryPolicy.NoRetry" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.SecurityToken" Id="T:Microsoft.Azure.EventHubs.SecurityToken">
      <Member Id="M:Microsoft.Azure.EventHubs.SecurityToken.#ctor(System.String,System.DateTime,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.EventHubs.SecurityToken.Audience" />
      <Member Id="P:Microsoft.Azure.EventHubs.SecurityToken.ExpiresAtUtc" />
      <Member Id="P:Microsoft.Azure.EventHubs.SecurityToken.TokenType" />
      <Member Id="P:Microsoft.Azure.EventHubs.SecurityToken.TokenValue" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.ServerBusyException" Id="T:Microsoft.Azure.EventHubs.ServerBusyException" />
    <Type Name="Microsoft.Azure.EventHubs.SharedAccessSignatureToken" Id="T:Microsoft.Azure.EventHubs.SharedAccessSignatureToken">
      <Member Id="M:Microsoft.Azure.EventHubs.SharedAccessSignatureToken.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider" Id="T:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider">
      <Member Id="F:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.EpochTime" />
      <Member Id="M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.#ctor(System.String,System.String,System.Func{System.String,System.Byte[]},System.TimeSpan,Microsoft.Azure.EventHubs.TokenScope)" />
      <Member Id="M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.BuildSignature(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.SharedAccessSignatureTokenProvider.GetTokenAsync(System.String,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.TokenProvider" Id="T:Microsoft.Azure.EventHubs.TokenProvider">
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateAzureActiveDirectoryTokenProvider(Microsoft.Azure.EventHubs.AzureActiveDirectoryTokenProvider.AuthenticationCallback,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateManagedIdentityTokenProvider" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.Azure.EventHubs.TokenScope)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.Azure.EventHubs.TokenScope)" />
      <Member Id="M:Microsoft.Azure.EventHubs.TokenProvider.GetTokenAsync(System.String,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.TokenScope" Id="T:Microsoft.Azure.EventHubs.TokenScope">
      <Member Id="F:Microsoft.Azure.EventHubs.TokenScope.Entity" />
      <Member Id="F:Microsoft.Azure.EventHubs.TokenScope.Namespace" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.TransportType" Id="T:Microsoft.Azure.EventHubs.TransportType">
      <Member Id="F:Microsoft.Azure.EventHubs.TransportType.Amqp" />
      <Member Id="F:Microsoft.Azure.EventHubs.TransportType.AmqpWebSockets" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.EventHubs.Core">
    <Type Name="Microsoft.Azure.EventHubs.Core.EventHubsPlugin" Id="T:Microsoft.Azure.EventHubs.Core.EventHubsPlugin">
      <Member Id="M:Microsoft.Azure.EventHubs.Core.EventHubsPlugin.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.Core.EventHubsPlugin.BeforeEventSend(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="P:Microsoft.Azure.EventHubs.Core.EventHubsPlugin.Name" />
      <Member Id="P:Microsoft.Azure.EventHubs.Core.EventHubsPlugin.ShouldContinueOnException" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.EventHubs.Processor">
    <Type Name="Microsoft.Azure.EventHubs.Processor.Checkpoint" Id="T:Microsoft.Azure.EventHubs.Processor.Checkpoint">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Checkpoint.#ctor(Microsoft.Azure.EventHubs.Processor.Checkpoint)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Checkpoint.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Checkpoint.#ctor(System.String,System.String,System.Int64)" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Checkpoint.Offset" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Checkpoint.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Checkpoint.SequenceNumber" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.CloseReason" Id="T:Microsoft.Azure.EventHubs.Processor.CloseReason">
      <Member Id="F:Microsoft.Azure.EventHubs.Processor.CloseReason.LeaseLost" />
      <Member Id="F:Microsoft.Azure.EventHubs.Processor.CloseReason.Shutdown" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.EventProcessorConfigurationException" Id="T:Microsoft.Azure.EventHubs.Processor.EventProcessorConfigurationException" />
    <Type Name="Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Id="T:Microsoft.Azure.EventHubs.Processor.EventProcessorHost">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.Azure.Storage.CloudStorageAccount,System.String,System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.Azure.Storage.CloudStorageAccount,System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.Azure.Storage.CloudStorageAccount,System.String,System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EndpointAddress" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.OperationTimeout" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.PartitionManagerOptions" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.TransportType" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.EventProcessorOptions" Id="T:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.SetExceptionHandler(System.Action{Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs})" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.DefaultOptions" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.EnableReceiverRuntimeMetric" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.InitialOffsetProvider" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.MaxBatchSize" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.PrefetchCount" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.ReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorOptions.WebProxy" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.EventProcessorRuntimeException" Id="T:Microsoft.Azure.EventHubs.Processor.EventProcessorRuntimeException">
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.EventProcessorRuntimeException.Action" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs" Id="T:Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs">
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs.Action" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs.Exception" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs.Hostname" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ExceptionReceivedEventArgs.PartitionId" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.ICheckpointManager" Id="T:Microsoft.Azure.EventHubs.Processor.ICheckpointManager">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.CheckpointStoreExistsAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.CreateCheckpointIfNotExistsAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.CreateCheckpointStoreIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.DeleteCheckpointAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.GetCheckpointAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ICheckpointManager.UpdateCheckpointAsync(Microsoft.Azure.EventHubs.Processor.Lease,Microsoft.Azure.EventHubs.Processor.Checkpoint)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.IEventProcessor" Id="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.CloseAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,Microsoft.Azure.EventHubs.Processor.CloseReason)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.OpenAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessErrorAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,System.Exception)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.IEventProcessor.ProcessEventsAsync(Microsoft.Azure.EventHubs.Processor.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.Azure.EventHubs.EventData})" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" Id="T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory.CreateEventProcessor(Microsoft.Azure.EventHubs.Processor.PartitionContext)" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.ILeaseManager" Id="T:Microsoft.Azure.EventHubs.Processor.ILeaseManager">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.AcquireLeaseAsync(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseIfNotExistsAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.CreateLeaseStoreIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseAsync(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.DeleteLeaseStoreAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetAllLeasesAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.GetLeaseAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseStoreExistsAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.ReleaseLeaseAsync(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.RenewLeaseAsync(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.ILeaseManager.UpdateLeaseAsync(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.ILeaseManager.LeaseRenewInterval" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.Lease" Id="T:Microsoft.Azure.EventHubs.Processor.Lease">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Lease.#ctor" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Lease.#ctor(Microsoft.Azure.EventHubs.Processor.Lease)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Lease.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Lease.IncrementEpoch" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.Lease.IsExpired" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.Epoch" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.Offset" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.Owner" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.SequenceNumber" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.Lease.Token" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.LeaseLostException" Id="T:Microsoft.Azure.EventHubs.Processor.LeaseLostException">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.LeaseLostException.#ctor(System.String,System.Exception)" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.LeaseLostException.PartitionId" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.PartitionContext" Id="T:Microsoft.Azure.EventHubs.Processor.PartitionContext">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionContext.#ctor(Microsoft.Azure.EventHubs.Processor.EventProcessorHost,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(Microsoft.Azure.EventHubs.EventData)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionContext.CheckpointAsync(Microsoft.Azure.EventHubs.Processor.Checkpoint)" />
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionContext.ToString" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.CancellationToken" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.ConsumerGroupName" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.EventHubPath" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.Lease" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.Owner" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.PartitionId" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionContext.RuntimeInformation" />
    </Type>
    <Type Name="Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions" Id="T:Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions">
      <Member Id="M:Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions.RenewInterval" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault">
    <Type Name="Microsoft.Azure.KeyVault.CertificateIdentifier" Id="T:Microsoft.Azure.KeyVault.CertificateIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIdentifier.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIdentifier.IsCertificateIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.CertificateIssuerIdentifier" Id="T:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.IsIssuerIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.CertificateOperationIdentifier" Id="T:Microsoft.Azure.KeyVault.CertificateOperationIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.IsCertificateOperationIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.DeletedCertificateIdentifier" Id="T:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.IsDeletedCertificateIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.DeletedKeyIdentifier" Id="T:Microsoft.Azure.KeyVault.DeletedKeyIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.IsDeletedKeyIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.DeletedSecretIdentifier" Id="T:Microsoft.Azure.KeyVault.DeletedSecretIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.IsDeletedSecretIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.EcKey" Id="T:Microsoft.Azure.KeyVault.EcKey">
      <Member Id="F:Microsoft.Azure.KeyVault.EcKey.P256" />
      <Member Id="F:Microsoft.Azure.KeyVault.EcKey.P256K" />
      <Member Id="F:Microsoft.Azure.KeyVault.EcKey.P384" />
      <Member Id="F:Microsoft.Azure.KeyVault.EcKey.P521" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.#ctor(System.String,System.Security.Cryptography.ECDsa)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.#ctor(System.String,System.String,System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.Dispose" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.EcKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.EcKey.DefaultEncryptionAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.EcKey.DefaultKeyWrapAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.EcKey.DefaultSignatureAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.EcKey.Kid" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.HttpBearerChallenge" Id="T:Microsoft.Azure.KeyVault.HttpBearerChallenge">
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.#ctor(System.Uri,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.IsBearerChallenge(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.TryGetValue(System.String,System.String@)" />
      <Member Id="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.AuthorizationServer" />
      <Member Id="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.Resource" />
      <Member Id="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.Scope" />
      <Member Id="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.SourceAuthority" />
      <Member Id="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.SourceUri" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.HttpBearerChallengeCache" Id="T:Microsoft.Azure.KeyVault.HttpBearerChallengeCache">
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)" />
      <Member Id="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.IKeyVaultClient" Id="T:Microsoft.Azure.KeyVault.IKeyVaultClient">
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.CreateCertificateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.CreateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DecryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.EncryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuersNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuersWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatePolicyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetPendingCertificateSigningRequestWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.ImportCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.ImportKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.MergeCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RegenerateStorageAccountKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreCertificateWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreKeyWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreSecretWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreStorageAccountWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetCertificateContactsWithHttpMessagesAsync(System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SignWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UnwrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificatePolicyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.VerifyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.IKeyVaultClient.WrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.Credentials" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.KeyVault.IKeyVaultClient.SerializationSettings" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.KeyIdentifier" Id="T:Microsoft.Azure.KeyVault.KeyIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.KeyIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyIdentifier.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyIdentifier.IsKeyIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.KeyVaultClient" Id="T:Microsoft.Azure.KeyVault.KeyVaultClient">
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,System.Net.Http.HttpClient)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,System.Net.Http.HttpClient)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateCertificateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateHttpHandlerPipeline(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DecryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.EncryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuersNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuersWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatePolicyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetPendingCertificateSigningRequestWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.ImportCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.MergeCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RegenerateStorageAccountKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreCertificateWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreSecretWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreStorageAccountWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetCertificateContactsWithHttpMessagesAsync(System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.SignWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificatePolicyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.VerifyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.Credentials" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultClient.SerializationSettings" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.KeyVaultClient/AuthenticationCallback" Id="T:Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback" />
    <Type Name="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Id="T:Microsoft.Azure.KeyVault.KeyVaultClientExtensions">
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.NewKeyParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RegenerateStorageAccountKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.KeyVaultCredential" Id="T:Microsoft.Azure.KeyVault.KeyVaultCredential">
      <Member Id="E:Microsoft.Azure.KeyVault.KeyVaultCredential.OnAuthenticate" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultCredential.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultCredential.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultCredential.PostAuthenticate(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.KeyVault.KeyVaultCredential.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.KeyVaultCredential.Token" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.ObjectIdentifier" Id="T:Microsoft.Azure.KeyVault.ObjectIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.ObjectIdentifier.ToString" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Name" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Vault" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme" />
      <Member Id="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Version" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.RsaKey" Id="T:Microsoft.Azure.KeyVault.RsaKey">
      <Member Id="F:Microsoft.Azure.KeyVault.RsaKey.KeySize1024" />
      <Member Id="F:Microsoft.Azure.KeyVault.RsaKey.KeySize2048" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.#ctor(System.String,System.Int32)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.#ctor(System.String,System.Security.Cryptography.RSA)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.#ctor(System.String,System.Security.Cryptography.RSAParameters)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.Dispose" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.RsaKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.RsaKey.DefaultEncryptionAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.RsaKey.DefaultKeyWrapAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.RsaKey.DefaultSignatureAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.RsaKey.Kid" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.SasDefinitionIdentifier" Id="T:Microsoft.Azure.KeyVault.SasDefinitionIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.IsSasDefinitionIdentifier(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.StorageAccount" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.SecretIdentifier" Id="T:Microsoft.Azure.KeyVault.SecretIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.SecretIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SecretIdentifier.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SecretIdentifier.IsSecretIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.StorageAccountIdentifier" Id="T:Microsoft.Azure.KeyVault.StorageAccountIdentifier">
      <Member Id="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.IsStorageAccountIdentifier(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.SymmetricKey" Id="T:Microsoft.Azure.KeyVault.SymmetricKey">
      <Member Id="F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize128" />
      <Member Id="F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize192" />
      <Member Id="F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize256" />
      <Member Id="F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize384" />
      <Member Id="F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize512" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.SymmetricKey.Kid" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.Core">
    <Type Name="Microsoft.Azure.KeyVault.Core.IKey" Id="T:Microsoft.Azure.KeyVault.Core.IKey">
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Core.IKey.DefaultEncryptionAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Core.IKey.DefaultKeyWrapAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Core.IKey.DefaultSignatureAlgorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Core.IKey.Kid" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Core.IKeyResolver" Id="T:Microsoft.Azure.KeyVault.Core.IKeyResolver">
      <Member Id="M:Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.Cryptography">
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithm.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver" Id="T:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Default" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm(System.String,Microsoft.Azure.KeyVault.Cryptography.Algorithm)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.AsymmetricEncryptionAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.AsymmetricEncryptionAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricEncryptionAlgorithm.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricEncryptionAlgorithm.CreateDecryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricEncryptionAlgorithm.CreateEncryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.IAuthenticatedCryptoTransform" Id="T:Microsoft.Azure.KeyVault.Cryptography.IAuthenticatedCryptoTransform">
      <Member Id="P:Microsoft.Azure.KeyVault.Cryptography.IAuthenticatedCryptoTransform.Tag" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform" Id="T:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.KeyWrapAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.KeyWrapAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.KeyWrapAlgorithm.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.KeyWrapAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.KeyWrapAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm" Id="T:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms">
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128Cbc.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128CbcHmacSha256" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128CbcHmacSha256">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128CbcHmacSha256.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128CbcHmacSha256.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192Cbc.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192CbcHmacSha384" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192CbcHmacSha384">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192CbcHmacSha384.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192CbcHmacSha384.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256Cbc.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256CbcHmacSha512" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256CbcHmacSha512">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256CbcHmacSha512.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256CbcHmacSha512.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbc" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbc">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbc.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbc.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbc.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.Rng" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.CreateDecryptor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.CreateEncryptor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw.CreateEncryptor(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128.CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw128.CreateEncryptor(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192.CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw192.CreateEncryptor(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256.CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesKw256.CreateEncryptor(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Ecdsa" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Ecdsa">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Ecdsa.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Ecdsa.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es256" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es256">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es256.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es256.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es256.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.ES256K" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.ES256K">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.ES256K.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.ES256K.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.ES256K.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es384" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es384">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es384.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es384.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es384.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es512" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es512">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es512.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es512.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Es512.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rs256" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rs256">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rs256.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rs256.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rs256.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15.CreateDecryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.Rsa15.CreateEncryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaEncryption" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaEncryption">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaEncryption.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep">
      <Member Id="F:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep.AlgorithmName" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep.CreateDecryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaOaep.CreateEncryptor(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaSignature" Id="T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaSignature">
      <Member Id="M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaSignature.#ctor(System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.Customized.Authentication">
    <Type Name="Microsoft.Azure.KeyVault.Customized.Authentication.ChallengeCacheHandler" Id="T:Microsoft.Azure.KeyVault.Customized.Authentication.ChallengeCacheHandler">
      <Member Id="M:Microsoft.Azure.KeyVault.Customized.Authentication.ChallengeCacheHandler.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Customized.Authentication.ChallengeCacheHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Customized.Authentication.ChallengeCacheHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.Models">
    <Type Name="Microsoft.Azure.KeyVault.Models.Action" Id="T:Microsoft.Azure.KeyVault.Models.Action">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Action.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Action.#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Action.ActionType" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.ActionType" Id="T:Microsoft.Azure.KeyVault.Models.ActionType">
      <Member Id="F:Microsoft.Azure.KeyVault.Models.ActionType.AutoRenew" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.ActionType.EmailContacts" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.AdministratorDetails" Id="T:Microsoft.Azure.KeyVault.Models.AdministratorDetails">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Attributes" Id="T:Microsoft.Azure.KeyVault.Models.Attributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Attributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Attributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Attributes.Created" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Attributes.Enabled" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Attributes.Expires" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Attributes.NotBefore" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Attributes.Updated" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.BackupCertificateResult" Id="T:Microsoft.Azure.KeyVault.Models.BackupCertificateResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.#ctor(System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.BackupKeyResult" Id="T:Microsoft.Azure.KeyVault.Models.BackupKeyResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupKeyResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupKeyResult.#ctor(System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.BackupKeyResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.BackupSecretResult" Id="T:Microsoft.Azure.KeyVault.Models.BackupSecretResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupSecretResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupSecretResult.#ctor(System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.BackupSecretResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.BackupStorageResult" Id="T:Microsoft.Azure.KeyVault.Models.BackupStorageResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupStorageResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.BackupStorageResult.#ctor(System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.BackupStorageResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateAttributes" Id="T:Microsoft.Azure.KeyVault.Models.CertificateAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateAttributes.RecoveryLevel" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateBundle" Id="T:Microsoft.Azure.KeyVault.Models.CertificateBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.#ctor(System.String,System.String,System.String,System.Byte[],Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Byte[],System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Cer" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.CertificateIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.ContentType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.KeyIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Kid" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Policy" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.SecretIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Sid" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.X509Thumbprint" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateContentType" Id="T:Microsoft.Azure.KeyVault.Models.CertificateContentType">
      <Member Id="F:Microsoft.Azure.KeyVault.Models.CertificateContentType.AllTypes" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.CertificateContentType.Pem" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.CertificateContentType.Pfx" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateCreateParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.#ctor(Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.CertificateAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.CertificatePolicy" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateImportParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateImportParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Base64EncodedCertificate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.CertificateAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.CertificatePolicy" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Password" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateIssuerItem" Id="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.Provider" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Credentials" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.OrganizationDetails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Provider" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Credentials" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.OrganizationDetails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Provider" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateItem" Id="T:Microsoft.Azure.KeyVault.Models.CertificateItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateItem.X509Thumbprint" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateMergeParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.#ctor(System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.CertificateAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.X509Certificates" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateOperation" Id="T:Microsoft.Azure.KeyVault.Models.CertificateOperation">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Error" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Status" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Target" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter" Id="T:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.CancellationRequested" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificatePolicy" Id="T:Microsoft.Azure.KeyVault.Models.CertificatePolicy">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.CertificateBundleBackup" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.#ctor(Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.CertificateAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.CertificatePolicy" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Contact" Id="T:Microsoft.Azure.KeyVault.Models.Contact">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Contact.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Contact.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Contact.EmailAddress" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Contact.Name" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Contact.Phone" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Contacts" Id="T:Microsoft.Azure.KeyVault.Models.Contacts">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Contacts.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Contacts.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.Contact})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Contacts.ContactList" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Contacts.Id" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle" Id="T:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.#ctor(System.String,System.String,System.String,System.Byte[],Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Byte[],System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedCertificateItem" Id="T:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Byte[],System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedKeyBundle" Id="T:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedKeyItem" Id="T:Microsoft.Azure.KeyVault.Models.DeletedKeyItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle" Id="T:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem" Id="T:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedSecretBundle" Id="T:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedSecretItem" Id="T:Microsoft.Azure.KeyVault.Models.DeletedSecretItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.RecoveryIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem" Id="T:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletedStorageBundle" Id="T:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.DeletedDate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.RecoveryId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.ScheduledPurgeDate" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel" Id="T:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel">
      <Member Id="F:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel.Purgeable" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel.Recoverable" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel.RecoverableProtectedSubscription" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel.RecoverablePurgeable" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Error" Id="T:Microsoft.Azure.KeyVault.Models.Error">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Error.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Error.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.Error)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Error.Code" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Error.InnerError" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Error.Message" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.IssuerAttributes" Id="T:Microsoft.Azure.KeyVault.Models.IssuerAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Created" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Enabled" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Updated" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.IssuerBundle" Id="T:Microsoft.Azure.KeyVault.Models.IssuerBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerBundle.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Credentials" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.IssuerIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.OrganizationDetails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Provider" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.IssuerCredentials" Id="T:Microsoft.Azure.KeyVault.Models.IssuerCredentials">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerCredentials.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerCredentials.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerCredentials.AccountId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerCredentials.Password" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.IssuerParameters" Id="T:Microsoft.Azure.KeyVault.Models.IssuerParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor(System.String,System.String,System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateTransparency" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.Name" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyAttributes" Id="T:Microsoft.Azure.KeyVault.Models.KeyAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyAttributes.RecoveryLevel" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyBundle" Id="T:Microsoft.Azure.KeyVault.Models.KeyBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyBundle.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Key" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyBundle.KeyIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Managed" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyCreateParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyCreateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Curve" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyImportParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyImportParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Hsm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Key" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.KeyAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyItem" Id="T:Microsoft.Azure.KeyVault.Models.KeyItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyItem.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyItem.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyItem.Kid" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyItem.Managed" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyItem.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyOperationResult" Id="T:Microsoft.Azure.KeyVault.Models.KeyOperationResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyOperationResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyOperationResult.#ctor(System.String,System.Byte[])" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyOperationResult.Kid" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyOperationResult.Result" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyOperationsParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Algorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyProperties" Id="T:Microsoft.Azure.KeyVault.Models.KeyProperties">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyProperties.Curve" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyRestoreParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.KeyBundleBackup" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeySignParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeySignParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeySignParameters.Algorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeySignParameters.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.#ctor(System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.KeyAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.KeyOps" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyUsageType" Id="T:Microsoft.Azure.KeyVault.Models.KeyUsageType">
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.CRLSign" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DataEncipherment" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DecipherOnly" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DigitalSignature" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.EncipherOnly" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyAgreement" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyCertSign" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyEncipherment" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.KeyUsageType.NonRepudiation" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyVaultError" Id="T:Microsoft.Azure.KeyVault.Models.KeyVaultError">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVaultError.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVaultError.#ctor(Microsoft.Azure.KeyVault.Models.Error)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVaultError.Error" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyVaultErrorException" Id="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor(System.String,System.Exception)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Body" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Request" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Response" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyVerifyParameters" Id="T:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor(System.String,System.Byte[],System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.KeyVerifyResult" Id="T:Microsoft.Azure.KeyVault.Models.KeyVerifyResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.#ctor(System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.LifetimeAction" Id="T:Microsoft.Azure.KeyVault.Models.LifetimeAction">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.#ctor(Microsoft.Azure.KeyVault.Models.Trigger,Microsoft.Azure.KeyVault.Models.Action)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.LifetimeAction.Action" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.LifetimeAction.Trigger" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.NewKeyParameters" Id="T:Microsoft.Azure.KeyVault.Models.NewKeyParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.NewKeyParameters.#ctor" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.CurveName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.KeyOps" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.KeySize" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Kty" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.OrganizationDetails" Id="T:Microsoft.Azure.KeyVault.Models.OrganizationDetails">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Page`1" Id="T:Microsoft.Azure.KeyVault.Models.Page`1">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Page`1.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Page`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Page`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Page`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult" Id="T:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes" Id="T:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Created" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Enabled" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.RecoveryLevel" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Updated" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasDefinitionBundle" Id="T:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.SasType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.SecretId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.TemplateUri" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.ValidityPeriod" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters" Id="T:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.SasDefinitionAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.SasType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.TemplateUri" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.ValidityPeriod" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasDefinitionItem" Id="T:Microsoft.Azure.KeyVault.Models.SasDefinitionItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.SecretId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.SasDefinitionAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.SasType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.TemplateUri" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.ValidityPeriod" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SasTokenType" Id="T:Microsoft.Azure.KeyVault.Models.SasTokenType">
      <Member Id="F:Microsoft.Azure.KeyVault.Models.SasTokenType.Account" />
      <Member Id="F:Microsoft.Azure.KeyVault.Models.SasTokenType.Service" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretAttributes" Id="T:Microsoft.Azure.KeyVault.Models.SecretAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretAttributes.RecoveryLevel" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretBundle" Id="T:Microsoft.Azure.KeyVault.Models.SecretBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretBundle.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretBundle.ToString" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.ContentType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Kid" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Managed" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.SecretIdentifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretItem" Id="T:Microsoft.Azure.KeyVault.Models.SecretItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.ContentType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.Managed" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretItem.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretProperties" Id="T:Microsoft.Azure.KeyVault.Models.SecretProperties">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretProperties.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretProperties.ContentType" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretRestoreParameters" Id="T:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.SecretBundleBackup" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretSetParameters" Id="T:Microsoft.Azure.KeyVault.Models.SecretSetParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.ContentType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.SecretAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Tags" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Value" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SecretUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.ContentType" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.SecretAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageAccountAttributes" Id="T:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Created" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Enabled" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.RecoveryLevel" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Updated" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters" Id="T:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.#ctor(System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.ActiveKeyName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.AutoRegenerateKey" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.RegenerationPeriod" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.ResourceId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.StorageAccountAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageAccountItem" Id="T:Microsoft.Azure.KeyVault.Models.StorageAccountItem">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountItem.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Identifier" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.ResourceId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters" Id="T:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.KeyName" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters" Id="T:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.#ctor(System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.ActiveKeyName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.AutoRegenerateKey" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.RegenerationPeriod" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.StorageAccountAttributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageBundle" Id="T:Microsoft.Azure.KeyVault.Models.StorageBundle">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageBundle.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageBundle.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.ActiveKeyName" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Attributes" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.AutoRegenerateKey" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Id" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.RegenerationPeriod" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.ResourceId" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.StorageRestoreParameters" Id="T:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.StorageBundleBackup" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames" Id="T:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.DnsNames" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.Emails" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.Upns" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.Trigger" Id="T:Microsoft.Azure.KeyVault.Models.Trigger">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Trigger.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Trigger.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.Trigger.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Trigger.DaysBeforeExpiry" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.Trigger.LifetimePercentage" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.Models.X509CertificateProperties" Id="T:Microsoft.Azure.KeyVault.Models.X509CertificateProperties">
      <Member Id="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames" />
      <Member Id="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.KeyVault.WebKey">
    <Type Name="Microsoft.Azure.KeyVault.WebKey.EccExtension" Id="T:Microsoft.Azure.KeyVault.WebKey.EccExtension">
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.EccExtension.ExportParameters(System.Security.Cryptography.ECDsa,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.EccExtension.GetKeyOperations(System.Security.Cryptography.ECDsa)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.ECParameters" Id="T:Microsoft.Azure.KeyVault.WebKey.ECParameters">
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.ECParameters.#ctor" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.ECParameters.Curve" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.ECParameters.D" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.ECParameters.X" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.ECParameters.Y" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKey" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKey">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ExtensionData" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor(Microsoft.Azure.KeyVault.WebKey.ECParameters)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor(System.Security.Cryptography.Aes)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor(System.Security.Cryptography.ECDsa,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor(System.Security.Cryptography.RSA,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.#ctor(System.Security.Cryptography.RSAParameters)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.CanonicalizeRSA" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ClearMemory" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Equals(Microsoft.Azure.KeyVault.WebKey.JsonWebKey)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Equals(System.Object)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.GetHashCode" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.HasPrivateKey" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.IsValid" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToAes" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToECDsa(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToEcParameters(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToRSA(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToRSAParameters(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.ToString" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.VisitProperties(System.Action{System.String,System.Object})" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.CurveName" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.D" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.DP" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.DQ" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.E" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.K" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.KeyOps" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Kid" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Kty" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.N" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.P" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Q" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.QI" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.T" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.X" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKey.Y" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.P256" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.P256K" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.P384" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.P521" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.GetKeyParameterSize(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.AllCurves" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm.RSA15" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm.RSAOAEP" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm.RSAOAEP256" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyEncryptionAlgorithm.AllAlgorithms" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Decrypt" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Encrypt" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Sign" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Unwrap" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Verify" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.Wrap" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.IsValidOperation(System.String)" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.AllOperations" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.ES256" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.ES256K" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.ES384" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.ES512" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.PS256" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.PS384" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.PS512" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.RS256" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.RS384" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.RS512" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.RSNULL" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.AllAlgorithms" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.AllEcAlgorithms" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.AllRsaAlgorithms" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.EllipticCurve" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.EllipticCurveHsm" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.Octet" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.Rsa" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.RsaHsm" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.AllTypes" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerificationException" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerificationException">
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerificationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerificationException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier">
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.AddCompatibleOperations(System.Collections.Generic.ICollection{System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.AddItem``1(System.Collections.Generic.ICollection{``0}@,``0)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.AddUsedProperties(System.Collections.Generic.ICollection{System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.GetVerifier(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsAnyPrivateKeyParamSpecified(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Collections.Generic.ICollection{System.String}@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsOperationCompatible(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsOperationValid(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPrivateKeyComplete(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Collections.Generic.ICollection{System.String}@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPrivateKeyValid(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPropertyUsed(System.String)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPublicKeyComplete(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Collections.Generic.ICollection{System.String}@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPublicKeyValid(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsSecretKeyComplete(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Collections.Generic.ICollection{System.String}@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsSecretKeyValid(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsSymmetricKeyComplete(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Collections.Generic.ICollection{System.String}@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsSymmetricKeyValid(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Register(Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.SurroundWithQuotes(System.Collections.Generic.ICollection{System.String})" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.ValidateKeyParameterSize(System.Byte[],System.String,System.Int32,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Verify(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options,System.String@)" />
      <Member Id="M:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.VerifyByKeyType(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options,System.String@)" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.HasSecretKey" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsPublicKeyCrypto" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.IsSymmetricKeyCrypto" />
      <Member Id="P:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Kty" />
    </Type>
    <Type Name="Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier/Options" Id="T:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options">
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.DenyExtraneousFields" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.DenyIncompatibleOperations" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.DenyPrivateKey" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.None" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.RequirePrivateKey" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.ThrowException" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.VerifyDecrypt" />
      <Member Id="F:Microsoft.Azure.KeyVault.WebKey.JsonWebKeyVerifier.Options.VerifySign" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Kusto">
    <Type Name="Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions" Id="T:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.Delete(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.Get(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.ListByCluster(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.AttachedDatabaseConfigurationsOperationsExtensions.ListByClusterAsync(Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations,System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions" Id="T:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginDetachFollowerDatabases(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginDetachFollowerDatabasesAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginStart(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginStartAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginStop(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginStopAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.Delete(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.DetachFollowerDatabases(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.DetachFollowerDatabasesAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.Get(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.List(Microsoft.Azure.Management.Kusto.IClustersOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListFollowerDatabases(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListFollowerDatabasesAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListSkus(Microsoft.Azure.Management.Kusto.IClustersOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListSkusAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListSkusByResource(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.ListSkusByResourceAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.Start(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.StartAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.Stop(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.StopAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.Update(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.ClustersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Kusto.IClustersOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions" Id="T:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.AddPrincipals(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.AddPrincipalsAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.CheckNameRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.CheckNameRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.Delete(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.Get(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.ListByCluster(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.ListByClusterAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.ListPrincipals(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.ListPrincipalsAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.RemovePrincipals(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.RemovePrincipalsAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.Update(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DatabasesOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Kusto.IDatabasesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions" Id="T:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.DataConnectionValidationMethod(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.DataConnectionValidationMethodAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.Delete(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.Get(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.ListByDatabase(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.ListByDatabaseAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.Update(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.DataConnectionsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Kusto.IDataConnectionsOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations" Id="T:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations">
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IAttachedDatabaseConfigurationsOperations.ListByClusterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IClustersOperations" Id="T:Microsoft.Azure.Management.Kusto.IClustersOperations">
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginDetachFollowerDatabasesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginStartWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginStopWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Cluster,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.DetachFollowerDatabasesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.ListFollowerDatabasesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.ListSkusByResourceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.ListSkusWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.StartWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.StopWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IClustersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.ClusterUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IDatabasesOperations" Id="T:Microsoft.Azure.Management.Kusto.IDatabasesOperations">
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.AddPrincipalsWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Kusto.Models.CheckNameRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.ListByClusterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.ListPrincipalsWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.RemovePrincipalsWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDatabasesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.Database,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IDataConnectionsOperations" Id="T:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations">
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.DataConnectionValidationMethodWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.ListByDatabaseWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IDataConnectionsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IKustoManagementClient" Id="T:Microsoft.Azure.Management.Kusto.IKustoManagementClient">
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.AttachedDatabaseConfigurations" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.Clusters" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.Databases" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.DataConnections" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.IKustoManagementClient.SubscriptionId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.IOperations" Id="T:Microsoft.Azure.Management.Kusto.IOperations">
      <Member Id="M:Microsoft.Azure.Management.Kusto.IOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.KustoManagementClient" Id="T:Microsoft.Azure.Management.Kusto.KustoManagementClient">
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Net.Http.HttpClient,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.KustoManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.AttachedDatabaseConfigurations" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.Clusters" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.Databases" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.DataConnections" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.KustoManagementClient.SubscriptionId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.OperationsExtensions" Id="T:Microsoft.Azure.Management.Kusto.OperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Kusto.OperationsExtensions.List(Microsoft.Azure.Management.Kusto.IOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Kusto.IOperations,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.OperationsExtensions.ListNext(Microsoft.Azure.Management.Kusto.IOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.OperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Kusto.IOperations,System.String,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Kusto.Models">
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration" Id="T:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.AttachedDatabaseNames" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.ClusterResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.DatabaseName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.DefaultPrincipalsModificationKind" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.Location" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AttachedDatabaseConfiguration.ProvisioningState" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureCapacity" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureCapacity">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.DefaultProperty" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.Maximum" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.Minimum" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureCapacity.ScaleType" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureEntityResource" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureEntityResource">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureEntityResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureEntityResource.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureEntityResource.Etag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureResourceSku" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.#ctor(System.String,Microsoft.Azure.Management.Kusto.Models.AzureSku,Microsoft.Azure.Management.Kusto.Models.AzureCapacity)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.Capacity" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.ResourceType" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureResourceSku.Sku" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureScaleType" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureScaleType">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureScaleType.Automatic" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureScaleType.Manual" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureScaleType.None" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureSku" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureSku">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureSku.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureSku.#ctor(System.String,System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.AzureSku.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureSku.Capacity" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureSku.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.AzureSku.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureSkuName" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureSkuName">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.DevNoSLAStandardD11V2" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardD11V2" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardD12V2" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardD13V2" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardD14V2" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardDS13V21TBPS" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardDS13V22TBPS" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardDS14V23TBPS" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardDS14V24TBPS" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardL16s" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardL4s" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuName.StandardL8s" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.AzureSkuTier" Id="T:Microsoft.Azure.Management.Kusto.Models.AzureSkuTier">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuTier.Basic" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.AzureSkuTier.Standard" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.CheckNameRequest" Id="T:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest.#ctor(System.String,Microsoft.Azure.Management.Kusto.Models.Type)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameRequest.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.CheckNameResult" Id="T:Microsoft.Azure.Management.Kusto.Models.CheckNameResult">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.Message" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.NameAvailable" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.CheckNameResult.Reason" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Cluster" Id="T:Microsoft.Azure.Management.Kusto.Models.Cluster">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Cluster.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Cluster.#ctor(System.String,Microsoft.Azure.Management.Kusto.Models.AzureSku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Kusto.Models.Identity,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant},Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration,Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Cluster.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.DataIngestionUri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.EnableDiskEncryption" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.EnableStreamingIngest" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.KeyVaultProperties" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.OptimizedAutoscale" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.State" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.TrustedExternalTenants" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.Uri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.VirtualNetworkConfiguration" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Cluster.Zones" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest" Id="T:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterCheckNameRequest.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ClusterUpdate" Id="T:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Kusto.Models.AzureSku,Microsoft.Azure.Management.Kusto.Models.Identity,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant},Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration,Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.DataIngestionUri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.EnableDiskEncryption" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.EnableStreamingIngest" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.KeyVaultProperties" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Location" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.OptimizedAutoscale" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.State" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Tags" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.TrustedExternalTenants" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.Uri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ClusterUpdate.VirtualNetworkConfiguration" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Database" Id="T:Microsoft.Azure.Management.Kusto.Models.Database">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Database.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Database.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Database.Location" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.AppId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Email" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Fqn" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Role" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.TenantName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal})" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListRequest.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListResult" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListResult">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.DatabasePrincipal})" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalListResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.Admin" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.Ingestor" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.Monitor" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.UnrestrictedViewers" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.User" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalRole.Viewer" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalType" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalType">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalType.App" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalType.Group" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DatabasePrincipalType.User" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics" Id="T:Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics.#ctor(System.Nullable{System.Double})" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics.Size" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataConnection" Id="T:Microsoft.Azure.Management.Kusto.Models.DataConnection">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnection.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnection.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnection.Location" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest" Id="T:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionCheckNameRequest.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation" Id="T:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation.#ctor(System.String,Microsoft.Azure.Management.Kusto.Models.DataConnection)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation.DataConnectionName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidation.Properties" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationListResult" Id="T:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationListResult">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationListResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult})" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationListResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult" Id="T:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.DataConnectionValidationResult.ErrorMessage" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DataFormat" Id="T:Microsoft.Azure.Management.Kusto.Models.DataFormat">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.AVRO" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.CSV" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.JSON" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.MULTIJSON" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.PSV" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.RAW" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.SCSV" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.SINGLEJSON" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.SOHSV" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.TSV" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.TSVE" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DataFormat.TXT" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.DefaultPrincipalsModificationKind" Id="T:Microsoft.Azure.Management.Kusto.Models.DefaultPrincipalsModificationKind">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DefaultPrincipalsModificationKind.None" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DefaultPrincipalsModificationKind.Replace" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.DefaultPrincipalsModificationKind.Union" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection" Id="T:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.ConsumerGroup" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.DataFormat" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.EventHubResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.MappingRuleName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.StorageAccountResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventGridDataConnection.TableName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection" Id="T:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.ConsumerGroup" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.DataFormat" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.EventHubResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.EventSystemProperties" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.MappingRuleName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.EventHubDataConnection.TableName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition" Id="T:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.AttachedDatabaseConfigurationName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.ClusterResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.FollowerDatabaseDefinition.DatabaseName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Identity" Id="T:Microsoft.Azure.Management.Kusto.Models.Identity">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Identity.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Identity.#ctor(Microsoft.Azure.Management.Kusto.Models.IdentityType,System.String,System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Identity.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Identity.PrincipalId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Identity.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Identity.Type" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Identity.UserAssignedIdentities" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.IdentityType" Id="T:Microsoft.Azure.Management.Kusto.Models.IdentityType">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.IdentityType.None" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.IdentityType.SystemAssigned" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue" Id="T:Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue.ClientId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IdentityUserAssignedIdentitiesValue.PrincipalId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection" Id="T:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.ConsumerGroup" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.DataFormat" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.EventSystemProperties" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.IotHubResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.MappingRuleName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.SharedAccessPolicyName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.IotHubDataConnection.TableName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties" Id="T:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.KeyName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.KeyVaultUri" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.KeyVaultProperties.KeyVersion" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Operation" Id="T:Microsoft.Azure.Management.Kusto.Models.Operation">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Operation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Kusto.Models.OperationDisplay,System.String,System.Object)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Operation.Display" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Operation.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Operation.Origin" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Operation.Properties" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.OperationDisplay" Id="T:Microsoft.Azure.Management.Kusto.Models.OperationDisplay">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.Description" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.Operation" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.Provider" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OperationDisplay.Resource" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale" Id="T:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.#ctor(System.Int32,System.Boolean,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.IsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.Maximum" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.Minimum" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.OptimizedAutoscale.Version" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Page`1" Id="T:Microsoft.Azure.Management.Kusto.Models.Page`1">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page`1.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Page`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Page1`1" Id="T:Microsoft.Azure.Management.Kusto.Models.Page1`1">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page1`1.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page1`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Page1`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Page1`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.PrincipalsModificationKind" Id="T:Microsoft.Azure.Management.Kusto.Models.PrincipalsModificationKind">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.PrincipalsModificationKind.None" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.PrincipalsModificationKind.Replace" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.PrincipalsModificationKind.Union" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ProvisioningState" Id="T:Microsoft.Azure.Management.Kusto.Models.ProvisioningState">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Creating" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Deleting" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Failed" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Moving" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Running" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.ProvisioningState.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ProxyResource" Id="T:Microsoft.Azure.Management.Kusto.Models.ProxyResource">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ProxyResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ProxyResource.#ctor(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase" Id="T:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.AttachedDatabaseConfigurationName" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.HotCachePeriod" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.LeaderClusterResourceId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.PrincipalsModificationKind" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.SoftDeletePeriod" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadOnlyFollowingDatabase.Statistics" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase" Id="T:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Management.Kusto.Models.DatabaseStatistics)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.HotCachePeriod" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.SoftDeletePeriod" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.ReadWriteDatabase.Statistics" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Reason" Id="T:Microsoft.Azure.Management.Kusto.Models.Reason">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.Reason.AlreadyExists" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.Reason.Invalid" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Resource" Id="T:Microsoft.Azure.Management.Kusto.Models.Resource">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Resource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.Resource.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Resource.Id" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Resource.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.Resource.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.SkuDescription" Id="T:Microsoft.Azure.Management.Kusto.Models.SkuDescription">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.SkuDescription.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.SkuDescription.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem},System.Collections.Generic.IList{System.Object})" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.LocationInfo" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.Locations" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.Name" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.ResourceType" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.Restrictions" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuDescription.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem" Id="T:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem.#ctor(System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem.Location" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.SkuLocationInfoItem.Zones" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.State" Id="T:Microsoft.Azure.Management.Kusto.Models.State">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Creating" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Deleted" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Deleting" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Running" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Starting" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Stopped" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Stopping" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Unavailable" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.State.Updating" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.TrackedResource" Id="T:Microsoft.Azure.Management.Kusto.Models.TrackedResource">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.TrackedResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.TrackedResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.TrackedResource.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.TrackedResource.Location" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.TrackedResource.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant" Id="T:Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.TrustedExternalTenant.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.Type" Id="T:Microsoft.Azure.Management.Kusto.Models.Type">
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.Type.MicrosoftKustoClustersAttachedDatabaseConfigurations" />
      <Member Id="F:Microsoft.Azure.Management.Kusto.Models.Type.MicrosoftKustoClustersDatabases" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration" Id="T:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration">
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.DataManagementPublicIpId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.EnginePublicIpId" />
      <Member Id="P:Microsoft.Azure.Management.Kusto.Models.VirtualNetworkConfiguration.SubnetId" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage">
    <Type Name="Microsoft.Azure.Storage.AccessCondition" Id="T:Microsoft.Azure.Storage.AccessCondition">
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.Clone" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateEmptyCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfAppendPositionEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfExistsCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfMatchCondition(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfMaxSizeLessThanOrEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfModifiedSinceCondition(System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNoneMatchCondition(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotModifiedSinceCondition(System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberLessThanCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberLessThanOrEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateLeaseCondition(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfAppendPositionEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMatchContentCrc" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMaxSizeLessThanOrEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchContentCrc" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberLessThan" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberLessThanOrEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.LeaseId" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.AuthenticationScheme" Id="T:Microsoft.Azure.Storage.AuthenticationScheme">
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.SharedKey" />
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.SharedKeyLite" />
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.CloudStorageAccount" Id="T:Microsoft.Azure.Storage.CloudStorageAccount">
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.Azure.Storage.SharedAccessAccountPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.Parse(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.ToString" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.ToString(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.TryParse(System.String,Microsoft.Azure.Storage.CloudStorageAccount@)" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.BlobEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.BlobStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.Credentials" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.DevelopmentStorageAccount" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.FileEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.FileStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.QueueEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.QueueStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.TableEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.TableStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.UseV1MD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.DoesServiceRequestAttribute" Id="T:Microsoft.Azure.Storage.DoesServiceRequestAttribute">
      <Member Id="M:Microsoft.Azure.Storage.DoesServiceRequestAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IBufferManager" Id="T:Microsoft.Azure.Storage.IBufferManager">
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.GetDefaultBufferSize" />
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.ReturnBuffer(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.TakeBuffer(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.ICancellableAsyncResult" Id="T:Microsoft.Azure.Storage.ICancellableAsyncResult">
      <Member Id="M:Microsoft.Azure.Storage.ICancellableAsyncResult.Cancel" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IContinuationToken" Id="T:Microsoft.Azure.Storage.IContinuationToken">
      <Member Id="P:Microsoft.Azure.Storage.IContinuationToken.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IPAddressOrRange" Id="T:Microsoft.Azure.Storage.IPAddressOrRange">
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.Address" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.IsSingleAddress" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.MaximumAddress" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.MinimumAddress" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IRequestOptions" Id="T:Microsoft.Azure.Storage.IRequestOptions">
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.MaximumExecutionTime" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.RequireEncryption" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.ServerTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.LogLevel" Id="T:Microsoft.Azure.Storage.LogLevel">
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Error" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Informational" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Off" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Verbose" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Warning" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.NameValidator" Id="T:Microsoft.Azure.Storage.NameValidator">
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateBlobName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateContainerName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateDirectoryName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateFileName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateQueueName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateShareName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateTableName(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.OperationContext" Id="T:Microsoft.Azure.Storage.OperationContext">
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalRequestCompleted" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalResponseReceived" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalRetrying" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalSendingRequest" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.RequestCompleted" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.ResponseReceived" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.Retrying" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.SendingRequest" />
      <Member Id="M:Microsoft.Azure.Storage.OperationContext.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.ClientRequestID" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.CustomUserAgent" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.DefaultLogLevel" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.EndTime" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.LastResult" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.LogLevel" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.RequestResults" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.StartTime" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.UserHeaders" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RequestEventArgs" Id="T:Microsoft.Azure.Storage.RequestEventArgs">
      <Member Id="M:Microsoft.Azure.Storage.RequestEventArgs.#ctor(Microsoft.Azure.Storage.RequestResult)" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.Request" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.RequestInformation" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.Response" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RequestResult" Id="T:Microsoft.Azure.Storage.RequestResult">
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.ReadXmlAsync(System.Xml.XmlReader)" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ContentCrc64" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ContentMd5" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EgressBytes" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EncryptionKeySHA256" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EndTime" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ErrorCode" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.Etag" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.Exception" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ExtendedErrorInformation" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.HttpStatusCode" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.HttpStatusMessage" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IngressBytes" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IsRequestServerEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IsServiceEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.RequestDate" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ServiceRequestID" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.StartTime" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.ResultSegment`1" Id="T:Microsoft.Azure.Storage.ResultSegment`1">
      <Member Id="P:Microsoft.Azure.Storage.ResultSegment`1.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.ResultSegment`1.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountPermissions" Id="T:Microsoft.Azure.Storage.SharedAccessAccountPermissions">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Add" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Create" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.List" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.ProcessMessages" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Read" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Update" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountPolicy" Id="T:Microsoft.Azure.Storage.SharedAccessAccountPolicy">
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.PermissionsToString(Microsoft.Azure.Storage.SharedAccessAccountPermissions)" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ResourceTypesToString(Microsoft.Azure.Storage.SharedAccessAccountResourceTypes)" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ServicesToString(Microsoft.Azure.Storage.SharedAccessAccountServices)" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Permissions" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Protocols" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ResourceTypes" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Services" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountResourceTypes" Id="T:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Container" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Object" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Service" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountServices" Id="T:Microsoft.Azure.Storage.SharedAccessAccountServices">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Blob" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.File" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Queue" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Table" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessProtocol" Id="T:Microsoft.Azure.Storage.SharedAccessProtocol">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessProtocol.HttpsOnly" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessProtocol.HttpsOrHttp" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageException" Id="T:Microsoft.Azure.Storage.StorageException">
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(Microsoft.Azure.Storage.RequestResult,System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.ToString" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.TranslateExceptionAsync(System.Exception,Microsoft.Azure.Storage.RequestResult,System.Func{System.IO.Stream,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Azure.Storage.StorageExtendedErrorInformation}},System.Threading.CancellationToken,System.Net.Http.HttpResponseMessage)" />
      <Member Id="P:Microsoft.Azure.Storage.StorageException.RequestInformation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageExtendedErrorInformation" Id="T:Microsoft.Azure.Storage.StorageExtendedErrorInformation">
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadXmlAsync(System.Xml.XmlReader,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.AdditionalDetails" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ErrorCode" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ErrorMessage" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageLocation" Id="T:Microsoft.Azure.Storage.StorageLocation">
      <Member Id="F:Microsoft.Azure.Storage.StorageLocation.Primary" />
      <Member Id="F:Microsoft.Azure.Storage.StorageLocation.Secondary" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageUri" Id="T:Microsoft.Azure.Storage.StorageUri">
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.#ctor(System.Uri,System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.Equals(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.Equals(System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.GetHashCode" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.GetUri(Microsoft.Azure.Storage.StorageLocation)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.op_Equality(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.op_Inequality(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.StorageUri.PrimaryUri" />
      <Member Id="P:Microsoft.Azure.Storage.StorageUri.SecondaryUri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.UserDelegationKey" Id="T:Microsoft.Azure.Storage.UserDelegationKey">
      <Member Id="M:Microsoft.Azure.Storage.UserDelegationKey.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedExpiry" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedOid" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedService" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedStart" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedTid" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedVersion" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Auth">
    <Type Name="Microsoft.Azure.Storage.Auth.NewTokenAndFrequency" Id="T:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency">
      <Member Id="M:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.#ctor(System.String,System.Nullable{System.TimeSpan})" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.Frequency" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync" Id="T:Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync" />
    <Type Name="Microsoft.Azure.Storage.Auth.StorageCredentials" Id="T:Microsoft.Azure.Storage.Auth.StorageCredentials">
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(Microsoft.Azure.Storage.Auth.TokenCredential)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.Byte[],System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.Equals(Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.ExportBase64EncodedKey" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.ExportKey" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.TransformUri(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.TransformUri(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.Byte[],System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateSASToken(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.AccountName" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsAnonymous" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsSAS" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsSharedKey" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsToken" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.KeyName" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.SASSignature" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.SASToken" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Auth.TokenCredential" Id="T:Microsoft.Azure.Storage.Auth.TokenCredential">
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.#ctor(System.String,Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync,System.Object,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.Dispose" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.TokenCredential.Token" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Blob">
    <Type Name="Microsoft.Azure.Storage.Blob.BatchOperation" Id="T:Microsoft.Azure.Storage.Blob.BatchOperation">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BatchOperation.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobAccountExtensions" Id="T:Microsoft.Azure.Storage.Blob.BlobAccountExtensions">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobAccountExtensions.CreateCloudBlobClient(Microsoft.Azure.Storage.CloudStorageAccount)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobBatchException" Id="T:Microsoft.Azure.Storage.Blob.BlobBatchException">
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchException.ErrorResponses" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchException.SuccessfulResponses" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError" Id="T:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError">
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.ErrorCode" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.ExtendedErrorInformation" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.OperationIndex" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.StatusCode" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse" Id="T:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse">
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.Headers" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.OperationIndex" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.StatusCode" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobContainerPermissions" Id="T:Microsoft.Azure.Storage.Blob.BlobContainerPermissions">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.PublicAccess" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobContainerProperties" Id="T:Microsoft.Azure.Storage.Blob.BlobContainerProperties">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContainerProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.ETag" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LastModified" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseState" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.PublicAccess" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType" Id="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType">
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Blob" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Container" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Off" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Unknown" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobContinuationToken" Id="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.GetSchema" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.ReadXmlAsync(System.Xml.XmlReader)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.NextMarker" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey" Id="T:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.EncryptionAlgorithm" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.Key" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.KeySHA256" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation" Id="T:Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy" Id="T:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.#ctor(Microsoft.Azure.KeyVault.Core.IKey,Microsoft.Azure.KeyVault.Core.IKeyResolver)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.Key" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.KeyResolver" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobListingDetails" Id="T:Microsoft.Azure.Storage.Blob.BlobListingDetails">
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.All" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Copy" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Deleted" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Metadata" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.None" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Snapshots" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.UncommittedBlobs" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobProperties" Id="T:Microsoft.Azure.Storage.Blob.BlobProperties">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobProperties.#ctor(Microsoft.Azure.Storage.Blob.BlobProperties)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobTierInferred" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobTierLastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobType" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.CacheControl" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentType" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.Created" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.DeletedTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.ETag" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.IsIncrementalCopy" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.IsServerEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.LastModified" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseState" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.Length" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.PageBlobSequenceNumber" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.PremiumPageBlobTier" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.RehydrationStatus" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.RemainingDaysBeforePermanentDelete" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobProperties.StandardBlobTier" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobRequestOptions" Id="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobRequestOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.ChecksumOptions" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.CustomerProvidedKey" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.EncryptionPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.RequireEncryption" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.ServerTimeout" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobResultSegment" Id="T:Microsoft.Azure.Storage.Blob.BlobResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.IListBlobItem},Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.BlobResultSegment.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation" Id="T:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation">
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlobType" Id="T:Microsoft.Azure.Storage.Blob.BlobType">
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobType.AppendBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobType.BlockBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobType.PageBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlobType.Unspecified" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlockListingFilter" Id="T:Microsoft.Azure.Storage.Blob.BlockListingFilter">
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.All" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.Committed" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.Uncommitted" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.BlockSearchMode" Id="T:Microsoft.Azure.Storage.Blob.BlockSearchMode">
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Committed" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Latest" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Uncommitted" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudAppendBlob" Id="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlock(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.Uri,System.Int64,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsyncHelper(System.IO.Stream,System.Nullable{System.Int64},System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlob" Id="T:Microsoft.Azure.Storage.Blob.CloudBlob">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginGetAccountProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRotateEncryptionKey(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRotateEncryptionKey(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginUndelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginUndelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.Delete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64},System.Int64,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndGetAccountProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndRotateEncryptionKey(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndUndelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetUserDelegationSharedAccessSignature(Microsoft.Azure.Storage.UserDelegationKey,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKey(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.Undelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.BlobType" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Container" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.CopyState" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.IsDeleted" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.IsSnapshot" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotQualifiedUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlob.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlobClient" Id="T:Microsoft.Azure.Storage.Blob.CloudBlobClient">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetAccountProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(System.Uri,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceStats(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceStats(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetAccountProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetBlobReferenceFromServer(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetServiceStats(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetUserDelegationKey(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndListBlobsSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndListContainersSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndSetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ExecuteBatchAsync(Microsoft.Azure.Storage.Blob.BatchOperation,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServer(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServer(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetContainerReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetRootContainerReference" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStats(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKeyAsync(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKeyAsync(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobs(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainers(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.AuthenticationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.BufferManager" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.DefaultDelimiter" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.DefaultRequestOptions" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlobContainer" Id="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetAccountProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Create(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Create(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetAccountProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetUserDelegationSharedAccessSignature(Microsoft.Azure.Storage.UserDelegationKey,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlobDirectory" Id="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.BeginListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.BeginListBlobsSegmented(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.EndListBlobsSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobs(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmented(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Container" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Prefix" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlobStream" Id="T:Microsoft.Azure.Storage.Blob.CloudBlobStream">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.BeginCommit(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.BeginFlush(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.Commit" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.CommitAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.EndCommit(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.EndFlush(System.IAsyncResult)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudBlockBlob" Id="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndCreateSnapshot(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadBlockList(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndOpenWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlock(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlockList(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndSetStandardBlobTier(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CloudPageBlob" Id="T:Microsoft.Azure.Storage.Blob.CloudPageBlob">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndClearPages(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreateSnapshot(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRanges(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRangesDiff(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndOpenWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndResize(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetPremiumBlobTier(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetSequenceNumber(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndStartIncrementalCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndWritePages(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Resize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.ContainerListingDetails" Id="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails">
      <Member Id="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.All" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.Metadata" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.ContainerResultSegment" Id="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.Blob.ContainerResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.CloudBlobContainer},Microsoft.Azure.Storage.Blob.BlobContinuationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ContainerResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ContainerResultSegment.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CopyState" Id="T:Microsoft.Azure.Storage.Blob.CopyState">
      <Member Id="M:Microsoft.Azure.Storage.Blob.CopyState.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.BytesCopied" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.CompletionTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.CopyId" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.DestinationSnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.Source" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.Status" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.StatusDescription" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.CopyState.TotalBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.CopyStatus" Id="T:Microsoft.Azure.Storage.Blob.CopyStatus">
      <Member Id="F:Microsoft.Azure.Storage.Blob.CopyStatus.Aborted" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.CopyStatus.Failed" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.CopyStatus.Invalid" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.CopyStatus.Pending" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.CopyStatus.Success" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption" Id="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption">
      <Member Id="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.DeleteSnapshotsOnly" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.IncludeSnapshots" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.ICloudBlob" Id="T:Microsoft.Azure.Storage.Blob.ICloudBlob">
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginGetAccountProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.Delete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndGetAccountProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.BlobType" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.CopyState" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.IsSnapshot" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.IListBlobItem" Id="T:Microsoft.Azure.Storage.Blob.IListBlobItem">
      <Member Id="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Container" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.IListBlobItem.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.LeaseAction" Id="T:Microsoft.Azure.Storage.Blob.LeaseAction">
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseAction.Acquire" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseAction.Break" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseAction.Change" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseAction.Release" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseAction.Renew" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.LeaseDuration" Id="T:Microsoft.Azure.Storage.Blob.LeaseDuration">
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Fixed" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Infinite" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Unspecified" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.LeaseState" Id="T:Microsoft.Azure.Storage.Blob.LeaseState">
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Available" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Breaking" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Broken" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Expired" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Leased" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseState.Unspecified" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.LeaseStatus" Id="T:Microsoft.Azure.Storage.Blob.LeaseStatus">
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Locked" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unlocked" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unspecified" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.ListBlockItem" Id="T:Microsoft.Azure.Storage.Blob.ListBlockItem">
      <Member Id="M:Microsoft.Azure.Storage.Blob.ListBlockItem.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Committed" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Length" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.PageDiffRange" Id="T:Microsoft.Azure.Storage.Blob.PageDiffRange">
      <Member Id="M:Microsoft.Azure.Storage.Blob.PageDiffRange.#ctor(System.Int64,System.Int64,System.Boolean)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.PageDiffRange.IsClearedPageRange" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.PageRange" Id="T:Microsoft.Azure.Storage.Blob.PageRange">
      <Member Id="M:Microsoft.Azure.Storage.Blob.PageRange.#ctor(System.Int64,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.PageRange.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.PageRange.EndOffset" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.PageRange.StartOffset" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.PremiumPageBlobTier" Id="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier">
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P10" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P20" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P30" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P4" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P40" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P50" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P6" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P60" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P70" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P80" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.Unknown" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.RehydratePriority" Id="T:Microsoft.Azure.Storage.Blob.RehydratePriority">
      <Member Id="F:Microsoft.Azure.Storage.Blob.RehydratePriority.High" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.RehydratePriority.Standard" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.RehydrationStatus" Id="T:Microsoft.Azure.Storage.Blob.RehydrationStatus">
      <Member Id="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.PendingToCool" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.PendingToHot" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.Unknown" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.SequenceNumberAction" Id="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction">
      <Member Id="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Increment" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Max" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Update" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders" Id="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders">
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.#ctor(Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.CacheControl" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentType" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions" Id="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions">
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Add" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Create" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.List" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.None" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Read" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies" Id="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies">
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Add(System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Clear" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.ContainsKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy}[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Remove(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.TryGetValue(System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy@)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Count" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Item(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Keys" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy" Id="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy">
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.PermissionsFromString(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.PermissionsToString(Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.Permissions" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.StandardBlobTier" Id="T:Microsoft.Azure.Storage.Blob.StandardBlobTier">
      <Member Id="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Archive" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Cool" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Hot" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Unknown" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Blob.Protocol">
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry">
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings">
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.BlobAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.BlobNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CannotVerifyCopySource" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerBeingDeleted" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CopyAcrossAccountsNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CopyIdMismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InfiniteLeaseDurationRequired" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidAppendCondition" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlobOrBlock" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlobType" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlockId" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlockList" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidMaxBlobSizeCondition" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidPageRange" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidVersionForPageBlobOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseAlreadyBroken" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseAlreadyPresent" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithBlobOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithContainerOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithLeaseOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMissing" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBreakingAndCannotBeAcquired" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBreakingAndCannotBeChanged" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBrokenAndCannotBeRenewed" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseLost" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithBlobOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithContainerOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithLeaseOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.NoPendingCopyOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.PendingCopyOperation" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SequenceNumberConditionNotMet" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SequenceNumberIncrementTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SnapshotsPresent" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SourceConditionNotMet" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.TargetConditionNotMet" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetDeletionStatus(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetIncrementalCopyStatus(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadAccountProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServicePropertiesAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStatsAsync(System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.#ctor(System.String,System.Nullable{System.Int32},System.String,Microsoft.Azure.Storage.Blob.BlobListingDetails)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.Delimiter" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.Details" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobRequest" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest.WriteBlockListBody(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem},System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest.WriteSharedAccessIdentifiers(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies,System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.BlobResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.BlobResponse" />
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers" Id="T:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetAcl(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.ReadAccountProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.ReadSharedAccessIdentifiersAsync(System.IO.Stream,Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.GetBlockListResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.GetBlockListResponse" />
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.GetPageDiffRangesResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.GetPageDiffRangesResponse" />
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.GetPageRangesResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.GetPageRangesResponse" />
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry" Id="T:Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry" />
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry" Id="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry">
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.CopyState" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry" Id="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse">
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.Blobs" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.NextMarker" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse" Id="T:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse">
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse.Containers" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse.NextMarker" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.PageWrite" Id="T:Microsoft.Azure.Storage.Blob.Protocol.PageWrite">
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.PageWrite.Clear" />
      <Member Id="F:Microsoft.Azure.Storage.Blob.Protocol.PageWrite.Update" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem" Id="T:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem">
      <Member Id="M:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.#ctor(System.String,Microsoft.Azure.Storage.Blob.BlockSearchMode)" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.Id" />
      <Member Id="P:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.SearchMode" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core.Auth">
    <Type Name="Microsoft.Azure.Storage.Core.Auth.ICanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer.AuthorizationScheme" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.AuthorizationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.Instance" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.AuthorizationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.Instance" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core">
    <Type Name="Microsoft.Azure.Storage.Core.MultiBufferMemoryStream" Id="T:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream">
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.#ctor(Microsoft.Azure.Storage.IBufferManager,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.ComputeCRC64Hash" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.FastCopyToAsync(System.IO.Stream,System.Nullable{System.DateTime},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Flush" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanRead" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanSeek" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanWrite" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Length" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Position" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.NullType" Id="T:Microsoft.Azure.Storage.Core.NullType" />
    <Type Name="Microsoft.Azure.Storage.Core.SasQueryBuilder" Id="T:Microsoft.Azure.Storage.Core.SasQueryBuilder">
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.Add(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.AddToUri(System.Uri)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.SasQueryBuilder.RequireHttps" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.SyncMemoryStream" Id="T:Microsoft.Azure.Storage.Core.SyncMemoryStream">
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.UriQueryBuilder" Id="T:Microsoft.Azure.Storage.Core.UriQueryBuilder">
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.#ctor(Microsoft.Azure.Storage.Core.UriQueryBuilder)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUri(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUriCore(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.ContainsQueryStringName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.Core.UriQueryBuilder.Item(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.UriQueryBuilder.Parameters" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core.Util">
    <Type Name="Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent" Id="T:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent">
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.Reset" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.Set" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.WaitAsync" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Util.StorageProgress" Id="T:Microsoft.Azure.Storage.Core.Util.StorageProgress">
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.StorageProgress.#ctor(System.Int64)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Util.StorageProgress.BytesTransferred" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.File">
    <Type Name="Microsoft.Azure.Storage.File.CloseFileHandleResultSegment" Id="T:Microsoft.Azure.Storage.File.CloseFileHandleResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.File.CloseFileHandleResultSegment.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloseFileHandleResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloseFileHandleResultSegment.NumHandlesClosed" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFile" Id="T:Microsoft.Azure.Storage.File.CloudFile">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.AbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.AbortCopyAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginAbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginClearRange(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginClearRange(System.Int64,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginCloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginCloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginCreate(System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadText(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginListRanges(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginListRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginOpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginOpenRead(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginOpenWrite(System.Nullable{System.Int64},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginResize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginResize(System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginSetProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginStartCopy(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginStartCopy(Microsoft.Azure.Storage.File.CloudFile,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginStartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadText(System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginWriteRange(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginWriteRange(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.BeginWriteRange(System.IO.Stream,System.Int64,System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ClearRange(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ClearRangeAsync(System.Int64,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ClearRangeAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ClearRangeAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ClearRangeAsync(System.Int64,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CloseAllHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CloseHandleSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.Create(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CreateAsync(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.CreateAsync(System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadTextAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArrayAsync(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFileAsync(System.String,System.IO.FileMode)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndAbortCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndClearRange(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndCloseAllHandlesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndCloseHandleSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadRangeToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadRangeToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadToByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadToFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndDownloadToStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndListHandlesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndListRanges(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndOpenRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndOpenWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndResize(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndSetProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndStartCopy(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndUploadFromByteArray(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndUploadFromFile(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndUploadFromStream(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndUploadText(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.EndWriteRange(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.Exists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,Microsoft.Azure.Storage.File.SharedAccessFileHeaders)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,Microsoft.Azure.Storage.File.SharedAccessFileHeaders,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,Microsoft.Azure.Storage.File.SharedAccessFileHeaders,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListRangesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ListRangesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenReadAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenReadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenWriteAsync(System.Nullable{System.Int64})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.Resize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ResizeAsync(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.ResizeAsync(System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.SetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopy(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(Microsoft.Azure.Storage.File.CloudFile)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(Microsoft.Azure.Storage.File.CloudFile,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.StartCopyAsync(System.Uri,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFileAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadTextAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.UploadTextAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRange(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRange(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.IO.Stream,System.Int64,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.IO.Stream,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.IO.Stream,System.Int64,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFile.WriteRangeAsync(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.CopyState" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.FilePermission" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Share" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.SnapshotQualifiedStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.SnapshotQualifiedUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.StreamMinimumReadSizeInBytes" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.StreamWriteSizeInBytes" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFile.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileClient" Id="T:Microsoft.Azure.Storage.File.CloudFileClient">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginGetServiceProperties(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginGetServiceProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginListSharesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginListSharesSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginListSharesSegmented(System.String,Microsoft.Azure.Storage.File.ShareListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginSetServiceProperties(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.BeginSetServiceProperties(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.EndGetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.EndListSharesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.EndSetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetServiceProperties(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetServicePropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetServicePropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetShareReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.GetShareReference(System.String,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListShares(System.String,Microsoft.Azure.Storage.File.ShareListingDetails,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmented(System.String,Microsoft.Azure.Storage.File.ShareListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.ShareListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.ListSharesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.ShareListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.SetServiceProperties(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.File.Protocol.FileServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.AuthenticationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.BufferManager" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.DefaultRequestOptions" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileClient.StorageUri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileDirectory" Id="T:Microsoft.Azure.Storage.File.CloudFileDirectory">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreate(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseAllHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseAllHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmented(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmented(System.UInt64,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CloseHandleSegmentedAsync(System.UInt64,Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Create(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCloseAllHandlesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCloseHandleSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndListHandlesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.Exists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.GetFileReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectories(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectories(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmented(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.String,Microsoft.Azure.Storage.File.FileContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.File.FileContinuationToken,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListHandlesSegmented(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.ListHandlesSegmentedAsync(Microsoft.Azure.Storage.File.FileContinuationToken,System.Nullable{System.Int32},System.Nullable{System.Boolean},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetProperties(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileDirectory.SetPropertiesAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.FilePermission" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Share" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.SnapshotQualifiedUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileDirectory.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileNtfsAttributes" Id="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes">
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Archive" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Directory" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Hidden" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.None" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Normal" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.NoScrubData" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.NotContentIndexed" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Offline" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.ReadOnly" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.System" />
      <Member Id="F:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes.Temporary" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileShare" Id="T:Microsoft.Azure.Storage.File.CloudFileShare">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginCreate(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginCreate(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginCreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginCreateIfNotExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDelete(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDeleteIfExists(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginGetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginGetPermissions(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginGetStats(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginGetStats(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetPermissions(Microsoft.Azure.Storage.File.FileSharePermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetPermissions(Microsoft.Azure.Storage.File.FileSharePermissions,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSetProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSnapshot(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.Create(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateFilePermission(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateFilePermissionAsync(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateIfNotExists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateIfNotExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.Delete(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteAsync(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExists(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExistsAsync(Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndCreateIfNotExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndGetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndGetStats(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndSetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndSetProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.EndSnapshot(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.Exists(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.ExistsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetFilePermission(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetFilePermissionAsync(System.String,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Nullable{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetPermissionsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetPermissionsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetRootDirectoryReference" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetSharedAccessSignature(Microsoft.Azure.Storage.File.SharedAccessFilePolicy,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetStats(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetStatsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetStatsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetStatsAsync(Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.GetStatsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPermissions(Microsoft.Azure.Storage.File.FileSharePermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPermissionsAsync(Microsoft.Azure.Storage.File.FileSharePermissions)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPermissionsAsync(Microsoft.Azure.Storage.File.FileSharePermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPermissionsAsync(Microsoft.Azure.Storage.File.FileSharePermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPermissionsAsync(Microsoft.Azure.Storage.File.FileSharePermissions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.File.FileRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.IsSnapshot" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotQualifiedStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotQualifiedUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.SnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.CloudFileShare.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileStream" Id="T:Microsoft.Azure.Storage.File.CloudFileStream">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.BeginCommit(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.BeginFlush(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.Commit" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.CommitAsync" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.EndCommit(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream.EndFlush(System.IAsyncResult)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CloudFileStream_old" Id="T:Microsoft.Azure.Storage.File.CloudFileStream_old">
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.BeginCommit(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.BeginFlush(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.Commit" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.EndCommit(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.File.CloudFileStream_old.EndFlush(System.IAsyncResult)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CopyState" Id="T:Microsoft.Azure.Storage.File.CopyState">
      <Member Id="M:Microsoft.Azure.Storage.File.CopyState.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.BytesCopied" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.CompletionTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.CopyId" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.DestinationSnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.Source" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.Status" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.StatusDescription" />
      <Member Id="P:Microsoft.Azure.Storage.File.CopyState.TotalBytes" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.CopyStatus" Id="T:Microsoft.Azure.Storage.File.CopyStatus">
      <Member Id="F:Microsoft.Azure.Storage.File.CopyStatus.Aborted" />
      <Member Id="F:Microsoft.Azure.Storage.File.CopyStatus.Failed" />
      <Member Id="F:Microsoft.Azure.Storage.File.CopyStatus.Invalid" />
      <Member Id="F:Microsoft.Azure.Storage.File.CopyStatus.Pending" />
      <Member Id="F:Microsoft.Azure.Storage.File.CopyStatus.Success" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption" Id="T:Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption">
      <Member Id="F:Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption.IncludeSnapshots" />
      <Member Id="F:Microsoft.Azure.Storage.File.DeleteShareSnapshotsOption.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileAccountExtensions" Id="T:Microsoft.Azure.Storage.File.FileAccountExtensions">
      <Member Id="M:Microsoft.Azure.Storage.File.FileAccountExtensions.CreateCloudFileClient(Microsoft.Azure.Storage.CloudStorageAccount)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileContinuationToken" Id="T:Microsoft.Azure.Storage.File.FileContinuationToken">
      <Member Id="M:Microsoft.Azure.Storage.File.FileContinuationToken.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.FileContinuationToken.GetSchema" />
      <Member Id="M:Microsoft.Azure.Storage.File.FileContinuationToken.ReadXmlAsync(System.Xml.XmlReader)" />
      <Member Id="M:Microsoft.Azure.Storage.File.FileContinuationToken.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileContinuationToken.NextMarker" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileContinuationToken.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileDirectoryProperties" Id="T:Microsoft.Azure.Storage.File.FileDirectoryProperties">
      <Member Id="M:Microsoft.Azure.Storage.File.FileDirectoryProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.ChangeTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.CreationTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.DirectoryId" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.ETag" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.FilePermissionKey" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.IsServerEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.LastModified" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.LastWriteTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.NtfsAttributes" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileDirectoryProperties.ParentId" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileHandle" Id="T:Microsoft.Azure.Storage.File.FileHandle">
      <Member Id="M:Microsoft.Azure.Storage.File.FileHandle.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.ClientIp" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.ClientPort" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.FileId" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.HandleId" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.LastReconnectTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.OpenTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.ParentId" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.Path" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandle.SessionId" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileHandleResultSegment" Id="T:Microsoft.Azure.Storage.File.FileHandleResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.File.FileHandleResultSegment.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandleResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileHandleResultSegment.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileProperties" Id="T:Microsoft.Azure.Storage.File.FileProperties">
      <Member Id="M:Microsoft.Azure.Storage.File.FileProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.FileProperties.#ctor(Microsoft.Azure.Storage.File.FileProperties)" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.CacheControl" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ChangeTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ContentType" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.CreationTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ETag" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.FileId" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.FilePermissionKey" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.IsServerEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.LastModified" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.LastWriteTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.Length" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.NtfsAttributes" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileProperties.ParentId" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileRange" Id="T:Microsoft.Azure.Storage.File.FileRange">
      <Member Id="M:Microsoft.Azure.Storage.File.FileRange.#ctor(System.Int64,System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.File.FileRange.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRange.EndOffset" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRange.StartOffset" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileRequestOptions" Id="T:Microsoft.Azure.Storage.File.FileRequestOptions">
      <Member Id="M:Microsoft.Azure.Storage.File.FileRequestOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.ChecksumOptions" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.DisableContentMD5Validation" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.MaximumExecutionTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.ParallelOperationThreadCount" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.RequireEncryption" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.ServerTimeout" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.StoreFileContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileRequestOptions.UseTransactionalMD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileResultSegment" Id="T:Microsoft.Azure.Storage.File.FileResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.File.FileResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.File.IListFileItem},Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileResultSegment.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileSharePermissions" Id="T:Microsoft.Azure.Storage.File.FileSharePermissions">
      <Member Id="M:Microsoft.Azure.Storage.File.FileSharePermissions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileSharePermissions.SharedAccessPolicies" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileShareProperties" Id="T:Microsoft.Azure.Storage.File.FileShareProperties">
      <Member Id="M:Microsoft.Azure.Storage.File.FileShareProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileShareProperties.ETag" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileShareProperties.LastModified" />
      <Member Id="P:Microsoft.Azure.Storage.File.FileShareProperties.Quota" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.FileSharePublicAccessType" Id="T:Microsoft.Azure.Storage.File.FileSharePublicAccessType">
      <Member Id="F:Microsoft.Azure.Storage.File.FileSharePublicAccessType.Off" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.IListFileItem" Id="T:Microsoft.Azure.Storage.File.IListFileItem">
      <Member Id="P:Microsoft.Azure.Storage.File.IListFileItem.Parent" />
      <Member Id="P:Microsoft.Azure.Storage.File.IListFileItem.Share" />
      <Member Id="P:Microsoft.Azure.Storage.File.IListFileItem.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.File.IListFileItem.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.SharedAccessFileHeaders" Id="T:Microsoft.Azure.Storage.File.SharedAccessFileHeaders">
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.#ctor(Microsoft.Azure.Storage.File.SharedAccessFileHeaders)" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.CacheControl" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFileHeaders.ContentType" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.SharedAccessFilePermissions" Id="T:Microsoft.Azure.Storage.File.SharedAccessFilePermissions">
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.Create" />
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.List" />
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.None" />
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.Read" />
      <Member Id="F:Microsoft.Azure.Storage.File.SharedAccessFilePermissions.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.SharedAccessFilePolicies" Id="T:Microsoft.Azure.Storage.File.SharedAccessFilePolicies">
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Add(System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Clear" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.ContainsKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy}[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Remove(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.TryGetValue(System.String,Microsoft.Azure.Storage.File.SharedAccessFilePolicy@)" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Count" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Item(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Keys" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicies.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.SharedAccessFilePolicy" Id="T:Microsoft.Azure.Storage.File.SharedAccessFilePolicy">
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.PermissionsFromString(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.PermissionsToString(Microsoft.Azure.Storage.File.SharedAccessFilePermissions)" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.Permissions" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.SharedAccessFilePolicy.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.ShareListingDetails" Id="T:Microsoft.Azure.Storage.File.ShareListingDetails">
      <Member Id="F:Microsoft.Azure.Storage.File.ShareListingDetails.All" />
      <Member Id="F:Microsoft.Azure.Storage.File.ShareListingDetails.Metadata" />
      <Member Id="F:Microsoft.Azure.Storage.File.ShareListingDetails.None" />
      <Member Id="F:Microsoft.Azure.Storage.File.ShareListingDetails.Snapshots" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.ShareResultSegment" Id="T:Microsoft.Azure.Storage.File.ShareResultSegment">
      <Member Id="M:Microsoft.Azure.Storage.File.ShareResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.File.CloudFileShare},Microsoft.Azure.Storage.File.FileContinuationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.File.ShareResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.File.ShareResultSegment.Results" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.File.Protocol">
    <Type Name="Microsoft.Azure.Storage.File.Protocol.DirectoryHttpResponseParsers" Id="T:Microsoft.Azure.Storage.File.Protocol.DirectoryHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.DirectoryHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.DirectoryHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.DirectoryHttpResponseParsers.UpdateSmbProperties(System.Net.Http.HttpResponseMessage,Microsoft.Azure.Storage.File.FileDirectoryProperties)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings" Id="T:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings">
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.CannotDeleteFileOrDirectory" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ClientCacheFlushDelay" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ConditionHeadersNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.DeletePending" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.FileLockConflict" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.InvalidFileOrDirectoryPathName" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.InvalidResourceName" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ParentNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ReadOnlyAttribute" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ResourceAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ResourceTypeMismatch" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ShareAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ShareBeingDeleted" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ShareDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.ShareNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileErrorCodeStrings.SharingViolation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers" Id="T:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.GetCopyAttributes(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.ReadServicePropertiesAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.ReadServiceStatsAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileHttpResponseParsers.UpdateSmbProperties(System.Net.Http.HttpResponseMessage,Microsoft.Azure.Storage.File.FileProperties)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileListingContext" Id="T:Microsoft.Azure.Storage.File.Protocol.FileListingContext">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileListingContext.#ctor(System.Nullable{System.Int32})" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileRangeWrite" Id="T:Microsoft.Azure.Storage.File.Protocol.FileRangeWrite">
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileRangeWrite.Clear" />
      <Member Id="F:Microsoft.Azure.Storage.File.Protocol.FileRangeWrite.Update" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileRequest" Id="T:Microsoft.Azure.Storage.File.Protocol.FileRequest">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileRequest.WriteSharedAccessIdentifiers(Microsoft.Azure.Storage.File.SharedAccessFilePolicies,System.IO.Stream)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileServiceProperties" Id="T:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties.#ctor(Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.CorsProperties)" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties.HourMetrics" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileServiceProperties.MinuteMetrics" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.FileShareEntry" Id="T:Microsoft.Azure.Storage.File.Protocol.FileShareEntry">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileShareEntry.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileShareEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileShareEntry.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileShareEntry.SnapshotTime" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.FileShareEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.IListFileEntry" Id="T:Microsoft.Azure.Storage.File.Protocol.IListFileEntry">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.IListFileEntry.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListFileDirectoryEntry" Id="T:Microsoft.Azure.Storage.File.Protocol.ListFileDirectoryEntry">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileDirectoryEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileDirectoryEntry.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileDirectoryEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListFileEntry" Id="T:Microsoft.Azure.Storage.File.Protocol.ListFileEntry">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileEntry.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileEntry.Properties" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFileEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListFilesAndDirectoriesResponse" Id="T:Microsoft.Azure.Storage.File.Protocol.ListFilesAndDirectoriesResponse">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse" Id="T:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse.#ctor(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse.ParseXml" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse.Handles" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse.MaxResults" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListHandlesResponse.NextMarker" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListRangesResponse" Id="T:Microsoft.Azure.Storage.File.Protocol.ListRangesResponse" />
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ListSharesResponse" Id="T:Microsoft.Azure.Storage.File.Protocol.ListSharesResponse">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ListSharesResponse.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListSharesResponse.NextMarker" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ListSharesResponse.Shares" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers" Id="T:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers.GetSnapshotTime(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers.ReadSharedAccessIdentifiersAsync(System.IO.Stream,Microsoft.Azure.Storage.File.FileSharePermissions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.File.Protocol.ShareHttpResponseParsers.ReadShareStatsAsync(System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.File.Protocol.ShareStats" Id="T:Microsoft.Azure.Storage.File.Protocol.ShareStats">
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ShareStats.Usage" />
      <Member Id="P:Microsoft.Azure.Storage.File.Protocol.ShareStats.UsageInBytes" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Queue">
    <Type Name="Microsoft.Azure.Storage.Queue.CloudQueue" Id="T:Microsoft.Azure.Storage.Queue.CloudQueue">
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.AddMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginClear(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginClear(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginCreate(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginCreate(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDelete(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDelete(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteIfExists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteIfExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginExists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginExists(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginFetchAttributes(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginFetchAttributes(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetMessage(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetPermissions(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginGetPermissions(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginPeekMessage(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginPeekMessage(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginSetMetadata(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginSetMetadata(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.Clear(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ClearAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ClearAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.Create(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateIfNotExists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.Delete(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteIfExists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteIfExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessage(System.String,System.String,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndAddMessage(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndClear(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndCreate(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndCreateIfNotExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndDelete(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndDeleteIfExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndDeleteMessage(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndExists(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndFetchAttributes(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndGetMessage(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndGetMessages(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndGetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndPeekMessage(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndPeekMessages(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndSetMetadata(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndSetPermissions(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.EndUpdateMessage(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.Exists(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ExistsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.FetchAttributes(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.FetchAttributesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.FetchAttributesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessage(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessageAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessageAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetPermissions(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetPermissionsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetPermissionsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessage(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessageAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessageAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessages(System.Int32,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetMetadata(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetMetadataAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetMetadataAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetPermissions(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.UpdateMessage(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.Azure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.Azure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.ApproximateMessageCount" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.EncodeMessage" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.ServiceClient" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.StorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueue.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.CloudQueueClient" Id="T:Microsoft.Azure.Storage.Queue.CloudQueueClient">
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginGetServiceProperties(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginGetServiceProperties(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginGetServiceStats(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginGetServiceStats(System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginListQueuesSegmented(Microsoft.Azure.Storage.Queue.QueueContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginListQueuesSegmented(System.String,Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Queue.QueueContinuationToken,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginListQueuesSegmented(System.String,Microsoft.Azure.Storage.Queue.QueueContinuationToken,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.EndGetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.EndGetServiceStats(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.EndListQueuesSegmented(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.EndSetServiceProperties(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetQueueReference(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceProperties(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServicePropertiesAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServicePropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceStats(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceStatsAsync" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.GetServiceStatsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueues(System.String,Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmented(Microsoft.Azure.Storage.Queue.QueueContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmented(System.String,Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Queue.QueueContinuationToken,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmented(System.String,Microsoft.Azure.Storage.Queue.QueueContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(Microsoft.Azure.Storage.Queue.QueueContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(Microsoft.Azure.Storage.Queue.QueueContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(System.String,Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Queue.QueueContinuationToken,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(System.String,Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Queue.QueueContinuationToken,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(System.String,Microsoft.Azure.Storage.Queue.QueueContinuationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.ListQueuesSegmentedAsync(System.String,Microsoft.Azure.Storage.Queue.QueueContinuationToken,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.SetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Queue.QueueRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.AuthenticationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.BufferManager" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.DefaultRequestOptions" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueClient.StorageUri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.CloudQueueMessage" Id="T:Microsoft.Azure.Storage.Queue.CloudQueueMessage">
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.SetMessageContent2(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.CloudQueueMessage.SetMessageContent2(System.String,System.Boolean)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.AsBytes" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.AsString" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.DequeueCount" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.ExpirationTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.Id" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.InsertionTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.MaxMessageSize" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.MaxVisibilityTimeout" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.NextVisibleTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.CloudQueueMessage.PopReceipt" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.MessageUpdateFields" Id="T:Microsoft.Azure.Storage.Queue.MessageUpdateFields">
      <Member Id="F:Microsoft.Azure.Storage.Queue.MessageUpdateFields.Content" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.MessageUpdateFields.Visibility" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.QueueAccountExtensions" Id="T:Microsoft.Azure.Storage.Queue.QueueAccountExtensions">
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueAccountExtensions.CreateCloudQueueClient(Microsoft.Azure.Storage.CloudStorageAccount)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.QueueContinuationToken" Id="T:Microsoft.Azure.Storage.Queue.QueueContinuationToken">
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueContinuationToken.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueContinuationToken.GetSchema" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueContinuationToken.ReadXmlAsync(System.Xml.XmlReader)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueContinuationToken.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueContinuationToken.NextMarker" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueContinuationToken.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.QueueEncryptionPolicy" Id="T:Microsoft.Azure.Storage.Queue.QueueEncryptionPolicy">
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueEncryptionPolicy.#ctor(Microsoft.Azure.KeyVault.Core.IKey,Microsoft.Azure.KeyVault.Core.IKeyResolver)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueEncryptionPolicy.Key" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueEncryptionPolicy.KeyResolver" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.QueueRequestOptions" Id="T:Microsoft.Azure.Storage.Queue.QueueRequestOptions">
      <Member Id="M:Microsoft.Azure.Storage.Queue.QueueRequestOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.EncryptionPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.MaximumExecutionTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.RequireEncryption" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueRequestOptions.ServerTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.QueueResultSegment" Id="T:Microsoft.Azure.Storage.Queue.QueueResultSegment">
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueResultSegment.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.QueueResultSegment.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions" Id="T:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions">
      <Member Id="F:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions.Add" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions.None" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions.ProcessMessages" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions.Read" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions.Update" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies" Id="T:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies">
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Add(System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Clear" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.ContainsKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy}[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy})" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Remove(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.TryGetValue(System.String,Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy@)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Count" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Item(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Keys" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy" Id="T:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy">
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.PermissionsFromString(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.PermissionsToString(Microsoft.Azure.Storage.Queue.SharedAccessQueuePermissions)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.Permissions" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicy.SharedAccessStartTime" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Queue.Protocol">
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.GetMessagesResponse" Id="T:Microsoft.Azure.Storage.Queue.Protocol.GetMessagesResponse" />
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse" Id="T:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse">
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.NextMarker" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.ListQueuesResponse.Queues" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueEntry" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueEntry">
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueEntry.Metadata" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueEntry.Name" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueEntry.Uri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings">
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidMarker" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidParameter" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.PopReceiptMismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueBeingDeleted" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotEmpty" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotFound" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers">
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetNextVisibleTime(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetPopReceipt(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServicePropertiesAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStatsAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiersAsync(System.IO.Stream,Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueListingContext" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueListingContext">
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueListingContext.#ctor(System.String,System.Nullable{System.Int32},Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails)" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueListingContext.Include" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails">
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails.All" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails.Metadata" />
      <Member Id="F:Microsoft.Azure.Storage.Queue.Protocol.QueueListingDetails.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueMessage" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage">
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.DequeueCount" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.ExpirationTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.Id" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.InsertionTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.PopReceipt" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueueMessage.Text" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions">
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Queue.Protocol.QueuePermissions.SharedAccessPolicies" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Queue.Protocol.QueueRequest" Id="T:Microsoft.Azure.Storage.Queue.Protocol.QueueRequest">
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueRequest.WriteMessageContent(System.String,System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Queue.Protocol.QueueRequest.WriteSharedAccessIdentifiers(Microsoft.Azure.Storage.Queue.SharedAccessQueuePolicies,System.IO.Stream)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.RetryPolicies">
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy" Id="T:Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy" Id="T:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.LinearRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.LinearRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.#ctor(System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.LocationMode" Id="T:Microsoft.Azure.Storage.RetryPolicies.LocationMode">
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.PrimaryOnly" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.PrimaryThenSecondary" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.SecondaryOnly" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.SecondaryThenPrimary" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.NoRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.NoRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.RetryContext" Id="T:Microsoft.Azure.Storage.RetryPolicies.RetryContext">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryContext.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.CurrentRetryCount" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.LastRequestResult" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.NextLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.RetryInfo" Id="T:Microsoft.Azure.Storage.RetryPolicies.RetryInfo">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.#ctor(Microsoft.Azure.Storage.RetryPolicies.RetryContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.RetryInterval" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.TargetLocation" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Shared.Protocol">
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.AccountProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.AccountKind" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.SkuName" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Checksum" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Checksum">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.Checksum.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.Checksum.op_Implicit(System.String)~Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.CRC64" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.MD5" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.DisableContentCRC64Validation" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.DisableContentMD5Validation" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.StoreContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.UseTransactionalCRC64" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.UseTransactionalMD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessPolicy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierChangeTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierInferred" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AES256" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AppendBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ArchiveStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobPrefixElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobTypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CacheControlElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ClearRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ClientIpElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CommittedBlocksElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CommittedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainerNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainersElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentEncodingElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentLanguageElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentLengthElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentMD5Element" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentTypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyAbortedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyCompletionTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyDestinationSnapshotElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyFailedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyPendingValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyProgressElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopySourceElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyStatusDescriptionElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopySuccessValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CreationTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultClientSideTimeout" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultParallelDownloadRangeSizeBytes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultSubStreamBufferSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultWriteBlockSizeBytes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DeletedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DeletedTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DelimiterElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DequeueCountElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DirectoryPathElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EndElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EntriesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EnumerationResultsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorCode" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorExceptionMessage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorExceptionStackTrace" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorMessage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorRootElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EtagElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ExpirationTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Expiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileDirectoryElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileHandleListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileRangeListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoBootstrapValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoLiveValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoUnavailableValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HandleElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HandleIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HasImmutabilityPolicyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HasLegalHoldElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Id" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.IncrementalCopy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.InsertionTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.InvalidMetadataName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.KB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.KeyInfo" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LastModifiedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LastReconnectTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LatestElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseAvailableValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseBreakingValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseBrokenValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseDurationElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeasedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseExpiredValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseFixedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseInfiniteValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseStateElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LockedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxAppendBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlobSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlockNumber" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxIdleTimeMs" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumAllowedTimeout" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumBreakLeasePeriod" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumLeaseDuration" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumRetryBackoff" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxMaximumExecutionTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxParallelOperationThreadCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRangeGetContentCRC64Size" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRangeGetContentMD5Size" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxResults" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxResultsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRetainedVersionsPerBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSharedAccessPolicyIdentifiers" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSingleUploadBlobSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSubOperationPerBatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Messages" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessagesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageTextElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MetadataElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinimumBreakLeasePeriod" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinimumLeaseDuration" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinLargeBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.NameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.NextMarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.OpenTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ParentIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PathElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Permission" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PopReceiptElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PrefixElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PropertiesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PublicAccessElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueueElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueueNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueuesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QuotaElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RehydratePendingToCool" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RehydratePendingToHot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RemainingRetentionDaysElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ServerEncryptionElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ServiceEndpointElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SessionIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ShareElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ShareNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SharesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedIdentifier" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedIdentifiers" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedOid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedService" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedTid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SizeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SnapshotElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Start" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.StartElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.TimeNextVisibleElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UncommittedBlocksElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UncommittedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UnlockedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UrlElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UserDelegationKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/AnalyticsConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.LoggingVersionV1" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.LogsContainer" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsCapacityBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsVersionV1" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/ContinuationConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.BlobType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.ContinuationTopElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.CurrentVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.FileType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextMarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextPartitionKeyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextRowKeyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextTableNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.QueueType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TableType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TargetLocationElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.VersionElement" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/EncryptionConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/HeaderConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierChangeTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierInferredHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AllFileHandles" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AppendBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ApproximateMessagesCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ArchiveStatusHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobAppendOffset" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobCacheControlHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobCommittedBlockCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentDispositionRequestHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentEncodingHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobPublicAccess" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobSequenceNumber" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlockBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncryptionSuccess" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionAlgorithm" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyAlgorithmSource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyHash" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyHashSource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeySource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientRequestIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContainerPublicAccessType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentCrc64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentDispositionResponseHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyActionAbort" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyActionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyCompletionTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyDescriptionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyDestinationSnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyProgressHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopySourceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyStatusHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CreationTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Date" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.DeleteSnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.EtagHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FalseHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.File" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileAttributes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileAttributesNone" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileCacheControlHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileChangeTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentCRC64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentDispositionRequestHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentEncodingHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileCreationTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileLastWriteTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileParentId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermission" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermissionInherit" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermissionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileRangeWrite" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileTimeNow" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HandleId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HasImmutabilityPolicyHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HasLegalHoldHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfAppendPositionEqualHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfMaxSizeLessThanOrEqualHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberEqHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberLEHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberLTHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IncludeSnapshotsValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IncrementalCopyHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.KeyNameHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseActionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseBreakPeriodHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseDurationHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseState" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseStatus" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Marker" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.NextVisibleTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.NumHandlesClosed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PageBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PageWrite" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PeekOnly" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PopReceipt" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageMetadata" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageProperties" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Preserve" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ProposedLeaseIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeContentCRC64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeHeaderFormat" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Recursive" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RehydratePriorityHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RequestIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RequiresSyncHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SequenceNumberAction" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ServerEncrypted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ServerRequestEncrypted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ShareQuota" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ShareSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SnapshotsOnlyValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfMatchCrcHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfMatchHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfModifiedSinceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfNoneMatchCrcHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfNoneMatchHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfUnmodifiedSinceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceRangeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.StorageVersionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.TargetStorageVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.TrueHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgent" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentComment" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentProductName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentProductVersion" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/QueryConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ApiVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.BlobResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.BlobSnapshotResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.CacheControl" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Component" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContainerResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentDisposition" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentEncoding" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentLanguage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.CopyId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.EndPartitionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.EndRowKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Marker" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.MessageTimeToLive" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.NumOfMessages" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.PopReceipt" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SasTableName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ShareSnapshot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Signature" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedIdentifier" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedIP" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyOid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyService" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyTid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedPermissions" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedProtocols" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedResource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedResourceTypes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedServices" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Snapshot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.StartPartitionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.StartRowKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.VisibilityTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/VersionConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants.August2013" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants.February2012" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Connect" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Get" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Head" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Merge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Options" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Patch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Post" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Put" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Trace" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties.CorsRules" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsRule" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsRule">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedHeaders" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedMethods" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedOrigins" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.ExposedHeaders" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy" Id="T:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.Enabled" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.RetentionDays" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats" Id="T:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats">
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats.LastSyncTime" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus" Id="T:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Bootstrap" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Live" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ListingContext" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ListingContext">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.#ctor(System.String,System.Nullable{System.Int32})" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.Marker" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.MaxResults" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.Prefix" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations" Id="T:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.All" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Read" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.RetentionDays" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.Version" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel" Id="T:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.Service" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.ServiceAndApi" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.MetricsLevel" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.RetentionDays" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.Version" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.allObjectsParsed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.outstandingObjectsToParse" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.reader" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.#ctor(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Dispose" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Variable(System.Boolean@)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.ObjectsToParse" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor(Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.CorsProperties,Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor(Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.CorsProperties,Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy,Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.HourMetrics" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.Logging" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.MinuteMetrics" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.StaticWebsite" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ServiceStats" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats">
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats.GeoReplication" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.Enabled" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.ErrorDocument404Path" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.IndexDocument" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountBeingCreated" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountIsDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AuthenticationFailed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ConditionHeadersNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ConditionNotMet" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerBeingDeleted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.Crc64Mismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.EmptyMetadataKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InsufficientAccountPermissions" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InternalError" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidAuthenticationInfo" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidCrc64" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidHeaderValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidHttpVerb" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidInput" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidMd5" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidMetadata" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidQueryParameterValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidRange" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidResourceName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidUri" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidXmlDocument" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidXmlNodeValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.Md5Mismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MetadataTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredQueryParameter" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredXmlNode" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MultipleConditionHeadersNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OperationTimedOut" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OutOfRangeInput" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OutOfRangeQueryParameterValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.RequestBodyTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.RequestUrlFailedToParse" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceTypeMismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ServerBusy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedHttpVerb" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedQueryParameter" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedXmlNode" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StorageService" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StorageService">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Blob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.File" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Queue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Table" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.WebJobs">
    <Type Name="Microsoft.Azure.WebJobs.ActivityTriggerAttribute" Id="T:Microsoft.Azure.WebJobs.ActivityTriggerAttribute">
      <Member Id="M:Microsoft.Azure.WebJobs.ActivityTriggerAttribute.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.ActivityTriggerAttribute.Activity" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableActivityContext" Id="T:Microsoft.Azure.WebJobs.DurableActivityContext">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableActivityContext.GetInput``1" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableActivityContext.InstanceId" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableActivityContextBase" Id="T:Microsoft.Azure.WebJobs.DurableActivityContextBase">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableActivityContextBase.#ctor" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableActivityContextBase.GetInput``1" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableActivityContextBase.InstanceId" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableOrchestrationClient" Id="T:Microsoft.Azure.WebJobs.DurableOrchestrationClient">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.CreateHttpManagementPayload(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.GetStatusAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus},System.Int32,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.GetStatusAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.GetStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.PurgeInstanceHistoryAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.PurgeInstanceHistoryAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.String,System.Object,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.RewindAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.StartNewAsync(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.TerminateAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.TimeSpan,System.TimeSpan)" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationClient.TaskHubName" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableOrchestrationClientBase" Id="T:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.#ctor" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.CreateHttpManagementPayload(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus},System.Int32,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.GetStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.PurgeInstanceHistoryAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.PurgeInstanceHistoryAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.RaiseEventAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.RaiseEventAsync(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.RaiseEventAsync(System.String,System.String,System.String,System.Object,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.RewindAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.StartNewAsync(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.StartNewAsync(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.TerminateAsync(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.TimeSpan,System.TimeSpan)" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationClientBase.TaskHubName" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableOrchestrationContext" Id="T:Microsoft.Azure.WebJobs.DurableOrchestrationContext">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CallActivityAsync``1(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CallActivityWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CallSubOrchestratorAsync``1(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.ContinueAsNew(System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.ContinueAsNew(System.Object,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CreateTimer``1(System.DateTime,``0,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.GetInput``1" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.NewGuid" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.SetCustomStatus(System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.WaitForExternalEvent``1(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.WaitForExternalEvent``1(System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContext.WaitForExternalEvent``1(System.String,System.TimeSpan,``0)" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContext.CurrentUtcDateTime" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContext.IsReplaying" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableOrchestrationContextBase" Id="T:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.#ctor" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallActivityAsync(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallActivityAsync``1(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallActivityWithRetryAsync(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallActivityWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorAsync(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorAsync(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorAsync``1(System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorAsync``1(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.RetryOptions,System.String,System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.ContinueAsNew(System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.ContinueAsNew(System.Object,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CreateTimer(System.DateTime,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CreateTimer``1(System.DateTime,``0,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.GetInput``1" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.NewGuid" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.SetCustomStatus(System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.WaitForExternalEvent(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.WaitForExternalEvent(System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.WaitForExternalEvent``1(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.WaitForExternalEvent``1(System.String,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.WaitForExternalEvent``1(System.String,System.TimeSpan,``0)" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.CurrentUtcDateTime" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.InstanceId" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.IsReplaying" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationContextBase.ParentInstanceId" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.DurableOrchestrationStatus" Id="T:Microsoft.Azure.WebJobs.DurableOrchestrationStatus">
      <Member Id="M:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.CreatedTime" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.CustomStatus" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.History" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.Input" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.InstanceId" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.LastUpdatedTime" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.Name" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.Output" />
      <Member Id="P:Microsoft.Azure.WebJobs.DurableOrchestrationStatus.RuntimeStatus" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.FunctionFailedException" Id="T:Microsoft.Azure.WebJobs.FunctionFailedException">
      <Member Id="M:Microsoft.Azure.WebJobs.FunctionFailedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.FunctionFailedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.OrchestrationClientAttribute" Id="T:Microsoft.Azure.WebJobs.OrchestrationClientAttribute">
      <Member Id="M:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.#ctor" />
      <Member Id="M:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.Equals(Microsoft.Azure.WebJobs.OrchestrationClientAttribute)" />
      <Member Id="M:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.Equals(System.Object)" />
      <Member Id="M:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.GetHashCode" />
      <Member Id="P:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.ConnectionName" />
      <Member Id="P:Microsoft.Azure.WebJobs.OrchestrationClientAttribute.TaskHub" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus" Id="T:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus">
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Canceled" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Completed" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.ContinuedAsNew" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Failed" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Pending" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Running" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Terminated" />
      <Member Id="F:Microsoft.Azure.WebJobs.OrchestrationRuntimeStatus.Unknown" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.OrchestrationTriggerAttribute" Id="T:Microsoft.Azure.WebJobs.OrchestrationTriggerAttribute">
      <Member Id="M:Microsoft.Azure.WebJobs.OrchestrationTriggerAttribute.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.OrchestrationTriggerAttribute.Orchestration" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.PurgeHistoryResult" Id="T:Microsoft.Azure.WebJobs.PurgeHistoryResult">
      <Member Id="M:Microsoft.Azure.WebJobs.PurgeHistoryResult.#ctor(System.Int32)" />
      <Member Id="P:Microsoft.Azure.WebJobs.PurgeHistoryResult.InstancesDeleted" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.RetryOptions" Id="T:Microsoft.Azure.WebJobs.RetryOptions">
      <Member Id="M:Microsoft.Azure.WebJobs.RetryOptions.#ctor(System.TimeSpan,System.Int32)" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.BackoffCoefficient" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.FirstRetryInterval" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.Handle" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.MaxNumberOfAttempts" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.MaxRetryInterval" />
      <Member Id="P:Microsoft.Azure.WebJobs.RetryOptions.RetryTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.StartOrchestrationArgs" Id="T:Microsoft.Azure.WebJobs.StartOrchestrationArgs">
      <Member Id="M:Microsoft.Azure.WebJobs.StartOrchestrationArgs.#ctor" />
      <Member Id="M:Microsoft.Azure.WebJobs.StartOrchestrationArgs.#ctor(System.String,System.Object)" />
      <Member Id="P:Microsoft.Azure.WebJobs.StartOrchestrationArgs.FunctionName" />
      <Member Id="P:Microsoft.Azure.WebJobs.StartOrchestrationArgs.Input" />
      <Member Id="P:Microsoft.Azure.WebJobs.StartOrchestrationArgs.InstanceId" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.WebJobs.Extensions.DurableTask">
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions},Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DeleteTaskHubAsync" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskActivity&gt;#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskActivity})" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskActivity&gt;#GetObject(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskOrchestration&gt;#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskOrchestration})" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager&lt;DurableTask#Core#TaskOrchestration&gt;#GetObject(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.GetClient(Microsoft.Azure.WebJobs.OrchestrationClientAttribute)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#Host#Config#IExtensionConfigProvider#Initialize(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#IAsyncConverter&lt;System#Net#Http#HttpRequestMessage,System#Net#Http#HttpResponseMessage&gt;#ConvertAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder,Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions})" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions})" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.AzureStorageConnectionStringName" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ControlQueueBatchSize" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ControlQueueVisibilityTimeout" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.CustomLifeCycleNotificationHelperType" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridKeySettingName" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridPublishEventTypes" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridPublishRetryCount" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridPublishRetryHttpStatus" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridPublishRetryInterval" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EventGridTopicEndpoint" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionIdleTimeoutInSeconds" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionsEnabled" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.FetchLargeMessagesAutomatically" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.HubName" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.LogReplayEvents" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxConcurrentActivityFunctions" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxConcurrentOrchestratorFunctions" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxQueuePollingInterval" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.NotificationUrl" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.PartitionCount" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.TraceInputsAndOutputs" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.TrackingStoreConnectionStringName" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.TrackingStoreNamePrefix" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.WorkItemQueueVisibilityTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.Id" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.PurgeHistoryDeleteUri" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.RewindPostUri" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.SendEventPostUri" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.StatusQueryGetUri" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.TerminatePostUri" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver.Resolve(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorCompletedAsync(System.String,System.String,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorFailedAsync(System.String,System.String,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorStartingAsync(System.String,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorTerminatedAsync(System.String,System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult.#ctor" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult.DurableOrchestrationState" />
    </Type>
    <Type Name="Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider" Id="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider">
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
      <Member Id="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider.Resolve(System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.ServiceFabric.Preview.Client.Description">
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription" Id="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ComposeFilePath" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ContainerRegistryPassword" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ContainerRegistryUserName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.DeploymentName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.IsRegistryPasswordEncrypted" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription" Id="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription.#ctor(System.String)" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription.DeploymentName" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" Id="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.#ctor" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.ContinuationToken" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.DeploymentNameFilter" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.MaxResults" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription" Id="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.#ctor(System.String,System.String[])" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ComposeFilePaths" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ContainerRegistryPassword" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ContainerRegistryUserName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.DeploymentName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.IsRegistryPasswordEncrypted" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.UpgradePolicyDescription" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription" Id="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription.#ctor(System.String)" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription.DeploymentName" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.ServiceFabric.Preview.Client">
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Extensions" Id="T:Microsoft.ServiceFabric.Preview.Client.Extensions">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription,System.TimeSpan)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription,System.TimeSpan)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription,System.TimeSpan)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentUpgradeProgressAsync(System.Fabric.FabricClient.ComposeDeploymentClient,System.String)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.RollbackComposeDeploymentUpgradeAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.RollbackComposeDeploymentUpgradeAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription,System.TimeSpan)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.RollbackComposeDeploymentUpgradeAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.UpgradeComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription)" />
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Extensions.UpgradeComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.ServiceFabric.Preview.Client.Query">
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus" Id="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus">
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Creating" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Deleting" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Failed" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Invalid" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Provisioning" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Ready" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Unprovisioning" />
      <Member Id="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Upgrading" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList" Id="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList">
      <Member Id="M:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList.#ctor" />
    </Type>
    <Type Name="Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem" Id="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem">
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.ApplicationName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.ComposeDeploymentStatus" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.DeploymentName" />
      <Member Id="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.StatusDetails" />
    </Type>
  </Namespace>
  <Namespace Name="StartupServicesModel">
    <Type Name="StartupServicesModel.StartupDefaultServicesType" Id="T:StartupServicesModel.StartupDefaultServicesType">
      <Member Id="M:StartupServicesModel.StartupDefaultServicesType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesType.Items" />
    </Type>
    <Type Name="StartupServicesModel.StartupDefaultServicesTypeService" Id="T:StartupServicesModel.StartupDefaultServicesTypeService">
      <Member Id="M:StartupServicesModel.StartupDefaultServicesTypeService.#ctor" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeService.GeneratedIdRef" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeService.Item" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeService.Name" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeService.ServiceDnsName" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeService.ServicePackageActivationMode" />
    </Type>
    <Type Name="StartupServicesModel.StartupDefaultServicesTypeServiceGroup" Id="T:StartupServicesModel.StartupDefaultServicesTypeServiceGroup">
      <Member Id="M:StartupServicesModel.StartupDefaultServicesTypeServiceGroup.#ctor" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeServiceGroup.Item" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeServiceGroup.Name" />
      <Member Id="P:StartupServicesModel.StartupDefaultServicesTypeServiceGroup.ServicePackageActivationMode" />
    </Type>
    <Type Name="StartupServicesModel.StartupLoadMetricType" Id="T:StartupServicesModel.StartupLoadMetricType">
      <Member Id="M:StartupServicesModel.StartupLoadMetricType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.DefaultLoad" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.Name" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.PrimaryDefaultLoad" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.SecondaryDefaultLoad" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.Weight" />
      <Member Id="P:StartupServicesModel.StartupLoadMetricType.WeightSpecified" />
    </Type>
    <Type Name="StartupServicesModel.StartupLoadMetricTypeWeight" Id="T:StartupServicesModel.StartupLoadMetricTypeWeight">
      <Member Id="F:StartupServicesModel.StartupLoadMetricTypeWeight.High" />
      <Member Id="F:StartupServicesModel.StartupLoadMetricTypeWeight.Low" />
      <Member Id="F:StartupServicesModel.StartupLoadMetricTypeWeight.Medium" />
      <Member Id="F:StartupServicesModel.StartupLoadMetricTypeWeight.VeryHigh" />
      <Member Id="F:StartupServicesModel.StartupLoadMetricTypeWeight.Zero" />
    </Type>
    <Type Name="StartupServicesModel.StartupScalingPolicyType" Id="T:StartupServicesModel.StartupScalingPolicyType">
      <Member Id="M:StartupServicesModel.StartupScalingPolicyType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyType.AddRemoveIncrementalNamedPartitionScalingMechanism" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyType.AveragePartitionLoadScalingTrigger" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyType.AverageServiceLoadScalingTrigger" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyType.InstanceCountScalingMechanism" />
    </Type>
    <Type Name="StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism" Id="T:StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism">
      <Member Id="M:StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.#ctor" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.MaxPartitionCount" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.MinPartitionCount" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.ScaleIncrement" />
    </Type>
    <Type Name="StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger" Id="T:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger">
      <Member Id="M:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger.#ctor" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger.MetricName" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger.ScaleIntervalInSeconds" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAveragePartitionLoadScalingTrigger.UpperLoadThreshold" />
    </Type>
    <Type Name="StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger" Id="T:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger">
      <Member Id="M:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.#ctor" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.MetricName" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.ScaleIntervalInSeconds" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.UpperLoadThreshold" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeAverageServiceLoadScalingTrigger.UseOnlyPrimaryLoad" />
    </Type>
    <Type Name="StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism" Id="T:StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism">
      <Member Id="M:StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism.#ctor" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism.MaxInstanceCount" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism.MinInstanceCount" />
      <Member Id="P:StartupServicesModel.StartupScalingPolicyTypeInstanceCountScalingMechanism.ScaleIncrement" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceGroupMemberType" Id="T:StartupServicesModel.StartupServiceGroupMemberType">
      <Member Id="M:StartupServicesModel.StartupServiceGroupMemberType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceGroupMemberType.LoadMetrics" />
      <Member Id="P:StartupServicesModel.StartupServiceGroupMemberType.Name" />
      <Member Id="P:StartupServicesModel.StartupServiceGroupMemberType.ServiceTypeName" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceInstanceDefinitionType" Id="T:StartupServicesModel.StartupServiceInstanceDefinitionType">
      <Member Id="M:StartupServicesModel.StartupServiceInstanceDefinitionType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceInstanceDefinitionType.Parameters" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceInstanceDefinitionTypeParameter" Id="T:StartupServicesModel.StartupServiceInstanceDefinitionTypeParameter">
      <Member Id="M:StartupServicesModel.StartupServiceInstanceDefinitionTypeParameter.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceInstanceDefinitionTypeParameter.Name" />
      <Member Id="P:StartupServicesModel.StartupServiceInstanceDefinitionTypeParameter.Value" />
    </Type>
    <Type Name="StartupServicesModel.StartupServicesManifestType" Id="T:StartupServicesModel.StartupServicesManifestType">
      <Member Id="M:StartupServicesModel.StartupServicesManifestType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServicesManifestType.Parameters" />
      <Member Id="P:StartupServicesModel.StartupServicesManifestType.Services" />
    </Type>
    <Type Name="StartupServicesModel.StartupServicesManifestTypeParameter" Id="T:StartupServicesModel.StartupServicesManifestTypeParameter">
      <Member Id="M:StartupServicesModel.StartupServicesManifestTypeParameter.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServicesManifestTypeParameter.DefaultValue" />
      <Member Id="P:StartupServicesModel.StartupServicesManifestTypeParameter.Name" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceType" Id="T:StartupServicesModel.StartupServiceType">
      <Member Id="M:StartupServicesModel.StartupServiceType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceType.DefaultMoveCost" />
      <Member Id="P:StartupServicesModel.StartupServiceType.DefaultMoveCostSpecified" />
      <Member Id="P:StartupServicesModel.StartupServiceType.LoadMetrics" />
      <Member Id="P:StartupServicesModel.StartupServiceType.NamedPartition" />
      <Member Id="P:StartupServicesModel.StartupServiceType.PlacementConstraints" />
      <Member Id="P:StartupServicesModel.StartupServiceType.ServiceCorrelations" />
      <Member Id="P:StartupServicesModel.StartupServiceType.ServicePlacementPolicies" />
      <Member Id="P:StartupServicesModel.StartupServiceType.ServiceScalingPolicies" />
      <Member Id="P:StartupServicesModel.StartupServiceType.ServiceTypeName" />
      <Member Id="P:StartupServicesModel.StartupServiceType.SingletonPartition" />
      <Member Id="P:StartupServicesModel.StartupServiceType.UniformInt64Partition" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeDefaultMoveCost" Id="T:StartupServicesModel.StartupServiceTypeDefaultMoveCost">
      <Member Id="F:StartupServicesModel.StartupServiceTypeDefaultMoveCost.High" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeDefaultMoveCost.Low" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeDefaultMoveCost.Medium" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeDefaultMoveCost.VeryHigh" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeDefaultMoveCost.Zero" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeNamedPartition" Id="T:StartupServicesModel.StartupServiceTypeNamedPartition">
      <Member Id="M:StartupServicesModel.StartupServiceTypeNamedPartition.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeNamedPartition.Partition" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeNamedPartitionPartition" Id="T:StartupServicesModel.StartupServiceTypeNamedPartitionPartition">
      <Member Id="M:StartupServicesModel.StartupServiceTypeNamedPartitionPartition.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeNamedPartitionPartition.Name" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeServiceCorrelation" Id="T:StartupServicesModel.StartupServiceTypeServiceCorrelation">
      <Member Id="M:StartupServicesModel.StartupServiceTypeServiceCorrelation.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeServiceCorrelation.Scheme" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeServiceCorrelation.ServiceName" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeServiceCorrelationScheme" Id="T:StartupServicesModel.StartupServiceTypeServiceCorrelationScheme">
      <Member Id="F:StartupServicesModel.StartupServiceTypeServiceCorrelationScheme.Affinity" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServiceCorrelationScheme.AlignedAffinity" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServiceCorrelationScheme.NonAlignedAffinity" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeServicePlacementPolicy" Id="T:StartupServicesModel.StartupServiceTypeServicePlacementPolicy">
      <Member Id="M:StartupServicesModel.StartupServiceTypeServicePlacementPolicy.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeServicePlacementPolicy.DomainName" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeServicePlacementPolicy.Type" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeServicePlacementPolicyType" Id="T:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType">
      <Member Id="F:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType.InvalidDomain" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType.NonPartiallyPlace" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType.PreferredPrimaryDomain" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType.RequiredDomain" />
      <Member Id="F:StartupServicesModel.StartupServiceTypeServicePlacementPolicyType.RequiredDomainDistribution" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeSingletonPartition" Id="T:StartupServicesModel.StartupServiceTypeSingletonPartition">
      <Member Id="M:StartupServicesModel.StartupServiceTypeSingletonPartition.#ctor" />
    </Type>
    <Type Name="StartupServicesModel.StartupServiceTypeUniformInt64Partition" Id="T:StartupServicesModel.StartupServiceTypeUniformInt64Partition">
      <Member Id="M:StartupServicesModel.StartupServiceTypeUniformInt64Partition.#ctor" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeUniformInt64Partition.HighKey" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeUniformInt64Partition.LowKey" />
      <Member Id="P:StartupServicesModel.StartupServiceTypeUniformInt64Partition.PartitionCount" />
    </Type>
    <Type Name="StartupServicesModel.StartupStatefulServiceGroupType" Id="T:StartupServicesModel.StartupStatefulServiceGroupType">
      <Member Id="M:StartupServicesModel.StartupStatefulServiceGroupType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceGroupType.Members" />
    </Type>
    <Type Name="StartupServicesModel.StartupStatefulServiceType" Id="T:StartupServicesModel.StartupStatefulServiceType">
      <Member Id="M:StartupServicesModel.StartupStatefulServiceType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.DropSourceReplicaOnMove" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.MinReplicaSetSize" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.QuorumLossWaitDurationSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.ReplicaRestartWaitDurationSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.ServicePlacementTimeLimitSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.StandByReplicaKeepDurationSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatefulServiceType.TargetReplicaSetSize" />
    </Type>
    <Type Name="StartupServicesModel.StartupStatelessServiceGroupType" Id="T:StartupServicesModel.StartupStatelessServiceGroupType">
      <Member Id="M:StartupServicesModel.StartupStatelessServiceGroupType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceGroupType.Members" />
    </Type>
    <Type Name="StartupServicesModel.StartupStatelessServiceType" Id="T:StartupServicesModel.StartupStatelessServiceType">
      <Member Id="M:StartupServicesModel.StartupStatelessServiceType.#ctor" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceType.InstanceCloseDelayDurationSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceType.InstanceCount" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceType.InstanceRestartWaitDurationSeconds" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceType.MinInstanceCount" />
      <Member Id="P:StartupServicesModel.StartupStatelessServiceType.MinInstancePercentage" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric">
    <Type Name="System.Fabric.ApplicationUpgradeProgress" Id="T:System.Fabric.ApplicationUpgradeProgress">
      <Member Id="M:System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)" />
      <Member Id="M:System.Fabric.ApplicationUpgradeProgress.ToString" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.ApplicationName" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeUnitsProgress" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.FailureReason" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.IsNodeByNode" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeDescription" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeDomains" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeDuration" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeState" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeStatusDetails" />
      <Member Id="P:System.Fabric.ApplicationUpgradeProgress.UpgradeUnits" />
    </Type>
    <Type Name="System.Fabric.ApplicationUpgradeState" Id="T:System.Fabric.ApplicationUpgradeState">
      <Member Id="F:System.Fabric.ApplicationUpgradeState.Failed" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.Invalid" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingBackCompleted" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingBackInProgress" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingBackPending" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingForwardCompleted" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingForwardInProgress" />
      <Member Id="F:System.Fabric.ApplicationUpgradeState.RollingForwardPending" />
    </Type>
    <Type Name="System.Fabric.ByteSerializable" Id="T:System.Fabric.ByteSerializable">
      <Member Id="M:System.Fabric.ByteSerializable.#ctor" />
      <Member Id="M:System.Fabric.ByteSerializable.FromBytes(System.Byte[])" />
      <Member Id="M:System.Fabric.ByteSerializable.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.ByteSerializable.ToBytes" />
      <Member Id="M:System.Fabric.ByteSerializable.Write(System.IO.BinaryWriter)" />
    </Type>
    <Type Name="System.Fabric.CheckExistsPropertyOperation" Id="T:System.Fabric.CheckExistsPropertyOperation">
      <Member Id="M:System.Fabric.CheckExistsPropertyOperation.#ctor(System.String,System.Boolean)" />
      <Member Id="P:System.Fabric.CheckExistsPropertyOperation.ExistenceCheck" />
    </Type>
    <Type Name="System.Fabric.CheckSequencePropertyOperation" Id="T:System.Fabric.CheckSequencePropertyOperation">
      <Member Id="M:System.Fabric.CheckSequencePropertyOperation.#ctor(System.String,System.Int64)" />
      <Member Id="P:System.Fabric.CheckSequencePropertyOperation.SequenceNumber" />
    </Type>
    <Type Name="System.Fabric.CheckValuePropertyOperation" Id="T:System.Fabric.CheckValuePropertyOperation">
      <Member Id="M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Double)" />
      <Member Id="M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Guid)" />
      <Member Id="M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Int64)" />
      <Member Id="M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.String)" />
      <Member Id="P:System.Fabric.CheckValuePropertyOperation.PropertyType" />
      <Member Id="P:System.Fabric.CheckValuePropertyOperation.PropertyValue" />
    </Type>
    <Type Name="System.Fabric.ClaimsCredentials" Id="T:System.Fabric.ClaimsCredentials">
      <Member Id="M:System.Fabric.ClaimsCredentials.#ctor" />
      <Member Id="P:System.Fabric.ClaimsCredentials.IssuerThumbprints" />
      <Member Id="P:System.Fabric.ClaimsCredentials.LocalClaims" />
      <Member Id="P:System.Fabric.ClaimsCredentials.ProtectionLevel" />
      <Member Id="P:System.Fabric.ClaimsCredentials.ServerCommonNames" />
      <Member Id="P:System.Fabric.ClaimsCredentials.ServerThumbprints" />
    </Type>
    <Type Name="System.Fabric.CodePackage" Id="T:System.Fabric.CodePackage">
      <Member Id="P:System.Fabric.CodePackage.Description" />
      <Member Id="P:System.Fabric.CodePackage.EntryPointRunAsPolicy" />
      <Member Id="P:System.Fabric.CodePackage.Path" />
      <Member Id="P:System.Fabric.CodePackage.SetupEntryPointRunAsPolicy" />
    </Type>
    <Type Name="System.Fabric.CodePackageActivationContext" Id="T:System.Fabric.CodePackageActivationContext">
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageAdded" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageAddedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageModified" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageModifiedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageRemoved" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.CodePackageRemovedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageAdded" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageAddedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageModified" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageModifiedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageRemoved" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.ConfigurationPackageRemovedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageAdded" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageAddedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageModified" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageModifiedEvent" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageRemoved" />
      <Member Id="E:System.Fabric.CodePackageActivationContext.DataPackageRemovedEvent" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.Dispose" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.Finalize" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetApplicationPrincipals" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetCodePackage(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetCodePackageNames" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetCodePackageObject(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetConfigurationPackage(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetConfigurationPackageNames" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetConfigurationPackageObject(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetDataPackage(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetDataPackageNames" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetDataPackageObject(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetDirectory(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetEndpoint(System.String)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetEndpoints" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetServiceGroupTypes" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetServiceManifestName" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetServiceManifestVersion" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.GetServiceTypes" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.CodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.ApplicationName" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.ApplicationTypeName" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.CodePackageName" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.CodePackageVersion" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.ContextId" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.LogDirectory" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.ServiceListenAddress" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.ServicePublishAddress" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.TempDirectory" />
      <Member Id="P:System.Fabric.CodePackageActivationContext.WorkDirectory" />
    </Type>
    <Type Name="System.Fabric.CodePackageActivationInformation" Id="T:System.Fabric.CodePackageActivationInformation">
      <Member Id="M:System.Fabric.CodePackageActivationInformation.#ctor(System.String,System.Fabric.ExecutionPolicyDescription)" />
      <Member Id="P:System.Fabric.CodePackageActivationInformation.CodePackageName" />
      <Member Id="P:System.Fabric.CodePackageActivationInformation.ExecutionPolicy" />
    </Type>
    <Type Name="System.Fabric.CodePackageActivator" Id="T:System.Fabric.CodePackageActivator">
      <Member Id="E:System.Fabric.CodePackageActivator.CodePackageEvent" />
      <Member Id="M:System.Fabric.CodePackageActivator.AbortCodePackage(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:System.Fabric.CodePackageActivator.ActivateCodePackageAsync(System.Collections.Generic.IList{System.Fabric.CodePackageActivationInformation},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.CodePackageActivator.ActivateCodePackageAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.CodePackageActivator.DeactivateCodePackageAsync(System.Collections.Generic.IList{System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.CodePackageActivator.Dispose" />
      <Member Id="M:System.Fabric.CodePackageActivator.Finalize" />
    </Type>
    <Type Name="System.Fabric.CodePackageActivator/CodePackageEventArgs" Id="T:System.Fabric.CodePackageActivator.CodePackageEventArgs">
      <Member Id="P:System.Fabric.CodePackageActivator.CodePackageEventArgs.eventDescription" />
    </Type>
    <Type Name="System.Fabric.CodePackageDebugParameters" Id="T:System.Fabric.CodePackageDebugParameters">
      <Member Id="M:System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters[])" />
    </Type>
    <Type Name="System.Fabric.CodePackageEventDescription" Id="T:System.Fabric.CodePackageEventDescription">
      <Member Id="P:System.Fabric.CodePackageEventDescription.CodePackageName" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.EventType" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.IsContainerHost" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.IsSetupEntryPoint" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.Properties" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.SequenceNumber" />
      <Member Id="P:System.Fabric.CodePackageEventDescription.TimeStampInTicks" />
    </Type>
    <Type Name="System.Fabric.CodePackageEventType" Id="T:System.Fabric.CodePackageEventType">
      <Member Id="F:System.Fabric.CodePackageEventType.Failed" />
      <Member Id="F:System.Fabric.CodePackageEventType.Health" />
      <Member Id="F:System.Fabric.CodePackageEventType.Invalid" />
      <Member Id="F:System.Fabric.CodePackageEventType.RanToCompletion" />
      <Member Id="F:System.Fabric.CodePackageEventType.Ready" />
      <Member Id="F:System.Fabric.CodePackageEventType.Started" />
      <Member Id="F:System.Fabric.CodePackageEventType.Stopped" />
      <Member Id="F:System.Fabric.CodePackageEventType.Terminated" />
    </Type>
    <Type Name="System.Fabric.CompletionMode" Id="T:System.Fabric.CompletionMode">
      <Member Id="F:System.Fabric.CompletionMode.DoNotVerify" />
      <Member Id="F:System.Fabric.CompletionMode.Invalid" />
      <Member Id="F:System.Fabric.CompletionMode.Verify" />
    </Type>
    <Type Name="System.Fabric.ComposeDeploymentUpgradeProgress" Id="T:System.Fabric.ComposeDeploymentUpgradeProgress">
      <Member Id="M:System.Fabric.ComposeDeploymentUpgradeProgress.ToString" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.ApplicationName" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.ApplicationUnhealthyEvaluations" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.ApplicationUpgradeStatusDetails" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.CurrentUpgradeDomainDuration" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.CurrentUpgradeDomainProgress" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.DeploymentName" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.FailureReason" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.FailureTimestampUtc" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.NextUpgradeDomain" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.StartTimestampUtc" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.TargetApplicationTypeVersion" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradeDomainProgressAtFailure" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradeDomains" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradeDuration" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradePolicyDescription" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradeState" />
      <Member Id="P:System.Fabric.ComposeDeploymentUpgradeProgress.UpgradeStatusDetails" />
    </Type>
    <Type Name="System.Fabric.ComposeDeploymentUpgradeState" Id="T:System.Fabric.ComposeDeploymentUpgradeState">
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.Failed" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.Invalid" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.ProvisioningTarget" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingBackCompleted" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingBackInProgress" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingBackPending" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingForwardCompleted" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingForwardInProgress" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.RollingForwardPending" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.UnprovisioningCurrent" />
      <Member Id="F:System.Fabric.ComposeDeploymentUpgradeState.UnprovisioningTarget" />
    </Type>
    <Type Name="System.Fabric.ConfigurationPackage" Id="T:System.Fabric.ConfigurationPackage">
      <Member Id="P:System.Fabric.ConfigurationPackage.Description" />
      <Member Id="P:System.Fabric.ConfigurationPackage.Path" />
      <Member Id="P:System.Fabric.ConfigurationPackage.Settings" />
    </Type>
    <Type Name="System.Fabric.ContainerDebugParameters" Id="T:System.Fabric.ContainerDebugParameters" />
    <Type Name="System.Fabric.CredentialType" Id="T:System.Fabric.CredentialType">
      <Member Id="F:System.Fabric.CredentialType.Claims" />
      <Member Id="F:System.Fabric.CredentialType.None" />
      <Member Id="F:System.Fabric.CredentialType.Windows" />
      <Member Id="F:System.Fabric.CredentialType.X509" />
    </Type>
    <Type Name="System.Fabric.DataLossMode" Id="T:System.Fabric.DataLossMode">
      <Member Id="F:System.Fabric.DataLossMode.FullDataLoss" />
      <Member Id="F:System.Fabric.DataLossMode.Invalid" />
      <Member Id="F:System.Fabric.DataLossMode.PartialDataLoss" />
    </Type>
    <Type Name="System.Fabric.DataPackage" Id="T:System.Fabric.DataPackage">
      <Member Id="P:System.Fabric.DataPackage.Description" />
      <Member Id="P:System.Fabric.DataPackage.Path" />
    </Type>
    <Type Name="System.Fabric.DeletePropertyOperation" Id="T:System.Fabric.DeletePropertyOperation">
      <Member Id="M:System.Fabric.DeletePropertyOperation.#ctor(System.String)" />
    </Type>
    <Type Name="System.Fabric.DeploymentStatus" Id="T:System.Fabric.DeploymentStatus">
      <Member Id="F:System.Fabric.DeploymentStatus.Activating" />
      <Member Id="F:System.Fabric.DeploymentStatus.Active" />
      <Member Id="F:System.Fabric.DeploymentStatus.Deactivating" />
      <Member Id="F:System.Fabric.DeploymentStatus.Downloading" />
      <Member Id="F:System.Fabric.DeploymentStatus.Failed" />
      <Member Id="F:System.Fabric.DeploymentStatus.Invalid" />
      <Member Id="F:System.Fabric.DeploymentStatus.RanToCompletion" />
      <Member Id="F:System.Fabric.DeploymentStatus.Upgrading" />
    </Type>
    <Type Name="System.Fabric.EntryPointStatus" Id="T:System.Fabric.EntryPointStatus">
      <Member Id="F:System.Fabric.EntryPointStatus.Invalid" />
      <Member Id="F:System.Fabric.EntryPointStatus.Pending" />
      <Member Id="F:System.Fabric.EntryPointStatus.Started" />
      <Member Id="F:System.Fabric.EntryPointStatus.Starting" />
      <Member Id="F:System.Fabric.EntryPointStatus.Stopped" />
      <Member Id="F:System.Fabric.EntryPointStatus.Stopping" />
    </Type>
    <Type Name="System.Fabric.Epoch" Id="T:System.Fabric.Epoch">
      <Member Id="M:System.Fabric.Epoch.#ctor(System.Int64,System.Int64)" />
      <Member Id="M:System.Fabric.Epoch.CompareTo(System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.Equals(System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.Equals(System.Object)" />
      <Member Id="M:System.Fabric.Epoch.GetHashCode" />
      <Member Id="M:System.Fabric.Epoch.op_Equality(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.op_GreaterThan(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.op_GreaterThanOrEqual(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.op_Inequality(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.op_LessThan(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="M:System.Fabric.Epoch.op_LessThanOrEqual(System.Fabric.Epoch,System.Fabric.Epoch)" />
      <Member Id="P:System.Fabric.Epoch.ConfigurationNumber" />
      <Member Id="P:System.Fabric.Epoch.DataLossNumber" />
    </Type>
    <Type Name="System.Fabric.ExecutionPolicyDescription" Id="T:System.Fabric.ExecutionPolicyDescription">
      <Member Id="M:System.Fabric.ExecutionPolicyDescription.#ctor(System.Fabric.ExecutionPolicyExecutionType,System.Fabric.ExecutionPolicyRestartPolicy)" />
      <Member Id="P:System.Fabric.ExecutionPolicyDescription.ExecutionType" />
      <Member Id="P:System.Fabric.ExecutionPolicyDescription.RestartPolicy" />
    </Type>
    <Type Name="System.Fabric.ExecutionPolicyExecutionType" Id="T:System.Fabric.ExecutionPolicyExecutionType">
      <Member Id="F:System.Fabric.ExecutionPolicyExecutionType.RunAlways" />
      <Member Id="F:System.Fabric.ExecutionPolicyExecutionType.RunToCompletion" />
    </Type>
    <Type Name="System.Fabric.ExecutionPolicyRestartPolicy" Id="T:System.Fabric.ExecutionPolicyRestartPolicy">
      <Member Id="F:System.Fabric.ExecutionPolicyRestartPolicy.Always" />
      <Member Id="F:System.Fabric.ExecutionPolicyRestartPolicy.Never" />
      <Member Id="F:System.Fabric.ExecutionPolicyRestartPolicy.OnFailure" />
    </Type>
    <Type Name="System.Fabric.FabricBackupDirectoryNotEmptyException" Id="T:System.Fabric.FabricBackupDirectoryNotEmptyException">
      <Member Id="M:System.Fabric.FabricBackupDirectoryNotEmptyException.#ctor" />
      <Member Id="M:System.Fabric.FabricBackupDirectoryNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricBackupDirectoryNotEmptyException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricBackupDirectoryNotEmptyException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricBackupInProgressException" Id="T:System.Fabric.FabricBackupInProgressException">
      <Member Id="M:System.Fabric.FabricBackupInProgressException.#ctor" />
      <Member Id="M:System.Fabric.FabricBackupInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricBackupInProgressException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricBackupInProgressException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricCannotConnectException" Id="T:System.Fabric.FabricCannotConnectException">
      <Member Id="M:System.Fabric.FabricCannotConnectException.#ctor" />
      <Member Id="M:System.Fabric.FabricCannotConnectException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricCannotConnectException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricChaosAlreadyRunningException" Id="T:System.Fabric.FabricChaosAlreadyRunningException">
      <Member Id="M:System.Fabric.FabricChaosAlreadyRunningException.#ctor" />
      <Member Id="M:System.Fabric.FabricChaosAlreadyRunningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricChaosAlreadyRunningException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricChaosAlreadyRunningException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricChaosEngineException" Id="T:System.Fabric.FabricChaosEngineException">
      <Member Id="M:System.Fabric.FabricChaosEngineException.#ctor" />
      <Member Id="M:System.Fabric.FabricChaosEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricChaosEngineException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricChaosEngineException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricClient" Id="T:System.Fabric.FabricClient">
      <Member Id="E:System.Fabric.FabricClient.ClaimsRetrieval" />
      <Member Id="E:System.Fabric.FabricClient.ClientConnected" />
      <Member Id="E:System.Fabric.FabricClient.ClientDisconnected" />
      <Member Id="F:System.Fabric.FabricClient.FabricSystemApplication" />
      <Member Id="M:System.Fabric.FabricClient.#ctor" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientRole)" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientSettings)" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.FabricClientSettings,System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.Fabric.FabricClientSettings,System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.Fabric.SecurityCredentials,System.TimeSpan,System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.#ctor(System.TimeSpan,System.String[])" />
      <Member Id="M:System.Fabric.FabricClient.Dispose" />
      <Member Id="M:System.Fabric.FabricClient.Finalize" />
      <Member Id="M:System.Fabric.FabricClient.UpdateSecurityCredentials(System.Fabric.SecurityCredentials)" />
      <Member Id="M:System.Fabric.FabricClient.UpdateSettings(System.Fabric.FabricClientSettings)" />
      <Member Id="P:System.Fabric.FabricClient.ApplicationManager" />
      <Member Id="P:System.Fabric.FabricClient.ClusterManager" />
      <Member Id="P:System.Fabric.FabricClient.ComposeDeploymentManager" />
      <Member Id="P:System.Fabric.FabricClient.FaultManager" />
      <Member Id="P:System.Fabric.FabricClient.HealthManager" />
      <Member Id="P:System.Fabric.FabricClient.InfrastructureManager" />
      <Member Id="P:System.Fabric.FabricClient.NetworkManager" />
      <Member Id="P:System.Fabric.FabricClient.PropertyManager" />
      <Member Id="P:System.Fabric.FabricClient.QueryManager" />
      <Member Id="P:System.Fabric.FabricClient.RepairManager" />
      <Member Id="P:System.Fabric.FabricClient.SecretStore" />
      <Member Id="P:System.Fabric.FabricClient.ServiceGroupManager" />
      <Member Id="P:System.Fabric.FabricClient.ServiceManager" />
      <Member Id="P:System.Fabric.FabricClient.Settings" />
      <Member Id="P:System.Fabric.FabricClient.TestManager" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ApplicationManagementClient" Id="T:System.Fabric.FabricClient.ApplicationManagementClient">
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String,System.Fabric.IImageStoreProgressHandler,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.CopyApplicationPackage(System.String,System.String,System.String,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Fabric.Description.DeleteApplicationDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Fabric.Description.DeleteApplicationDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.DeployServicePackageToNode(System.String,System.String,System.String,System.Fabric.PackageSharingPolicyList,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.GetApplicationManifestAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.GetApplicationManifestAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.GetApplicationUpgradeProgressAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.GetApplicationUpgradeProgressAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.ProvisionApplicationAsync(System.Fabric.Description.ProvisionApplicationTypeDescriptionBase)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.ProvisionApplicationAsync(System.Fabric.Description.ProvisionApplicationTypeDescriptionBase,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.ProvisionApplicationAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.ProvisionApplicationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.RemoveApplicationPackage(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.RollbackApplicationUpgradeAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.RollbackApplicationUpgradeAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UnprovisionApplicationAsync(System.Fabric.Description.UnprovisionApplicationTypeDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UnprovisionApplicationAsync(System.Fabric.Description.UnprovisionApplicationTypeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UnprovisionApplicationAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UnprovisionApplicationAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationAsync(System.Fabric.Description.ApplicationUpdateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationAsync(System.Fabric.Description.ApplicationUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationUpgradeAsync(System.Fabric.Description.ApplicationUpgradeUpdateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationUpgradeAsync(System.Fabric.Description.ApplicationUpgradeUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpgradeApplicationAsync(System.Fabric.Description.ApplicationUpgradeDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ApplicationManagementClient.UpgradeApplicationAsync(System.Fabric.Description.ApplicationUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ClaimsRetrievalEventArgs" Id="T:System.Fabric.FabricClient.ClaimsRetrievalEventArgs">
      <Member Id="P:System.Fabric.FabricClient.ClaimsRetrievalEventArgs.AzureActiveDirectoryMetadata" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ClaimsRetrievalEventHandler" Id="T:System.Fabric.FabricClient.ClaimsRetrievalEventHandler" />
    <Type Name="System.Fabric.FabricClient/ClusterManagementClient" Id="T:System.Fabric.FabricClient.ClusterManagementClient">
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ActivateNodeAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ActivateNodeAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.AddConfigurationParameterOverridesAsync(System.String,System.Collections.Generic.IList{System.Fabric.Description.ConfigParameterOverride},System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.AddConfigurationParameterOverridesAsync(System.String,System.Collections.Generic.IList{System.Fabric.Description.ConfigParameterOverride},System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.AddNodeTagsAsync(System.String,System.Collections.Generic.List{System.String})" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.AddNodeTagsAsync(System.String,System.Collections.Generic.List{System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.CopyClusterPackage(System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.CopyClusterPackage(System.String,System.String,System.String,System.String,System.String,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.DeactivateNodeAsync(System.String,System.Fabric.NodeDeactivationIntent)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.DeactivateNodeAsync(System.String,System.Fabric.NodeDeactivationIntent,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationUpgradeStatusAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationUpgradeStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationUpgradeStatusAsync(System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterConfigurationUpgradeStatusAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterManifestAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterManifestAsync(System.Fabric.Description.ClusterManifestQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetClusterManifestAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetConfigurationOverridesAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetConfigurationOverridesAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetFabricUpgradeProgressAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetFabricUpgradeProgressAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetUpgradeOrchestrationServiceStateAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.GetUpgradeOrchestrationServiceStateAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ProvisionFabricAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ProvisionFabricAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverPartitionAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverPartitionsAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverPartitionsAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverServicePartitionsAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverServicePartitionsAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverSystemPartitionsAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RecoverSystemPartitionsAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveClusterPackage(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveConfigurationOverridesAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveConfigurationOverridesAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveNodeStateAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveNodeStateAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveNodeTagsAsync(System.String,System.Collections.Generic.List{System.String})" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RemoveNodeTagsAsync(System.String,System.Collections.Generic.List{System.String},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ResetPartitionLoadAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ResetPartitionLoadAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RollbackFabricUpgradeAsync" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.RollbackFabricUpgradeAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.SetUpgradeOrchestrationServiceStateAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.SetUpgradeOrchestrationServiceStateAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ToggleVerboseServicePlacementHealthReportingAsync(System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ToggleVerboseServicePlacementHealthReportingAsync(System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UnprovisionFabricAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UnprovisionFabricAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpdateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeUpdateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpdateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpdatePartitionLoadAsync(System.Fabric.Description.UpdatePartitionLoadQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeConfigurationAsync(System.Fabric.Description.ConfigurationUpgradeDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeConfigurationAsync(System.Fabric.Description.ConfigurationUpgradeDescription,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeConfigurationAsync(System.Fabric.Description.ConfigurationUpgradeDescription,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeConfigurationAsync(System.Fabric.Description.ConfigurationUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeFabricAsync(System.Fabric.Description.FabricUpgradeDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.UpgradeFabricAsync(System.Fabric.Description.FabricUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ValidateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ClusterManagementClient.ValidateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ComposeDeploymentClient" Id="T:System.Fabric.FabricClient.ComposeDeploymentClient" />
    <Type Name="System.Fabric.FabricClient/FaultManagementClient" Id="T:System.Fabric.FabricClient.FaultManagementClient">
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveAuxiliaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveInstanceAsync(System.String,System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MovePrimaryAsync(System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.MoveSecondaryAsync(System.String,System.String,System.Fabric.PartitionSelector,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode,System.Boolean,System.Double,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.ReportCompletionAsync(System.String,System.Guid,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.Int64,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.Int64,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.Int64,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.String,System.Int64,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.String,System.Int64,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.String,System.Uri,System.String,System.String,System.String,System.Int64,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.Uri,System.Fabric.ReplicaSelector,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.Uri,System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartDeployedCodePackageAsync(System.Uri,System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.Fabric.ReplicaSelector,System.Boolean,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.String,System.Numerics.BigInteger,System.Boolean,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartNodeAsync(System.String,System.Numerics.BigInteger,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.Fabric.ReplicaSelector,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode,System.Double,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.RestartReplicaAsync(System.String,System.Guid,System.Int64,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StartNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StartNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StartNodeAsync(System.String,System.Numerics.BigInteger,System.String,System.Int32,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StartNodeAsync(System.String,System.Numerics.BigInteger,System.String,System.Int32,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StartNodeAsync(System.String,System.Numerics.BigInteger,System.String,System.Int32,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StopNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StopNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.FaultManagementClient.StopNodeAsync(System.String,System.Numerics.BigInteger,System.Fabric.CompletionMode,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/GatewayInformationEventArgs" Id="T:System.Fabric.FabricClient.GatewayInformationEventArgs">
      <Member Id="P:System.Fabric.FabricClient.GatewayInformationEventArgs.GatewayInformation" />
    </Type>
    <Type Name="System.Fabric.FabricClient/HealthClient" Id="T:System.Fabric.FabricClient.HealthClient">
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Uri,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Uri,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Health.ClusterHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Health.ClusterHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.Fabric.Description.ClusterHealthChunkQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.Fabric.Description.ClusterHealthChunkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Fabric.Description.DeployedApplicationHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Fabric.Description.DeployedApplicationHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Uri,System.String,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Uri,System.String,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedApplicationHealthAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Fabric.Description.DeployedServicePackageHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Fabric.Description.DeployedServicePackageHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Uri,System.String,System.String,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Uri,System.String,System.String,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetDeployedServicePackageHealthAsync(System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.Fabric.Description.NodeHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.Fabric.Description.NodeHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.String,System.Fabric.Health.ClusterHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.String,System.Fabric.Health.ClusterHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Fabric.Description.PartitionHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Fabric.Description.PartitionHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Guid,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Guid,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Guid,System.Int64,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Guid,System.Int64,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Fabric.Description.ServiceHealthQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Fabric.Description.ServiceHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Uri,System.Fabric.Health.ApplicationHealthPolicy)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Uri,System.Fabric.Health.ApplicationHealthPolicy,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)" />
      <Member Id="M:System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport,System.Fabric.Health.HealthReportSendOptions)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/InfrastructureServiceClient" Id="T:System.Fabric.FabricClient.InfrastructureServiceClient">
      <Member Id="M:System.Fabric.FabricClient.InfrastructureServiceClient.InvokeInfrastructureCommandAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.InfrastructureServiceClient.InvokeInfrastructureCommandAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.InfrastructureServiceClient.InvokeInfrastructureQueryAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.InfrastructureServiceClient.InvokeInfrastructureQueryAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/NetworkManagementClient" Id="T:System.Fabric.FabricClient.NetworkManagementClient">
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.CreateNetworkAsync(System.String,System.Fabric.Description.NetworkDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.CreateNetworkAsync(System.String,System.Fabric.Description.NetworkDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.DeleteNetworkAsync(System.Fabric.Description.DeleteNetworkDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.DeleteNetworkAsync(System.Fabric.Description.DeleteNetworkDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetApplicationNetworkListAsync(System.Fabric.Description.ApplicationNetworkQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetApplicationNetworkListAsync(System.Fabric.Description.ApplicationNetworkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetDeployedNetworkCodePackageListAsync(System.Fabric.Description.DeployedNetworkCodePackageQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetDeployedNetworkCodePackageListAsync(System.Fabric.Description.DeployedNetworkCodePackageQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetDeployedNetworkListAsync(System.Fabric.Description.DeployedNetworkQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetDeployedNetworkListAsync(System.Fabric.Description.DeployedNetworkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkApplicationListAsync(System.Fabric.Description.NetworkApplicationQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkApplicationListAsync(System.Fabric.Description.NetworkApplicationQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkListAsync" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkListAsync(System.Fabric.Description.NetworkQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkListAsync(System.Fabric.Description.NetworkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkNodeListAsync(System.Fabric.Description.NetworkNodeQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkNodeListAsync(System.Fabric.Description.NetworkNodeQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/PropertyManagementClient" Id="T:System.Fabric.FabricClient.PropertyManagementClient">
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.CreateNameAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.CreateNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.DeleteNameAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.DeleteNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.DeletePropertyAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.DeletePropertyAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.EnumeratePropertiesAsync(System.Uri,System.Boolean,System.Fabric.PropertyEnumerationResult)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.EnumeratePropertiesAsync(System.Uri,System.Boolean,System.Fabric.PropertyEnumerationResult,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.EnumerateSubNamesAsync(System.Uri,System.Fabric.NameEnumerationResult,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.EnumerateSubNamesAsync(System.Uri,System.Fabric.NameEnumerationResult,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.GetPropertyAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.GetPropertyAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.GetPropertyMetadataAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.GetPropertyMetadataAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.NameExistsAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.NameExistsAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutCustomPropertyOperationAsync(System.Uri,System.Fabric.PutCustomPropertyOperation)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutCustomPropertyOperationAsync(System.Uri,System.Fabric.PutCustomPropertyOperation,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Byte[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Double)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Double,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.PutPropertyAsync(System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.SubmitPropertyBatchAsync(System.Uri,System.Collections.Generic.ICollection{System.Fabric.PropertyBatchOperation})" />
      <Member Id="M:System.Fabric.FabricClient.PropertyManagementClient.SubmitPropertyBatchAsync(System.Uri,System.Collections.Generic.ICollection{System.Fabric.PropertyBatchOperation},System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/QueryClient" Id="T:System.Fabric.FabricClient.QueryClient">
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationPagedListAsync(System.Fabric.Description.ApplicationQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationPagedListAsync(System.Fabric.Description.ApplicationQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync(System.Fabric.Description.PagedApplicationTypeQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetApplicationTypePagedListAsync(System.Fabric.Description.PagedApplicationTypeQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationPagedListAsync(System.Fabric.Description.PagedDeployedApplicationQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationPagedListAsync(System.Fabric.Description.PagedDeployedApplicationQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackagePagedListAsync(System.Fabric.Description.PagedDeployedServicePackageQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackagePagedListAsync(System.Fabric.Description.PagedDeployedServicePackageQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetLoadedPartitionInfoListAsync(System.Fabric.Description.LoadedPartitionInformationQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetLoadedPartitionInfoListAsync(System.Fabric.Description.LoadedPartitionInformationQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodePagedListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodePagedListAsync(System.Fabric.Description.NodeQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetNodePagedListAsync(System.Fabric.Description.NodeQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServicePagedListAsync(System.Fabric.Description.ServiceQueryDescription)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServicePagedListAsync(System.Fabric.Description.ServiceQueryDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/RepairManagementClient" Id="T:System.Fabric.FabricClient.RepairManagementClient">
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.CancelRepairTaskAsync(System.String,System.Int64,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.CancelRepairTaskAsync(System.String,System.Int64,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.CreateRepairTaskAsync(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.CreateRepairTaskAsync(System.Fabric.Repair.RepairTask,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.DeleteRepairTaskAsync(System.String,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.DeleteRepairTaskAsync(System.String,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.ForceApproveRepairTaskAsync(System.String,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.ForceApproveRepairTaskAsync(System.String,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.GetRepairTaskListAsync" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.GetRepairTaskListAsync(System.String,System.Fabric.Repair.RepairTaskStateFilter,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.GetRepairTaskListAsync(System.String,System.Fabric.Repair.RepairTaskStateFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.GetRepairTaskListAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.UpdateRepairExecutionStateAsync(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.UpdateRepairExecutionStateAsync(System.Fabric.Repair.RepairTask,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.UpdateRepairTaskHealthPolicyAsync(System.String,System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:System.Fabric.FabricClient.RepairManagementClient.UpdateRepairTaskHealthPolicyAsync(System.String,System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/SecretStoreClient" Id="T:System.Fabric.FabricClient.SecretStoreClient">
      <Member Id="M:System.Fabric.FabricClient.SecretStoreClient.CreateSecretsAsync(System.Fabric.SecretStore.SecretDescription[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.SecretStoreClient.GetSecretsAsync(System.Fabric.SecretStore.SecretReference[],System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.SecretStoreClient.GetSecretVersionsAsync(System.Fabric.SecretStore.SecretReference[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.SecretStoreClient.RemoveSecretsAsync(System.Fabric.SecretStore.SecretReference[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.SecretStoreClient.SetSecretsAsync(System.Fabric.SecretStore.Secret[],System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ServiceGroupManagementClient" Id="T:System.Fabric.FabricClient.ServiceGroupManagementClient">
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Fabric.Description.ServiceGroupFromTemplateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Fabric.Description.ServiceGroupFromTemplateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.DeleteServiceGroupAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.DeleteServiceGroupAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.GetServiceGroupDescriptionAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.GetServiceGroupDescriptionAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.UpdateServiceGroupAsync(System.Uri,System.Fabric.Description.ServiceGroupUpdateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceGroupManagementClient.UpdateServiceGroupAsync(System.Uri,System.Fabric.Description.ServiceGroupUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ServiceManagementClient" Id="T:System.Fabric.FabricClient.ServiceManagementClient">
      <Member Id="E:System.Fabric.FabricClient.ServiceManagementClient.ServiceNotificationFilterMatched" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceAsync(System.Fabric.Description.ServiceDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceAsync(System.Fabric.Description.ServiceDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceFromTemplateAsync(System.Fabric.Description.ServiceFromTemplateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceFromTemplateAsync(System.Fabric.Description.ServiceFromTemplateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.CreateServiceFromTemplateAsync(System.Uri,System.Uri,System.String,System.Byte[],System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.DeleteServiceAsync(System.Fabric.Description.DeleteServiceDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.DeleteServiceAsync(System.Fabric.Description.DeleteServiceDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.DeleteServiceAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.DeleteServiceAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.GetServiceDescriptionAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.GetServiceDescriptionAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.GetServiceManifestAsync(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.GetServiceManifestAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServiceNotificationFilterAsync(System.Fabric.Description.ServiceNotificationFilterDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServiceNotificationFilterAsync(System.Fabric.Description.ServiceNotificationFilterDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServicePartitionResolutionChangeHandler(System.Uri,System.Fabric.ServicePartitionResolutionChangeHandler)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServicePartitionResolutionChangeHandler(System.Uri,System.Int64,System.Fabric.ServicePartitionResolutionChangeHandler)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServicePartitionResolutionChangeHandler(System.Uri,System.String,System.Fabric.ServicePartitionResolutionChangeHandler)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RemoveReplicaAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ReportCompletionAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Fabric.ResolvedServicePartition)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Fabric.ResolvedServicePartition,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Fabric.ResolvedServicePartition,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64,System.Fabric.ResolvedServicePartition)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64,System.Fabric.ResolvedServicePartition,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64,System.Fabric.ResolvedServicePartition,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String,System.Fabric.ResolvedServicePartition)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String,System.Fabric.ResolvedServicePartition,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String,System.Fabric.ResolvedServicePartition,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.ResolveServicePartitionAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RestartReplicaAsync(System.String,System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.RestartReplicaAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.UnregisterServiceNotificationFilterAsync(System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.UnregisterServiceNotificationFilterAsync(System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.UnregisterServicePartitionResolutionChangeHandler(System.Int64)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.UpdateServiceAsync(System.Uri,System.Fabric.Description.ServiceUpdateDescription)" />
      <Member Id="M:System.Fabric.FabricClient.ServiceManagementClient.UpdateServiceAsync(System.Uri,System.Fabric.Description.ServiceUpdateDescription,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClient/ServiceManagementClient/ServiceNotificationEventArgs" Id="T:System.Fabric.FabricClient.ServiceManagementClient.ServiceNotificationEventArgs">
      <Member Id="P:System.Fabric.FabricClient.ServiceManagementClient.ServiceNotificationEventArgs.Notification" />
    </Type>
    <Type Name="System.Fabric.FabricClient/TestManagementClient" Id="T:System.Fabric.FabricClient.TestManagementClient">
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CancelTestCommandAsync(System.Guid,System.Boolean)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CancelTestCommandAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CancelTestCommandAsync(System.Guid,System.Boolean,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CancelTestCommandAsync(System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CleanTestStateAsync" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.CleanTestStateAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosEventsAsync(System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosEventsAsync(System.String,System.Int64,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.String)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetChaosScheduleAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetNodeTransitionProgressAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionDataLossProgressAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionDataLossProgressAsync(System.Guid,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionDataLossProgressAsync(System.Guid,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionDataLossProgressAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionQuorumLossProgressAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionQuorumLossProgressAsync(System.Guid,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionQuorumLossProgressAsync(System.Guid,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionQuorumLossProgressAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionRestartProgressAsync(System.Guid)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionRestartProgressAsync(System.Guid,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionRestartProgressAsync(System.Guid,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetPartitionRestartProgressAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandStateFilter,System.Fabric.Query.TestCommandTypeFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandStateFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandTypeFilter,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeDataLossAsync(System.Fabric.PartitionSelector,System.Fabric.DataLossMode)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeDataLossAsync(System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeDataLossAsync(System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeDataLossAsync(System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeQuorumLossAsync(System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeQuorumLossAsync(System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeQuorumLossAsync(System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.InvokeQuorumLossAsync(System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.RestartPartitionAsync(System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.RestartPartitionAsync(System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.RestartPartitionAsync(System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.RestartPartitionAsync(System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.SetChaosScheduleAsync(System.Fabric.Chaos.DataStructures.ChaosScheduleDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartChaosAsync(System.Fabric.Chaos.DataStructures.ChaosParameters)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartChaosAsync(System.Fabric.Chaos.DataStructures.ChaosParameters,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartNodePoisonAsync(System.Fabric.Description.StartNodePoisonDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartNodeTransitionAsync(System.Fabric.Description.NodeTransitionDescription,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionDataLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.DataLossMode)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionDataLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionDataLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionDataLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.DataLossMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionQuorumLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionQuorumLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionQuorumLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionQuorumLossAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.QuorumLossMode,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionRestartAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionRestartAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionRestartAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StartPartitionRestartAsync(System.Guid,System.Fabric.PartitionSelector,System.Fabric.RestartPartitionMode,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StopChaosAsync" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.StopChaosAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateApplicationAsync(System.Uri,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateApplicationAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateApplicationAsync(System.Uri,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateServiceAsync(System.Uri,System.TimeSpan)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateServiceAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricClient.TestManagementClient.ValidateServiceAsync(System.Uri,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricClientRole" Id="T:System.Fabric.FabricClientRole">
      <Member Id="F:System.Fabric.FabricClientRole.Admin" />
      <Member Id="F:System.Fabric.FabricClientRole.Unknown" />
      <Member Id="F:System.Fabric.FabricClientRole.User" />
    </Type>
    <Type Name="System.Fabric.FabricClientSettings" Id="T:System.Fabric.FabricClientSettings">
      <Member Id="M:System.Fabric.FabricClientSettings.#ctor" />
      <Member Id="P:System.Fabric.FabricClientSettings.AuthTokenBufferSize" />
      <Member Id="P:System.Fabric.FabricClientSettings.ClientFriendlyName" />
      <Member Id="P:System.Fabric.FabricClientSettings.ConnectionIdleTimeout" />
      <Member Id="P:System.Fabric.FabricClientSettings.ConnectionInitializationTimeout" />
      <Member Id="P:System.Fabric.FabricClientSettings.HealthOperationTimeout" />
      <Member Id="P:System.Fabric.FabricClientSettings.HealthReportRetrySendInterval" />
      <Member Id="P:System.Fabric.FabricClientSettings.HealthReportSendInterval" />
      <Member Id="P:System.Fabric.FabricClientSettings.KeepAliveInterval" />
      <Member Id="P:System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout" />
      <Member Id="P:System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout" />
      <Member Id="P:System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount" />
      <Member Id="P:System.Fabric.FabricClientSettings.PartitionLocationCacheLimit" />
      <Member Id="P:System.Fabric.FabricClientSettings.ServiceChangePollInterval" />
    </Type>
    <Type Name="System.Fabric.FabricConnectionDeniedException" Id="T:System.Fabric.FabricConnectionDeniedException">
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricConnectionDeniedException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricConstants" Id="T:System.Fabric.FabricConstants">
      <Member Id="F:System.Fabric.FabricConstants.FabricFileRegistryPathRegKeyName" />
      <Member Id="F:System.Fabric.FabricConstants.FabricRegistryKeyPath" />
    </Type>
    <Type Name="System.Fabric.FabricDeleteBackupFileFailedException" Id="T:System.Fabric.FabricDeleteBackupFileFailedException">
      <Member Id="M:System.Fabric.FabricDeleteBackupFileFailedException.#ctor" />
      <Member Id="M:System.Fabric.FabricDeleteBackupFileFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricDeleteBackupFileFailedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricDeleteBackupFileFailedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricElementAlreadyExistsException" Id="T:System.Fabric.FabricElementAlreadyExistsException">
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementAlreadyExistsException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricElementNotFoundException" Id="T:System.Fabric.FabricElementNotFoundException">
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricElementNotFoundException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricEndpointNotFoundException" Id="T:System.Fabric.FabricEndpointNotFoundException">
      <Member Id="M:System.Fabric.FabricEndpointNotFoundException.#ctor" />
      <Member Id="M:System.Fabric.FabricEndpointNotFoundException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricEndpointNotFoundException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricErrorCode" Id="T:System.Fabric.FabricErrorCode">
      <Member Id="F:System.Fabric.FabricErrorCode.AlreadyAuxiliaryReplica" />
      <Member Id="F:System.Fabric.FabricErrorCode.AlreadyInstance" />
      <Member Id="F:System.Fabric.FabricErrorCode.AlreadyPrimaryReplica" />
      <Member Id="F:System.Fabric.FabricErrorCode.AlreadySecondaryReplica" />
      <Member Id="F:System.Fabric.FabricErrorCode.AlreadyStopped" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationAlreadyInTargetVersion" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationNotUpgrading" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationTypeAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationTypeInUse" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationTypeNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationTypeProvisionInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationUpdateInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationUpgradeInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.ApplicationUpgradeValidationError" />
      <Member Id="F:System.Fabric.FabricErrorCode.AsyncOperationNotComplete" />
      <Member Id="F:System.Fabric.FabricErrorCode.AuxiliaryFeatureDisabled" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupDirectoryNotEmpty" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupEnabled" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupNotEnabled" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupPolicyAlreayExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.BackupPolicyDoesNotExist" />
      <Member Id="F:System.Fabric.FabricErrorCode.CentralSecretServiceGenericError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ChaosAlreadyRunning" />
      <Member Id="F:System.Fabric.FabricErrorCode.CMOperationFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.CodePackageNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.CommunicationError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ComposeDeploymentAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotUpgrading" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConfigUpgradeFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConfigurationPackageNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConfigurationParameterNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConfigurationSectionNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConnectionDenied" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConstraintKeyUndefined" />
      <Member Id="F:System.Fabric.FabricErrorCode.ConstraintNotSatisfied" />
      <Member Id="F:System.Fabric.FabricErrorCode.ContainerNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.CopyAborted" />
      <Member Id="F:System.Fabric.FabricErrorCode.CorruptedImageStoreObjectFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.DatabaseMigrationInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.DataPackageNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.DecryptionFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.DeleteBackupFileFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.DirectoryNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.DnsNameInUse" />
      <Member Id="F:System.Fabric.FabricErrorCode.DnsServiceNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.DuplicateBackups" />
      <Member Id="F:System.Fabric.FabricErrorCode.DuplicateServiceNotificationFilterName" />
      <Member Id="F:System.Fabric.FabricErrorCode.DuplicateWaitObject" />
      <Member Id="F:System.Fabric.FabricErrorCode.EncryptionFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.EndpointNotReferenced" />
      <Member Id="F:System.Fabric.FabricErrorCode.EndpointResourceNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.EntryPointNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.EnumerationCompleted" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricAlreadyInTargetVersion" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricCannotConnect" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricConnectionClosedByRemoteEnd" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricDataRootNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricEndpointNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricHealthEntityNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricHealthMaxReportsReached" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricHealthStaleReport" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricMessageTooLarge" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricNotUpgrading" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricUpgradeInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricUpgradeValidationError" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricVersionAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricVersionInUse" />
      <Member Id="F:System.Fabric.FabricErrorCode.FabricVersionNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.FaultAnalysisServiceNotEnabled" />
      <Member Id="F:System.Fabric.FabricErrorCode.FileNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ForceNotSupportedForReplicaControlOperation" />
      <Member Id="F:System.Fabric.FabricErrorCode.GatewayNotReachable" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderAccessDeniedError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderInvalidMsiFile" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderReservedDirectoryError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderTimeoutError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderUnexpectedError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageBuilderValidationError" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageStoreAcquireFileLockFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ImageStoreIOException" />
      <Member Id="F:System.Fabric.FabricErrorCode.InstanceIdMismatch" />
      <Member Id="F:System.Fabric.FabricErrorCode.InsufficientClusterCapacity" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidAddress" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidAllowedCommonNameList" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidAtomicGroup" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidBackup" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidBackupChain" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidBackupSetting" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidConfiguration" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidCredentials" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidCredentialType" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidDnsName" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidDuration" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidForStatefulServices" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidForStatelessServices" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidInstanceId" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidNameUri" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidOperation" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidPackageSharingPolicy" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidPartitionKey" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidPartitionOperation" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidPartitionSelector" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidProtectionLevel" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidReplicaOperation" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidReplicaSelector" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidReplicaStateForReplicaOperation" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidRestoreData" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidServiceScalingPolicy" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidServiceType" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidSubjectName" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidTestCommandState" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidUploadSessionId" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidX509FindType" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidX509Store" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidX509StoreLocation" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidX509StoreName" />
      <Member Id="F:System.Fabric.FabricErrorCode.InvalidX509Thumbprint" />
      <Member Id="F:System.Fabric.FabricErrorCode.KeyNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.KeyTooLarge" />
      <Member Id="F:System.Fabric.FabricErrorCode.MissingFullBackup" />
      <Member Id="F:System.Fabric.FabricErrorCode.MultithreadedTransactionsNotAllowed" />
      <Member Id="F:System.Fabric.FabricErrorCode.NameAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.NameNotEmpty" />
      <Member Id="F:System.Fabric.FabricErrorCode.NameNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.NetworkInUse" />
      <Member Id="F:System.Fabric.FabricErrorCode.NetworkNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeHasNotStoppedYet" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeIsDown" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeIsUp" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeTransitionInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.NodeTypeNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.NotPrimary" />
      <Member Id="F:System.Fabric.FabricErrorCode.NotReadable" />
      <Member Id="F:System.Fabric.FabricErrorCode.NotReady" />
      <Member Id="F:System.Fabric.FabricErrorCode.NoWriteQuorum" />
      <Member Id="F:System.Fabric.FabricErrorCode.ObjectClosed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ObjectDisposed" />
      <Member Id="F:System.Fabric.FabricErrorCode.OnlyValidForStatefulPersistentServices" />
      <Member Id="F:System.Fabric.FabricErrorCode.OperationCanceled" />
      <Member Id="F:System.Fabric.FabricErrorCode.OperationNotComplete" />
      <Member Id="F:System.Fabric.FabricErrorCode.OperationNotSupported" />
      <Member Id="F:System.Fabric.FabricErrorCode.OperationTimedOut" />
      <Member Id="F:System.Fabric.FabricErrorCode.PartitionNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.PathTooLong" />
      <Member Id="F:System.Fabric.FabricErrorCode.PLBNotReady" />
      <Member Id="F:System.Fabric.FabricErrorCode.PreDeploymentNotAllowed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ProcessAborted" />
      <Member Id="F:System.Fabric.FabricErrorCode.ProcessDeactivated" />
      <Member Id="F:System.Fabric.FabricErrorCode.PropertyCheckFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.PropertyNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.PropertyValueEmpty" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReconfigurationPending" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionCannotConnect" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionInvalidTargetPartition" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionManagerAlreadyListening" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionManagerExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionManagerNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionManagerNotListening" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionQueueEmpty" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionQuotaExceeded" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionRejected" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionServiceFaulted" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReliableSessionTransportStartupFailure" />
      <Member Id="F:System.Fabric.FabricErrorCode.RepairTaskAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.RepairTaskNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReplicaDoesNotExist" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReplicationOperationTooLarge" />
      <Member Id="F:System.Fabric.FabricErrorCode.ReplicationQueueFull" />
      <Member Id="F:System.Fabric.FabricErrorCode.RestoreAlreadyInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.RestoreSafeCheckFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.RestoreSourceTargetPartitionMismatch" />
      <Member Id="F:System.Fabric.FabricErrorCode.SecretInvalid" />
      <Member Id="F:System.Fabric.FabricErrorCode.SecretVersionAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.SequenceNumberCheckFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServerAuthenticationFailed" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceAffinityChainNotSupported" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceGroupAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceGroupNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceManifestNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceMetadataMismatch" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceOffline" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTemplateNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTooBusy" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTypeAlreadyRegistered" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTypeMismatch" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTypeNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.ServiceTypeNotRegistered" />
      <Member Id="F:System.Fabric.FabricErrorCode.SingleInstanceApplicationAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.SingleInstanceApplicationNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.SingleInstanceApplicationUpgradeInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.StopInProgress" />
      <Member Id="F:System.Fabric.FabricErrorCode.TestCommandOperationIdAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.TransactionAborted" />
      <Member Id="F:System.Fabric.FabricErrorCode.TransactionNotActive" />
      <Member Id="F:System.Fabric.FabricErrorCode.TransactionTooLarge" />
      <Member Id="F:System.Fabric.FabricErrorCode.Unknown" />
      <Member Id="F:System.Fabric.FabricErrorCode.UpgradeDomainAlreadyCompleted" />
      <Member Id="F:System.Fabric.FabricErrorCode.UploadSessionIdConflict" />
      <Member Id="F:System.Fabric.FabricErrorCode.UploadSessionRangeNotSatisfiable" />
      <Member Id="F:System.Fabric.FabricErrorCode.UserRoleClientCertificateNotConfigured" />
      <Member Id="F:System.Fabric.FabricErrorCode.ValueTooLarge" />
      <Member Id="F:System.Fabric.FabricErrorCode.VolumeAlreadyExists" />
      <Member Id="F:System.Fabric.FabricErrorCode.VolumeNotFound" />
      <Member Id="F:System.Fabric.FabricErrorCode.WriteConflict" />
    </Type>
    <Type Name="System.Fabric.FabricException" Id="T:System.Fabric.FabricException">
      <Member Id="M:System.Fabric.FabricException.#ctor" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String,System.Exception,System.Int32)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricException.#ctor(System.String,System.Int32)" />
      <Member Id="P:System.Fabric.FabricException.ErrorCode" />
    </Type>
    <Type Name="System.Fabric.FabricImageStoreException" Id="T:System.Fabric.FabricImageStoreException">
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricImageStoreException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidAddressException" Id="T:System.Fabric.FabricInvalidAddressException">
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidAddressException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidAtomicGroupException" Id="T:System.Fabric.FabricInvalidAtomicGroupException">
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidAtomicGroupException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidForStatefulServicesException" Id="T:System.Fabric.FabricInvalidForStatefulServicesException">
      <Member Id="M:System.Fabric.FabricInvalidForStatefulServicesException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidForStatefulServicesException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatefulServicesException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatefulServicesException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatefulServicesException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidForStatelessServicesException" Id="T:System.Fabric.FabricInvalidForStatelessServicesException">
      <Member Id="M:System.Fabric.FabricInvalidForStatelessServicesException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidForStatelessServicesException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatelessServicesException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatelessServicesException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidForStatelessServicesException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidPartitionKeyException" Id="T:System.Fabric.FabricInvalidPartitionKeyException">
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionKeyException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidPartitionSelectorException" Id="T:System.Fabric.FabricInvalidPartitionSelectorException">
      <Member Id="M:System.Fabric.FabricInvalidPartitionSelectorException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionSelectorException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionSelectorException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidPartitionSelectorException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidReplicaSelectorException" Id="T:System.Fabric.FabricInvalidReplicaSelectorException">
      <Member Id="M:System.Fabric.FabricInvalidReplicaSelectorException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidReplicaSelectorException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidReplicaSelectorException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricInvalidReplicaSelectorException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricInvalidTestCommandStateException" Id="T:System.Fabric.FabricInvalidTestCommandStateException">
      <Member Id="M:System.Fabric.FabricInvalidTestCommandStateException.#ctor" />
      <Member Id="M:System.Fabric.FabricInvalidTestCommandStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricInvalidTestCommandStateException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricInvalidTestCommandStateException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricMessageTooLargeException" Id="T:System.Fabric.FabricMessageTooLargeException">
      <Member Id="M:System.Fabric.FabricMessageTooLargeException.#ctor" />
      <Member Id="M:System.Fabric.FabricMessageTooLargeException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricMessageTooLargeException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricMissingFullBackupException" Id="T:System.Fabric.FabricMissingFullBackupException">
      <Member Id="M:System.Fabric.FabricMissingFullBackupException.#ctor" />
      <Member Id="M:System.Fabric.FabricMissingFullBackupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricMissingFullBackupException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricMissingFullBackupException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricNotPrimaryException" Id="T:System.Fabric.FabricNotPrimaryException">
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricNotPrimaryException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricNotReadableException" Id="T:System.Fabric.FabricNotReadableException">
      <Member Id="M:System.Fabric.FabricNotReadableException.#ctor" />
      <Member Id="M:System.Fabric.FabricNotReadableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricNotReadableException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricNotReadableException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricObjectClosedException" Id="T:System.Fabric.FabricObjectClosedException">
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricObjectClosedException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricOnlyValidForStatefulPersistentServicesException" Id="T:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException">
      <Member Id="M:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException.#ctor" />
      <Member Id="M:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricOnlyValidForStatefulPersistentServicesException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricOrchestrationUpgradeProgress" Id="T:System.Fabric.FabricOrchestrationUpgradeProgress">
      <Member Id="M:System.Fabric.FabricOrchestrationUpgradeProgress.#ctor" />
      <Member Id="P:System.Fabric.FabricOrchestrationUpgradeProgress.ConfigVersion" />
      <Member Id="P:System.Fabric.FabricOrchestrationUpgradeProgress.Details" />
      <Member Id="P:System.Fabric.FabricOrchestrationUpgradeProgress.ProgressStatus" />
      <Member Id="P:System.Fabric.FabricOrchestrationUpgradeProgress.UpgradeState" />
    </Type>
    <Type Name="System.Fabric.FabricPeriodicBackupNotEnabledException" Id="T:System.Fabric.FabricPeriodicBackupNotEnabledException">
      <Member Id="M:System.Fabric.FabricPeriodicBackupNotEnabledException.#ctor" />
      <Member Id="M:System.Fabric.FabricPeriodicBackupNotEnabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricPeriodicBackupNotEnabledException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricPeriodicBackupNotEnabledException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricReplicationOperationTooLargeException" Id="T:System.Fabric.FabricReplicationOperationTooLargeException">
      <Member Id="M:System.Fabric.FabricReplicationOperationTooLargeException.#ctor" />
      <Member Id="M:System.Fabric.FabricReplicationOperationTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricReplicationOperationTooLargeException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricReplicationOperationTooLargeException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricReplicator" Id="T:System.Fabric.FabricReplicator">
      <Member Id="F:System.Fabric.FabricReplicator.InvalidAtomicGroupId" />
      <Member Id="F:System.Fabric.FabricReplicator.UnknownSequenceNumber" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#BuildReplicaAsync(System.Fabric.ReplicaInformation,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#OnDataLossAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#RemoveReplica(System.Int64)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#UpdateCatchUpReplicaSetConfiguration(System.Fabric.ReplicaSetConfiguration,System.Fabric.ReplicaSetConfiguration)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#UpdateCurrentReplicaSetConfiguration(System.Fabric.ReplicaSetConfiguration)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IPrimaryReplicator#WaitForCatchUpQuorumAsync(System.Fabric.ReplicaSetQuorumMode,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#Abort" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#ChangeRoleAsync(System.Fabric.Epoch,System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#GetCatchUpCapability" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#GetCurrentProgress" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricReplicator.System#Fabric#IReplicator#UpdateEpochAsync(System.Fabric.Epoch,System.Threading.CancellationToken)" />
      <Member Id="P:System.Fabric.FabricReplicator.StateReplicator" />
      <Member Id="P:System.Fabric.FabricReplicator.StateReplicator2" />
    </Type>
    <Type Name="System.Fabric.FabricRestoreSafeCheckFailedException" Id="T:System.Fabric.FabricRestoreSafeCheckFailedException">
      <Member Id="M:System.Fabric.FabricRestoreSafeCheckFailedException.#ctor" />
      <Member Id="M:System.Fabric.FabricRestoreSafeCheckFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricRestoreSafeCheckFailedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricRestoreSafeCheckFailedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricRuntime" Id="T:System.Fabric.FabricRuntime">
      <Member Id="M:System.Fabric.FabricRuntime.Create" />
      <Member Id="M:System.Fabric.FabricRuntime.Create(System.Action)" />
      <Member Id="M:System.Fabric.FabricRuntime.CreateAsync(System.Action,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.CreateAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.Dispose" />
      <Member Id="M:System.Fabric.FabricRuntime.GetActivationContext" />
      <Member Id="M:System.Fabric.FabricRuntime.GetActivationContextAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.GetCodePackageActivator" />
      <Member Id="M:System.Fabric.FabricRuntime.GetCodePackageActivatorAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.GetNodeContext" />
      <Member Id="M:System.Fabric.FabricRuntime.GetNodeContextAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterServiceGroupFactory(System.String,System.Fabric.ServiceGroupFactory)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterServiceGroupFactoryAsync(System.String,System.Fabric.ServiceGroupFactory,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterServiceType(System.String,System.Type)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterServiceTypeAsync(System.String,System.Type,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterStatefulServiceFactoryAsync(System.String,System.Fabric.IStatefulServiceFactory,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)" />
      <Member Id="M:System.Fabric.FabricRuntime.RegisterStatelessServiceFactoryAsync(System.String,System.Fabric.IStatelessServiceFactory,System.TimeSpan,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.FabricServerAuthenticationFailedException" Id="T:System.Fabric.FabricServerAuthenticationFailedException">
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricServerAuthenticationFailedException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricServiceNotFoundException" Id="T:System.Fabric.FabricServiceNotFoundException">
      <Member Id="M:System.Fabric.FabricServiceNotFoundException.#ctor" />
      <Member Id="M:System.Fabric.FabricServiceNotFoundException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricServiceNotFoundException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricTestCommandOperationIdAlreadyExistsException" Id="T:System.Fabric.FabricTestCommandOperationIdAlreadyExistsException">
      <Member Id="M:System.Fabric.FabricTestCommandOperationIdAlreadyExistsException.#ctor" />
      <Member Id="M:System.Fabric.FabricTestCommandOperationIdAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricTestCommandOperationIdAlreadyExistsException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricTestCommandOperationIdAlreadyExistsException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.FabricTransientException" Id="T:System.Fabric.FabricTransientException">
      <Member Id="M:System.Fabric.FabricTransientException.#ctor" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricTransientException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricUpgradeOrchestrationServiceState" Id="T:System.Fabric.FabricUpgradeOrchestrationServiceState">
      <Member Id="M:System.Fabric.FabricUpgradeOrchestrationServiceState.#ctor" />
      <Member Id="P:System.Fabric.FabricUpgradeOrchestrationServiceState.CurrentCodeVersion" />
      <Member Id="P:System.Fabric.FabricUpgradeOrchestrationServiceState.CurrentManifestVersion" />
      <Member Id="P:System.Fabric.FabricUpgradeOrchestrationServiceState.PendingUpgradeType" />
      <Member Id="P:System.Fabric.FabricUpgradeOrchestrationServiceState.TargetCodeVersion" />
      <Member Id="P:System.Fabric.FabricUpgradeOrchestrationServiceState.TargetManifestVersion" />
    </Type>
    <Type Name="System.Fabric.FabricUpgradeProgress" Id="T:System.Fabric.FabricUpgradeProgress">
      <Member Id="M:System.Fabric.FabricUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.FabricUpgradeProgress)" />
      <Member Id="M:System.Fabric.FabricUpgradeProgress.ToString" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.CurrentUpgradeDomainDuration" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.CurrentUpgradeDomainProgress" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.CurrentUpgradeUnitsProgress" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.FailureReason" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.FailureTimestampUtc" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.IsNodeByNode" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.NextUpgradeDomain" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.RollingUpgradeMode" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.StartTimestampUtc" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.TargetCodeVersion" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.TargetConfigVersion" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UnhealthyEvaluations" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeDescription" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeDomainProgressAtFailure" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeDomains" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeDuration" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeState" />
      <Member Id="P:System.Fabric.FabricUpgradeProgress.UpgradeUnits" />
    </Type>
    <Type Name="System.Fabric.FabricUpgradeState" Id="T:System.Fabric.FabricUpgradeState">
      <Member Id="F:System.Fabric.FabricUpgradeState.Failed" />
      <Member Id="F:System.Fabric.FabricUpgradeState.Invalid" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingBackCompleted" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingBackInProgress" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingBackPending" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingForwardCompleted" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingForwardInProgress" />
      <Member Id="F:System.Fabric.FabricUpgradeState.RollingForwardPending" />
    </Type>
    <Type Name="System.Fabric.FabricValidationException" Id="T:System.Fabric.FabricValidationException">
      <Member Id="M:System.Fabric.FabricValidationException.#ctor" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.String,System.Exception,System.Fabric.FabricErrorCode)" />
      <Member Id="M:System.Fabric.FabricValidationException.#ctor(System.String,System.Fabric.FabricErrorCode)" />
    </Type>
    <Type Name="System.Fabric.FabricWorkerEntryPoint" Id="T:System.Fabric.FabricWorkerEntryPoint">
      <Member Id="M:System.Fabric.FabricWorkerEntryPoint.#ctor" />
      <Member Id="M:System.Fabric.FabricWorkerEntryPoint.Activate(System.Fabric.FabricRuntime,System.Fabric.CodePackageActivationContext)" />
      <Member Id="M:System.Fabric.FabricWorkerEntryPoint.Deactivate" />
    </Type>
    <Type Name="System.Fabric.FaultType" Id="T:System.Fabric.FaultType">
      <Member Id="F:System.Fabric.FaultType.Invalid" />
      <Member Id="F:System.Fabric.FaultType.Permanent" />
      <Member Id="F:System.Fabric.FaultType.Transient" />
    </Type>
    <Type Name="System.Fabric.GatewayInformation" Id="T:System.Fabric.GatewayInformation">
      <Member Id="P:System.Fabric.GatewayInformation.NodeAddress" />
      <Member Id="P:System.Fabric.GatewayInformation.NodeId" />
      <Member Id="P:System.Fabric.GatewayInformation.NodeInstanceId" />
      <Member Id="P:System.Fabric.GatewayInformation.NodeName" />
    </Type>
    <Type Name="System.Fabric.GetPropertyOperation" Id="T:System.Fabric.GetPropertyOperation">
      <Member Id="M:System.Fabric.GetPropertyOperation.#ctor(System.String)" />
      <Member Id="M:System.Fabric.GetPropertyOperation.#ctor(System.String,System.Boolean)" />
      <Member Id="P:System.Fabric.GetPropertyOperation.IncludeValue" />
    </Type>
    <Type Name="System.Fabric.HostIsolationMode" Id="T:System.Fabric.HostIsolationMode">
      <Member Id="F:System.Fabric.HostIsolationMode.HyperV" />
      <Member Id="F:System.Fabric.HostIsolationMode.None" />
      <Member Id="F:System.Fabric.HostIsolationMode.Process" />
    </Type>
    <Type Name="System.Fabric.HostType" Id="T:System.Fabric.HostType">
      <Member Id="F:System.Fabric.HostType.ContainerHost" />
      <Member Id="F:System.Fabric.HostType.ExeHost" />
      <Member Id="F:System.Fabric.HostType.Invalid" />
    </Type>
    <Type Name="System.Fabric.IAtomicGroupStateProvider" Id="T:System.Fabric.IAtomicGroupStateProvider">
      <Member Id="M:System.Fabric.IAtomicGroupStateProvider.AtomicGroupCommitAsync(System.Int64,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IAtomicGroupStateProvider.AtomicGroupRollbackAsync(System.Int64,System.Int64,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IAtomicGroupStateProvider.AtomicGroupUndoProgressAsync(System.Int64,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IAtomicGroupStateReplicator" Id="T:System.Fabric.IAtomicGroupStateReplicator">
      <Member Id="M:System.Fabric.IAtomicGroupStateReplicator.CreateAtomicGroup" />
      <Member Id="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupCommitAsync(System.Int64,System.Threading.CancellationToken,System.Int64@)" />
      <Member Id="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupOperationAsync(System.Int64,System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" />
      <Member Id="M:System.Fabric.IAtomicGroupStateReplicator.ReplicateAtomicGroupRollbackAsync(System.Int64,System.Threading.CancellationToken,System.Int64@)" />
    </Type>
    <Type Name="System.Fabric.IByteSerializable" Id="T:System.Fabric.IByteSerializable">
      <Member Id="M:System.Fabric.IByteSerializable.FromBytes(System.Byte[])" />
      <Member Id="M:System.Fabric.IByteSerializable.ToBytes" />
    </Type>
    <Type Name="System.Fabric.ICodePackageActivationContext" Id="T:System.Fabric.ICodePackageActivationContext">
      <Member Id="E:System.Fabric.ICodePackageActivationContext.CodePackageAddedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.CodePackageModifiedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.CodePackageRemovedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageAddedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageModifiedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageRemovedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.DataPackageAddedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.DataPackageModifiedEvent" />
      <Member Id="E:System.Fabric.ICodePackageActivationContext.DataPackageRemovedEvent" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetCodePackageNames" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetCodePackageObject(System.String)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject(System.String)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetDataPackageNames" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetDataPackageObject(System.String)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetEndpoint(System.String)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetEndpoints" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetServiceManifestName" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.GetServiceTypes" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.ApplicationName" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.ApplicationTypeName" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.CodePackageName" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.CodePackageVersion" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.ContextId" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.LogDirectory" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.TempDirectory" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext.WorkDirectory" />
    </Type>
    <Type Name="System.Fabric.ICodePackageActivationContext2" Id="T:System.Fabric.ICodePackageActivationContext2">
      <Member Id="P:System.Fabric.ICodePackageActivationContext2.ServiceListenAddress" />
      <Member Id="P:System.Fabric.ICodePackageActivationContext2.ServicePublishAddress" />
    </Type>
    <Type Name="System.Fabric.ICodePackageActivationContext3" Id="T:System.Fabric.ICodePackageActivationContext3">
      <Member Id="M:System.Fabric.ICodePackageActivationContext3.GetDirectory(System.String)" />
    </Type>
    <Type Name="System.Fabric.IImageStoreProgressHandler" Id="T:System.Fabric.IImageStoreProgressHandler">
      <Member Id="M:System.Fabric.IImageStoreProgressHandler.GetUpdateInterval" />
      <Member Id="M:System.Fabric.IImageStoreProgressHandler.UpdateProgress(System.Int64,System.Int64,System.Fabric.ProgressUnitType)" />
    </Type>
    <Type Name="System.Fabric.IMemoryManagedOperationData" Id="T:System.Fabric.IMemoryManagedOperationData" />
    <Type Name="System.Fabric.Int64RangePartitionInformation" Id="T:System.Fabric.Int64RangePartitionInformation">
      <Member Id="P:System.Fabric.Int64RangePartitionInformation.HighKey" />
      <Member Id="P:System.Fabric.Int64RangePartitionInformation.LowKey" />
    </Type>
    <Type Name="System.Fabric.IOperation" Id="T:System.Fabric.IOperation">
      <Member Id="M:System.Fabric.IOperation.Acknowledge" />
      <Member Id="P:System.Fabric.IOperation.AtomicGroupId" />
      <Member Id="P:System.Fabric.IOperation.Data" />
      <Member Id="P:System.Fabric.IOperation.OperationType" />
      <Member Id="P:System.Fabric.IOperation.SequenceNumber" />
    </Type>
    <Type Name="System.Fabric.IOperationData" Id="T:System.Fabric.IOperationData" />
    <Type Name="System.Fabric.IOperationDataStream" Id="T:System.Fabric.IOperationDataStream">
      <Member Id="M:System.Fabric.IOperationDataStream.GetNextAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IOperationStream" Id="T:System.Fabric.IOperationStream">
      <Member Id="M:System.Fabric.IOperationStream.GetOperationAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IOperationStream2" Id="T:System.Fabric.IOperationStream2">
      <Member Id="M:System.Fabric.IOperationStream2.ReportFault(System.Fabric.FaultType)" />
    </Type>
    <Type Name="System.Fabric.IOperationStream3" Id="T:System.Fabric.IOperationStream3">
      <Member Id="M:System.Fabric.IOperationStream3.GetMemoryManagedOperationAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IPrimaryReplicator" Id="T:System.Fabric.IPrimaryReplicator">
      <Member Id="M:System.Fabric.IPrimaryReplicator.BuildReplicaAsync(System.Fabric.ReplicaInformation,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IPrimaryReplicator.OnDataLossAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IPrimaryReplicator.RemoveReplica(System.Int64)" />
      <Member Id="M:System.Fabric.IPrimaryReplicator.UpdateCatchUpReplicaSetConfiguration(System.Fabric.ReplicaSetConfiguration,System.Fabric.ReplicaSetConfiguration)" />
      <Member Id="M:System.Fabric.IPrimaryReplicator.UpdateCurrentReplicaSetConfiguration(System.Fabric.ReplicaSetConfiguration)" />
      <Member Id="M:System.Fabric.IPrimaryReplicator.WaitForCatchUpQuorumAsync(System.Fabric.ReplicaSetQuorumMode,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IReplicator" Id="T:System.Fabric.IReplicator">
      <Member Id="M:System.Fabric.IReplicator.Abort" />
      <Member Id="M:System.Fabric.IReplicator.ChangeRoleAsync(System.Fabric.Epoch,System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IReplicator.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IReplicator.GetCatchUpCapability" />
      <Member Id="M:System.Fabric.IReplicator.GetCurrentProgress" />
      <Member Id="M:System.Fabric.IReplicator.OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IReplicator.UpdateEpochAsync(System.Fabric.Epoch,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IReplicatorCatchupSpecificQuorum" Id="T:System.Fabric.IReplicatorCatchupSpecificQuorum" />
    <Type Name="System.Fabric.IServiceGroupPartition" Id="T:System.Fabric.IServiceGroupPartition">
      <Member Id="M:System.Fabric.IServiceGroupPartition.ResolveMember``1(System.Uri)" />
    </Type>
    <Type Name="System.Fabric.IServicePartition" Id="T:System.Fabric.IServicePartition">
      <Member Id="M:System.Fabric.IServicePartition.ReportFault(System.Fabric.FaultType)" />
      <Member Id="M:System.Fabric.IServicePartition.ReportLoad(System.Collections.Generic.IEnumerable{System.Fabric.LoadMetric})" />
      <Member Id="M:System.Fabric.IServicePartition.ReportMoveCost(System.Fabric.MoveCost)" />
      <Member Id="M:System.Fabric.IServicePartition.ReportPartitionHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.IServicePartition.ReportPartitionHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="P:System.Fabric.IServicePartition.PartitionInfo" />
    </Type>
    <Type Name="System.Fabric.IStatefulServiceFactory" Id="T:System.Fabric.IStatefulServiceFactory">
      <Member Id="M:System.Fabric.IStatefulServiceFactory.CreateReplica(System.String,System.Uri,System.Byte[],System.Guid,System.Int64)" />
    </Type>
    <Type Name="System.Fabric.IStatefulServicePartition" Id="T:System.Fabric.IStatefulServicePartition">
      <Member Id="M:System.Fabric.IStatefulServicePartition.CreateReplicator(System.Fabric.IStateProvider,System.Fabric.ReplicatorSettings)" />
      <Member Id="M:System.Fabric.IStatefulServicePartition.ReportReplicaHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.IStatefulServicePartition.ReportReplicaHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
      <Member Id="P:System.Fabric.IStatefulServicePartition.ReadStatus" />
      <Member Id="P:System.Fabric.IStatefulServicePartition.WriteStatus" />
    </Type>
    <Type Name="System.Fabric.IStatefulServiceReplica" Id="T:System.Fabric.IStatefulServiceReplica">
      <Member Id="M:System.Fabric.IStatefulServiceReplica.Abort" />
      <Member Id="M:System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IStatefulServiceReplica.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)" />
      <Member Id="M:System.Fabric.IStatefulServiceReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IStatelessServiceFactory" Id="T:System.Fabric.IStatelessServiceFactory">
      <Member Id="M:System.Fabric.IStatelessServiceFactory.CreateInstance(System.String,System.Uri,System.Byte[],System.Guid,System.Int64)" />
    </Type>
    <Type Name="System.Fabric.IStatelessServiceInstance" Id="T:System.Fabric.IStatelessServiceInstance">
      <Member Id="M:System.Fabric.IStatelessServiceInstance.Abort" />
      <Member Id="M:System.Fabric.IStatelessServiceInstance.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IStatelessServiceInstance.Initialize(System.Fabric.StatelessServiceInitializationParameters)" />
      <Member Id="M:System.Fabric.IStatelessServiceInstance.OpenAsync(System.Fabric.IStatelessServicePartition,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IStatelessServicePartition" Id="T:System.Fabric.IStatelessServicePartition">
      <Member Id="M:System.Fabric.IStatelessServicePartition.ReportCompletion" />
      <Member Id="M:System.Fabric.IStatelessServicePartition.ReportInstanceHealth(System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.IStatelessServicePartition.ReportInstanceHealth(System.Fabric.Health.HealthInformation,System.Fabric.Health.HealthReportSendOptions)" />
    </Type>
    <Type Name="System.Fabric.IStateProvider" Id="T:System.Fabric.IStateProvider">
      <Member Id="M:System.Fabric.IStateProvider.GetCopyContext" />
      <Member Id="M:System.Fabric.IStateProvider.GetCopyState(System.Int64,System.Fabric.IOperationDataStream)" />
      <Member Id="M:System.Fabric.IStateProvider.GetLastCommittedSequenceNumber" />
      <Member Id="M:System.Fabric.IStateProvider.OnDataLossAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.IStateProvider.UpdateEpochAsync(System.Fabric.Epoch,System.Int64,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.IStateReplicator" Id="T:System.Fabric.IStateReplicator">
      <Member Id="M:System.Fabric.IStateReplicator.GetCopyStream" />
      <Member Id="M:System.Fabric.IStateReplicator.GetReplicationStream" />
      <Member Id="M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)" />
      <Member Id="M:System.Fabric.IStateReplicator.UpdateReplicatorSettings(System.Fabric.ReplicatorSettings)" />
    </Type>
    <Type Name="System.Fabric.IStateReplicator2" Id="T:System.Fabric.IStateReplicator2">
      <Member Id="M:System.Fabric.IStateReplicator2.GetReplicatorSettings" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreEnumerator" Id="T:System.Fabric.KeyValueStoreEnumerator">
      <Member Id="M:System.Fabric.KeyValueStoreEnumerator.Enumerate(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreEnumerator.Enumerate(System.String,System.Boolean)" />
      <Member Id="M:System.Fabric.KeyValueStoreEnumerator.EnumerateMetadata(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreEnumerator.EnumerateMetadata(System.String,System.Boolean)" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreItem" Id="T:System.Fabric.KeyValueStoreItem">
      <Member Id="P:System.Fabric.KeyValueStoreItem.Metadata" />
      <Member Id="P:System.Fabric.KeyValueStoreItem.Value" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreItemMetadata" Id="T:System.Fabric.KeyValueStoreItemMetadata">
      <Member Id="P:System.Fabric.KeyValueStoreItemMetadata.Key" />
      <Member Id="P:System.Fabric.KeyValueStoreItemMetadata.LastModifiedOnPrimaryUtc" />
      <Member Id="P:System.Fabric.KeyValueStoreItemMetadata.LastModifiedUtc" />
      <Member Id="P:System.Fabric.KeyValueStoreItemMetadata.SequenceNumber" />
      <Member Id="P:System.Fabric.KeyValueStoreItemMetadata.ValueSizeInBytes" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreNotification" Id="T:System.Fabric.KeyValueStoreNotification">
      <Member Id="P:System.Fabric.KeyValueStoreNotification.IsDelete" />
      <Member Id="P:System.Fabric.KeyValueStoreNotification.Metadata" />
      <Member Id="P:System.Fabric.KeyValueStoreNotification.Value" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreReplica" Id="T:System.Fabric.KeyValueStoreReplica">
      <Member Id="E:System.Fabric.KeyValueStoreReplica.DataLossReported" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.IgnoreSequenceNumberCheck" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String,System.Fabric.LocalStoreSettings)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String,System.Fabric.LocalStoreSettings,System.Fabric.ReplicatorSettings)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String,System.Fabric.LocalStoreSettings,System.Fabric.ReplicatorSettings,System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String,System.Fabric.LocalStoreSettings,System.Fabric.ReplicatorSettings,System.Fabric.KeyValueStoreReplicaSettings)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.#ctor(System.String,System.Fabric.ReplicatorSettings)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Abort" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Add(System.Fabric.TransactionBase,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Backup(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.BackupAsync(System.String,System.Fabric.StoreBackupOption,System.Func{System.Fabric.StoreBackupInfo,System.Threading.Tasks.Task{System.Boolean}})" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.BackupAsync(System.String,System.Fabric.StoreBackupOption,System.Func{System.Fabric.StoreBackupInfo,System.Threading.Tasks.Task{System.Boolean}},System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Contains(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.CreateTransaction" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.CreateTransaction(System.Fabric.KeyValueStoreTransactionSettings)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Enumerate(System.Fabric.TransactionBase)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Enumerate(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Enumerate(System.Fabric.TransactionBase,System.String,System.Boolean)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.EnumerateBySequenceNumber(System.Fabric.TransactionBase,System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.EnumerateKeysAndTombstonesBySequenceNumber(System.Fabric.TransactionBase,System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.EnumerateMetadata(System.Fabric.TransactionBase)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.EnumerateMetadata(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.EnumerateMetadata(System.Fabric.TransactionBase,System.String,System.Boolean)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Get(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.GetCurrentEpoch" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.GetLastCommittedSequenceNumber" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.GetLSNSplitPercentile(System.Int32)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.GetMetadata(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.GetValue(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnAbort" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnCloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnCopyComplete(System.Fabric.KeyValueStoreEnumerator)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnDataLossAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnDatalossReported(System.EventArgs)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnInitialize(System.Fabric.StatefulServiceInitializationParameters)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnReplicationOperation(System.Collections.Generic.IEnumerator{System.Fabric.KeyValueStoreNotification})" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OnRestoreCompletedAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Remove(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Remove(System.Fabric.TransactionBase,System.String,System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Restore(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.RestoreAsync(System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.RestoreAsync(System.String,System.Fabric.RestoreSettings,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.RestoreAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryAbortExistingTransactionsAndRejectWrites" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryAdd(System.Fabric.TransactionBase,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryGet(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryGetMetadata(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryGetValue(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryRemove(System.Fabric.TransactionBase,System.String)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryRemove(System.Fabric.TransactionBase,System.String,System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryUpdate(System.Fabric.TransactionBase,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.TryUpdate(System.Fabric.TransactionBase,System.String,System.Byte[],System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Update(System.Fabric.TransactionBase,System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.Update(System.Fabric.TransactionBase,System.String,System.Byte[],System.Int64)" />
      <Member Id="M:System.Fabric.KeyValueStoreReplica.UpdateReplicatorSettings(System.Fabric.ReplicatorSettings)" />
      <Member Id="P:System.Fabric.KeyValueStoreReplica.KeyValueStoreReplicaSettings" />
      <Member Id="P:System.Fabric.KeyValueStoreReplica.LocalStoreSettings" />
      <Member Id="P:System.Fabric.KeyValueStoreReplica.NotificationMode" />
      <Member Id="P:System.Fabric.KeyValueStoreReplica.ReplicatorSettings" />
      <Member Id="P:System.Fabric.KeyValueStoreReplica.StoreName" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreReplica/FullCopyMode" Id="T:System.Fabric.KeyValueStoreReplica.FullCopyMode">
      <Member Id="F:System.Fabric.KeyValueStoreReplica.FullCopyMode.Default" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.FullCopyMode.Logical" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.FullCopyMode.Physical" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.FullCopyMode.Rebuild" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreReplica/SecondaryNotificationMode" Id="T:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode">
      <Member Id="F:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode.BlockSecondaryAck" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode.Invalid" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode.NonBlockingQuorumAcked" />
      <Member Id="F:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode.None" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreReplicaSettings" Id="T:System.Fabric.KeyValueStoreReplicaSettings">
      <Member Id="M:System.Fabric.KeyValueStoreReplicaSettings.#ctor" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.DisableTombstoneCleanup" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.LogicalCopyProbabilityInPercent" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.RunTransactionCommitContinuationsAsynchronously" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode" />
      <Member Id="P:System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout" />
    </Type>
    <Type Name="System.Fabric.KeyValueStoreTransactionSettings" Id="T:System.Fabric.KeyValueStoreTransactionSettings">
      <Member Id="M:System.Fabric.KeyValueStoreTransactionSettings.#ctor" />
      <Member Id="P:System.Fabric.KeyValueStoreTransactionSettings.SerializationBlockSize" />
    </Type>
    <Type Name="System.Fabric.LoadMetric" Id="T:System.Fabric.LoadMetric">
      <Member Id="M:System.Fabric.LoadMetric.#ctor(System.String,System.Int32)" />
      <Member Id="P:System.Fabric.LoadMetric.Name" />
      <Member Id="P:System.Fabric.LoadMetric.Value" />
    </Type>
    <Type Name="System.Fabric.LocalEseStoreSettings" Id="T:System.Fabric.LocalEseStoreSettings">
      <Member Id="M:System.Fabric.LocalEseStoreSettings.#ctor" />
      <Member Id="M:System.Fabric.LocalEseStoreSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.CompactionProbabilityInPercent" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.DbFolderPath" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.DefragThresholdInMB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.EnableOverwriteOnUpdate" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.FreePageSizeThresholdInMB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.LogFileSizeInKB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.MaxCursors" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.MaxVerPages" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.PoolAdjustmentSize" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.PoolCachedReadCursorsPerSessionSize" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.PoolEvictionPeriodInSeconds" />
      <Member Id="P:System.Fabric.LocalEseStoreSettings.PoolMinSize" />
    </Type>
    <Type Name="System.Fabric.LocalStoreKind" Id="T:System.Fabric.LocalStoreKind">
      <Member Id="F:System.Fabric.LocalStoreKind.Ese" />
      <Member Id="F:System.Fabric.LocalStoreKind.Invalid" />
    </Type>
    <Type Name="System.Fabric.LocalStoreSettings" Id="T:System.Fabric.LocalStoreSettings">
      <Member Id="M:System.Fabric.LocalStoreSettings.#ctor(System.Fabric.LocalStoreKind)" />
      <Member Id="P:System.Fabric.LocalStoreSettings.StoreKind" />
    </Type>
    <Type Name="System.Fabric.ManagedIdentityKind" Id="T:System.Fabric.ManagedIdentityKind">
      <Member Id="F:System.Fabric.ManagedIdentityKind.Cluster" />
      <Member Id="F:System.Fabric.ManagedIdentityKind.Host" />
      <Member Id="F:System.Fabric.ManagedIdentityKind.None" />
      <Member Id="F:System.Fabric.ManagedIdentityKind.Service" />
    </Type>
    <Type Name="System.Fabric.MemoryOwner" Id="T:System.Fabric.MemoryOwner">
      <Member Id="F:System.Fabric.MemoryOwner.ValidLength" />
      <Member Id="M:System.Fabric.MemoryOwner.#ctor(System.ArraySegment{System.Byte})" />
      <Member Id="M:System.Fabric.MemoryOwner.#ctor(System.Buffers.IMemoryOwner{System.Byte},System.Int32)" />
      <Member Id="M:System.Fabric.MemoryOwner.#ctor(System.Byte[],System.Int32)" />
      <Member Id="M:System.Fabric.MemoryOwner.Dispose" />
      <Member Id="M:System.Fabric.MemoryOwner.Dispose(System.Boolean)" />
      <Member Id="P:System.Fabric.MemoryOwner.Memory" />
    </Type>
    <Type Name="System.Fabric.MoveCost" Id="T:System.Fabric.MoveCost">
      <Member Id="F:System.Fabric.MoveCost.High" />
      <Member Id="F:System.Fabric.MoveCost.Low" />
      <Member Id="F:System.Fabric.MoveCost.Medium" />
      <Member Id="F:System.Fabric.MoveCost.VeryHigh" />
      <Member Id="F:System.Fabric.MoveCost.Zero" />
    </Type>
    <Type Name="System.Fabric.NamedPartitionInformation" Id="T:System.Fabric.NamedPartitionInformation">
      <Member Id="P:System.Fabric.NamedPartitionInformation.Name" />
    </Type>
    <Type Name="System.Fabric.NamedProperty" Id="T:System.Fabric.NamedProperty">
      <Member Id="M:System.Fabric.NamedProperty.GetValue``1" />
      <Member Id="P:System.Fabric.NamedProperty.Metadata" />
    </Type>
    <Type Name="System.Fabric.NamedPropertyMetadata" Id="T:System.Fabric.NamedPropertyMetadata">
      <Member Id="P:System.Fabric.NamedPropertyMetadata.CustomTypeId" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.LastModifiedUtc" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.Parent" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.PropertyName" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.SequenceNumber" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.TypeId" />
      <Member Id="P:System.Fabric.NamedPropertyMetadata.ValueSize" />
    </Type>
    <Type Name="System.Fabric.NameEnumerationResult" Id="T:System.Fabric.NameEnumerationResult">
      <Member Id="P:System.Fabric.NameEnumerationResult.HasMoreData" />
      <Member Id="P:System.Fabric.NameEnumerationResult.IsBestEffort" />
      <Member Id="P:System.Fabric.NameEnumerationResult.IsConsistent" />
      <Member Id="P:System.Fabric.NameEnumerationResult.IsFinished" />
      <Member Id="P:System.Fabric.NameEnumerationResult.IsValid" />
    </Type>
    <Type Name="System.Fabric.NetworkStatus" Id="T:System.Fabric.NetworkStatus">
      <Member Id="F:System.Fabric.NetworkStatus.Creating" />
      <Member Id="F:System.Fabric.NetworkStatus.Deleting" />
      <Member Id="F:System.Fabric.NetworkStatus.Failed" />
      <Member Id="F:System.Fabric.NetworkStatus.Invalid" />
      <Member Id="F:System.Fabric.NetworkStatus.Ready" />
      <Member Id="F:System.Fabric.NetworkStatus.Updating" />
    </Type>
    <Type Name="System.Fabric.NetworkStatusFilter" Id="T:System.Fabric.NetworkStatusFilter">
      <Member Id="F:System.Fabric.NetworkStatusFilter.All" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Creating" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Default" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Deleting" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Failed" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Ready" />
      <Member Id="F:System.Fabric.NetworkStatusFilter.Updating" />
    </Type>
    <Type Name="System.Fabric.NetworkType" Id="T:System.Fabric.NetworkType">
      <Member Id="F:System.Fabric.NetworkType.Federated" />
      <Member Id="F:System.Fabric.NetworkType.Invalid" />
      <Member Id="F:System.Fabric.NetworkType.Local" />
    </Type>
    <Type Name="System.Fabric.NodeConfiguration" Id="T:System.Fabric.NodeConfiguration">
      <Member Id="M:System.Fabric.NodeConfiguration.GetNodeConfiguration" />
    </Type>
    <Type Name="System.Fabric.NodeContext" Id="T:System.Fabric.NodeContext">
      <Member Id="M:System.Fabric.NodeContext.#ctor(System.String,System.Fabric.NodeId,System.Numerics.BigInteger,System.String,System.String)" />
      <Member Id="M:System.Fabric.NodeContext.GetDirectory(System.String)" />
      <Member Id="P:System.Fabric.NodeContext.IPAddressOrFQDN" />
      <Member Id="P:System.Fabric.NodeContext.NodeId" />
      <Member Id="P:System.Fabric.NodeContext.NodeInstanceId" />
      <Member Id="P:System.Fabric.NodeContext.NodeName" />
      <Member Id="P:System.Fabric.NodeContext.NodeType" />
    </Type>
    <Type Name="System.Fabric.NodeDeactivationIntent" Id="T:System.Fabric.NodeDeactivationIntent">
      <Member Id="F:System.Fabric.NodeDeactivationIntent.Invalid" />
      <Member Id="F:System.Fabric.NodeDeactivationIntent.Pause" />
      <Member Id="F:System.Fabric.NodeDeactivationIntent.RemoveData" />
      <Member Id="F:System.Fabric.NodeDeactivationIntent.RemoveNode" />
      <Member Id="F:System.Fabric.NodeDeactivationIntent.Restart" />
    </Type>
    <Type Name="System.Fabric.NodeDeactivationStatus" Id="T:System.Fabric.NodeDeactivationStatus">
      <Member Id="F:System.Fabric.NodeDeactivationStatus.Completed" />
      <Member Id="F:System.Fabric.NodeDeactivationStatus.None" />
      <Member Id="F:System.Fabric.NodeDeactivationStatus.SafetyCheckComplete" />
      <Member Id="F:System.Fabric.NodeDeactivationStatus.SafetyCheckInProgress" />
    </Type>
    <Type Name="System.Fabric.NodeDeactivationTaskType" Id="T:System.Fabric.NodeDeactivationTaskType">
      <Member Id="F:System.Fabric.NodeDeactivationTaskType.Client" />
      <Member Id="F:System.Fabric.NodeDeactivationTaskType.Infrastructure" />
      <Member Id="F:System.Fabric.NodeDeactivationTaskType.Invalid" />
      <Member Id="F:System.Fabric.NodeDeactivationTaskType.Repair" />
    </Type>
    <Type Name="System.Fabric.NodeId" Id="T:System.Fabric.NodeId">
      <Member Id="M:System.Fabric.NodeId.#ctor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <Member Id="M:System.Fabric.NodeId.Equals(System.Object)" />
      <Member Id="M:System.Fabric.NodeId.GetHashCode" />
      <Member Id="M:System.Fabric.NodeId.op_Equality(System.Fabric.NodeId,System.Fabric.NodeId)" />
      <Member Id="M:System.Fabric.NodeId.op_Inequality(System.Fabric.NodeId,System.Fabric.NodeId)" />
      <Member Id="M:System.Fabric.NodeId.ToString" />
      <Member Id="M:System.Fabric.NodeId.TryParse(System.String,System.Fabric.NodeId@)" />
      <Member Id="P:System.Fabric.NodeId.High" />
      <Member Id="P:System.Fabric.NodeId.Low" />
    </Type>
    <Type Name="System.Fabric.NodeTransitionProgress" Id="T:System.Fabric.NodeTransitionProgress">
      <Member Id="M:System.Fabric.NodeTransitionProgress.ToString" />
      <Member Id="P:System.Fabric.NodeTransitionProgress.Result" />
    </Type>
    <Type Name="System.Fabric.NodeTransitionType" Id="T:System.Fabric.NodeTransitionType">
      <Member Id="F:System.Fabric.NodeTransitionType.Invalid" />
      <Member Id="F:System.Fabric.NodeTransitionType.Start" />
      <Member Id="F:System.Fabric.NodeTransitionType.Stop" />
    </Type>
    <Type Name="System.Fabric.NodeUpgradePhase" Id="T:System.Fabric.NodeUpgradePhase">
      <Member Id="F:System.Fabric.NodeUpgradePhase.Invalid" />
      <Member Id="F:System.Fabric.NodeUpgradePhase.PostUpgradeSafetyCheck" />
      <Member Id="F:System.Fabric.NodeUpgradePhase.PreUpgradeSafetyCheck" />
      <Member Id="F:System.Fabric.NodeUpgradePhase.Upgrading" />
    </Type>
    <Type Name="System.Fabric.NodeUpgradeProgress" Id="T:System.Fabric.NodeUpgradeProgress">
      <Member Id="P:System.Fabric.NodeUpgradeProgress.NodeName" />
      <Member Id="P:System.Fabric.NodeUpgradeProgress.PendingSafetyChecks" />
      <Member Id="P:System.Fabric.NodeUpgradeProgress.UpgradeDuration" />
      <Member Id="P:System.Fabric.NodeUpgradeProgress.UpgradePhase" />
    </Type>
    <Type Name="System.Fabric.NoneSecurityCredentials" Id="T:System.Fabric.NoneSecurityCredentials">
      <Member Id="M:System.Fabric.NoneSecurityCredentials.#ctor" />
    </Type>
    <Type Name="System.Fabric.OperationData" Id="T:System.Fabric.OperationData">
      <Member Id="M:System.Fabric.OperationData.#ctor" />
      <Member Id="M:System.Fabric.OperationData.#ctor(System.ArraySegment{System.Byte})" />
      <Member Id="M:System.Fabric.OperationData.#ctor(System.Byte[])" />
      <Member Id="M:System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})" />
      <Member Id="M:System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})" />
      <Member Id="M:System.Fabric.OperationData.AsMemoryManagedOperationData" />
      <Member Id="M:System.Fabric.OperationData.CreateMemoryManagedOperationData(System.Collections.Generic.IEnumerable{System.Fabric.MemoryOwner})" />
      <Member Id="M:System.Fabric.OperationData.CreateMemoryManagedOperationData(System.Fabric.MemoryOwner)" />
    </Type>
    <Type Name="System.Fabric.OperationType" Id="T:System.Fabric.OperationType">
      <Member Id="F:System.Fabric.OperationType.AtomicGroupOperation" />
      <Member Id="F:System.Fabric.OperationType.CommitAtomicGroup" />
      <Member Id="F:System.Fabric.OperationType.CreateAtomicGroup" />
      <Member Id="F:System.Fabric.OperationType.EndOfStream" />
      <Member Id="F:System.Fabric.OperationType.HasAtomicGroupMask" />
      <Member Id="F:System.Fabric.OperationType.Invalid" />
      <Member Id="F:System.Fabric.OperationType.Normal" />
      <Member Id="F:System.Fabric.OperationType.RollbackAtomicGroup" />
    </Type>
    <Type Name="System.Fabric.Ordering" Id="T:System.Fabric.Ordering">
      <Member Id="F:System.Fabric.Ordering.Asc" />
      <Member Id="F:System.Fabric.Ordering.Desc" />
    </Type>
    <Type Name="System.Fabric.OrderingUtility" Id="T:System.Fabric.OrderingUtility">
      <Member Id="M:System.Fabric.OrderingUtility.FromString(System.String)" />
      <Member Id="M:System.Fabric.OrderingUtility.GetString(System.Fabric.Ordering)" />
    </Type>
    <Type Name="System.Fabric.OutOfDiskSpaceException" Id="T:System.Fabric.OutOfDiskSpaceException">
      <Member Id="M:System.Fabric.OutOfDiskSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.OutOfDiskSpaceException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.OutOfDiskSpaceException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.PackageAddedEventArgs`1" Id="T:System.Fabric.PackageAddedEventArgs`1">
      <Member Id="M:System.Fabric.PackageAddedEventArgs`1.#ctor" />
      <Member Id="P:System.Fabric.PackageAddedEventArgs`1.Package" />
    </Type>
    <Type Name="System.Fabric.PackageModifiedEventArgs`1" Id="T:System.Fabric.PackageModifiedEventArgs`1">
      <Member Id="M:System.Fabric.PackageModifiedEventArgs`1.#ctor" />
      <Member Id="P:System.Fabric.PackageModifiedEventArgs`1.NewPackage" />
      <Member Id="P:System.Fabric.PackageModifiedEventArgs`1.OldPackage" />
    </Type>
    <Type Name="System.Fabric.PackageRemovedEventArgs`1" Id="T:System.Fabric.PackageRemovedEventArgs`1">
      <Member Id="M:System.Fabric.PackageRemovedEventArgs`1.#ctor" />
      <Member Id="P:System.Fabric.PackageRemovedEventArgs`1.Package" />
    </Type>
    <Type Name="System.Fabric.PackageSharingPolicy" Id="T:System.Fabric.PackageSharingPolicy">
      <Member Id="M:System.Fabric.PackageSharingPolicy.#ctor(System.String,System.Fabric.PackageSharingPolicyScope)" />
      <Member Id="P:System.Fabric.PackageSharingPolicy.PackageName" />
      <Member Id="P:System.Fabric.PackageSharingPolicy.SharingScope" />
    </Type>
    <Type Name="System.Fabric.PackageSharingPolicyList" Id="T:System.Fabric.PackageSharingPolicyList">
      <Member Id="M:System.Fabric.PackageSharingPolicyList.#ctor" />
      <Member Id="M:System.Fabric.PackageSharingPolicyList.#ctor(System.Collections.Generic.IList{System.Fabric.PackageSharingPolicy})" />
      <Member Id="P:System.Fabric.PackageSharingPolicyList.PackageSharingPolicies" />
    </Type>
    <Type Name="System.Fabric.PackageSharingPolicyScope" Id="T:System.Fabric.PackageSharingPolicyScope">
      <Member Id="F:System.Fabric.PackageSharingPolicyScope.All" />
      <Member Id="F:System.Fabric.PackageSharingPolicyScope.Code" />
      <Member Id="F:System.Fabric.PackageSharingPolicyScope.Config" />
      <Member Id="F:System.Fabric.PackageSharingPolicyScope.Data" />
      <Member Id="F:System.Fabric.PackageSharingPolicyScope.None" />
    </Type>
    <Type Name="System.Fabric.PartitionAccessStatus" Id="T:System.Fabric.PartitionAccessStatus">
      <Member Id="F:System.Fabric.PartitionAccessStatus.Granted" />
      <Member Id="F:System.Fabric.PartitionAccessStatus.Invalid" />
      <Member Id="F:System.Fabric.PartitionAccessStatus.NotPrimary" />
      <Member Id="F:System.Fabric.PartitionAccessStatus.NoWriteQuorum" />
      <Member Id="F:System.Fabric.PartitionAccessStatus.ReconfigurationPending" />
    </Type>
    <Type Name="System.Fabric.PartitionDataLossProgress" Id="T:System.Fabric.PartitionDataLossProgress">
      <Member Id="M:System.Fabric.PartitionDataLossProgress.ToString" />
      <Member Id="P:System.Fabric.PartitionDataLossProgress.Result" />
    </Type>
    <Type Name="System.Fabric.PartitionQuorumLossProgress" Id="T:System.Fabric.PartitionQuorumLossProgress">
      <Member Id="M:System.Fabric.PartitionQuorumLossProgress.ToString" />
      <Member Id="P:System.Fabric.PartitionQuorumLossProgress.Result" />
    </Type>
    <Type Name="System.Fabric.PartitionRestartProgress" Id="T:System.Fabric.PartitionRestartProgress">
      <Member Id="M:System.Fabric.PartitionRestartProgress.ToString" />
      <Member Id="P:System.Fabric.PartitionRestartProgress.Result" />
    </Type>
    <Type Name="System.Fabric.PartitionSafetyCheck" Id="T:System.Fabric.PartitionSafetyCheck">
      <Member Id="P:System.Fabric.PartitionSafetyCheck.PartitionId" />
    </Type>
    <Type Name="System.Fabric.PartitionSelector" Id="T:System.Fabric.PartitionSelector">
      <Member Id="M:System.Fabric.PartitionSelector.Equals(System.Object)" />
      <Member Id="M:System.Fabric.PartitionSelector.GetHashCode" />
      <Member Id="M:System.Fabric.PartitionSelector.PartitionIdOf(System.Uri,System.Guid)" />
      <Member Id="M:System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.Int64)" />
      <Member Id="M:System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.PartitionSelector.RandomOf(System.Uri)" />
      <Member Id="M:System.Fabric.PartitionSelector.SingletonOf(System.Uri)" />
      <Member Id="M:System.Fabric.PartitionSelector.ToString" />
    </Type>
    <Type Name="System.Fabric.PartitionUpgradeSafetyCheck" Id="T:System.Fabric.PartitionUpgradeSafetyCheck">
      <Member Id="P:System.Fabric.PartitionUpgradeSafetyCheck.PartitionId" />
    </Type>
    <Type Name="System.Fabric.ProgressUnitType" Id="T:System.Fabric.ProgressUnitType">
      <Member Id="F:System.Fabric.ProgressUnitType.Bytes" />
      <Member Id="F:System.Fabric.ProgressUnitType.Files" />
      <Member Id="F:System.Fabric.ProgressUnitType.Invalid" />
      <Member Id="F:System.Fabric.ProgressUnitType.ServiceSubPackages" />
    </Type>
    <Type Name="System.Fabric.PropertyBatchOperation" Id="T:System.Fabric.PropertyBatchOperation">
      <Member Id="M:System.Fabric.PropertyBatchOperation.#ctor" />
      <Member Id="M:System.Fabric.PropertyBatchOperation.#ctor(System.String,System.Fabric.PropertyBatchOperationKind)" />
      <Member Id="P:System.Fabric.PropertyBatchOperation.Kind" />
      <Member Id="P:System.Fabric.PropertyBatchOperation.PropertyName" />
    </Type>
    <Type Name="System.Fabric.PropertyBatchOperationKind" Id="T:System.Fabric.PropertyBatchOperationKind">
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.CheckExists" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.CheckSequence" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.CheckValue" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.Delete" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.Get" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.Invalid" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.Put" />
      <Member Id="F:System.Fabric.PropertyBatchOperationKind.PutCustom" />
    </Type>
    <Type Name="System.Fabric.PropertyBatchResult" Id="T:System.Fabric.PropertyBatchResult">
      <Member Id="M:System.Fabric.PropertyBatchResult.GetProperty(System.Int32)" />
      <Member Id="P:System.Fabric.PropertyBatchResult.FailedOperationException" />
      <Member Id="P:System.Fabric.PropertyBatchResult.FailedOperationIndex" />
    </Type>
    <Type Name="System.Fabric.PropertyEnumerationResult" Id="T:System.Fabric.PropertyEnumerationResult">
      <Member Id="P:System.Fabric.PropertyEnumerationResult.HasMoreData" />
      <Member Id="P:System.Fabric.PropertyEnumerationResult.IsBestEffort" />
      <Member Id="P:System.Fabric.PropertyEnumerationResult.IsConsistent" />
      <Member Id="P:System.Fabric.PropertyEnumerationResult.IsFinished" />
      <Member Id="P:System.Fabric.PropertyEnumerationResult.IsValid" />
    </Type>
    <Type Name="System.Fabric.PropertyTypeId" Id="T:System.Fabric.PropertyTypeId">
      <Member Id="F:System.Fabric.PropertyTypeId.Binary" />
      <Member Id="F:System.Fabric.PropertyTypeId.Double" />
      <Member Id="F:System.Fabric.PropertyTypeId.Guid" />
      <Member Id="F:System.Fabric.PropertyTypeId.Int64" />
      <Member Id="F:System.Fabric.PropertyTypeId.Invalid" />
      <Member Id="F:System.Fabric.PropertyTypeId.String" />
    </Type>
    <Type Name="System.Fabric.ProtectionLevel" Id="T:System.Fabric.ProtectionLevel">
      <Member Id="F:System.Fabric.ProtectionLevel.EncryptAndSign" />
      <Member Id="F:System.Fabric.ProtectionLevel.None" />
      <Member Id="F:System.Fabric.ProtectionLevel.Sign" />
    </Type>
    <Type Name="System.Fabric.PutCustomPropertyOperation" Id="T:System.Fabric.PutCustomPropertyOperation">
      <Member Id="M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Byte[],System.String)" />
      <Member Id="M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Double,System.String)" />
      <Member Id="M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Guid,System.String)" />
      <Member Id="M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Int64,System.String)" />
      <Member Id="M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:System.Fabric.PutCustomPropertyOperation.CustomTypeId" />
      <Member Id="P:System.Fabric.PutCustomPropertyOperation.PropertyType" />
      <Member Id="P:System.Fabric.PutCustomPropertyOperation.PropertyValue" />
    </Type>
    <Type Name="System.Fabric.PutPropertyOperation" Id="T:System.Fabric.PutPropertyOperation">
      <Member Id="M:System.Fabric.PutPropertyOperation.#ctor(System.String,System.Byte[])" />
      <Member Id="M:System.Fabric.PutPropertyOperation.#ctor(System.String,System.Double)" />
      <Member Id="M:System.Fabric.PutPropertyOperation.#ctor(System.String,System.Guid)" />
      <Member Id="M:System.Fabric.PutPropertyOperation.#ctor(System.String,System.Int64)" />
      <Member Id="M:System.Fabric.PutPropertyOperation.#ctor(System.String,System.String)" />
      <Member Id="P:System.Fabric.PutPropertyOperation.PropertyType" />
      <Member Id="P:System.Fabric.PutPropertyOperation.PropertyValue" />
    </Type>
    <Type Name="System.Fabric.QuorumLossMode" Id="T:System.Fabric.QuorumLossMode">
      <Member Id="F:System.Fabric.QuorumLossMode.AllReplicas" />
      <Member Id="F:System.Fabric.QuorumLossMode.Invalid" />
      <Member Id="F:System.Fabric.QuorumLossMode.QuorumReplicas" />
    </Type>
    <Type Name="System.Fabric.ReconfigurationInformation" Id="T:System.Fabric.ReconfigurationInformation">
      <Member Id="M:System.Fabric.ReconfigurationInformation.#ctor" />
      <Member Id="M:System.Fabric.ReconfigurationInformation.#ctor(System.Fabric.ReplicaRole,System.Fabric.ReconfigurationPhase,System.Fabric.ReconfigurationType,System.DateTime)" />
      <Member Id="P:System.Fabric.ReconfigurationInformation.PreviousConfigurationRole" />
      <Member Id="P:System.Fabric.ReconfigurationInformation.ReconfigurationPhase" />
      <Member Id="P:System.Fabric.ReconfigurationInformation.ReconfigurationStartTimeUtc" />
      <Member Id="P:System.Fabric.ReconfigurationInformation.ReconfigurationType" />
    </Type>
    <Type Name="System.Fabric.ReconfigurationPhase" Id="T:System.Fabric.ReconfigurationPhase">
      <Member Id="F:System.Fabric.ReconfigurationPhase.AbortPhaseZero" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.None" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Phase0" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Phase1" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Phase2" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Phase3" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Phase4" />
      <Member Id="F:System.Fabric.ReconfigurationPhase.Unknown" />
    </Type>
    <Type Name="System.Fabric.ReconfigurationType" Id="T:System.Fabric.ReconfigurationType">
      <Member Id="F:System.Fabric.ReconfigurationType.Failover" />
      <Member Id="F:System.Fabric.ReconfigurationType.None" />
      <Member Id="F:System.Fabric.ReconfigurationType.Other" />
      <Member Id="F:System.Fabric.ReconfigurationType.SwapPrimary" />
      <Member Id="F:System.Fabric.ReconfigurationType.Unknown" />
    </Type>
    <Type Name="System.Fabric.ReplicaInformation" Id="T:System.Fabric.ReplicaInformation">
      <Member Id="M:System.Fabric.ReplicaInformation.#ctor" />
      <Member Id="P:System.Fabric.ReplicaInformation.CatchUpCapability" />
      <Member Id="P:System.Fabric.ReplicaInformation.CurrentProgress" />
      <Member Id="P:System.Fabric.ReplicaInformation.Id" />
      <Member Id="P:System.Fabric.ReplicaInformation.MustCatchup" />
      <Member Id="P:System.Fabric.ReplicaInformation.ReplicatorAddress" />
      <Member Id="P:System.Fabric.ReplicaInformation.Role" />
      <Member Id="P:System.Fabric.ReplicaInformation.Status" />
    </Type>
    <Type Name="System.Fabric.ReplicaOpenMode" Id="T:System.Fabric.ReplicaOpenMode">
      <Member Id="F:System.Fabric.ReplicaOpenMode.Existing" />
      <Member Id="F:System.Fabric.ReplicaOpenMode.Invalid" />
      <Member Id="F:System.Fabric.ReplicaOpenMode.New" />
    </Type>
    <Type Name="System.Fabric.ReplicaRole" Id="T:System.Fabric.ReplicaRole">
      <Member Id="F:System.Fabric.ReplicaRole.ActiveAuxiliary" />
      <Member Id="F:System.Fabric.ReplicaRole.ActiveSecondary" />
      <Member Id="F:System.Fabric.ReplicaRole.IdleAuxiliary" />
      <Member Id="F:System.Fabric.ReplicaRole.IdleSecondary" />
      <Member Id="F:System.Fabric.ReplicaRole.None" />
      <Member Id="F:System.Fabric.ReplicaRole.Primary" />
      <Member Id="F:System.Fabric.ReplicaRole.PrimaryAuxiliary" />
      <Member Id="F:System.Fabric.ReplicaRole.Unknown" />
    </Type>
    <Type Name="System.Fabric.ReplicaSelector" Id="T:System.Fabric.ReplicaSelector">
      <Member Id="M:System.Fabric.ReplicaSelector.Equals(System.Object)" />
      <Member Id="M:System.Fabric.ReplicaSelector.GetHashCode" />
      <Member Id="M:System.Fabric.ReplicaSelector.PrimaryOf(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.ReplicaSelector.RandomOf(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.ReplicaSelector.RandomSecondaryOf(System.Fabric.PartitionSelector)" />
      <Member Id="M:System.Fabric.ReplicaSelector.ReplicaIdOf(System.Fabric.PartitionSelector,System.Int64)" />
      <Member Id="M:System.Fabric.ReplicaSelector.ToString" />
      <Member Id="P:System.Fabric.ReplicaSelector.PartitionSelector" />
    </Type>
    <Type Name="System.Fabric.ReplicaSetConfiguration" Id="T:System.Fabric.ReplicaSetConfiguration">
      <Member Id="M:System.Fabric.ReplicaSetConfiguration.#ctor" />
      <Member Id="P:System.Fabric.ReplicaSetConfiguration.Replicas" />
      <Member Id="P:System.Fabric.ReplicaSetConfiguration.WriteQuorum" />
    </Type>
    <Type Name="System.Fabric.ReplicaSetQuorumMode" Id="T:System.Fabric.ReplicaSetQuorumMode">
      <Member Id="F:System.Fabric.ReplicaSetQuorumMode.Invalid" />
      <Member Id="F:System.Fabric.ReplicaSetQuorumMode.QuorumAll" />
      <Member Id="F:System.Fabric.ReplicaSetQuorumMode.WriteQuorum" />
    </Type>
    <Type Name="System.Fabric.ReplicaStatus" Id="T:System.Fabric.ReplicaStatus">
      <Member Id="F:System.Fabric.ReplicaStatus.Down" />
      <Member Id="F:System.Fabric.ReplicaStatus.Invalid" />
      <Member Id="F:System.Fabric.ReplicaStatus.Up" />
    </Type>
    <Type Name="System.Fabric.ReplicatorSettings" Id="T:System.Fabric.ReplicatorSettings">
      <Member Id="M:System.Fabric.ReplicatorSettings.#ctor" />
      <Member Id="M:System.Fabric.ReplicatorSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)" />
      <Member Id="P:System.Fabric.ReplicatorSettings.BatchAcknowledgementInterval" />
      <Member Id="P:System.Fabric.ReplicatorSettings.InitialCopyQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.InitialPrimaryReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.InitialReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.InitialSecondaryReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxCopyQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueMemorySize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxPrimaryReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxReplicationMessageSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxReplicationQueueMemorySize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueMemorySize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.MaxSecondaryReplicationQueueSize" />
      <Member Id="P:System.Fabric.ReplicatorSettings.PrimaryWaitForPendingQuorumsTimeout" />
      <Member Id="P:System.Fabric.ReplicatorSettings.ReplicatorAddress" />
      <Member Id="P:System.Fabric.ReplicatorSettings.ReplicatorListenAddress" />
      <Member Id="P:System.Fabric.ReplicatorSettings.ReplicatorPublishAddress" />
      <Member Id="P:System.Fabric.ReplicatorSettings.RequireServiceAck" />
      <Member Id="P:System.Fabric.ReplicatorSettings.RetryInterval" />
      <Member Id="P:System.Fabric.ReplicatorSettings.SecondaryClearAcknowledgedOperations" />
      <Member Id="P:System.Fabric.ReplicatorSettings.SecurityCredentials" />
      <Member Id="P:System.Fabric.ReplicatorSettings.UseStreamFaultsAndEndOfStreamOperationAck" />
    </Type>
    <Type Name="System.Fabric.ResolvedServiceEndpoint" Id="T:System.Fabric.ResolvedServiceEndpoint">
      <Member Id="P:System.Fabric.ResolvedServiceEndpoint.Address" />
      <Member Id="P:System.Fabric.ResolvedServiceEndpoint.Role" />
    </Type>
    <Type Name="System.Fabric.ResolvedServicePartition" Id="T:System.Fabric.ResolvedServicePartition">
      <Member Id="M:System.Fabric.ResolvedServicePartition.CompareVersion(System.Fabric.ResolvedServicePartition)" />
      <Member Id="M:System.Fabric.ResolvedServicePartition.GetEndpoint" />
      <Member Id="P:System.Fabric.ResolvedServicePartition.Endpoints" />
      <Member Id="P:System.Fabric.ResolvedServicePartition.Info" />
      <Member Id="P:System.Fabric.ResolvedServicePartition.ServiceName" />
    </Type>
    <Type Name="System.Fabric.RestartPartitionMode" Id="T:System.Fabric.RestartPartitionMode">
      <Member Id="F:System.Fabric.RestartPartitionMode.AllReplicasOrInstances" />
      <Member Id="F:System.Fabric.RestartPartitionMode.Invalid" />
      <Member Id="F:System.Fabric.RestartPartitionMode.OnlyActiveSecondaries" />
    </Type>
    <Type Name="System.Fabric.RestoreSettings" Id="T:System.Fabric.RestoreSettings">
      <Member Id="M:System.Fabric.RestoreSettings.#ctor" />
      <Member Id="M:System.Fabric.RestoreSettings.#ctor(System.Boolean)" />
      <Member Id="M:System.Fabric.RestoreSettings.#ctor(System.Boolean,System.Boolean)" />
      <Member Id="P:System.Fabric.RestoreSettings.EnableLsnCheck" />
      <Member Id="P:System.Fabric.RestoreSettings.InlineReopen" />
    </Type>
    <Type Name="System.Fabric.RollingUpgradeMode" Id="T:System.Fabric.RollingUpgradeMode">
      <Member Id="F:System.Fabric.RollingUpgradeMode.Invalid" />
      <Member Id="F:System.Fabric.RollingUpgradeMode.Monitored" />
      <Member Id="F:System.Fabric.RollingUpgradeMode.UnmonitoredAuto" />
      <Member Id="F:System.Fabric.RollingUpgradeMode.UnmonitoredDeferred" />
      <Member Id="F:System.Fabric.RollingUpgradeMode.UnmonitoredManual" />
    </Type>
    <Type Name="System.Fabric.SafetyCheck" Id="T:System.Fabric.SafetyCheck">
      <Member Id="M:System.Fabric.SafetyCheck.#ctor(System.Fabric.SafetyCheckKind)" />
      <Member Id="P:System.Fabric.SafetyCheck.Kind" />
    </Type>
    <Type Name="System.Fabric.SafetyCheckKind" Id="T:System.Fabric.SafetyCheckKind">
      <Member Id="F:System.Fabric.SafetyCheckKind.EnsureAvailability" />
      <Member Id="F:System.Fabric.SafetyCheckKind.EnsurePartitionQuorum" />
      <Member Id="F:System.Fabric.SafetyCheckKind.EnsureSeedNodeQuorum" />
      <Member Id="F:System.Fabric.SafetyCheckKind.Invalid" />
      <Member Id="F:System.Fabric.SafetyCheckKind.WaitForInBuildReplica" />
      <Member Id="F:System.Fabric.SafetyCheckKind.WaitForPrimaryPlacement" />
      <Member Id="F:System.Fabric.SafetyCheckKind.WaitForPrimarySwap" />
      <Member Id="F:System.Fabric.SafetyCheckKind.WaitForReconfiguration" />
    </Type>
    <Type Name="System.Fabric.SecurityCredentials" Id="T:System.Fabric.SecurityCredentials">
      <Member Id="M:System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)" />
      <Member Id="P:System.Fabric.SecurityCredentials.CredentialType" />
    </Type>
    <Type Name="System.Fabric.SeedNodeSafetyCheck" Id="T:System.Fabric.SeedNodeSafetyCheck" />
    <Type Name="System.Fabric.SeedNodeUpgradeSafetyCheck" Id="T:System.Fabric.SeedNodeUpgradeSafetyCheck" />
    <Type Name="System.Fabric.SelectedPartition" Id="T:System.Fabric.SelectedPartition">
      <Member Id="F:System.Fabric.SelectedPartition.None" />
      <Member Id="M:System.Fabric.SelectedPartition.Equals(System.Fabric.SelectedPartition)" />
      <Member Id="M:System.Fabric.SelectedPartition.ToString" />
      <Member Id="P:System.Fabric.SelectedPartition.PartitionId" />
      <Member Id="P:System.Fabric.SelectedPartition.ServiceName" />
    </Type>
    <Type Name="System.Fabric.SelectedReplica" Id="T:System.Fabric.SelectedReplica">
      <Member Id="F:System.Fabric.SelectedReplica.None" />
      <Member Id="M:System.Fabric.SelectedReplica.Equals(System.Fabric.SelectedReplica)" />
      <Member Id="M:System.Fabric.SelectedReplica.ToString" />
      <Member Id="P:System.Fabric.SelectedReplica.ReplicaOrInstanceId" />
      <Member Id="P:System.Fabric.SelectedReplica.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.ServiceContext" Id="T:System.Fabric.ServiceContext">
      <Member Id="M:System.Fabric.ServiceContext.#ctor(System.Fabric.NodeContext,System.Fabric.ICodePackageActivationContext,System.String,System.Uri,System.Byte[],System.Guid,System.Int64)" />
      <Member Id="P:System.Fabric.ServiceContext.CodePackageActivationContext" />
      <Member Id="P:System.Fabric.ServiceContext.InitializationData" />
      <Member Id="P:System.Fabric.ServiceContext.ListenAddress" />
      <Member Id="P:System.Fabric.ServiceContext.NodeContext" />
      <Member Id="P:System.Fabric.ServiceContext.PartitionId" />
      <Member Id="P:System.Fabric.ServiceContext.PublishAddress" />
      <Member Id="P:System.Fabric.ServiceContext.ReplicaOrInstanceId" />
      <Member Id="P:System.Fabric.ServiceContext.ServiceName" />
      <Member Id="P:System.Fabric.ServiceContext.ServiceTypeName" />
      <Member Id="P:System.Fabric.ServiceContext.TraceId" />
    </Type>
    <Type Name="System.Fabric.ServiceEndpointRole" Id="T:System.Fabric.ServiceEndpointRole">
      <Member Id="F:System.Fabric.ServiceEndpointRole.Invalid" />
      <Member Id="F:System.Fabric.ServiceEndpointRole.StatefulAuxiliary" />
      <Member Id="F:System.Fabric.ServiceEndpointRole.StatefulPrimary" />
      <Member Id="F:System.Fabric.ServiceEndpointRole.StatefulPrimaryAuxiliary" />
      <Member Id="F:System.Fabric.ServiceEndpointRole.StatefulSecondary" />
      <Member Id="F:System.Fabric.ServiceEndpointRole.Stateless" />
    </Type>
    <Type Name="System.Fabric.ServiceEndpointsVersion" Id="T:System.Fabric.ServiceEndpointsVersion">
      <Member Id="M:System.Fabric.ServiceEndpointsVersion.Compare(System.Fabric.ServiceEndpointsVersion)" />
    </Type>
    <Type Name="System.Fabric.ServiceGroupFactory" Id="T:System.Fabric.ServiceGroupFactory">
      <Member Id="M:System.Fabric.ServiceGroupFactory.#ctor" />
      <Member Id="M:System.Fabric.ServiceGroupFactory.AddServiceType(System.String,System.Type)" />
      <Member Id="M:System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)" />
      <Member Id="M:System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)" />
      <Member Id="M:System.Fabric.ServiceGroupFactory.RemoveServiceFactory(System.String)" />
    </Type>
    <Type Name="System.Fabric.ServiceInitializationParameters" Id="T:System.Fabric.ServiceInitializationParameters">
      <Member Id="P:System.Fabric.ServiceInitializationParameters.CodePackageActivationContext" />
      <Member Id="P:System.Fabric.ServiceInitializationParameters.InitializationData" />
      <Member Id="P:System.Fabric.ServiceInitializationParameters.PartitionId" />
      <Member Id="P:System.Fabric.ServiceInitializationParameters.ServiceName" />
      <Member Id="P:System.Fabric.ServiceInitializationParameters.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.ServiceNotification" Id="T:System.Fabric.ServiceNotification">
      <Member Id="P:System.Fabric.ServiceNotification.Endpoints" />
      <Member Id="P:System.Fabric.ServiceNotification.PartitionId" />
      <Member Id="P:System.Fabric.ServiceNotification.PartitionInfo" />
      <Member Id="P:System.Fabric.ServiceNotification.ServiceName" />
      <Member Id="P:System.Fabric.ServiceNotification.Version" />
    </Type>
    <Type Name="System.Fabric.ServicePartitionInformation" Id="T:System.Fabric.ServicePartitionInformation">
      <Member Id="P:System.Fabric.ServicePartitionInformation.Id" />
      <Member Id="P:System.Fabric.ServicePartitionInformation.Kind" />
    </Type>
    <Type Name="System.Fabric.ServicePartitionKind" Id="T:System.Fabric.ServicePartitionKind">
      <Member Id="F:System.Fabric.ServicePartitionKind.Int64Range" />
      <Member Id="F:System.Fabric.ServicePartitionKind.Invalid" />
      <Member Id="F:System.Fabric.ServicePartitionKind.Named" />
      <Member Id="F:System.Fabric.ServicePartitionKind.Singleton" />
    </Type>
    <Type Name="System.Fabric.ServicePartitionResolutionChange" Id="T:System.Fabric.ServicePartitionResolutionChange">
      <Member Id="P:System.Fabric.ServicePartitionResolutionChange.Exception" />
      <Member Id="P:System.Fabric.ServicePartitionResolutionChange.HasException" />
      <Member Id="P:System.Fabric.ServicePartitionResolutionChange.Result" />
    </Type>
    <Type Name="System.Fabric.ServicePartitionResolutionChangeHandler" Id="T:System.Fabric.ServicePartitionResolutionChangeHandler" />
    <Type Name="System.Fabric.SingletonPartitionInformation" Id="T:System.Fabric.SingletonPartitionInformation">
      <Member Id="M:System.Fabric.SingletonPartitionInformation.#ctor" />
    </Type>
    <Type Name="System.Fabric.StatefulServiceContext" Id="T:System.Fabric.StatefulServiceContext">
      <Member Id="M:System.Fabric.StatefulServiceContext.#ctor(System.Fabric.NodeContext,System.Fabric.ICodePackageActivationContext,System.String,System.Uri,System.Byte[],System.Guid,System.Int64)" />
      <Member Id="P:System.Fabric.StatefulServiceContext.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.StatefulServiceInitializationParameters" Id="T:System.Fabric.StatefulServiceInitializationParameters">
      <Member Id="P:System.Fabric.StatefulServiceInitializationParameters.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.StatelessServiceContext" Id="T:System.Fabric.StatelessServiceContext">
      <Member Id="M:System.Fabric.StatelessServiceContext.#ctor(System.Fabric.NodeContext,System.Fabric.ICodePackageActivationContext,System.String,System.Uri,System.Byte[],System.Guid,System.Int64)" />
      <Member Id="P:System.Fabric.StatelessServiceContext.InstanceId" />
    </Type>
    <Type Name="System.Fabric.StatelessServiceInitializationParameters" Id="T:System.Fabric.StatelessServiceInitializationParameters">
      <Member Id="P:System.Fabric.StatelessServiceInitializationParameters.InstanceId" />
    </Type>
    <Type Name="System.Fabric.StoreBackupInfo" Id="T:System.Fabric.StoreBackupInfo">
      <Member Id="M:System.Fabric.StoreBackupInfo.#ctor" />
      <Member Id="M:System.Fabric.StoreBackupInfo.ToString" />
      <Member Id="P:System.Fabric.StoreBackupInfo.BackupChainId" />
      <Member Id="P:System.Fabric.StoreBackupInfo.BackupFolder" />
      <Member Id="P:System.Fabric.StoreBackupInfo.BackupIndex" />
      <Member Id="P:System.Fabric.StoreBackupInfo.BackupOption" />
    </Type>
    <Type Name="System.Fabric.StoreBackupOption" Id="T:System.Fabric.StoreBackupOption">
      <Member Id="F:System.Fabric.StoreBackupOption.Full" />
      <Member Id="F:System.Fabric.StoreBackupOption.Incremental" />
      <Member Id="F:System.Fabric.StoreBackupOption.TruncateLogsOnly" />
    </Type>
    <Type Name="System.Fabric.TestCommandProgress" Id="T:System.Fabric.TestCommandProgress">
      <Member Id="M:System.Fabric.TestCommandProgress.#ctor" />
      <Member Id="M:System.Fabric.TestCommandProgress.ToString" />
      <Member Id="P:System.Fabric.TestCommandProgress.State" />
    </Type>
    <Type Name="System.Fabric.TestCommandProgressState" Id="T:System.Fabric.TestCommandProgressState">
      <Member Id="F:System.Fabric.TestCommandProgressState.Cancelled" />
      <Member Id="F:System.Fabric.TestCommandProgressState.Completed" />
      <Member Id="F:System.Fabric.TestCommandProgressState.Faulted" />
      <Member Id="F:System.Fabric.TestCommandProgressState.ForceCancelled" />
      <Member Id="F:System.Fabric.TestCommandProgressState.Invalid" />
      <Member Id="F:System.Fabric.TestCommandProgressState.RollingBack" />
      <Member Id="F:System.Fabric.TestCommandProgressState.Running" />
    </Type>
    <Type Name="System.Fabric.TestCommandType" Id="T:System.Fabric.TestCommandType">
      <Member Id="F:System.Fabric.TestCommandType.Invalid" />
      <Member Id="F:System.Fabric.TestCommandType.NodeTransition" />
      <Member Id="F:System.Fabric.TestCommandType.PartitionDataLoss" />
      <Member Id="F:System.Fabric.TestCommandType.PartitionQuorumLoss" />
      <Member Id="F:System.Fabric.TestCommandType.PartitionRestart" />
    </Type>
    <Type Name="System.Fabric.TokenServiceMetadata" Id="T:System.Fabric.TokenServiceMetadata">
      <Member Id="M:System.Fabric.TokenServiceMetadata.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:System.Fabric.TokenServiceMetadata.Metadata" />
      <Member Id="P:System.Fabric.TokenServiceMetadata.ServiceDnsName" />
      <Member Id="P:System.Fabric.TokenServiceMetadata.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Transaction" Id="T:System.Fabric.Transaction">
      <Member Id="M:System.Fabric.Transaction.CommitAsync" />
      <Member Id="M:System.Fabric.Transaction.CommitAsync(System.TimeSpan)" />
      <Member Id="M:System.Fabric.Transaction.CommitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.Transaction.OnDispose" />
      <Member Id="M:System.Fabric.Transaction.Rollback" />
      <Member Id="M:System.Fabric.Transaction.ThrowIfDisposed" />
    </Type>
    <Type Name="System.Fabric.TransactionBase" Id="T:System.Fabric.TransactionBase">
      <Member Id="M:System.Fabric.TransactionBase.Dispose" />
      <Member Id="M:System.Fabric.TransactionBase.Finalize" />
      <Member Id="M:System.Fabric.TransactionBase.IsDisposed" />
      <Member Id="M:System.Fabric.TransactionBase.OnDispose" />
      <Member Id="P:System.Fabric.TransactionBase.Id" />
      <Member Id="P:System.Fabric.TransactionBase.IsolationLevel" />
    </Type>
    <Type Name="System.Fabric.TransactionFaultedException" Id="T:System.Fabric.TransactionFaultedException">
      <Member Id="M:System.Fabric.TransactionFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Fabric.TransactionFaultedException.#ctor(System.String)" />
      <Member Id="M:System.Fabric.TransactionFaultedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Fabric.TransactionIsolationLevel" Id="T:System.Fabric.TransactionIsolationLevel">
      <Member Id="F:System.Fabric.TransactionIsolationLevel.Default" />
      <Member Id="F:System.Fabric.TransactionIsolationLevel.ReadCommitted" />
      <Member Id="F:System.Fabric.TransactionIsolationLevel.ReadUncommitted" />
      <Member Id="F:System.Fabric.TransactionIsolationLevel.RepeatableRead" />
      <Member Id="F:System.Fabric.TransactionIsolationLevel.Serializable" />
      <Member Id="F:System.Fabric.TransactionIsolationLevel.Snapshot" />
    </Type>
    <Type Name="System.Fabric.UnknownSafetyCheck" Id="T:System.Fabric.UnknownSafetyCheck" />
    <Type Name="System.Fabric.UnknownUpgradeSafetyCheck" Id="T:System.Fabric.UnknownUpgradeSafetyCheck" />
    <Type Name="System.Fabric.UpgradeDomainProgress" Id="T:System.Fabric.UpgradeDomainProgress" />
    <Type Name="System.Fabric.UpgradeDomainState" Id="T:System.Fabric.UpgradeDomainState">
      <Member Id="F:System.Fabric.UpgradeDomainState.Completed" />
      <Member Id="F:System.Fabric.UpgradeDomainState.InProgress" />
      <Member Id="F:System.Fabric.UpgradeDomainState.Invalid" />
      <Member Id="F:System.Fabric.UpgradeDomainState.Pending" />
    </Type>
    <Type Name="System.Fabric.UpgradeDomainStatus" Id="T:System.Fabric.UpgradeDomainStatus">
      <Member Id="M:System.Fabric.UpgradeDomainStatus.ToString" />
      <Member Id="P:System.Fabric.UpgradeDomainStatus.State" />
    </Type>
    <Type Name="System.Fabric.UpgradeFailureAction" Id="T:System.Fabric.UpgradeFailureAction">
      <Member Id="F:System.Fabric.UpgradeFailureAction.Invalid" />
      <Member Id="F:System.Fabric.UpgradeFailureAction.Manual" />
      <Member Id="F:System.Fabric.UpgradeFailureAction.Rollback" />
    </Type>
    <Type Name="System.Fabric.UpgradeFailureReason" Id="T:System.Fabric.UpgradeFailureReason">
      <Member Id="F:System.Fabric.UpgradeFailureReason.HealthCheck" />
      <Member Id="F:System.Fabric.UpgradeFailureReason.Interrupted" />
      <Member Id="F:System.Fabric.UpgradeFailureReason.None" />
      <Member Id="F:System.Fabric.UpgradeFailureReason.OverallUpgradeTimeout" />
      <Member Id="F:System.Fabric.UpgradeFailureReason.ProcessingFailure" />
      <Member Id="F:System.Fabric.UpgradeFailureReason.UpgradeDomainTimeout" />
    </Type>
    <Type Name="System.Fabric.UpgradeSafetyCheck" Id="T:System.Fabric.UpgradeSafetyCheck">
      <Member Id="M:System.Fabric.UpgradeSafetyCheck.#ctor(System.Fabric.UpgradeSafetyCheckKind)" />
      <Member Id="P:System.Fabric.UpgradeSafetyCheck.Kind" />
    </Type>
    <Type Name="System.Fabric.UpgradeSafetyCheckKind" Id="T:System.Fabric.UpgradeSafetyCheckKind">
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.EnsureAvailability" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.EnsurePartitionQuorum" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.EnsureSeedNodeQuorum" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.Invalid" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.WaitForInbuildReplica" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.WaitForPrimaryPlacement" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.WaitForPrimarySwap" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.WaitForReconfiguration" />
      <Member Id="F:System.Fabric.UpgradeSafetyCheckKind.WaitForResourceAvailability" />
    </Type>
    <Type Name="System.Fabric.UpgradeSortOrder" Id="T:System.Fabric.UpgradeSortOrder">
      <Member Id="F:System.Fabric.UpgradeSortOrder.Default" />
      <Member Id="F:System.Fabric.UpgradeSortOrder.Invalid" />
      <Member Id="F:System.Fabric.UpgradeSortOrder.Lexicographical" />
      <Member Id="F:System.Fabric.UpgradeSortOrder.Numeric" />
      <Member Id="F:System.Fabric.UpgradeSortOrder.ReverseLexicographical" />
      <Member Id="F:System.Fabric.UpgradeSortOrder.ReverseNumeric" />
    </Type>
    <Type Name="System.Fabric.UpgradeUnitsProgress" Id="T:System.Fabric.UpgradeUnitsProgress">
      <Member Id="P:System.Fabric.UpgradeUnitsProgress.NodeProgressList" />
      <Member Id="P:System.Fabric.UpgradeUnitsProgress.UpgradeDomainName" />
    </Type>
    <Type Name="System.Fabric.UpgradeUnitState" Id="T:System.Fabric.UpgradeUnitState">
      <Member Id="F:System.Fabric.UpgradeUnitState.Completed" />
      <Member Id="F:System.Fabric.UpgradeUnitState.InProgress" />
      <Member Id="F:System.Fabric.UpgradeUnitState.Invalid" />
      <Member Id="F:System.Fabric.UpgradeUnitState.Pending" />
    </Type>
    <Type Name="System.Fabric.UpgradeUnitStatus" Id="T:System.Fabric.UpgradeUnitStatus">
      <Member Id="M:System.Fabric.UpgradeUnitStatus.ToString" />
      <Member Id="P:System.Fabric.UpgradeUnitStatus.Name" />
      <Member Id="P:System.Fabric.UpgradeUnitStatus.State" />
    </Type>
    <Type Name="System.Fabric.WindowsCredentials" Id="T:System.Fabric.WindowsCredentials">
      <Member Id="M:System.Fabric.WindowsCredentials.#ctor" />
      <Member Id="P:System.Fabric.WindowsCredentials.ProtectionLevel" />
      <Member Id="P:System.Fabric.WindowsCredentials.RemoteIdentities" />
      <Member Id="P:System.Fabric.WindowsCredentials.RemoteSpn" />
    </Type>
    <Type Name="System.Fabric.X509Credentials" Id="T:System.Fabric.X509Credentials">
      <Member Id="M:System.Fabric.X509Credentials.#ctor" />
      <Member Id="P:System.Fabric.X509Credentials.AllowedCommonNames" />
      <Member Id="P:System.Fabric.X509Credentials.FindType" />
      <Member Id="P:System.Fabric.X509Credentials.FindValue" />
      <Member Id="P:System.Fabric.X509Credentials.FindValueSecondary" />
      <Member Id="P:System.Fabric.X509Credentials.IssuerThumbprints" />
      <Member Id="P:System.Fabric.X509Credentials.ProtectionLevel" />
      <Member Id="P:System.Fabric.X509Credentials.RemoteCertIssuers" />
      <Member Id="P:System.Fabric.X509Credentials.RemoteCertThumbprints" />
      <Member Id="P:System.Fabric.X509Credentials.RemoteCommonNames" />
      <Member Id="P:System.Fabric.X509Credentials.RemoteX509Names" />
      <Member Id="P:System.Fabric.X509Credentials.StoreLocation" />
      <Member Id="P:System.Fabric.X509Credentials.StoreName" />
      <Member Id="P:System.Fabric.X509Credentials.StoreNameDefault" />
    </Type>
    <Type Name="System.Fabric.X509IssuerStore" Id="T:System.Fabric.X509IssuerStore">
      <Member Id="M:System.Fabric.X509IssuerStore.#ctor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:System.Fabric.X509IssuerStore.#ctor(System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:System.Fabric.X509IssuerStore.Equals(System.Object)" />
      <Member Id="M:System.Fabric.X509IssuerStore.GetHashCode" />
      <Member Id="P:System.Fabric.X509IssuerStore.IssuerStores" />
      <Member Id="P:System.Fabric.X509IssuerStore.Name" />
    </Type>
    <Type Name="System.Fabric.X509Name" Id="T:System.Fabric.X509Name">
      <Member Id="M:System.Fabric.X509Name.#ctor(System.String,System.String)" />
      <Member Id="M:System.Fabric.X509Name.Equals(System.Fabric.X509Name)" />
      <Member Id="M:System.Fabric.X509Name.Equals(System.Object)" />
      <Member Id="M:System.Fabric.X509Name.GetHashCode" />
      <Member Id="P:System.Fabric.X509Name.IssuerCertThumbprint" />
      <Member Id="P:System.Fabric.X509Name.Name" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.BackupRestore">
    <Type Name="System.Fabric.BackupRestore.BackupOption" Id="T:System.Fabric.BackupRestore.BackupOption">
      <Member Id="F:System.Fabric.BackupRestore.BackupOption.Full" />
      <Member Id="F:System.Fabric.BackupRestore.BackupOption.Incremental" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Chaos.DataStructures">
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosDescription" Id="T:System.Fabric.Chaos.DataStructures.ChaosDescription">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosDescription.#ctor(System.Fabric.Chaos.DataStructures.ChaosStatus,System.Fabric.Chaos.DataStructures.ChaosParameters,System.Fabric.Chaos.DataStructures.ChaosScheduleStatus)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosDescription.ToString" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosDescription.ChaosParameters" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosDescription.ScheduleStatus" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosDescription.Status" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosEvent" Id="T:System.Fabric.Chaos.DataStructures.ChaosEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.ReadInheritedMembers(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.ToBytes" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEvent.WriteInheritedMembers(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEvent.Kind" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEvent.TimeStampUtc" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosEventsSegment" Id="T:System.Fabric.Chaos.DataStructures.ChaosEventsSegment">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEventsSegment.ToString" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEventsSegment.ContinuationToken" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEventsSegment.History" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter" Id="T:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.#ctor(System.DateTime,System.DateTime)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.EndTimeUtc" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosEventsSegmentFilter.StartTimeUtc" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosParameters" Id="T:System.Fabric.Chaos.DataStructures.ChaosParameters">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.Int64,System.Nullable{System.TimeSpan})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.Nullable{System.TimeSpan})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan,System.Fabric.Health.ClusterHealthPolicy)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.RehydratePropertiesNotInCtorFrom(System.Fabric.Chaos.DataStructures.ChaosParameters)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosParameters.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosTargetFilter" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.ClusterHealthPolicy" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.Context" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosReport" Id="T:System.Fabric.Chaos.DataStructures.ChaosReport">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReport.#ctor(System.Fabric.Chaos.DataStructures.ChaosParameters,System.Fabric.Chaos.DataStructures.ChaosStatus,System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosEvent},System.String)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReport.ToString" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReport.History" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReport.Status" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosReportFilter" Id="T:System.Fabric.Chaos.DataStructures.ChaosReportFilter">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReportFilter.#ctor(System.DateTime,System.DateTime)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReportFilter.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReportFilter.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosReportFilter.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReportFilter.EndTimeUtc" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosReportFilter.StartTimeUtc" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosSchedule" Id="T:System.Fabric.Chaos.DataStructures.ChaosSchedule">
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosSchedule.AllDaysOfWeek" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosSchedule.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.Fabric.Chaos.DataStructures.ChaosParameters},System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosScheduleJob})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosSchedule.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosSchedule.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosSchedule.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosSchedule.ChaosParametersDictionary" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosSchedule.ExpiryDate" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosSchedule.Jobs" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosSchedule.StartDate" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleDescription" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription.#ctor(System.Int32,System.Fabric.Chaos.DataStructures.ChaosSchedule)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleDescription.Version" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleJob" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleJob">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.#ctor(System.String,System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays,System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.ChaosParameters" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.Days" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJob.Times" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.#ctor" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.#ctor(System.Collections.Generic.HashSet{System.DayOfWeek})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.#ctor(System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.GetDayValueByEnum(System.DayOfWeek)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.NoActiveDays" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Friday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Monday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Saturday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Sunday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Thursday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Tuesday" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleJobActiveDays.Wednesday" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleStatus" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus">
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus.Active" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus.Expired" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus.Invalid" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus.Pending" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleStatus.Stopped" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc">
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.WholeDay" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.#ctor(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.EndTime" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeRangeUtc.StartTime" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" Id="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc">
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.EndOfDay" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.StartOfDay" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.#ctor(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.#ctor(System.Int32,System.Int32)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.CompareTo(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Equals(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Equals(System.Object)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.GetHashCode" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_Equality(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_GreaterThan(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_GreaterThanOrEqual(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_Inequality(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_LessThan(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_LessThanOrEqual(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Hour" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Minute" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosStatus" Id="T:System.Fabric.Chaos.DataStructures.ChaosStatus">
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosStatus.None" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosStatus.Running" />
      <Member Id="F:System.Fabric.Chaos.DataStructures.ChaosStatus.Stopped" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ChaosTargetFilter" Id="T:System.Fabric.Chaos.DataStructures.ChaosTargetFilter">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.#ctor" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.ApplicationInclusionList" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ChaosTargetFilter.NodeTypeInclusionList" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent" Id="T:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.#ctor" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.#ctor(System.DateTime,System.Collections.Generic.List{System.String})" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ExecutingFaultsEvent.Faults" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.StartedEvent" Id="T:System.Fabric.Chaos.DataStructures.StartedEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.StartedEvent.#ctor" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StartedEvent.#ctor(System.DateTime,System.Fabric.Chaos.DataStructures.ChaosParameters)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StartedEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StartedEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StartedEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.StartedEvent.ChaosParameters" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.StoppedEvent" Id="T:System.Fabric.Chaos.DataStructures.StoppedEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.StoppedEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StoppedEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.StoppedEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.StoppedEvent.Reason" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.TestErrorEvent" Id="T:System.Fabric.Chaos.DataStructures.TestErrorEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.TestErrorEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.TestErrorEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.TestErrorEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.TestErrorEvent.Reason" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.ValidationFailedEvent" Id="T:System.Fabric.Chaos.DataStructures.ValidationFailedEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.ValidationFailedEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ValidationFailedEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.ValidationFailedEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.ValidationFailedEvent.Reason" />
    </Type>
    <Type Name="System.Fabric.Chaos.DataStructures.WaitingEvent" Id="T:System.Fabric.Chaos.DataStructures.WaitingEvent">
      <Member Id="M:System.Fabric.Chaos.DataStructures.WaitingEvent.Read(System.IO.BinaryReader)" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.WaitingEvent.ToString" />
      <Member Id="M:System.Fabric.Chaos.DataStructures.WaitingEvent.Write(System.IO.BinaryWriter)" />
      <Member Id="P:System.Fabric.Chaos.DataStructures.WaitingEvent.Reason" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Common">
    <Type Name="System.Fabric.Common.FabricCertificateTypeExtensions" Id="T:System.Fabric.Common.FabricCertificateTypeExtensions">
      <Member Id="M:System.Fabric.Common.FabricCertificateTypeExtensions.ToString(System.Fabric.Management.ServiceModel.FabricCertificateType)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Common.Tracing">
    <Type Name="System.Fabric.Common.Tracing.TableEntityKind" Id="T:System.Fabric.Common.Tracing.TableEntityKind">
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Applications" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Cluster" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Correlation" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Nodes" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Partitions" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Replicas" />
      <Member Id="F:System.Fabric.Common.Tracing.TableEntityKind.Unknown" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Description">
    <Type Name="System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism" Id="T:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism">
      <Member Id="M:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism.#ctor" />
      <Member Id="M:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism.ToString" />
      <Member Id="P:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism.MaxPartitionCount" />
      <Member Id="P:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism.MinPartitionCount" />
      <Member Id="P:System.Fabric.Description.AddRemoveIncrementalNamedPartitionScalingMechanism.ScaleIncrement" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationDefinitionKindFilter" Id="T:System.Fabric.Description.ApplicationDefinitionKindFilter">
      <Member Id="F:System.Fabric.Description.ApplicationDefinitionKindFilter.All" />
      <Member Id="F:System.Fabric.Description.ApplicationDefinitionKindFilter.Compose" />
      <Member Id="F:System.Fabric.Description.ApplicationDefinitionKindFilter.Default" />
      <Member Id="F:System.Fabric.Description.ApplicationDefinitionKindFilter.MeshApplicationDescription" />
      <Member Id="F:System.Fabric.Description.ApplicationDefinitionKindFilter.ServiceFabricApplicationDescription" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationDescription" Id="T:System.Fabric.Description.ApplicationDescription">
      <Member Id="F:System.Fabric.Description.ApplicationDescription.Metrics" />
      <Member Id="M:System.Fabric.Description.ApplicationDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <Member Id="M:System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Fabric.Description.ManagedApplicationIdentityDescription)" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.ApplicationParameters" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.ManagedApplicationIdentity" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.MaximumNodes" />
      <Member Id="P:System.Fabric.Description.ApplicationDescription.MinimumNodes" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationHealthQueryDescription" Id="T:System.Fabric.Description.ApplicationHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.ApplicationHealthQueryDescription.#ctor(System.Uri)" />
      <Member Id="M:System.Fabric.Description.ApplicationHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.HealthStatisticsFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationMetricDescription" Id="T:System.Fabric.Description.ApplicationMetricDescription">
      <Member Id="M:System.Fabric.Description.ApplicationMetricDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationMetricDescription.MaximumNodeCapacity" />
      <Member Id="P:System.Fabric.Description.ApplicationMetricDescription.Name" />
      <Member Id="P:System.Fabric.Description.ApplicationMetricDescription.NodeReservationCapacity" />
      <Member Id="P:System.Fabric.Description.ApplicationMetricDescription.TotalApplicationCapacity" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationNetworkQueryDescription" Id="T:System.Fabric.Description.ApplicationNetworkQueryDescription">
      <Member Id="M:System.Fabric.Description.ApplicationNetworkQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationNetworkQueryDescription.ApplicationName" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationPackageCleanupPolicy" Id="T:System.Fabric.Description.ApplicationPackageCleanupPolicy">
      <Member Id="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Automatic" />
      <Member Id="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Default" />
      <Member Id="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Invalid" />
      <Member Id="F:System.Fabric.Description.ApplicationPackageCleanupPolicy.Manual" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationParameter" Id="T:System.Fabric.Description.ApplicationParameter">
      <Member Id="M:System.Fabric.Description.ApplicationParameter.#ctor" />
      <Member Id="M:System.Fabric.Description.ApplicationParameter.ToString" />
      <Member Id="P:System.Fabric.Description.ApplicationParameter.Name" />
      <Member Id="P:System.Fabric.Description.ApplicationParameter.Value" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationParameterList" Id="T:System.Fabric.Description.ApplicationParameterList">
      <Member Id="M:System.Fabric.Description.ApplicationParameterList.#ctor" />
      <Member Id="M:System.Fabric.Description.ApplicationParameterList.#ctor(System.Collections.Generic.IEqualityComparer{System.String})" />
      <Member Id="M:System.Fabric.Description.ApplicationParameterList.#ctor(System.Collections.Generic.IEqualityComparer{System.String},System.Int32)" />
      <Member Id="M:System.Fabric.Description.ApplicationParameterList.GetKeyForItem(System.Fabric.Description.ApplicationParameter)" />
      <Member Id="M:System.Fabric.Description.ApplicationParameterList.ToString" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationPrincipalsDescription" Id="T:System.Fabric.Description.ApplicationPrincipalsDescription">
      <Member Id="M:System.Fabric.Description.ApplicationPrincipalsDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationPrincipalsDescription.DefaultIdentity" />
      <Member Id="P:System.Fabric.Description.ApplicationPrincipalsDescription.Groups" />
      <Member Id="P:System.Fabric.Description.ApplicationPrincipalsDescription.ManagedIdentities" />
      <Member Id="P:System.Fabric.Description.ApplicationPrincipalsDescription.TokenServiceEndpoint" />
      <Member Id="P:System.Fabric.Description.ApplicationPrincipalsDescription.Users" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationQueryDescription" Id="T:System.Fabric.Description.ApplicationQueryDescription">
      <Member Id="M:System.Fabric.Description.ApplicationQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationQueryDescription.ApplicationDefinitionKindFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationQueryDescription.ApplicationNameFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationQueryDescription.ApplicationTypeNameFilter" />
      <Member Id="P:System.Fabric.Description.ApplicationQueryDescription.ExcludeApplicationParameters" />
      <Member Id="P:System.Fabric.Description.ApplicationQueryDescription.ExcludeManagedApplicationIdentity" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationTypeDefinitionKindFilter" Id="T:System.Fabric.Description.ApplicationTypeDefinitionKindFilter">
      <Member Id="F:System.Fabric.Description.ApplicationTypeDefinitionKindFilter.All" />
      <Member Id="F:System.Fabric.Description.ApplicationTypeDefinitionKindFilter.Compose" />
      <Member Id="F:System.Fabric.Description.ApplicationTypeDefinitionKindFilter.Default" />
      <Member Id="F:System.Fabric.Description.ApplicationTypeDefinitionKindFilter.MeshApplicationDescription" />
      <Member Id="F:System.Fabric.Description.ApplicationTypeDefinitionKindFilter.ServiceFabricApplicationPackage" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationUpdateDescription" Id="T:System.Fabric.Description.ApplicationUpdateDescription">
      <Member Id="F:System.Fabric.Description.ApplicationUpdateDescription.Metrics" />
      <Member Id="M:System.Fabric.Description.ApplicationUpdateDescription.#ctor(System.Uri)" />
      <Member Id="M:System.Fabric.Description.ApplicationUpdateDescription.#ctor(System.Uri,System.Boolean,System.Int64,System.Int64,System.Collections.Generic.IList{System.Fabric.Description.ApplicationMetricDescription})" />
      <Member Id="P:System.Fabric.Description.ApplicationUpdateDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ApplicationUpdateDescription.MaximumNodes" />
      <Member Id="P:System.Fabric.Description.ApplicationUpdateDescription.MinimumNodes" />
      <Member Id="P:System.Fabric.Description.ApplicationUpdateDescription.RemoveApplicationCapacity" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationUpgradeDescription" Id="T:System.Fabric.Description.ApplicationUpgradeDescription">
      <Member Id="M:System.Fabric.Description.ApplicationUpgradeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeDescription.ApplicationParameters" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeDescription.ManagedApplicationIdentity" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeDescription.TargetApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeDescription.UpgradePolicyDescription" />
    </Type>
    <Type Name="System.Fabric.Description.ApplicationUpgradeUpdateDescription" Id="T:System.Fabric.Description.ApplicationUpgradeUpdateDescription">
      <Member Id="M:System.Fabric.Description.ApplicationUpgradeUpdateDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeUpdateDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ApplicationUpgradeUpdateDescription.HealthPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.AveragePartitionLoadScalingTrigger" Id="T:System.Fabric.Description.AveragePartitionLoadScalingTrigger">
      <Member Id="M:System.Fabric.Description.AveragePartitionLoadScalingTrigger.#ctor" />
      <Member Id="M:System.Fabric.Description.AveragePartitionLoadScalingTrigger.ToString" />
      <Member Id="P:System.Fabric.Description.AveragePartitionLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:System.Fabric.Description.AveragePartitionLoadScalingTrigger.MetricName" />
      <Member Id="P:System.Fabric.Description.AveragePartitionLoadScalingTrigger.ScaleInterval" />
      <Member Id="P:System.Fabric.Description.AveragePartitionLoadScalingTrigger.UpperLoadThreshold" />
    </Type>
    <Type Name="System.Fabric.Description.AverageServiceLoadScalingTrigger" Id="T:System.Fabric.Description.AverageServiceLoadScalingTrigger">
      <Member Id="M:System.Fabric.Description.AverageServiceLoadScalingTrigger.#ctor" />
      <Member Id="M:System.Fabric.Description.AverageServiceLoadScalingTrigger.ToString" />
      <Member Id="P:System.Fabric.Description.AverageServiceLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:System.Fabric.Description.AverageServiceLoadScalingTrigger.MetricName" />
      <Member Id="P:System.Fabric.Description.AverageServiceLoadScalingTrigger.ScaleInterval" />
      <Member Id="P:System.Fabric.Description.AverageServiceLoadScalingTrigger.UpperLoadThreshold" />
      <Member Id="P:System.Fabric.Description.AverageServiceLoadScalingTrigger.UseOnlyPrimaryLoad" />
    </Type>
    <Type Name="System.Fabric.Description.ClusterHealthChunkQueryDescription" Id="T:System.Fabric.Description.ClusterHealthChunkQueryDescription">
      <Member Id="M:System.Fabric.Description.ClusterHealthChunkQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ClusterHealthChunkQueryDescription.ApplicationFilters" />
      <Member Id="P:System.Fabric.Description.ClusterHealthChunkQueryDescription.ApplicationHealthPolicies" />
      <Member Id="P:System.Fabric.Description.ClusterHealthChunkQueryDescription.ClusterHealthPolicy" />
      <Member Id="P:System.Fabric.Description.ClusterHealthChunkQueryDescription.NodeFilters" />
    </Type>
    <Type Name="System.Fabric.Description.ClusterHealthQueryDescription" Id="T:System.Fabric.Description.ClusterHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.ClusterHealthQueryDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ClusterHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.HealthStatisticsFilter" />
      <Member Id="P:System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter" />
    </Type>
    <Type Name="System.Fabric.Description.ClusterManifestQueryDescription" Id="T:System.Fabric.Description.ClusterManifestQueryDescription">
      <Member Id="M:System.Fabric.Description.ClusterManifestQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ClusterManifestQueryDescription.ClusterManifestVersion" />
    </Type>
    <Type Name="System.Fabric.Description.CodePackageDescription" Id="T:System.Fabric.Description.CodePackageDescription">
      <Member Id="P:System.Fabric.Description.CodePackageDescription.EntryPoint" />
      <Member Id="P:System.Fabric.Description.CodePackageDescription.IsShared" />
      <Member Id="P:System.Fabric.Description.CodePackageDescription.SetupEntryPoint" />
    </Type>
    <Type Name="System.Fabric.Description.CodePackageEntryPointKind" Id="T:System.Fabric.Description.CodePackageEntryPointKind">
      <Member Id="F:System.Fabric.Description.CodePackageEntryPointKind.Container" />
      <Member Id="F:System.Fabric.Description.CodePackageEntryPointKind.DllHost" />
      <Member Id="F:System.Fabric.Description.CodePackageEntryPointKind.Exe" />
      <Member Id="F:System.Fabric.Description.CodePackageEntryPointKind.Invalid" />
      <Member Id="F:System.Fabric.Description.CodePackageEntryPointKind.None" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigParameterOverride" Id="T:System.Fabric.Description.ConfigParameterOverride">
      <Member Id="M:System.Fabric.Description.ConfigParameterOverride.#ctor(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Boolean)" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverride.ParameterName" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverride.ParameterValue" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverride.PersistAcrossUpgrade" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverride.SectionName" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverride.Timeout" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigParameterOverrideList" Id="T:System.Fabric.Description.ConfigParameterOverrideList">
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.#ctor" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.#ctor(System.Collections.Generic.IList{System.Fabric.Description.ConfigParameterOverride})" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.Add(System.Fabric.Description.ConfigParameterOverride)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.Clear" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.Contains(System.Fabric.Description.ConfigParameterOverride)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.CopyTo(System.Fabric.Description.ConfigParameterOverride[],System.Int32)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.GetEnumerator" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.IndexOf(System.Fabric.Description.ConfigParameterOverride)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.Insert(System.Int32,System.Fabric.Description.ConfigParameterOverride)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.Remove(System.Fabric.Description.ConfigParameterOverride)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Description.ConfigParameterOverrideList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverrideList.Count" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverrideList.IsReadOnly" />
      <Member Id="P:System.Fabric.Description.ConfigParameterOverrideList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigurationPackageDescription" Id="T:System.Fabric.Description.ConfigurationPackageDescription">
      <Member Id="P:System.Fabric.Description.ConfigurationPackageDescription.Settings" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigurationProperty" Id="T:System.Fabric.Description.ConfigurationProperty">
      <Member Id="M:System.Fabric.Description.ConfigurationProperty.DecryptValue" />
      <Member Id="P:System.Fabric.Description.ConfigurationProperty.IsEncrypted" />
      <Member Id="P:System.Fabric.Description.ConfigurationProperty.MustOverride" />
      <Member Id="P:System.Fabric.Description.ConfigurationProperty.Name" />
      <Member Id="P:System.Fabric.Description.ConfigurationProperty.Type" />
      <Member Id="P:System.Fabric.Description.ConfigurationProperty.Value" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigurationSection" Id="T:System.Fabric.Description.ConfigurationSection">
      <Member Id="P:System.Fabric.Description.ConfigurationSection.Name" />
      <Member Id="P:System.Fabric.Description.ConfigurationSection.Parameters" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigurationSettings" Id="T:System.Fabric.Description.ConfigurationSettings">
      <Member Id="P:System.Fabric.Description.ConfigurationSettings.Sections" />
    </Type>
    <Type Name="System.Fabric.Description.ConfigurationUpgradeDescription" Id="T:System.Fabric.Description.ConfigurationUpgradeDescription">
      <Member Id="M:System.Fabric.Description.ConfigurationUpgradeDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ConfigurationUpgradeDescription.#ctor(System.String)" />
      <Member Id="M:System.Fabric.Description.ConfigurationUpgradeDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.ApplicationHealthPolicies" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.ClusterConfiguration" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckRetryTimeout" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckStableDuration" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.HealthCheckWaitDuration" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentDeltaUnhealthyNodes" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUnhealthyApplications" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUnhealthyNodes" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.MaxPercentUpgradeDomainDeltaUnhealthyNodes" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.UpgradeDomainTimeout" />
      <Member Id="P:System.Fabric.Description.ConfigurationUpgradeDescription.UpgradeTimeout" />
    </Type>
    <Type Name="System.Fabric.Description.ContainerHostEntryPointDescription" Id="T:System.Fabric.Description.ContainerHostEntryPointDescription">
      <Member Id="M:System.Fabric.Description.ContainerHostEntryPointDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ContainerHostEntryPointDescription.Commands" />
      <Member Id="P:System.Fabric.Description.ContainerHostEntryPointDescription.EntryPoint" />
      <Member Id="P:System.Fabric.Description.ContainerHostEntryPointDescription.ImageName" />
    </Type>
    <Type Name="System.Fabric.Description.DataPackageDescription" Id="T:System.Fabric.Description.DataPackageDescription" />
    <Type Name="System.Fabric.Description.DeleteApplicationDescription" Id="T:System.Fabric.Description.DeleteApplicationDescription">
      <Member Id="M:System.Fabric.Description.DeleteApplicationDescription.#ctor(System.Uri)" />
      <Member Id="P:System.Fabric.Description.DeleteApplicationDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.DeleteApplicationDescription.ForceDelete" />
    </Type>
    <Type Name="System.Fabric.Description.DeleteNetworkDescription" Id="T:System.Fabric.Description.DeleteNetworkDescription">
      <Member Id="M:System.Fabric.Description.DeleteNetworkDescription.#ctor(System.String)" />
      <Member Id="P:System.Fabric.Description.DeleteNetworkDescription.NetworkName" />
    </Type>
    <Type Name="System.Fabric.Description.DeleteServiceDescription" Id="T:System.Fabric.Description.DeleteServiceDescription">
      <Member Id="M:System.Fabric.Description.DeleteServiceDescription.#ctor(System.Uri)" />
      <Member Id="P:System.Fabric.Description.DeleteServiceDescription.ForceDelete" />
      <Member Id="P:System.Fabric.Description.DeleteServiceDescription.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Description.DeployedApplicationHealthQueryDescription" Id="T:System.Fabric.Description.DeployedApplicationHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.DeployedApplicationHealthQueryDescription.#ctor(System.Uri,System.String)" />
      <Member Id="M:System.Fabric.Description.DeployedApplicationHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.DeployedServicePackagesFilter" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.HealthStatisticsFilter" />
      <Member Id="P:System.Fabric.Description.DeployedApplicationHealthQueryDescription.NodeName" />
    </Type>
    <Type Name="System.Fabric.Description.DeployedNetworkCodePackageQueryDescription" Id="T:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription">
      <Member Id="M:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.ApplicationNameFilter" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.CodePackageNameFilter" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.NetworkName" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.NodeName" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkCodePackageQueryDescription.ServiceManifestNameFilter" />
    </Type>
    <Type Name="System.Fabric.Description.DeployedNetworkQueryDescription" Id="T:System.Fabric.Description.DeployedNetworkQueryDescription">
      <Member Id="M:System.Fabric.Description.DeployedNetworkQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.DeployedNetworkQueryDescription.NodeName" />
    </Type>
    <Type Name="System.Fabric.Description.DeployedServicePackageHealthQueryDescription" Id="T:System.Fabric.Description.DeployedServicePackageHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.#ctor(System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.#ctor(System.Uri,System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.NodeName" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.ServiceManifestName" />
      <Member Id="P:System.Fabric.Description.DeployedServicePackageHealthQueryDescription.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostEntryPointDescription" Id="T:System.Fabric.Description.DllHostEntryPointDescription">
      <Member Id="M:System.Fabric.Description.DllHostEntryPointDescription.ToString" />
      <Member Id="P:System.Fabric.Description.DllHostEntryPointDescription.HostedDlls" />
      <Member Id="P:System.Fabric.Description.DllHostEntryPointDescription.IsolationPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostHostedDllDescription" Id="T:System.Fabric.Description.DllHostHostedDllDescription">
      <Member Id="M:System.Fabric.Description.DllHostHostedDllDescription.#ctor(System.Fabric.Description.DllHostHostedDllKind)" />
      <Member Id="P:System.Fabric.Description.DllHostHostedDllDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostHostedDllKind" Id="T:System.Fabric.Description.DllHostHostedDllKind">
      <Member Id="F:System.Fabric.Description.DllHostHostedDllKind.Invalid" />
      <Member Id="F:System.Fabric.Description.DllHostHostedDllKind.Managed" />
      <Member Id="F:System.Fabric.Description.DllHostHostedDllKind.Unmanaged" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostHostedManagedDllDescription" Id="T:System.Fabric.Description.DllHostHostedManagedDllDescription">
      <Member Id="M:System.Fabric.Description.DllHostHostedManagedDllDescription.ToString" />
      <Member Id="P:System.Fabric.Description.DllHostHostedManagedDllDescription.AssemblyName" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostHostedUnmanagedDllDescription" Id="T:System.Fabric.Description.DllHostHostedUnmanagedDllDescription">
      <Member Id="M:System.Fabric.Description.DllHostHostedUnmanagedDllDescription.ToString" />
      <Member Id="P:System.Fabric.Description.DllHostHostedUnmanagedDllDescription.DllName" />
    </Type>
    <Type Name="System.Fabric.Description.DllHostIsolationPolicy" Id="T:System.Fabric.Description.DllHostIsolationPolicy">
      <Member Id="F:System.Fabric.Description.DllHostIsolationPolicy.DedicatedDomain" />
      <Member Id="F:System.Fabric.Description.DllHostIsolationPolicy.DedicatedProcess" />
      <Member Id="F:System.Fabric.Description.DllHostIsolationPolicy.Invalid" />
      <Member Id="F:System.Fabric.Description.DllHostIsolationPolicy.SharedDomain" />
    </Type>
    <Type Name="System.Fabric.Description.EndpointProtocol" Id="T:System.Fabric.Description.EndpointProtocol">
      <Member Id="F:System.Fabric.Description.EndpointProtocol.Http" />
      <Member Id="F:System.Fabric.Description.EndpointProtocol.Https" />
      <Member Id="F:System.Fabric.Description.EndpointProtocol.Tcp" />
      <Member Id="F:System.Fabric.Description.EndpointProtocol.Udp" />
    </Type>
    <Type Name="System.Fabric.Description.EndpointResourceDescription" Id="T:System.Fabric.Description.EndpointResourceDescription">
      <Member Id="M:System.Fabric.Description.EndpointResourceDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.Certificate" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.CodePackageName" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.EndpointType" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.IpAddressOrFqdn" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.Name" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.PathSuffix" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.Port" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.Protocol" />
      <Member Id="P:System.Fabric.Description.EndpointResourceDescription.UriScheme" />
    </Type>
    <Type Name="System.Fabric.Description.EndpointType" Id="T:System.Fabric.Description.EndpointType">
      <Member Id="F:System.Fabric.Description.EndpointType.Input" />
      <Member Id="F:System.Fabric.Description.EndpointType.Internal" />
    </Type>
    <Type Name="System.Fabric.Description.EntryPointDescription" Id="T:System.Fabric.Description.EntryPointDescription">
      <Member Id="M:System.Fabric.Description.EntryPointDescription.#ctor(System.Fabric.Description.CodePackageEntryPointKind)" />
      <Member Id="P:System.Fabric.Description.EntryPointDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.ExeHostEntryPointDescription" Id="T:System.Fabric.Description.ExeHostEntryPointDescription">
      <Member Id="M:System.Fabric.Description.ExeHostEntryPointDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.Arguments" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.ConsoleRedirectionEnabled" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.ConsoleRedirectionFileMaxSizeInKb" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.ConsoleRedirectionFileRetentionCount" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.IsExternalExecutable" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.PeriodicInterval" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.Program" />
      <Member Id="P:System.Fabric.Description.ExeHostEntryPointDescription.WorkingFolder" />
    </Type>
    <Type Name="System.Fabric.Description.ExeHostWorkingFolder" Id="T:System.Fabric.Description.ExeHostWorkingFolder">
      <Member Id="F:System.Fabric.Description.ExeHostWorkingFolder.CodeBase" />
      <Member Id="F:System.Fabric.Description.ExeHostWorkingFolder.CodePackage" />
      <Member Id="F:System.Fabric.Description.ExeHostWorkingFolder.Invalid" />
      <Member Id="F:System.Fabric.Description.ExeHostWorkingFolder.Work" />
    </Type>
    <Type Name="System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription" Id="T:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription">
      <Member Id="F:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.SfpkgExtension" />
      <Member Id="M:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.#ctor(System.Uri,System.String,System.String)" />
      <Member Id="M:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.ApplicationPackageDownloadUri" />
      <Member Id="P:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Description.ExternalStoreProvisionApplicationTypeDescription.ApplicationTypeVersion" />
    </Type>
    <Type Name="System.Fabric.Description.FabricUpgradeDescription" Id="T:System.Fabric.Description.FabricUpgradeDescription">
      <Member Id="M:System.Fabric.Description.FabricUpgradeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeDescription.TargetCodeVersion" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeDescription.TargetConfigVersion" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeDescription.UpgradePolicyDescription" />
    </Type>
    <Type Name="System.Fabric.Description.FabricUpgradeUpdateDescription" Id="T:System.Fabric.Description.FabricUpgradeUpdateDescription">
      <Member Id="M:System.Fabric.Description.FabricUpgradeUpdateDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeUpdateDescription.ApplicationHealthPolicyMap" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeUpdateDescription.EnableDeltaHealthEvaluation" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeUpdateDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.FabricUpgradeUpdateDescription.UpgradeHealthPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.ImageStoreListDescription" Id="T:System.Fabric.Description.ImageStoreListDescription">
      <Member Id="M:System.Fabric.Description.ImageStoreListDescription.#ctor(System.String,System.String,System.Boolean)" />
      <Member Id="P:System.Fabric.Description.ImageStoreListDescription.ContinuationToken" />
      <Member Id="P:System.Fabric.Description.ImageStoreListDescription.IsRecursive" />
      <Member Id="P:System.Fabric.Description.ImageStoreListDescription.RemoteLocation" />
    </Type>
    <Type Name="System.Fabric.Description.InstanceLifecycleDescription" Id="T:System.Fabric.Description.InstanceLifecycleDescription">
      <Member Id="M:System.Fabric.Description.InstanceLifecycleDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.InstanceLifecycleDescription.ToString" />
      <Member Id="P:System.Fabric.Description.InstanceLifecycleDescription.RestoreReplicaLocationAfterUpgrade" />
    </Type>
    <Type Name="System.Fabric.Description.LoadedPartitionInformationQueryDescription" Id="T:System.Fabric.Description.LoadedPartitionInformationQueryDescription">
      <Member Id="M:System.Fabric.Description.LoadedPartitionInformationQueryDescription.#ctor(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.Description.LoadedPartitionInformationQueryDescription.#ctor(System.String,System.Uri,System.Fabric.Ordering,System.Int64,System.String)" />
      <Member Id="P:System.Fabric.Description.LoadedPartitionInformationQueryDescription.MetricName" />
      <Member Id="P:System.Fabric.Description.LoadedPartitionInformationQueryDescription.Ordering" />
      <Member Id="P:System.Fabric.Description.LoadedPartitionInformationQueryDescription.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Description.LocalNetworkConfigurationDescription" Id="T:System.Fabric.Description.LocalNetworkConfigurationDescription">
      <Member Id="M:System.Fabric.Description.LocalNetworkConfigurationDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.LocalNetworkConfigurationDescription.#ctor(System.String)" />
      <Member Id="P:System.Fabric.Description.LocalNetworkConfigurationDescription.NetworkAddressPrefix" />
    </Type>
    <Type Name="System.Fabric.Description.LocalNetworkDescription" Id="T:System.Fabric.Description.LocalNetworkDescription">
      <Member Id="M:System.Fabric.Description.LocalNetworkDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.LocalNetworkDescription.#ctor(System.Fabric.Description.LocalNetworkConfigurationDescription)" />
      <Member Id="P:System.Fabric.Description.LocalNetworkDescription.NetworkConfiguration" />
    </Type>
    <Type Name="System.Fabric.Description.ManagedApplicationIdentityDescription" Id="T:System.Fabric.Description.ManagedApplicationIdentityDescription">
      <Member Id="M:System.Fabric.Description.ManagedApplicationIdentityDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ManagedApplicationIdentityDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ManagedApplicationIdentityDescription.ManagedIdentities" />
      <Member Id="P:System.Fabric.Description.ManagedApplicationIdentityDescription.TokenServiceEndpoint" />
    </Type>
    <Type Name="System.Fabric.Description.ManagedIdentityDescription" Id="T:System.Fabric.Description.ManagedIdentityDescription">
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescription.#ctor(System.String,System.String)" />
      <Member Id="P:System.Fabric.Description.ManagedIdentityDescription.Name" />
      <Member Id="P:System.Fabric.Description.ManagedIdentityDescription.PrincipalId" />
    </Type>
    <Type Name="System.Fabric.Description.ManagedIdentityDescriptionList" Id="T:System.Fabric.Description.ManagedIdentityDescriptionList">
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescriptionList.#ctor" />
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescriptionList.#ctor(System.Collections.Generic.IEqualityComparer{System.String})" />
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescriptionList.#ctor(System.Collections.Generic.IEqualityComparer{System.String},System.Int32)" />
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescriptionList.GetKeyForItem(System.Fabric.Description.ManagedIdentityDescription)" />
      <Member Id="M:System.Fabric.Description.ManagedIdentityDescriptionList.ToString" />
    </Type>
    <Type Name="System.Fabric.Description.MetricLoadDescription" Id="T:System.Fabric.Description.MetricLoadDescription">
      <Member Id="M:System.Fabric.Description.MetricLoadDescription.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <Member Id="P:System.Fabric.Description.MetricLoadDescription.CurrentLoad" />
      <Member Id="P:System.Fabric.Description.MetricLoadDescription.MetricName" />
      <Member Id="P:System.Fabric.Description.MetricLoadDescription.PredictedLoad" />
    </Type>
    <Type Name="System.Fabric.Description.MonitoredRollingApplicationUpgradePolicyDescription" Id="T:System.Fabric.Description.MonitoredRollingApplicationUpgradePolicyDescription">
      <Member Id="M:System.Fabric.Description.MonitoredRollingApplicationUpgradePolicyDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingApplicationUpgradePolicyDescription.HealthPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription" Id="T:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription">
      <Member Id="M:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.MonitoredRollingUpgradePolicyDescription" Id="T:System.Fabric.Description.MonitoredRollingUpgradePolicyDescription">
      <Member Id="M:System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.MonitoringPolicy" />
    </Type>
    <Type Name="System.Fabric.Description.NamedPartitionSchemeDescription" Id="T:System.Fabric.Description.NamedPartitionSchemeDescription">
      <Member Id="M:System.Fabric.Description.NamedPartitionSchemeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.NamedPartitionSchemeDescription.PartitionNames" />
    </Type>
    <Type Name="System.Fabric.Description.NamedRepartitionDescription" Id="T:System.Fabric.Description.NamedRepartitionDescription">
      <Member Id="M:System.Fabric.Description.NamedRepartitionDescription.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="P:System.Fabric.Description.NamedRepartitionDescription.NamesToAdd" />
      <Member Id="P:System.Fabric.Description.NamedRepartitionDescription.NamesToRemove" />
    </Type>
    <Type Name="System.Fabric.Description.NetworkApplicationQueryDescription" Id="T:System.Fabric.Description.NetworkApplicationQueryDescription">
      <Member Id="M:System.Fabric.Description.NetworkApplicationQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.NetworkApplicationQueryDescription.ApplicationNameFilter" />
      <Member Id="P:System.Fabric.Description.NetworkApplicationQueryDescription.NetworkName" />
    </Type>
    <Type Name="System.Fabric.Description.NetworkDescription" Id="T:System.Fabric.Description.NetworkDescription">
      <Member Id="M:System.Fabric.Description.NetworkDescription.#ctor(System.Fabric.NetworkType)" />
      <Member Id="P:System.Fabric.Description.NetworkDescription.NetworkType" />
    </Type>
    <Type Name="System.Fabric.Description.NetworkNodeQueryDescription" Id="T:System.Fabric.Description.NetworkNodeQueryDescription">
      <Member Id="M:System.Fabric.Description.NetworkNodeQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.NetworkNodeQueryDescription.NetworkName" />
      <Member Id="P:System.Fabric.Description.NetworkNodeQueryDescription.NodeNameFilter" />
    </Type>
    <Type Name="System.Fabric.Description.NetworkQueryDescription" Id="T:System.Fabric.Description.NetworkQueryDescription">
      <Member Id="M:System.Fabric.Description.NetworkQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.NetworkQueryDescription.NetworkNameFilter" />
      <Member Id="P:System.Fabric.Description.NetworkQueryDescription.NetworkStatusFilter" />
    </Type>
    <Type Name="System.Fabric.Description.NodeHealthQueryDescription" Id="T:System.Fabric.Description.NodeHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.NodeHealthQueryDescription.#ctor(System.String)" />
      <Member Id="M:System.Fabric.Description.NodeHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.NodeHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.NodeHealthQueryDescription.NodeName" />
    </Type>
    <Type Name="System.Fabric.Description.NodeQueryDescription" Id="T:System.Fabric.Description.NodeQueryDescription">
      <Member Id="M:System.Fabric.Description.NodeQueryDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.NodeQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.NodeQueryDescription.NodeNameFilter" />
      <Member Id="P:System.Fabric.Description.NodeQueryDescription.NodeStatusFilter" />
    </Type>
    <Type Name="System.Fabric.Description.NodeStartDescription" Id="T:System.Fabric.Description.NodeStartDescription">
      <Member Id="M:System.Fabric.Description.NodeStartDescription.#ctor(System.Guid,System.String,System.Numerics.BigInteger)" />
    </Type>
    <Type Name="System.Fabric.Description.NodeStopDescription" Id="T:System.Fabric.Description.NodeStopDescription">
      <Member Id="M:System.Fabric.Description.NodeStopDescription.#ctor(System.Guid,System.String,System.Numerics.BigInteger,System.Int32)" />
      <Member Id="M:System.Fabric.Description.NodeStopDescription.ToString" />
      <Member Id="P:System.Fabric.Description.NodeStopDescription.StopDurationInSeconds" />
    </Type>
    <Type Name="System.Fabric.Description.NodeTransitionDescription" Id="T:System.Fabric.Description.NodeTransitionDescription">
      <Member Id="M:System.Fabric.Description.NodeTransitionDescription.#ctor(System.Fabric.NodeTransitionType,System.Guid,System.String,System.Numerics.BigInteger)" />
      <Member Id="M:System.Fabric.Description.NodeTransitionDescription.ToString" />
      <Member Id="P:System.Fabric.Description.NodeTransitionDescription.NodeInstanceId" />
      <Member Id="P:System.Fabric.Description.NodeTransitionDescription.NodeName" />
      <Member Id="P:System.Fabric.Description.NodeTransitionDescription.NodeTransitionType" />
      <Member Id="P:System.Fabric.Description.NodeTransitionDescription.OperationId" />
    </Type>
    <Type Name="System.Fabric.Description.PackageDescription" Id="T:System.Fabric.Description.PackageDescription">
      <Member Id="P:System.Fabric.Description.PackageDescription.Name" />
      <Member Id="P:System.Fabric.Description.PackageDescription.Path" />
      <Member Id="P:System.Fabric.Description.PackageDescription.ServiceManifestName" />
      <Member Id="P:System.Fabric.Description.PackageDescription.ServiceManifestVersion" />
      <Member Id="P:System.Fabric.Description.PackageDescription.Version" />
    </Type>
    <Type Name="System.Fabric.Description.PagedApplicationTypeQueryDescription" Id="T:System.Fabric.Description.PagedApplicationTypeQueryDescription">
      <Member Id="M:System.Fabric.Description.PagedApplicationTypeQueryDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.PagedApplicationTypeQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.ApplicationTypeDefinitionKindFilter" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.ApplicationTypeNameFilter" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.ApplicationTypeVersionFilter" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.ContinuationToken" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.ExcludeApplicationParameters" />
      <Member Id="P:System.Fabric.Description.PagedApplicationTypeQueryDescription.MaxResults" />
    </Type>
    <Type Name="System.Fabric.Description.PagedDeployedApplicationQueryDescription" Id="T:System.Fabric.Description.PagedDeployedApplicationQueryDescription">
      <Member Id="M:System.Fabric.Description.PagedDeployedApplicationQueryDescription.#ctor(System.String)" />
      <Member Id="M:System.Fabric.Description.PagedDeployedApplicationQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.PagedDeployedApplicationQueryDescription.ApplicationNameFilter" />
      <Member Id="P:System.Fabric.Description.PagedDeployedApplicationQueryDescription.IncludeHealthState" />
      <Member Id="P:System.Fabric.Description.PagedDeployedApplicationQueryDescription.NodeName" />
    </Type>
    <Type Name="System.Fabric.Description.PagedDeployedServicePackageQueryDescription" Id="T:System.Fabric.Description.PagedDeployedServicePackageQueryDescription">
      <Member Id="M:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.#ctor(System.String,System.Uri)" />
      <Member Id="M:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.IncludeHealthState" />
      <Member Id="P:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.NodeName" />
      <Member Id="P:System.Fabric.Description.PagedDeployedServicePackageQueryDescription.ServiceManifestNameFilter" />
    </Type>
    <Type Name="System.Fabric.Description.PagedQueryDescriptionBase" Id="T:System.Fabric.Description.PagedQueryDescriptionBase">
      <Member Id="M:System.Fabric.Description.PagedQueryDescriptionBase.#ctor" />
      <Member Id="M:System.Fabric.Description.PagedQueryDescriptionBase.ToString" />
      <Member Id="P:System.Fabric.Description.PagedQueryDescriptionBase.ContinuationToken" />
      <Member Id="P:System.Fabric.Description.PagedQueryDescriptionBase.MaxResults" />
    </Type>
    <Type Name="System.Fabric.Description.PartitionHealthQueryDescription" Id="T:System.Fabric.Description.PartitionHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.PartitionHealthQueryDescription.#ctor(System.Guid)" />
      <Member Id="M:System.Fabric.Description.PartitionHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.PartitionHealthQueryDescription.HealthStatisticsFilter" />
      <Member Id="P:System.Fabric.Description.PartitionHealthQueryDescription.PartitionId" />
      <Member Id="P:System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter" />
    </Type>
    <Type Name="System.Fabric.Description.PartitionInstanceCountScaleMechanism" Id="T:System.Fabric.Description.PartitionInstanceCountScaleMechanism">
      <Member Id="M:System.Fabric.Description.PartitionInstanceCountScaleMechanism.#ctor" />
      <Member Id="M:System.Fabric.Description.PartitionInstanceCountScaleMechanism.ToString" />
      <Member Id="P:System.Fabric.Description.PartitionInstanceCountScaleMechanism.MaxInstanceCount" />
      <Member Id="P:System.Fabric.Description.PartitionInstanceCountScaleMechanism.MinInstanceCount" />
      <Member Id="P:System.Fabric.Description.PartitionInstanceCountScaleMechanism.ScaleIncrement" />
    </Type>
    <Type Name="System.Fabric.Description.PartitionMetricLoadDescription" Id="T:System.Fabric.Description.PartitionMetricLoadDescription">
      <Member Id="M:System.Fabric.Description.PartitionMetricLoadDescription.#ctor(System.Guid,System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.ReplicaMetricLoadDescription})" />
      <Member Id="M:System.Fabric.Description.PartitionMetricLoadDescription.#ctor(System.Guid,System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.ReplicaMetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription},System.Collections.Generic.IList{System.Fabric.Description.ReplicaMetricLoadDescription})" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.AuxiliaryReplicaLoadEntriesPerNode" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.AuxiliaryReplicasLoadEntries" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.PartitionId" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.PrimaryReplicaLoadEntries" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.SecondaryReplicaOrInstanceLoadEntriesPerNode" />
      <Member Id="P:System.Fabric.Description.PartitionMetricLoadDescription.SecondaryReplicasOrInstancesLoadEntries" />
    </Type>
    <Type Name="System.Fabric.Description.PartitionScheme" Id="T:System.Fabric.Description.PartitionScheme">
      <Member Id="F:System.Fabric.Description.PartitionScheme.Invalid" />
      <Member Id="F:System.Fabric.Description.PartitionScheme.Named" />
      <Member Id="F:System.Fabric.Description.PartitionScheme.Singleton" />
      <Member Id="F:System.Fabric.Description.PartitionScheme.UniformInt64Range" />
    </Type>
    <Type Name="System.Fabric.Description.PartitionSchemeDescription" Id="T:System.Fabric.Description.PartitionSchemeDescription">
      <Member Id="M:System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionScheme)" />
      <Member Id="M:System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionSchemeDescription)" />
      <Member Id="P:System.Fabric.Description.PartitionSchemeDescription.Scheme" />
    </Type>
    <Type Name="System.Fabric.Description.ProvisionApplicationTypeDescription" Id="T:System.Fabric.Description.ProvisionApplicationTypeDescription">
      <Member Id="M:System.Fabric.Description.ProvisionApplicationTypeDescription.#ctor(System.String)" />
      <Member Id="M:System.Fabric.Description.ProvisionApplicationTypeDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ProvisionApplicationTypeDescription.ApplicationPackageCleanupPolicy" />
      <Member Id="P:System.Fabric.Description.ProvisionApplicationTypeDescription.BuildPath" />
    </Type>
    <Type Name="System.Fabric.Description.ProvisionApplicationTypeDescriptionBase" Id="T:System.Fabric.Description.ProvisionApplicationTypeDescriptionBase">
      <Member Id="M:System.Fabric.Description.ProvisionApplicationTypeDescriptionBase.#ctor(System.Fabric.Description.ProvisionApplicationTypeKind)" />
      <Member Id="P:System.Fabric.Description.ProvisionApplicationTypeDescriptionBase.Async" />
      <Member Id="P:System.Fabric.Description.ProvisionApplicationTypeDescriptionBase.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.ProvisionApplicationTypeKind" Id="T:System.Fabric.Description.ProvisionApplicationTypeKind">
      <Member Id="F:System.Fabric.Description.ProvisionApplicationTypeKind.ExternalStore" />
      <Member Id="F:System.Fabric.Description.ProvisionApplicationTypeKind.ImageStorePath" />
      <Member Id="F:System.Fabric.Description.ProvisionApplicationTypeKind.Invalid" />
    </Type>
    <Type Name="System.Fabric.Description.RepartitionDescription" Id="T:System.Fabric.Description.RepartitionDescription">
      <Member Id="M:System.Fabric.Description.RepartitionDescription.#ctor(System.Fabric.Description.PartitionScheme)" />
      <Member Id="P:System.Fabric.Description.RepartitionDescription.PartitionKind" />
    </Type>
    <Type Name="System.Fabric.Description.ReplicaHealthQueryDescription" Id="T:System.Fabric.Description.ReplicaHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.ReplicaHealthQueryDescription.#ctor(System.Guid,System.Int64)" />
      <Member Id="M:System.Fabric.Description.ReplicaHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId" />
      <Member Id="P:System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId" />
    </Type>
    <Type Name="System.Fabric.Description.ReplicaLifecycleDescription" Id="T:System.Fabric.Description.ReplicaLifecycleDescription">
      <Member Id="M:System.Fabric.Description.ReplicaLifecycleDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ReplicaLifecycleDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ReplicaLifecycleDescription.IsSingletonReplicaMoveAllowedDuringUpgrade" />
      <Member Id="P:System.Fabric.Description.ReplicaLifecycleDescription.RestoreReplicaLocationAfterUpgrade" />
    </Type>
    <Type Name="System.Fabric.Description.ReplicaMetricLoadDescription" Id="T:System.Fabric.Description.ReplicaMetricLoadDescription">
      <Member Id="M:System.Fabric.Description.ReplicaMetricLoadDescription.#ctor(System.String,System.Collections.Generic.IList{System.Fabric.Description.MetricLoadDescription})" />
      <Member Id="P:System.Fabric.Description.ReplicaMetricLoadDescription.NodeName" />
      <Member Id="P:System.Fabric.Description.ReplicaMetricLoadDescription.ReplicaOrInstanceLoadEntries" />
    </Type>
    <Type Name="System.Fabric.Description.RollingUpgradeMonitoringPolicy" Id="T:System.Fabric.Description.RollingUpgradeMonitoringPolicy">
      <Member Id="M:System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout" />
      <Member Id="P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout" />
    </Type>
    <Type Name="System.Fabric.Description.RollingUpgradePolicyDescription" Id="T:System.Fabric.Description.RollingUpgradePolicyDescription">
      <Member Id="M:System.Fabric.Description.RollingUpgradePolicyDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart" />
      <Member Id="P:System.Fabric.Description.RollingUpgradePolicyDescription.InstanceCloseDelayDuration" />
      <Member Id="P:System.Fabric.Description.RollingUpgradePolicyDescription.SortOrder" />
      <Member Id="P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode" />
      <Member Id="P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout" />
    </Type>
    <Type Name="System.Fabric.Description.RunAsPolicyDescription" Id="T:System.Fabric.Description.RunAsPolicyDescription">
      <Member Id="P:System.Fabric.Description.RunAsPolicyDescription.UserName" />
    </Type>
    <Type Name="System.Fabric.Description.ScalingMechanismDescription" Id="T:System.Fabric.Description.ScalingMechanismDescription">
      <Member Id="M:System.Fabric.Description.ScalingMechanismDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ScalingMechanismDescription.#ctor(System.Fabric.Description.ScalingMechanismKind)" />
      <Member Id="P:System.Fabric.Description.ScalingMechanismDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.ScalingMechanismKind" Id="T:System.Fabric.Description.ScalingMechanismKind">
      <Member Id="F:System.Fabric.Description.ScalingMechanismKind.AddRemoveIncrementalNamedPartition" />
      <Member Id="F:System.Fabric.Description.ScalingMechanismKind.Invalid" />
      <Member Id="F:System.Fabric.Description.ScalingMechanismKind.ScalePartitionInstanceCount" />
    </Type>
    <Type Name="System.Fabric.Description.ScalingPolicyDescription" Id="T:System.Fabric.Description.ScalingPolicyDescription">
      <Member Id="M:System.Fabric.Description.ScalingPolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ScalingPolicyDescription.#ctor(System.Fabric.Description.ScalingMechanismDescription,System.Fabric.Description.ScalingTriggerDescription)" />
      <Member Id="M:System.Fabric.Description.ScalingPolicyDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ScalingPolicyDescription.ScalingMechanism" />
      <Member Id="P:System.Fabric.Description.ScalingPolicyDescription.ScalingTrigger" />
    </Type>
    <Type Name="System.Fabric.Description.ScalingTriggerDescription" Id="T:System.Fabric.Description.ScalingTriggerDescription">
      <Member Id="M:System.Fabric.Description.ScalingTriggerDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ScalingTriggerDescription.#ctor(System.Fabric.Description.ScalingTriggerKind)" />
      <Member Id="P:System.Fabric.Description.ScalingTriggerDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.ScalingTriggerKind" Id="T:System.Fabric.Description.ScalingTriggerKind">
      <Member Id="F:System.Fabric.Description.ScalingTriggerKind.AveragePartitionLoadTrigger" />
      <Member Id="F:System.Fabric.Description.ScalingTriggerKind.AverageServiceLoadTrigger" />
      <Member Id="F:System.Fabric.Description.ScalingTriggerKind.Invalid" />
    </Type>
    <Type Name="System.Fabric.Description.SecurityGroupDescription" Id="T:System.Fabric.Description.SecurityGroupDescription">
      <Member Id="M:System.Fabric.Description.SecurityGroupDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.SecurityGroupDescription.DomainGroupMembers" />
      <Member Id="P:System.Fabric.Description.SecurityGroupDescription.DomainUserMembers" />
      <Member Id="P:System.Fabric.Description.SecurityGroupDescription.Name" />
      <Member Id="P:System.Fabric.Description.SecurityGroupDescription.Sid" />
      <Member Id="P:System.Fabric.Description.SecurityGroupDescription.SystemGroupMembers" />
    </Type>
    <Type Name="System.Fabric.Description.SecurityUserDescription" Id="T:System.Fabric.Description.SecurityUserDescription">
      <Member Id="M:System.Fabric.Description.SecurityUserDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.SecurityUserDescription.Name" />
      <Member Id="P:System.Fabric.Description.SecurityUserDescription.ParentApplicationGroups" />
      <Member Id="P:System.Fabric.Description.SecurityUserDescription.ParentSystemGroups" />
      <Member Id="P:System.Fabric.Description.SecurityUserDescription.Sid" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceCorrelationDescription" Id="T:System.Fabric.Description.ServiceCorrelationDescription">
      <Member Id="M:System.Fabric.Description.ServiceCorrelationDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceCorrelationDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ServiceCorrelationDescription.Scheme" />
      <Member Id="P:System.Fabric.Description.ServiceCorrelationDescription.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceCorrelationScheme" Id="T:System.Fabric.Description.ServiceCorrelationScheme">
      <Member Id="F:System.Fabric.Description.ServiceCorrelationScheme.Affinity" />
      <Member Id="F:System.Fabric.Description.ServiceCorrelationScheme.AlignedAffinity" />
      <Member Id="F:System.Fabric.Description.ServiceCorrelationScheme.Invalid" />
      <Member Id="F:System.Fabric.Description.ServiceCorrelationScheme.NonAlignedAffinity" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceDescription" Id="T:System.Fabric.Description.ServiceDescription">
      <Member Id="M:System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescription)" />
      <Member Id="M:System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.Correlations" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.DefaultMoveCost" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.InitializationData" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.Kind" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.Metrics" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.PartitionSchemeDescription" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.PlacementConstraints" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.PlacementPolicies" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ScalingPolicies" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ServiceDnsName" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ServiceName" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ServicePackageActivationMode" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ServiceTags" />
      <Member Id="P:System.Fabric.Description.ServiceDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceDescriptionKind" Id="T:System.Fabric.Description.ServiceDescriptionKind">
      <Member Id="F:System.Fabric.Description.ServiceDescriptionKind.Invalid" />
      <Member Id="F:System.Fabric.Description.ServiceDescriptionKind.Stateful" />
      <Member Id="F:System.Fabric.Description.ServiceDescriptionKind.Stateless" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceFromTemplateDescription" Id="T:System.Fabric.Description.ServiceFromTemplateDescription">
      <Member Id="M:System.Fabric.Description.ServiceFromTemplateDescription.#ctor(System.Uri,System.Uri,System.String,System.String,System.Fabric.Description.ServicePackageActivationMode,System.Byte[])" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.InitializationData" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.ServiceDnsName" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.ServiceName" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.ServicePackageActivationMode" />
      <Member Id="P:System.Fabric.Description.ServiceFromTemplateDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupDescription" Id="T:System.Fabric.Description.ServiceGroupDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceGroupDescription.#ctor(System.Fabric.Description.ServiceDescription)" />
      <Member Id="P:System.Fabric.Description.ServiceGroupDescription.MemberDescriptions" />
      <Member Id="P:System.Fabric.Description.ServiceGroupDescription.ServiceDescription" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupFromTemplateDescription" Id="T:System.Fabric.Description.ServiceGroupFromTemplateDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupFromTemplateDescription.#ctor(System.Uri,System.Uri,System.String,System.Fabric.Description.ServicePackageActivationMode,System.Byte[])" />
      <Member Id="P:System.Fabric.Description.ServiceGroupFromTemplateDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ServiceGroupFromTemplateDescription.InitializationData" />
      <Member Id="P:System.Fabric.Description.ServiceGroupFromTemplateDescription.ServiceName" />
      <Member Id="P:System.Fabric.Description.ServiceGroupFromTemplateDescription.ServicePackageActivationMode" />
      <Member Id="P:System.Fabric.Description.ServiceGroupFromTemplateDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupMemberDescription" Id="T:System.Fabric.Description.ServiceGroupMemberDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupMemberDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceGroupMemberDescription.#ctor(System.String,System.Uri,System.Byte[])" />
      <Member Id="P:System.Fabric.Description.ServiceGroupMemberDescription.InitializationData" />
      <Member Id="P:System.Fabric.Description.ServiceGroupMemberDescription.Metrics" />
      <Member Id="P:System.Fabric.Description.ServiceGroupMemberDescription.ServiceName" />
      <Member Id="P:System.Fabric.Description.ServiceGroupMemberDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupTypeDescription" Id="T:System.Fabric.Description.ServiceGroupTypeDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupTypeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ServiceGroupTypeDescription.Members" />
      <Member Id="P:System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription" />
      <Member Id="P:System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupTypeMemberDescription" Id="T:System.Fabric.Description.ServiceGroupTypeMemberDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupTypeMemberDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.ServiceGroupTypeMemberDescription.LoadMetrics" />
      <Member Id="P:System.Fabric.Description.ServiceGroupTypeMemberDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceGroupUpdateDescription" Id="T:System.Fabric.Description.ServiceGroupUpdateDescription">
      <Member Id="M:System.Fabric.Description.ServiceGroupUpdateDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceGroupUpdateDescription.#ctor(System.Fabric.Description.ServiceUpdateDescription)" />
      <Member Id="P:System.Fabric.Description.ServiceGroupUpdateDescription.ServiceUpdateDescription" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceHealthQueryDescription" Id="T:System.Fabric.Description.ServiceHealthQueryDescription">
      <Member Id="M:System.Fabric.Description.ServiceHealthQueryDescription.#ctor(System.Uri)" />
      <Member Id="M:System.Fabric.Description.ServiceHealthQueryDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter" />
      <Member Id="P:System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy" />
      <Member Id="P:System.Fabric.Description.ServiceHealthQueryDescription.HealthStatisticsFilter" />
      <Member Id="P:System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter" />
      <Member Id="P:System.Fabric.Description.ServiceHealthQueryDescription.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceHostUpgradeImpact" Id="T:System.Fabric.Description.ServiceHostUpgradeImpact">
      <Member Id="F:System.Fabric.Description.ServiceHostUpgradeImpact.Invalid" />
      <Member Id="F:System.Fabric.Description.ServiceHostUpgradeImpact.None" />
      <Member Id="F:System.Fabric.Description.ServiceHostUpgradeImpact.ServiceHostRestart" />
      <Member Id="F:System.Fabric.Description.ServiceHostUpgradeImpact.UnexpectedServiceHostRestart" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceLoadMetricDescription" Id="T:System.Fabric.Description.ServiceLoadMetricDescription">
      <Member Id="M:System.Fabric.Description.ServiceLoadMetricDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceLoadMetricDescription.ToString(System.Boolean)" />
      <Member Id="P:System.Fabric.Description.ServiceLoadMetricDescription.AuxiliaryDefaultLoad" />
      <Member Id="P:System.Fabric.Description.ServiceLoadMetricDescription.Name" />
      <Member Id="P:System.Fabric.Description.ServiceLoadMetricDescription.PrimaryDefaultLoad" />
      <Member Id="P:System.Fabric.Description.ServiceLoadMetricDescription.SecondaryDefaultLoad" />
      <Member Id="P:System.Fabric.Description.ServiceLoadMetricDescription.Weight" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceLoadMetricWeight" Id="T:System.Fabric.Description.ServiceLoadMetricWeight">
      <Member Id="F:System.Fabric.Description.ServiceLoadMetricWeight.High" />
      <Member Id="F:System.Fabric.Description.ServiceLoadMetricWeight.Low" />
      <Member Id="F:System.Fabric.Description.ServiceLoadMetricWeight.Medium" />
      <Member Id="F:System.Fabric.Description.ServiceLoadMetricWeight.Zero" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceNotificationFilterDescription" Id="T:System.Fabric.Description.ServiceNotificationFilterDescription">
      <Member Id="M:System.Fabric.Description.ServiceNotificationFilterDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceNotificationFilterDescription.#ctor(System.Uri,System.Boolean,System.Boolean)" />
      <Member Id="P:System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix" />
      <Member Id="P:System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly" />
      <Member Id="P:System.Fabric.Description.ServiceNotificationFilterDescription.Name" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePackageActivationMode" Id="T:System.Fabric.Description.ServicePackageActivationMode">
      <Member Id="F:System.Fabric.Description.ServicePackageActivationMode.ExclusiveProcess" />
      <Member Id="F:System.Fabric.Description.ServicePackageActivationMode.SharedProcess" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementAllowMultipleStatelessInstancesOnNodePolicyDescription" Id="T:System.Fabric.Description.ServicePlacementAllowMultipleStatelessInstancesOnNodePolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementAllowMultipleStatelessInstancesOnNodePolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementAllowMultipleStatelessInstancesOnNodePolicyDescription.ToString" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementInvalidDomainPolicyDescription" Id="T:System.Fabric.Description.ServicePlacementInvalidDomainPolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementInvalidDomainPolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementInvalidDomainPolicyDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ServicePlacementInvalidDomainPolicyDescription.DomainName" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementNonPartiallyPlaceServicePolicyDescription" Id="T:System.Fabric.Description.ServicePlacementNonPartiallyPlaceServicePolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementNonPartiallyPlaceServicePolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementNonPartiallyPlaceServicePolicyDescription.ToString" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementPolicyDescription" Id="T:System.Fabric.Description.ServicePlacementPolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementPolicyDescription.#ctor(System.Fabric.Description.ServicePlacementPolicyDescription)" />
      <Member Id="M:System.Fabric.Description.ServicePlacementPolicyDescription.#ctor(System.Fabric.Description.ServicePlacementPolicyType)" />
      <Member Id="P:System.Fabric.Description.ServicePlacementPolicyDescription.Type" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementPolicyType" Id="T:System.Fabric.Description.ServicePlacementPolicyType">
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.AllowMultipleStatelessInstancesOnNode" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.Invalid" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.InvalidDomain" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.NonPartiallyPlaceService" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.PreferPrimaryDomain" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.RequireDomain" />
      <Member Id="F:System.Fabric.Description.ServicePlacementPolicyType.RequireDomainDistribution" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription" Id="T:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ServicePlacementPreferPrimaryDomainPolicyDescription.DomainName" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementRequiredDomainPolicyDescription" Id="T:System.Fabric.Description.ServicePlacementRequiredDomainPolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementRequiredDomainPolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementRequiredDomainPolicyDescription.ToString" />
      <Member Id="P:System.Fabric.Description.ServicePlacementRequiredDomainPolicyDescription.DomainName" />
    </Type>
    <Type Name="System.Fabric.Description.ServicePlacementRequireDomainDistributionPolicyDescription" Id="T:System.Fabric.Description.ServicePlacementRequireDomainDistributionPolicyDescription">
      <Member Id="M:System.Fabric.Description.ServicePlacementRequireDomainDistributionPolicyDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.ServicePlacementRequireDomainDistributionPolicyDescription.ToString" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceQueryDescription" Id="T:System.Fabric.Description.ServiceQueryDescription">
      <Member Id="M:System.Fabric.Description.ServiceQueryDescription.#ctor(System.Uri)" />
      <Member Id="P:System.Fabric.Description.ServiceQueryDescription.ApplicationName" />
      <Member Id="P:System.Fabric.Description.ServiceQueryDescription.ServiceNameFilter" />
      <Member Id="P:System.Fabric.Description.ServiceQueryDescription.ServiceTypeNameFilter" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceTagsCollection" Id="T:System.Fabric.Description.ServiceTagsCollection">
      <Member Id="M:System.Fabric.Description.ServiceTagsCollection.#ctor" />
      <Member Id="M:System.Fabric.Description.ServiceTagsCollection.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})" />
      <Member Id="M:System.Fabric.Description.ServiceTagsCollection.ToString" />
      <Member Id="P:System.Fabric.Description.ServiceTagsCollection.TagsRequiredToPlace" />
      <Member Id="P:System.Fabric.Description.ServiceTagsCollection.TagsRequiredToRun" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceTypeDescription" Id="T:System.Fabric.Description.ServiceTypeDescription">
      <Member Id="M:System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)" />
      <Member Id="M:System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceTypeDescription)" />
      <Member Id="M:System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.Extensions" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.Extensions_" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.IsStateful" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.LoadMetrics" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.PlacementConstraints" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.Policies" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind" />
      <Member Id="P:System.Fabric.Description.ServiceTypeDescription.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Description.ServiceUpdateDescription" Id="T:System.Fabric.Description.ServiceUpdateDescription">
      <Member Id="M:System.Fabric.Description.ServiceUpdateDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.Correlations" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.DefaultMoveCost" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.Kind" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.Metrics" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.PlacementConstraints" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.PlacementPolicies" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.RepartitionDescription" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.ScalingPolicies" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.ServiceDnsName" />
      <Member Id="P:System.Fabric.Description.ServiceUpdateDescription.ServiceTags" />
    </Type>
    <Type Name="System.Fabric.Description.SingletonPartitionSchemeDescription" Id="T:System.Fabric.Description.SingletonPartitionSchemeDescription">
      <Member Id="M:System.Fabric.Description.SingletonPartitionSchemeDescription.#ctor" />
    </Type>
    <Type Name="System.Fabric.Description.StartNodePoisonDescription" Id="T:System.Fabric.Description.StartNodePoisonDescription">
      <Member Id="M:System.Fabric.Description.StartNodePoisonDescription.#ctor(System.String,System.Numerics.BigInteger,System.Collections.Generic.List{System.String})" />
      <Member Id="M:System.Fabric.Description.StartNodePoisonDescription.ToString" />
      <Member Id="P:System.Fabric.Description.StartNodePoisonDescription.Neighbors" />
      <Member Id="P:System.Fabric.Description.StartNodePoisonDescription.NodeId" />
      <Member Id="P:System.Fabric.Description.StartNodePoisonDescription.NodeInstanceId" />
    </Type>
    <Type Name="System.Fabric.Description.StatefulServiceDescription" Id="T:System.Fabric.Description.StatefulServiceDescription">
      <Member Id="M:System.Fabric.Description.StatefulServiceDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.AuxiliaryReplicaCount" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.DropSourceReplicaOnMove" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.HasPersistedState" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.ReplicaLifecycleDescription" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.ServicePlacementTimeLimit" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize" />
    </Type>
    <Type Name="System.Fabric.Description.StatefulServiceLoadMetricDescription" Id="T:System.Fabric.Description.StatefulServiceLoadMetricDescription">
      <Member Id="M:System.Fabric.Description.StatefulServiceLoadMetricDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.StatefulServiceLoadMetricDescription.ToString" />
      <Member Id="P:System.Fabric.Description.StatefulServiceLoadMetricDescription.AuxiliaryDefaultLoad" />
      <Member Id="P:System.Fabric.Description.StatefulServiceLoadMetricDescription.PrimaryDefaultLoad" />
      <Member Id="P:System.Fabric.Description.StatefulServiceLoadMetricDescription.SecondaryDefaultLoad" />
    </Type>
    <Type Name="System.Fabric.Description.StatefulServiceTypeDescription" Id="T:System.Fabric.Description.StatefulServiceTypeDescription">
      <Member Id="M:System.Fabric.Description.StatefulServiceTypeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatefulServiceTypeDescription.HasPersistedState" />
    </Type>
    <Type Name="System.Fabric.Description.StatefulServiceUpdateDescription" Id="T:System.Fabric.Description.StatefulServiceUpdateDescription">
      <Member Id="M:System.Fabric.Description.StatefulServiceUpdateDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.AuxiliaryReplicaCount" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.DropSourceReplicaOnMove" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.MinReplicaSetSize" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.QuorumLossWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.ReplicaLifecycleDescription" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.ReplicaRestartWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.ServicePlacementTimeLimit" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.StandByReplicaKeepDuration" />
      <Member Id="P:System.Fabric.Description.StatefulServiceUpdateDescription.TargetReplicaSetSize" />
    </Type>
    <Type Name="System.Fabric.Description.StatelessServiceDescription" Id="T:System.Fabric.Description.StatelessServiceDescription">
      <Member Id="M:System.Fabric.Description.StatelessServiceDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.InstanceCloseDelayDuration" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.InstanceCount" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.InstanceLifecycleDescription" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.InstanceRestartWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.MinInstanceCount" />
      <Member Id="P:System.Fabric.Description.StatelessServiceDescription.MinInstancePercentage" />
    </Type>
    <Type Name="System.Fabric.Description.StatelessServiceLoadMetricDescription" Id="T:System.Fabric.Description.StatelessServiceLoadMetricDescription">
      <Member Id="M:System.Fabric.Description.StatelessServiceLoadMetricDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.StatelessServiceLoadMetricDescription.ToString" />
      <Member Id="P:System.Fabric.Description.StatelessServiceLoadMetricDescription.DefaultLoad" />
    </Type>
    <Type Name="System.Fabric.Description.StatelessServiceTypeDescription" Id="T:System.Fabric.Description.StatelessServiceTypeDescription">
      <Member Id="M:System.Fabric.Description.StatelessServiceTypeDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatelessServiceTypeDescription.UseImplicitHost" />
    </Type>
    <Type Name="System.Fabric.Description.StatelessServiceUpdateDescription" Id="T:System.Fabric.Description.StatelessServiceUpdateDescription">
      <Member Id="M:System.Fabric.Description.StatelessServiceUpdateDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.InstanceCloseDelayDuration" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.InstanceCount" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.InstanceLifecycleDescription" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.InstanceRestartWaitDuration" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.MinInstanceCount" />
      <Member Id="P:System.Fabric.Description.StatelessServiceUpdateDescription.MinInstancePercentage" />
    </Type>
    <Type Name="System.Fabric.Description.UniformInt64RangePartitionSchemeDescription" Id="T:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription">
      <Member Id="M:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.#ctor" />
      <Member Id="M:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.#ctor(System.Int32)" />
      <Member Id="M:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.#ctor(System.Int32,System.Int64,System.Int64)" />
      <Member Id="P:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.HighKey" />
      <Member Id="P:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.LowKey" />
      <Member Id="P:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription.PartitionCount" />
    </Type>
    <Type Name="System.Fabric.Description.UnprovisionApplicationTypeDescription" Id="T:System.Fabric.Description.UnprovisionApplicationTypeDescription">
      <Member Id="M:System.Fabric.Description.UnprovisionApplicationTypeDescription.#ctor(System.String,System.String)" />
      <Member Id="P:System.Fabric.Description.UnprovisionApplicationTypeDescription.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Description.UnprovisionApplicationTypeDescription.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Description.UnprovisionApplicationTypeDescription.Async" />
    </Type>
    <Type Name="System.Fabric.Description.UpdatePartitionLoadQueryDescription" Id="T:System.Fabric.Description.UpdatePartitionLoadQueryDescription">
      <Member Id="M:System.Fabric.Description.UpdatePartitionLoadQueryDescription.#ctor" />
      <Member Id="P:System.Fabric.Description.UpdatePartitionLoadQueryDescription.PartitionMetricLoadDescriptionList" />
    </Type>
    <Type Name="System.Fabric.Description.UpgradeKind" Id="T:System.Fabric.Description.UpgradeKind">
      <Member Id="F:System.Fabric.Description.UpgradeKind.Invalid" />
      <Member Id="F:System.Fabric.Description.UpgradeKind.Rolling" />
      <Member Id="F:System.Fabric.Description.UpgradeKind.Rolling_ForceRestart" />
      <Member Id="F:System.Fabric.Description.UpgradeKind.Rolling_NotificationOnly" />
    </Type>
    <Type Name="System.Fabric.Description.UpgradePolicyDescription" Id="T:System.Fabric.Description.UpgradePolicyDescription">
      <Member Id="M:System.Fabric.Description.UpgradePolicyDescription.#ctor(System.Fabric.Description.UpgradeKind)" />
      <Member Id="P:System.Fabric.Description.UpgradePolicyDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Description.UpgradeUpdateDescriptionBase" Id="T:System.Fabric.Description.UpgradeUpdateDescriptionBase">
      <Member Id="M:System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.InstanceCloseDelayDuration" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout" />
      <Member Id="P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout" />
    </Type>
    <Type Name="System.Fabric.Description.ValidateFabricUpgradeResult" Id="T:System.Fabric.Description.ValidateFabricUpgradeResult">
      <Member Id="M:System.Fabric.Description.ValidateFabricUpgradeResult.#ctor" />
      <Member Id="P:System.Fabric.Description.ValidateFabricUpgradeResult.ServiceHostUpgradeImpact" />
      <Member Id="P:System.Fabric.Description.ValidateFabricUpgradeResult.ValidationDetails" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Health">
    <Type Name="System.Fabric.Health.ApplicationHealth" Id="T:System.Fabric.Health.ApplicationHealth">
      <Member Id="M:System.Fabric.Health.ApplicationHealth.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealth.ApplicationName" />
      <Member Id="P:System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates" />
      <Member Id="P:System.Fabric.Health.ApplicationHealth.HealthStatistics" />
      <Member Id="P:System.Fabric.Health.ApplicationHealth.ServiceHealthStates" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthEvaluation" Id="T:System.Fabric.Health.ApplicationHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ApplicationHealthEvaluation.ApplicationName" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthPolicy" Id="T:System.Fabric.Health.ApplicationHealthPolicy">
      <Member Id="M:System.Fabric.Health.ApplicationHealthPolicy.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthPolicy.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthPolicy.ConsiderWarningAsError" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthPolicy.DefaultServiceTypeHealthPolicy" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthPolicy.MaxPercentUnhealthyDeployedApplications" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthPolicy.ServiceTypeHealthPolicyMap" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthPolicyMap" Id="T:System.Fabric.Health.ApplicationHealthPolicyMap">
      <Member Id="M:System.Fabric.Health.ApplicationHealthPolicyMap.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthPolicyMap.ToString" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthReport" Id="T:System.Fabric.Health.ApplicationHealthReport">
      <Member Id="M:System.Fabric.Health.ApplicationHealthReport.#ctor(System.Uri,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthReport.ApplicationName" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthState" Id="T:System.Fabric.Health.ApplicationHealthState">
      <Member Id="M:System.Fabric.Health.ApplicationHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthState.ApplicationName" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStateChunk" Id="T:System.Fabric.Health.ApplicationHealthStateChunk">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStateChunkList" Id="T:System.Fabric.Health.ApplicationHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStateFilter" Id="T:System.Fabric.Health.ApplicationHealthStateFilter">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateFilter.ApplicationNameFilter" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateFilter.ApplicationTypeNameFilter" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateFilter.DeployedApplicationFilters" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateFilter.ServiceFilters" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStateList" Id="T:System.Fabric.Health.ApplicationHealthStateList">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.Add(System.Fabric.Health.ApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.Contains(System.Fabric.Health.ApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.CopyTo(System.Fabric.Health.ApplicationHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.IndexOf(System.Fabric.Health.ApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.Insert(System.Int32,System.Fabric.Health.ApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.Remove(System.Fabric.Health.ApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStatesFilter" Id="T:System.Fabric.Health.ApplicationHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationHealthStatisticsFilter" Id="T:System.Fabric.Health.ApplicationHealthStatisticsFilter">
      <Member Id="M:System.Fabric.Health.ApplicationHealthStatisticsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationHealthStatisticsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ApplicationHealthStatisticsFilter.ExcludeHealthStatistics" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationsHealthEvaluation" Id="T:System.Fabric.Health.ApplicationsHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ApplicationsHealthEvaluation.MaxPercentUnhealthyApplications" />
      <Member Id="P:System.Fabric.Health.ApplicationsHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.ApplicationsHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation" Id="T:System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation.MaxPercentUnhealthyApplications" />
      <Member Id="P:System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.ApplicationTypeApplicationsHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ApplicationTypeHealthPolicyMap" Id="T:System.Fabric.Health.ApplicationTypeHealthPolicyMap">
      <Member Id="M:System.Fabric.Health.ApplicationTypeHealthPolicyMap.#ctor" />
      <Member Id="M:System.Fabric.Health.ApplicationTypeHealthPolicyMap.Add(System.String,System.Byte)" />
      <Member Id="M:System.Fabric.Health.ApplicationTypeHealthPolicyMap.ToString" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterHealth" Id="T:System.Fabric.Health.ClusterHealth">
      <Member Id="M:System.Fabric.Health.ClusterHealth.ToString" />
      <Member Id="P:System.Fabric.Health.ClusterHealth.ApplicationHealthStates" />
      <Member Id="P:System.Fabric.Health.ClusterHealth.HealthStatistics" />
      <Member Id="P:System.Fabric.Health.ClusterHealth.NodeHealthStates" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterHealthChunk" Id="T:System.Fabric.Health.ClusterHealthChunk">
      <Member Id="M:System.Fabric.Health.ClusterHealthChunk.ToString" />
      <Member Id="P:System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks" />
      <Member Id="P:System.Fabric.Health.ClusterHealthChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterHealthPolicy" Id="T:System.Fabric.Health.ClusterHealthPolicy">
      <Member Id="M:System.Fabric.Health.ClusterHealthPolicy.#ctor" />
      <Member Id="M:System.Fabric.Health.ClusterHealthPolicy.ToString" />
      <Member Id="P:System.Fabric.Health.ClusterHealthPolicy.ApplicationTypeHealthPolicyMap" />
      <Member Id="P:System.Fabric.Health.ClusterHealthPolicy.ConsiderWarningAsError" />
      <Member Id="P:System.Fabric.Health.ClusterHealthPolicy.MaxPercentUnhealthyApplications" />
      <Member Id="P:System.Fabric.Health.ClusterHealthPolicy.MaxPercentUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.ClusterHealthPolicy.NodeTypeHealthPolicyMap" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterHealthReport" Id="T:System.Fabric.Health.ClusterHealthReport">
      <Member Id="M:System.Fabric.Health.ClusterHealthReport.#ctor(System.Fabric.Health.HealthInformation)" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterHealthStatisticsFilter" Id="T:System.Fabric.Health.ClusterHealthStatisticsFilter">
      <Member Id="M:System.Fabric.Health.ClusterHealthStatisticsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ClusterHealthStatisticsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ClusterHealthStatisticsFilter.ExcludeHealthStatistics" />
      <Member Id="P:System.Fabric.Health.ClusterHealthStatisticsFilter.IncludeSystemApplicationHealthStatistics" />
    </Type>
    <Type Name="System.Fabric.Health.ClusterUpgradeHealthPolicy" Id="T:System.Fabric.Health.ClusterUpgradeHealthPolicy">
      <Member Id="M:System.Fabric.Health.ClusterUpgradeHealthPolicy.#ctor" />
      <Member Id="P:System.Fabric.Health.ClusterUpgradeHealthPolicy.MaxPercentDeltaUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.ClusterUpgradeHealthPolicy.MaxPercentUpgradeDomainDeltaUnhealthyNodes" />
    </Type>
    <Type Name="System.Fabric.Health.DeltaNodesCheckHealthEvaluation" Id="T:System.Fabric.Health.DeltaNodesCheckHealthEvaluation">
      <Member Id="P:System.Fabric.Health.DeltaNodesCheckHealthEvaluation.BaselineErrorCount" />
      <Member Id="P:System.Fabric.Health.DeltaNodesCheckHealthEvaluation.BaselineTotalCount" />
      <Member Id="P:System.Fabric.Health.DeltaNodesCheckHealthEvaluation.MaxPercentDeltaUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.DeltaNodesCheckHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.DeltaNodesCheckHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealth" Id="T:System.Fabric.Health.DeployedApplicationHealth">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealth.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealth.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealth.DeployedServicePackageHealthStates" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealth.HealthStatistics" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealth.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthEvaluation" Id="T:System.Fabric.Health.DeployedApplicationHealthEvaluation">
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthEvaluation.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthEvaluation.NodeName" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthReport" Id="T:System.Fabric.Health.DeployedApplicationHealthReport">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthReport.#ctor(System.Uri,System.String,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthReport.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthReport.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthState" Id="T:System.Fabric.Health.DeployedApplicationHealthState">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthState.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthState.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStateChunk" Id="T:System.Fabric.Health.DeployedApplicationHealthStateChunk">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateChunk.DeployedServicePackageHealthStateChunks" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateChunk.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStateChunkList" Id="T:System.Fabric.Health.DeployedApplicationHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStateFilter" Id="T:System.Fabric.Health.DeployedApplicationHealthStateFilter">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateFilter.DeployedServicePackageFilters" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateFilter.NodeNameFilter" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStateList" Id="T:System.Fabric.Health.DeployedApplicationHealthStateList">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.Add(System.Fabric.Health.DeployedApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.Contains(System.Fabric.Health.DeployedApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.CopyTo(System.Fabric.Health.DeployedApplicationHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.IndexOf(System.Fabric.Health.DeployedApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.Insert(System.Int32,System.Fabric.Health.DeployedApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.Remove(System.Fabric.Health.DeployedApplicationHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStatesFilter" Id="T:System.Fabric.Health.DeployedApplicationHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationHealthStatisticsFilter" Id="T:System.Fabric.Health.DeployedApplicationHealthStatisticsFilter">
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStatisticsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.DeployedApplicationHealthStatisticsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationHealthStatisticsFilter.ExcludeHealthStatistics" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedApplicationsHealthEvaluation" Id="T:System.Fabric.Health.DeployedApplicationsHealthEvaluation">
      <Member Id="P:System.Fabric.Health.DeployedApplicationsHealthEvaluation.MaxPercentUnhealthyDeployedApplications" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationsHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.DeployedApplicationsHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealth" Id="T:System.Fabric.Health.DeployedServicePackageHealth">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealth.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealth.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealth.NodeName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealth.ServiceManifestName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealth.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthEvaluation" Id="T:System.Fabric.Health.DeployedServicePackageHealthEvaluation">
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthEvaluation.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthEvaluation.NodeName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthEvaluation.ServiceManifestName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthEvaluation.ServicePackageActivationId" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthReport" Id="T:System.Fabric.Health.DeployedServicePackageHealthReport">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthReport.#ctor(System.Uri,System.String,System.String,System.Fabric.Health.HealthInformation)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthReport.#ctor(System.Uri,System.String,System.String,System.String,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthReport.NodeName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthReport.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthState" Id="T:System.Fabric.Health.DeployedServicePackageHealthState">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthState.NodeName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthState.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthStateChunk" Id="T:System.Fabric.Health.DeployedServicePackageHealthStateChunk">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateChunk.ServiceManifestName" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateChunk.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthStateChunkList" Id="T:System.Fabric.Health.DeployedServicePackageHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthStateFilter" Id="T:System.Fabric.Health.DeployedServicePackageHealthStateFilter">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateFilter.ServiceManifestNameFilter" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateFilter.ServicePackageActivationIdFilter" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthStateList" Id="T:System.Fabric.Health.DeployedServicePackageHealthStateList">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.Add(System.Fabric.Health.DeployedServicePackageHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.Contains(System.Fabric.Health.DeployedServicePackageHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.CopyTo(System.Fabric.Health.DeployedServicePackageHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.IndexOf(System.Fabric.Health.DeployedServicePackageHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.Insert(System.Int32,System.Fabric.Health.DeployedServicePackageHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.Remove(System.Fabric.Health.DeployedServicePackageHealthState)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackageHealthStatesFilter" Id="T:System.Fabric.Health.DeployedServicePackageHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.DeployedServicePackageHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackageHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.DeployedServicePackagesHealthEvaluation" Id="T:System.Fabric.Health.DeployedServicePackagesHealthEvaluation">
      <Member Id="P:System.Fabric.Health.DeployedServicePackagesHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.DeployedServicePackagesHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.EntityHealth" Id="T:System.Fabric.Health.EntityHealth">
      <Member Id="M:System.Fabric.Health.EntityHealth.#ctor" />
      <Member Id="M:System.Fabric.Health.EntityHealth.AddUnhealthyEvaluationsString(System.Text.StringBuilder)" />
      <Member Id="P:System.Fabric.Health.EntityHealth.AggregatedHealthState" />
      <Member Id="P:System.Fabric.Health.EntityHealth.HealthEvents" />
      <Member Id="P:System.Fabric.Health.EntityHealth.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.EntityHealthState" Id="T:System.Fabric.Health.EntityHealthState">
      <Member Id="M:System.Fabric.Health.EntityHealthState.#ctor" />
      <Member Id="P:System.Fabric.Health.EntityHealthState.AggregatedHealthState" />
    </Type>
    <Type Name="System.Fabric.Health.EntityKind" Id="T:System.Fabric.Health.EntityKind">
      <Member Id="F:System.Fabric.Health.EntityKind.Application" />
      <Member Id="F:System.Fabric.Health.EntityKind.Cluster" />
      <Member Id="F:System.Fabric.Health.EntityKind.DeployedApplication" />
      <Member Id="F:System.Fabric.Health.EntityKind.DeployedServicePackage" />
      <Member Id="F:System.Fabric.Health.EntityKind.Invalid" />
      <Member Id="F:System.Fabric.Health.EntityKind.Node" />
      <Member Id="F:System.Fabric.Health.EntityKind.Partition" />
      <Member Id="F:System.Fabric.Health.EntityKind.Replica" />
      <Member Id="F:System.Fabric.Health.EntityKind.Service" />
    </Type>
    <Type Name="System.Fabric.Health.EntityKindHealthStateCount" Id="T:System.Fabric.Health.EntityKindHealthStateCount">
      <Member Id="M:System.Fabric.Health.EntityKindHealthStateCount.ToString" />
      <Member Id="P:System.Fabric.Health.EntityKindHealthStateCount.EntityKind" />
      <Member Id="P:System.Fabric.Health.EntityKindHealthStateCount.HealthStateCount" />
    </Type>
    <Type Name="System.Fabric.Health.EventHealthEvaluation" Id="T:System.Fabric.Health.EventHealthEvaluation">
      <Member Id="P:System.Fabric.Health.EventHealthEvaluation.ConsiderWarningAsError" />
      <Member Id="P:System.Fabric.Health.EventHealthEvaluation.UnhealthyEvent" />
    </Type>
    <Type Name="System.Fabric.Health.HealthEvaluation" Id="T:System.Fabric.Health.HealthEvaluation">
      <Member Id="M:System.Fabric.Health.HealthEvaluation.#ctor(System.Fabric.Health.HealthEvaluationKind)" />
      <Member Id="M:System.Fabric.Health.HealthEvaluation.ToString" />
      <Member Id="P:System.Fabric.Health.HealthEvaluation.AggregatedHealthState" />
      <Member Id="P:System.Fabric.Health.HealthEvaluation.Description" />
      <Member Id="P:System.Fabric.Health.HealthEvaluation.Kind" />
    </Type>
    <Type Name="System.Fabric.Health.HealthEvaluationKind" Id="T:System.Fabric.Health.HealthEvaluationKind">
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Application" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Applications" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.ApplicationTypeApplications" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.DeltaNodesCheck" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.DeployedApplication" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.DeployedApplications" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.DeployedServicePackage" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.DeployedServicePackages" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Event" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Invalid" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Node" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Nodes" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.NodeTypeNodes" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Partition" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Partitions" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Replica" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Replicas" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Service" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.Services" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.SystemApplication" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.UpgradeDomainDeltaNodesCheck" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.UpgradeDomainDeployedApplications" />
      <Member Id="F:System.Fabric.Health.HealthEvaluationKind.UpgradeDomainNodes" />
    </Type>
    <Type Name="System.Fabric.Health.HealthEvent" Id="T:System.Fabric.Health.HealthEvent">
      <Member Id="M:System.Fabric.Health.HealthEvent.ToString" />
      <Member Id="P:System.Fabric.Health.HealthEvent.HealthInformation" />
      <Member Id="P:System.Fabric.Health.HealthEvent.IsExpired" />
      <Member Id="P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt" />
      <Member Id="P:System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp" />
      <Member Id="P:System.Fabric.Health.HealthEvent.LastOkTransitionAt" />
      <Member Id="P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt" />
      <Member Id="P:System.Fabric.Health.HealthEvent.SourceUtcTimestamp" />
    </Type>
    <Type Name="System.Fabric.Health.HealthEventsFilter" Id="T:System.Fabric.Health.HealthEventsFilter">
      <Member Id="M:System.Fabric.Health.HealthEventsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.HealthEventsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.HealthEventsFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.HealthEventsFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.HealthInformation" Id="T:System.Fabric.Health.HealthInformation">
      <Member Id="F:System.Fabric.Health.HealthInformation.AutoSequenceNumber" />
      <Member Id="F:System.Fabric.Health.HealthInformation.UnknownSequenceNumber" />
      <Member Id="M:System.Fabric.Health.HealthInformation.#ctor(System.String,System.String,System.Fabric.Health.HealthState)" />
      <Member Id="M:System.Fabric.Health.HealthInformation.ToString" />
      <Member Id="P:System.Fabric.Health.HealthInformation.Description" />
      <Member Id="P:System.Fabric.Health.HealthInformation.HealthReportId" />
      <Member Id="P:System.Fabric.Health.HealthInformation.HealthState" />
      <Member Id="P:System.Fabric.Health.HealthInformation.Property" />
      <Member Id="P:System.Fabric.Health.HealthInformation.RemoveWhenExpired" />
      <Member Id="P:System.Fabric.Health.HealthInformation.SequenceNumber" />
      <Member Id="P:System.Fabric.Health.HealthInformation.SourceId" />
      <Member Id="P:System.Fabric.Health.HealthInformation.TimeToLive" />
    </Type>
    <Type Name="System.Fabric.Health.HealthReport" Id="T:System.Fabric.Health.HealthReport">
      <Member Id="M:System.Fabric.Health.HealthReport.#ctor(System.Fabric.Health.HealthReportKind,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.HealthReport.HealthInformation" />
      <Member Id="P:System.Fabric.Health.HealthReport.Kind" />
    </Type>
    <Type Name="System.Fabric.Health.HealthReportKind" Id="T:System.Fabric.Health.HealthReportKind">
      <Member Id="F:System.Fabric.Health.HealthReportKind.Application" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.Cluster" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.DeployedApplication" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.DeployedServicePackage" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.Invalid" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.Node" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.Partition" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.Service" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.StatefulServiceReplica" />
      <Member Id="F:System.Fabric.Health.HealthReportKind.StatelessServiceInstance" />
    </Type>
    <Type Name="System.Fabric.Health.HealthReportSendOptions" Id="T:System.Fabric.Health.HealthReportSendOptions">
      <Member Id="M:System.Fabric.Health.HealthReportSendOptions.#ctor" />
      <Member Id="P:System.Fabric.Health.HealthReportSendOptions.Immediate" />
    </Type>
    <Type Name="System.Fabric.Health.HealthState" Id="T:System.Fabric.Health.HealthState">
      <Member Id="F:System.Fabric.Health.HealthState.Error" />
      <Member Id="F:System.Fabric.Health.HealthState.Invalid" />
      <Member Id="F:System.Fabric.Health.HealthState.Ok" />
      <Member Id="F:System.Fabric.Health.HealthState.Unknown" />
      <Member Id="F:System.Fabric.Health.HealthState.Warning" />
    </Type>
    <Type Name="System.Fabric.Health.HealthStateChunkList`1" Id="T:System.Fabric.Health.HealthStateChunkList`1">
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.#ctor" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.#ctor(System.Collections.Generic.IList{`0})" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.Add(`0)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.Clear" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.Contains(`0)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.Remove(`0)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:System.Fabric.Health.HealthStateChunkList`1.ToString" />
      <Member Id="P:System.Fabric.Health.HealthStateChunkList`1.Count" />
      <Member Id="P:System.Fabric.Health.HealthStateChunkList`1.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)" />
      <Member Id="P:System.Fabric.Health.HealthStateChunkList`1.TotalCount" />
    </Type>
    <Type Name="System.Fabric.Health.HealthStateChunkListHelper" Id="T:System.Fabric.Health.HealthStateChunkListHelper">
      <Member Id="M:System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})" />
    </Type>
    <Type Name="System.Fabric.Health.HealthStateCount" Id="T:System.Fabric.Health.HealthStateCount">
      <Member Id="M:System.Fabric.Health.HealthStateCount.ToString" />
      <Member Id="P:System.Fabric.Health.HealthStateCount.ErrorCount" />
      <Member Id="P:System.Fabric.Health.HealthStateCount.OkCount" />
      <Member Id="P:System.Fabric.Health.HealthStateCount.WarningCount" />
    </Type>
    <Type Name="System.Fabric.Health.HealthStateFilter" Id="T:System.Fabric.Health.HealthStateFilter">
      <Member Id="F:System.Fabric.Health.HealthStateFilter.All" />
      <Member Id="F:System.Fabric.Health.HealthStateFilter.Default" />
      <Member Id="F:System.Fabric.Health.HealthStateFilter.Error" />
      <Member Id="F:System.Fabric.Health.HealthStateFilter.None" />
      <Member Id="F:System.Fabric.Health.HealthStateFilter.Ok" />
      <Member Id="F:System.Fabric.Health.HealthStateFilter.Warning" />
    </Type>
    <Type Name="System.Fabric.Health.HealthStatistics" Id="T:System.Fabric.Health.HealthStatistics">
      <Member Id="M:System.Fabric.Health.HealthStatistics.ToString" />
      <Member Id="P:System.Fabric.Health.HealthStatistics.HealthStateCountList" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealth" Id="T:System.Fabric.Health.NodeHealth">
      <Member Id="M:System.Fabric.Health.NodeHealth.ToString" />
      <Member Id="P:System.Fabric.Health.NodeHealth.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthEvaluation" Id="T:System.Fabric.Health.NodeHealthEvaluation">
      <Member Id="P:System.Fabric.Health.NodeHealthEvaluation.NodeName" />
      <Member Id="P:System.Fabric.Health.NodeHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthReport" Id="T:System.Fabric.Health.NodeHealthReport">
      <Member Id="M:System.Fabric.Health.NodeHealthReport.#ctor(System.String,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.NodeHealthReport.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthState" Id="T:System.Fabric.Health.NodeHealthState">
      <Member Id="M:System.Fabric.Health.NodeHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.NodeHealthState.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthStateChunk" Id="T:System.Fabric.Health.NodeHealthStateChunk">
      <Member Id="M:System.Fabric.Health.NodeHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateChunk.NodeName" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthStateChunkList" Id="T:System.Fabric.Health.NodeHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.NodeHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthStateFilter" Id="T:System.Fabric.Health.NodeHealthStateFilter">
      <Member Id="M:System.Fabric.Health.NodeHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthStateList" Id="T:System.Fabric.Health.NodeHealthStateList">
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.Add(System.Fabric.Health.NodeHealthState)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.Contains(System.Fabric.Health.NodeHealthState)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.CopyTo(System.Fabric.Health.NodeHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.IndexOf(System.Fabric.Health.NodeHealthState)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.Insert(System.Int32,System.Fabric.Health.NodeHealthState)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.Remove(System.Fabric.Health.NodeHealthState)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.NodeHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.NodeHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.NodeHealthStatesFilter" Id="T:System.Fabric.Health.NodeHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.NodeHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.NodeHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.NodeHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.NodeHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.NodesHealthEvaluation" Id="T:System.Fabric.Health.NodesHealthEvaluation">
      <Member Id="P:System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.NodesHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.NodeTypeHealthPolicyMap" Id="T:System.Fabric.Health.NodeTypeHealthPolicyMap">
      <Member Id="M:System.Fabric.Health.NodeTypeHealthPolicyMap.#ctor" />
      <Member Id="M:System.Fabric.Health.NodeTypeHealthPolicyMap.Add(System.String,System.Byte)" />
      <Member Id="M:System.Fabric.Health.NodeTypeHealthPolicyMap.ToString" />
    </Type>
    <Type Name="System.Fabric.Health.NodeTypeNodesHealthEvaluation" Id="T:System.Fabric.Health.NodeTypeNodesHealthEvaluation">
      <Member Id="P:System.Fabric.Health.NodeTypeNodesHealthEvaluation.MaxPercentUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.NodeTypeNodesHealthEvaluation.NodeTypeName" />
      <Member Id="P:System.Fabric.Health.NodeTypeNodesHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.NodeTypeNodesHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealth" Id="T:System.Fabric.Health.PartitionHealth">
      <Member Id="M:System.Fabric.Health.PartitionHealth.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealth.HealthStatistics" />
      <Member Id="P:System.Fabric.Health.PartitionHealth.PartitionId" />
      <Member Id="P:System.Fabric.Health.PartitionHealth.ReplicaHealthStates" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthEvaluation" Id="T:System.Fabric.Health.PartitionHealthEvaluation">
      <Member Id="P:System.Fabric.Health.PartitionHealthEvaluation.PartitionId" />
      <Member Id="P:System.Fabric.Health.PartitionHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthReport" Id="T:System.Fabric.Health.PartitionHealthReport">
      <Member Id="M:System.Fabric.Health.PartitionHealthReport.#ctor(System.Guid,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.PartitionHealthReport.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthState" Id="T:System.Fabric.Health.PartitionHealthState">
      <Member Id="M:System.Fabric.Health.PartitionHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealthState.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStateChunk" Id="T:System.Fabric.Health.PartitionHealthStateChunk">
      <Member Id="M:System.Fabric.Health.PartitionHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateChunk.PartitionId" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateChunk.ReplicaHealthStateChunks" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStateChunkList" Id="T:System.Fabric.Health.PartitionHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.PartitionHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStateFilter" Id="T:System.Fabric.Health.PartitionHealthStateFilter">
      <Member Id="M:System.Fabric.Health.PartitionHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateFilter.PartitionIdFilter" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateFilter.ReplicaFilters" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStateList" Id="T:System.Fabric.Health.PartitionHealthStateList">
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.Add(System.Fabric.Health.PartitionHealthState)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.Contains(System.Fabric.Health.PartitionHealthState)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.CopyTo(System.Fabric.Health.PartitionHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.IndexOf(System.Fabric.Health.PartitionHealthState)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.Insert(System.Int32,System.Fabric.Health.PartitionHealthState)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.Remove(System.Fabric.Health.PartitionHealthState)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStatesFilter" Id="T:System.Fabric.Health.PartitionHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.PartitionHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionHealthStatisticsFilter" Id="T:System.Fabric.Health.PartitionHealthStatisticsFilter">
      <Member Id="M:System.Fabric.Health.PartitionHealthStatisticsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.PartitionHealthStatisticsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.PartitionHealthStatisticsFilter.ExcludeHealthStatistics" />
    </Type>
    <Type Name="System.Fabric.Health.PartitionsHealthEvaluation" Id="T:System.Fabric.Health.PartitionsHealthEvaluation">
      <Member Id="P:System.Fabric.Health.PartitionsHealthEvaluation.MaxPercentUnhealthyPartitionsPerService" />
      <Member Id="P:System.Fabric.Health.PartitionsHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.PartitionsHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealth" Id="T:System.Fabric.Health.ReplicaHealth">
      <Member Id="M:System.Fabric.Health.ReplicaHealth.ToString" />
      <Member Id="P:System.Fabric.Health.ReplicaHealth.Id" />
      <Member Id="P:System.Fabric.Health.ReplicaHealth.Kind" />
      <Member Id="P:System.Fabric.Health.ReplicaHealth.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthEvaluation" Id="T:System.Fabric.Health.ReplicaHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ReplicaHealthEvaluation.PartitionId" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthEvaluation.ReplicaOrInstanceId" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthState" Id="T:System.Fabric.Health.ReplicaHealthState">
      <Member Id="M:System.Fabric.Health.ReplicaHealthState.#ctor(System.Fabric.Query.ServiceKind)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthState.Id" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthState.Kind" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthState.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthStateChunk" Id="T:System.Fabric.Health.ReplicaHealthStateChunk">
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateChunk.ReplicaOrInstanceId" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthStateChunkList" Id="T:System.Fabric.Health.ReplicaHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthStateFilter" Id="T:System.Fabric.Health.ReplicaHealthStateFilter">
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateFilter.ReplicaOrInstanceIdFilter" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthStateList" Id="T:System.Fabric.Health.ReplicaHealthStateList">
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.Add(System.Fabric.Health.ReplicaHealthState)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.Contains(System.Fabric.Health.ReplicaHealthState)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.CopyTo(System.Fabric.Health.ReplicaHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.IndexOf(System.Fabric.Health.ReplicaHealthState)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.Insert(System.Int32,System.Fabric.Health.ReplicaHealthState)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.Remove(System.Fabric.Health.ReplicaHealthState)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicaHealthStatesFilter" Id="T:System.Fabric.Health.ReplicaHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.ReplicaHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ReplicaHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.ReplicasHealthEvaluation" Id="T:System.Fabric.Health.ReplicasHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ReplicasHealthEvaluation.MaxPercentUnhealthyReplicasPerPartition" />
      <Member Id="P:System.Fabric.Health.ReplicasHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.ReplicasHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealth" Id="T:System.Fabric.Health.ServiceHealth">
      <Member Id="M:System.Fabric.Health.ServiceHealth.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealth.HealthStatistics" />
      <Member Id="P:System.Fabric.Health.ServiceHealth.PartitionHealthStates" />
      <Member Id="P:System.Fabric.Health.ServiceHealth.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthEvaluation" Id="T:System.Fabric.Health.ServiceHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ServiceHealthEvaluation.ServiceName" />
      <Member Id="P:System.Fabric.Health.ServiceHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthReport" Id="T:System.Fabric.Health.ServiceHealthReport">
      <Member Id="M:System.Fabric.Health.ServiceHealthReport.#ctor(System.Uri,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.ServiceHealthReport.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthState" Id="T:System.Fabric.Health.ServiceHealthState">
      <Member Id="M:System.Fabric.Health.ServiceHealthState.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealthState.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStateChunk" Id="T:System.Fabric.Health.ServiceHealthStateChunk">
      <Member Id="M:System.Fabric.Health.ServiceHealthStateChunk.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateChunk.HealthState" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateChunk.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStateChunkList" Id="T:System.Fabric.Health.ServiceHealthStateChunkList">
      <Member Id="M:System.Fabric.Health.ServiceHealthStateChunkList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStateFilter" Id="T:System.Fabric.Health.ServiceHealthStateFilter">
      <Member Id="M:System.Fabric.Health.ServiceHealthStateFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStateList" Id="T:System.Fabric.Health.ServiceHealthStateList">
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.Add(System.Fabric.Health.ServiceHealthState)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.Clear" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.Contains(System.Fabric.Health.ServiceHealthState)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.CopyTo(System.Fabric.Health.ServiceHealthState[],System.Int32)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.GetEnumerator" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.IndexOf(System.Fabric.Health.ServiceHealthState)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.Insert(System.Int32,System.Fabric.Health.ServiceHealthState)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.Remove(System.Fabric.Health.ServiceHealthState)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStateList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateList.Count" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateList.IsReadOnly" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStateList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStatesFilter" Id="T:System.Fabric.Health.ServiceHealthStatesFilter">
      <Member Id="M:System.Fabric.Health.ServiceHealthStatesFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStatesFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStatesFilter.HealthStateFilter" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStatesFilter.HealthStateFilterValue" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceHealthStatisticsFilter" Id="T:System.Fabric.Health.ServiceHealthStatisticsFilter">
      <Member Id="M:System.Fabric.Health.ServiceHealthStatisticsFilter.#ctor" />
      <Member Id="M:System.Fabric.Health.ServiceHealthStatisticsFilter.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceHealthStatisticsFilter.ExcludeHealthStatistics" />
    </Type>
    <Type Name="System.Fabric.Health.ServicesHealthEvaluation" Id="T:System.Fabric.Health.ServicesHealthEvaluation">
      <Member Id="P:System.Fabric.Health.ServicesHealthEvaluation.MaxPercentUnhealthyServices" />
      <Member Id="P:System.Fabric.Health.ServicesHealthEvaluation.ServiceTypeName" />
      <Member Id="P:System.Fabric.Health.ServicesHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.ServicesHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.ServiceTypeHealthPolicy" Id="T:System.Fabric.Health.ServiceTypeHealthPolicy">
      <Member Id="M:System.Fabric.Health.ServiceTypeHealthPolicy.#ctor" />
      <Member Id="M:System.Fabric.Health.ServiceTypeHealthPolicy.ToString" />
      <Member Id="P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService" />
      <Member Id="P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition" />
      <Member Id="P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices" />
    </Type>
    <Type Name="System.Fabric.Health.StatefulServiceReplicaHealth" Id="T:System.Fabric.Health.StatefulServiceReplicaHealth">
      <Member Id="P:System.Fabric.Health.StatefulServiceReplicaHealth.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.Health.StatefulServiceReplicaHealthReport" Id="T:System.Fabric.Health.StatefulServiceReplicaHealthReport">
      <Member Id="M:System.Fabric.Health.StatefulServiceReplicaHealthReport.#ctor(System.Guid,System.Int64,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.StatefulServiceReplicaHealthReport.PartitionId" />
      <Member Id="P:System.Fabric.Health.StatefulServiceReplicaHealthReport.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.Health.StatefulServiceReplicaHealthState" Id="T:System.Fabric.Health.StatefulServiceReplicaHealthState">
      <Member Id="P:System.Fabric.Health.StatefulServiceReplicaHealthState.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.Health.StatelessServiceInstanceHealth" Id="T:System.Fabric.Health.StatelessServiceInstanceHealth">
      <Member Id="P:System.Fabric.Health.StatelessServiceInstanceHealth.InstanceId" />
    </Type>
    <Type Name="System.Fabric.Health.StatelessServiceInstanceHealthReport" Id="T:System.Fabric.Health.StatelessServiceInstanceHealthReport">
      <Member Id="M:System.Fabric.Health.StatelessServiceInstanceHealthReport.#ctor(System.Guid,System.Int64,System.Fabric.Health.HealthInformation)" />
      <Member Id="P:System.Fabric.Health.StatelessServiceInstanceHealthReport.InstanceId" />
      <Member Id="P:System.Fabric.Health.StatelessServiceInstanceHealthReport.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Health.StatelessServiceInstanceHealthState" Id="T:System.Fabric.Health.StatelessServiceInstanceHealthState">
      <Member Id="P:System.Fabric.Health.StatelessServiceInstanceHealthState.InstanceId" />
    </Type>
    <Type Name="System.Fabric.Health.SystemApplicationHealthEvaluation" Id="T:System.Fabric.Health.SystemApplicationHealthEvaluation">
      <Member Id="P:System.Fabric.Health.SystemApplicationHealthEvaluation.UnhealthyEvaluations" />
    </Type>
    <Type Name="System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation" Id="T:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation">
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.BaselineErrorCount" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.BaselineTotalCount" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.MaxPercentUpgradeDomainDeltaUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.UnhealthyEvaluations" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeltaNodesCheckHealthEvaluation.UpgradeDomainName" />
    </Type>
    <Type Name="System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation" Id="T:System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation">
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation.MaxPercentUnhealthyDeployedApplications" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation.UnhealthyEvaluations" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainDeployedApplicationsHealthEvaluation.UpgradeDomainName" />
    </Type>
    <Type Name="System.Fabric.Health.UpgradeDomainNodesHealthEvaluation" Id="T:System.Fabric.Health.UpgradeDomainNodesHealthEvaluation">
      <Member Id="P:System.Fabric.Health.UpgradeDomainNodesHealthEvaluation.MaxPercentUnhealthyNodes" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainNodesHealthEvaluation.TotalCount" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainNodesHealthEvaluation.UnhealthyEvaluations" />
      <Member Id="P:System.Fabric.Health.UpgradeDomainNodesHealthEvaluation.UpgradeDomainName" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.ImageStore">
    <Type Name="System.Fabric.ImageStore.ImageStoreUtility" Id="T:System.Fabric.ImageStore.ImageStoreUtility">
      <Member Id="F:System.Fabric.ImageStore.ImageStoreUtility.Sha256" />
      <Member Id="F:System.Fabric.ImageStore.ImageStoreUtility.Sha256Tag" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.#ctor" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.ArchiveApplicationPackage(System.String,System.Fabric.IImageStoreProgressHandler)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.ComputeHash(System.String,System.String,System.Boolean)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.ExpandSfpkg(System.String,System.String)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.GenerateApplicationPackageChecksumFiles(System.String,System.Fabric.IImageStoreProgressHandler,System.Boolean)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.GenerateSfpkg(System.String,System.String,System.Boolean,System.String)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.HasAlgorithmTag(System.String)" />
      <Member Id="M:System.Fabric.ImageStore.ImageStoreUtility.TryExtractApplicationPackage(System.String,System.Fabric.IImageStoreProgressHandler)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Management.ServiceModel">
    <Type Name="System.Fabric.Management.ServiceModel.AppInstanceDefinitionType" Id="T:System.Fabric.Management.ServiceModel.AppInstanceDefinitionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.AppInstanceDefinitionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AppInstanceDefinitionType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AppInstanceDefinitionType.Parameters" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.AppInstanceDefinitionTypeParameter" Id="T:System.Fabric.Management.ServiceModel.AppInstanceDefinitionTypeParameter">
      <Member Id="M:System.Fabric.Management.ServiceModel.AppInstanceDefinitionTypeParameter.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AppInstanceDefinitionTypeParameter.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AppInstanceDefinitionTypeParameter.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType" Id="T:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType.ConsiderWarningAsError" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType.DefaultServiceTypeHealthPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType.MaxPercentUnhealthyDeployedApplications" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyType.ServiceTypeHealthPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationHealthPolicyTypeServiceTypeHealthPolicy" Id="T:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyTypeServiceTypeHealthPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyTypeServiceTypeHealthPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationHealthPolicyTypeServiceTypeHealthPolicy.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationInstanceType" Id="T:System.Fabric.Management.ServiceModel.ApplicationInstanceType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationInstanceType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.AnyAttr" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ApplicationId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ApplicationPackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.DefaultServices" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ManifestId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.NameUri" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ServicePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.ServiceTemplates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationInstanceTypeApplicationPackageRef" Id="T:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeApplicationPackageRef">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeApplicationPackageRef.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeApplicationPackageRef.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationInstanceTypeServicePackageRef" Id="T:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeServicePackageRef">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeServicePackageRef.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeServicePackageRef.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationInstanceTypeServicePackageRef.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationManifestType" Id="T:System.Fabric.Management.ServiceModel.ApplicationManifestType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationManifestType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.AnyAttr" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Certificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.DefaultServices" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Description" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Diagnostics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.ManifestId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Parameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Policies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.Principals" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.ServiceManifestImport" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestType.ServiceTemplates" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationManifestTypeCertificates" Id="T:System.Fabric.Management.ServiceModel.ApplicationManifestTypeCertificates">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationManifestTypeCertificates.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeCertificates.EndpointCertificate" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeCertificates.SecretsCertificate" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationManifestTypeParameter" Id="T:System.Fabric.Management.ServiceModel.ApplicationManifestTypeParameter">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationManifestTypeParameter.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeParameter.DefaultValue" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeParameter.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport" Id="T:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.ConfigOverrides" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.EnvironmentOverrides" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.Policies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.ResourceOverrides" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationManifestTypeServiceManifestImport.ServiceManifestRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPackageType" Id="T:System.Fabric.Management.ServiceModel.ApplicationPackageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPackageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.ApplicationId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.ContentChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.DigestedCertificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.DigestedEnvironment" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.NameUri" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageType.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates" Id="T:System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates.EndpointCertificate" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates.RolloutVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPackageTypeDigestedCertificates.SecretsCertificate" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPoliciesType" Id="T:System.Fabric.Management.ServiceModel.ApplicationPoliciesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPoliciesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesType.DefaultRunAsPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesType.HealthPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesType.LogCollectionPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesType.SecurityAccessPolicies" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeDefaultRunAsPolicy" Id="T:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeDefaultRunAsPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeDefaultRunAsPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeDefaultRunAsPolicy.UserRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPolicies" Id="T:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPolicies">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPolicies.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPolicies.LogCollectionPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPoliciesLogCollectionPolicy" Id="T:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPoliciesLogCollectionPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPoliciesLogCollectionPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeLogCollectionPoliciesLogCollectionPolicy.Path" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeSecurityAccessPolicies" Id="T:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeSecurityAccessPolicies">
      <Member Id="M:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeSecurityAccessPolicies.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ApplicationPoliciesTypeSecurityAccessPolicies.SecurityAccessPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.AzureBlobETWType" Id="T:System.Fabric.Management.ServiceModel.AzureBlobETWType">
      <Member Id="M:System.Fabric.Management.ServiceModel.AzureBlobETWType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureBlobETWType.LevelFilter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.AzureBlobType" Id="T:System.Fabric.Management.ServiceModel.AzureBlobType">
      <Member Id="M:System.Fabric.Management.ServiceModel.AzureBlobType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureBlobType.ContainerName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.AzureRoleType" Id="T:System.Fabric.Management.ServiceModel.AzureRoleType">
      <Member Id="M:System.Fabric.Management.ServiceModel.AzureRoleType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureRoleType.NodeTypeRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureRoleType.RoleName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureRoleType.SeedNodeCount" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.AzureStoreBaseType" Id="T:System.Fabric.Management.ServiceModel.AzureStoreBaseType">
      <Member Id="M:System.Fabric.Management.ServiceModel.AzureStoreBaseType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.ConnectionString" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.ConnectionStringIsEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.DataDeletionAgeInDays" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.Parameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.AzureStoreBaseType.UploadIntervalInMinutes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.BlackbirdRoleType" Id="T:System.Fabric.Management.ServiceModel.BlackbirdRoleType">
      <Member Id="M:System.Fabric.Management.ServiceModel.BlackbirdRoleType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.BlackbirdRoleType.EnvironmentName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.BlackbirdRoleType.IsSeedNode" />
      <Member Id="P:System.Fabric.Management.ServiceModel.BlackbirdRoleType.NodeTypeRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.BlackbirdRoleType.RoleName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.CertificatesType" Id="T:System.Fabric.Management.ServiceModel.CertificatesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.CertificatesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CertificatesType.ClientCertificate" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CertificatesType.ClusterCertificate" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CertificatesType.ServerCertificate" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CertificatesType.UserRoleClientCertificate" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestType" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.Certificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.Description" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.FabricSettings" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.Infrastructure" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.NodeTypes" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeCertificates" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeCertificates">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeCertificates.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeCertificates.SecretsCertificate" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructure" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructure">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructure.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructure.Item" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureBlackbird" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureBlackbird">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureBlackbird.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureBlackbird.Roles" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureFlexibleDynamicTopology" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureFlexibleDynamicTopology">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureFlexibleDynamicTopology.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureFlexibleDynamicTopology.StaticVotes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureLinux" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureLinux">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureLinux.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureLinux.IsScaleMin" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructurePaaS" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructurePaaS">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructurePaaS.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructurePaaS.Roles" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructurePaaS.Votes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzure" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzure">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzure.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzure.Roles" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzureStaticTopology" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzureStaticTopology">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsAzureStaticTopology.#ctor" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsServer" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsServer">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsServer.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeInfrastructureWindowsServer.IsScaleMin" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType" Id="T:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.AllowStatefulWorkloads" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.Capacities" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.Certificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.Endpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.KtlLoggerSettings" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.LogicalDirectories" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.PlacementProperties" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.SfssRgPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ClusterManifestTypeNodeType.UserServiceMetricCapacities" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.CodePackagePoliciesType" Id="T:System.Fabric.Management.ServiceModel.CodePackagePoliciesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.CodePackagePoliciesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackagePoliciesType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackagePoliciesType.EntryPointOverride" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackagePoliciesType.Probes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.CodePackageType" Id="T:System.Fabric.Management.ServiceModel.CodePackageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.CodePackageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.EntryPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.EnvironmentVariables" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.ExecOrder" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.Initializer" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.IsActivator" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.IsShared" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.SetupEntryPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.CodePackageTypeSetupEntryPoint" Id="T:System.Fabric.Management.ServiceModel.CodePackageTypeSetupEntryPoint">
      <Member Id="M:System.Fabric.Management.ServiceModel.CodePackageTypeSetupEntryPoint.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.CodePackageTypeSetupEntryPoint.ExeHost" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ConfigOverrideType" Id="T:System.Fabric.Management.ServiceModel.ConfigOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ConfigOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigOverrideType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigOverrideType.Settings" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType" Id="T:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType.EnvironmentVariableName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType.MountPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageDescriptionType.SectionName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ConfigPackagePoliciesType" Id="T:System.Fabric.Management.ServiceModel.ConfigPackagePoliciesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ConfigPackagePoliciesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackagePoliciesType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackagePoliciesType.ConfigPackage" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ConfigPackageType" Id="T:System.Fabric.Management.ServiceModel.ConfigPackageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ConfigPackageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ConfigPackageType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerCertificateType" Id="T:System.Fabric.Management.ServiceModel.ContainerCertificateType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerCertificateType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.DataPackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.DataPackageVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.IsPasswordEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.Password" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.RelativePath" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.X509FindValue" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerCertificateType.X509StoreName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerHealthConfigType" Id="T:System.Fabric.Management.ServiceModel.ContainerHealthConfigType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerHealthConfigType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHealthConfigType.IncludeDockerHealthStatusInSystemHealthReport" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHealthConfigType.RestartContainerOnUnhealthyDockerHealthStatus" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHealthConfigType.TreatContainerUnhealthyStatusAsError" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType" Id="T:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType.Commands" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType.EntryPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType.FromSource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointOverrideType.ImageOverrides" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerHostEntryPointType" Id="T:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType.Commands" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType.EntryPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType.FromSource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostEntryPointType.ImageName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerHostPoliciesType" Id="T:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.AutoRemove" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.ContainersRetentionCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.Hostname" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.Isolation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.Items" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.Privileged" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.RunInteractive" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.UseDefaultRepositoryCredentials" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerHostPoliciesType.UseTokenAuthenticationCredentials" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerLabelType" Id="T:System.Fabric.Management.ServiceModel.ContainerLabelType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerLabelType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerLabelType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerLabelType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerLoggingDriverType" Id="T:System.Fabric.Management.ServiceModel.ContainerLoggingDriverType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerLoggingDriverType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerLoggingDriverType.Driver" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerLoggingDriverType.Items" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerNetworkConfigType" Id="T:System.Fabric.Management.ServiceModel.ContainerNetworkConfigType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerNetworkConfigType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerNetworkConfigType.NetworkType" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerNetworkPolicyEndpointBindingType" Id="T:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyEndpointBindingType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyEndpointBindingType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyEndpointBindingType.EndpointRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerNetworkPolicyType" Id="T:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyType.Items" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerNetworkPolicyType.NetworkRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ContainerVolumeType" Id="T:System.Fabric.Management.ServiceModel.ContainerVolumeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ContainerVolumeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerVolumeType.Destination" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerVolumeType.Driver" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerVolumeType.IsReadOnly" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerVolumeType.Items" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ContainerVolumeType.Source" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DataPackageType" Id="T:System.Fabric.Management.ServiceModel.DataPackageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DataPackageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DataPackageType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DataPackageType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DebugParametersType" Id="T:System.Fabric.Management.ServiceModel.DebugParametersType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DebugParametersType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.Arguments" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.CodePackageLinkFolder" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ConfigPackageLinkFolder" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ContainerEntryPoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ContainerEnvironmentBlock" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ContainerLabel" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ContainerMountedVolume" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.DataPackageLinkFolder" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.DebugParametersFile" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.EntryPointType" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.EnvironmentBlock" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.LockFile" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.ProgramExePath" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DebugParametersType.WorkingFolder" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DebugParametersTypeEntryPointType" Id="T:System.Fabric.Management.ServiceModel.DebugParametersTypeEntryPointType">
      <Member Id="F:System.Fabric.Management.ServiceModel.DebugParametersTypeEntryPointType.All" />
      <Member Id="F:System.Fabric.Management.ServiceModel.DebugParametersTypeEntryPointType.Main" />
      <Member Id="F:System.Fabric.Management.ServiceModel.DebugParametersTypeEntryPointType.Setup" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DefaultServicesType" Id="T:System.Fabric.Management.ServiceModel.DefaultServicesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DefaultServicesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesType.Items" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DefaultServicesTypeService" Id="T:System.Fabric.Management.ServiceModel.DefaultServicesTypeService">
      <Member Id="M:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.GeneratedIdRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.Item" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.ServiceDnsName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeService.ServicePackageActivationMode" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup" Id="T:System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup.Item" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DefaultServicesTypeServiceGroup.ServicePackageActivationMode" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsType" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsType.CrashDumpSource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsType.ETWSource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsType.FolderSource" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource.Destinations" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSource.Parameters" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations.AzureBlob" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations.FileStore" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeCrashDumpSourceDestinations.LocalStore" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource.Destinations" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSource.Parameters" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations.AzureBlob" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations.FileStore" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeETWSourceDestinations.LocalStore" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.DataDeletionAgeInDays" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.Destinations" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.Parameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSource.RelativeFolderPath" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations" Id="T:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations">
      <Member Id="M:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations.AzureBlob" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations.FileStore" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DiagnosticsTypeFolderSourceDestinations.LocalStore" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DllHostEntryPointType" Id="T:System.Fabric.Management.ServiceModel.DllHostEntryPointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DllHostEntryPointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DllHostEntryPointType.IsolationPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DllHostEntryPointType.Items" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DllHostEntryPointTypeIsolationPolicy" Id="T:System.Fabric.Management.ServiceModel.DllHostEntryPointTypeIsolationPolicy">
      <Member Id="F:System.Fabric.Management.ServiceModel.DllHostEntryPointTypeIsolationPolicy.DedicatedDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.DllHostEntryPointTypeIsolationPolicy.DedicatedProcess" />
      <Member Id="F:System.Fabric.Management.ServiceModel.DllHostEntryPointTypeIsolationPolicy.SharedDomain" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.DriverOptionType" Id="T:System.Fabric.Management.ServiceModel.DriverOptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.DriverOptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DriverOptionType.IsEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DriverOptionType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DriverOptionType.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.DriverOptionType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EndpointBindingPolicyType" Id="T:System.Fabric.Management.ServiceModel.EndpointBindingPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EndpointBindingPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointBindingPolicyType.CertificateRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointBindingPolicyType.EndpointRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EndpointOverrideType" Id="T:System.Fabric.Management.ServiceModel.EndpointOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EndpointOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.PathSuffix" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.Port" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.Protocol" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointOverrideType.UriScheme" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EndpointType" Id="T:System.Fabric.Management.ServiceModel.EndpointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EndpointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.CertificateRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.PathSuffix" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.Port" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.PortSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.Protocol" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EndpointType.UriScheme" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EndpointTypeProtocol" Id="T:System.Fabric.Management.ServiceModel.EndpointTypeProtocol">
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeProtocol.http" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeProtocol.https" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeProtocol.tcp" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeProtocol.udp" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EndpointTypeType" Id="T:System.Fabric.Management.ServiceModel.EndpointTypeType">
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeType.Input" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EndpointTypeType.Internal" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EntryPointDescriptionType" Id="T:System.Fabric.Management.ServiceModel.EntryPointDescriptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EntryPointDescriptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EntryPointDescriptionType.Item" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHost" Id="T:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHost">
      <Member Id="M:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHost.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHost.RunFrequency" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHostRunFrequency" Id="T:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHostRunFrequency">
      <Member Id="M:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHostRunFrequency.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EntryPointDescriptionTypeExeHostRunFrequency.IntervalInSeconds" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EntryPointOverrideType" Id="T:System.Fabric.Management.ServiceModel.EntryPointOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EntryPointOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EntryPointOverrideType.Item" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EnvironmentOverridesType" Id="T:System.Fabric.Management.ServiceModel.EnvironmentOverridesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EnvironmentOverridesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentOverridesType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentOverridesType.EnvironmentVariable" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EnvironmentType" Id="T:System.Fabric.Management.ServiceModel.EnvironmentType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EnvironmentType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentType.Diagnostics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentType.Policies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentType.Principals" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentType.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType" Id="T:System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableOverrideType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EnvironmentVariableType" Id="T:System.Fabric.Management.ServiceModel.EnvironmentVariableType">
      <Member Id="M:System.Fabric.Management.ServiceModel.EnvironmentVariableType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableType.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EnvironmentVariableType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType" Id="T:System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType">
      <Member Id="F:System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType.Encrypted" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType.KeyVaultReference" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType.PlainText" />
      <Member Id="F:System.Fabric.Management.ServiceModel.EnvironmentVariableTypeType.SecretsStoreRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.EvictionPolicy" Id="T:System.Fabric.Management.ServiceModel.EvictionPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.EvictionPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EvictionPolicy.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EvictionPolicy.Properties" />
      <Member Id="P:System.Fabric.Management.ServiceModel.EvictionPolicy.Provider" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExecProbeType" Id="T:System.Fabric.Management.ServiceModel.ExecProbeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExecProbeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExecProbeType.Command" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExecutionPolicyType" Id="T:System.Fabric.Management.ServiceModel.ExecutionPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExecutionPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExecutionPolicyType.Restart" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExecutionPolicyType.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExeHostEntryPointOverrideType" Id="T:System.Fabric.Management.ServiceModel.ExeHostEntryPointOverrideType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExeHostEntryPointOverrideType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointOverrideType.Arguments" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointOverrideType.Program" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExeHostEntryPointType" Id="T:System.Fabric.Management.ServiceModel.ExeHostEntryPointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.Arguments" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.ConsoleRedirection" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.IsExternalExecutable" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.Program" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointType.WorkingFolder" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeConsoleRedirection" Id="T:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeConsoleRedirection">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeConsoleRedirection.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeConsoleRedirection.FileMaxSizeInKb" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeConsoleRedirection.FileRetentionCount" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeWorkingFolder" Id="T:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeWorkingFolder">
      <Member Id="F:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeWorkingFolder.CodeBase" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeWorkingFolder.CodePackage" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ExeHostEntryPointTypeWorkingFolder.Work" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExtensionsType" Id="T:System.Fabric.Management.ServiceModel.ExtensionsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExtensionsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExtensionsType.Extension" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ExtensionsTypeExtension" Id="T:System.Fabric.Management.ServiceModel.ExtensionsTypeExtension">
      <Member Id="M:System.Fabric.Management.ServiceModel.ExtensionsTypeExtension.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExtensionsTypeExtension.Any" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExtensionsTypeExtension.GeneratedId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ExtensionsTypeExtension.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricCertificateType" Id="T:System.Fabric.Management.ServiceModel.FabricCertificateType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricCertificateType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricCertificateType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricCertificateType.X509FindType" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricCertificateType.X509FindValue" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricCertificateType.X509FindValueSecondary" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricCertificateType.X509StoreName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricCertificateTypeX509FindType" Id="T:System.Fabric.Management.ServiceModel.FabricCertificateTypeX509FindType">
      <Member Id="F:System.Fabric.Management.ServiceModel.FabricCertificateTypeX509FindType.FindByExtension" />
      <Member Id="F:System.Fabric.Management.ServiceModel.FabricCertificateTypeX509FindType.FindBySubjectName" />
      <Member Id="F:System.Fabric.Management.ServiceModel.FabricCertificateTypeX509FindType.FindByThumbprint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricEndpointsType" Id="T:System.Fabric.Management.ServiceModel.FabricEndpointsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricEndpointsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ApplicationEndpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.BackupRestoreServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.CentralSecretServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ClientConnectionEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ClusterConnectionEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ClusterManagerReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.DefaultReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.EphemeralEndpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.EventStoreServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.FailoverManagerReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.FaultAnalysisServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.GatewayResourceManagerReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.HttpApplicationGatewayEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.HttpGatewayEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ImageStoreServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.LeaseDriverEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.NamingReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.RepairManagerReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.ServiceConnectionEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.TokenServiceEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.UpgradeOrchestrationServiceReplicatorEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsType.UpgradeServiceReplicatorEndpoint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricEndpointsTypeApplicationEndpoints" Id="T:System.Fabric.Management.ServiceModel.FabricEndpointsTypeApplicationEndpoints">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricEndpointsTypeApplicationEndpoints.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsTypeApplicationEndpoints.EndPort" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsTypeApplicationEndpoints.StartPort" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricEndpointsTypeEphemeralEndpoints" Id="T:System.Fabric.Management.ServiceModel.FabricEndpointsTypeEphemeralEndpoints">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricEndpointsTypeEphemeralEndpoints.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsTypeEphemeralEndpoints.EndPort" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricEndpointsTypeEphemeralEndpoints.StartPort" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType" Id="T:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType.SharedLogFileId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType.SharedLogFilePath" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsType.SharedLogFileSizeInMB" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileId" Id="T:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileId">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileId.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileId.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFilePath" Id="T:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFilePath">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFilePath.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFilePath.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileSizeInMB" Id="T:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileSizeInMB">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileSizeInMB.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricKtlLoggerSettingsTypeSharedLogFileSizeInMB.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FabricNodeType" Id="T:System.Fabric.Management.ServiceModel.FabricNodeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FabricNodeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.FaultDomain" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.InfrastructurePlacementID" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.IPAddressOrFQDN" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.IsSeedNode" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.NodeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.NodeTypeRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FabricNodeType.UpgradeDomain" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FileStoreETWType" Id="T:System.Fabric.Management.ServiceModel.FileStoreETWType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FileStoreETWType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreETWType.LevelFilter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.FileStoreType" Id="T:System.Fabric.Management.ServiceModel.FileStoreType">
      <Member Id="M:System.Fabric.Management.ServiceModel.FileStoreType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.AccountName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.AccountType" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.DataDeletionAgeInDays" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.Parameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.Password" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.PasswordEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.Path" />
      <Member Id="P:System.Fabric.Management.ServiceModel.FileStoreType.UploadIntervalInMinutes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.HttpProbeHeaderType" Id="T:System.Fabric.Management.ServiceModel.HttpProbeHeaderType">
      <Member Id="M:System.Fabric.Management.ServiceModel.HttpProbeHeaderType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeHeaderType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeHeaderType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.HttpProbeType" Id="T:System.Fabric.Management.ServiceModel.HttpProbeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.HttpProbeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.EndpointRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.Host" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.HttpHeader" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.Path" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.Port" />
      <Member Id="P:System.Fabric.Management.ServiceModel.HttpProbeType.Scheme" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.IdentityBindingPolicyType" Id="T:System.Fabric.Management.ServiceModel.IdentityBindingPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.IdentityBindingPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.IdentityBindingPolicyType.ApplicationIdentityRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.IdentityBindingPolicyType.ServiceIdentityRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ImageOverridesType" Id="T:System.Fabric.Management.ServiceModel.ImageOverridesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ImageOverridesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ImageOverridesType.Image" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ImageType" Id="T:System.Fabric.Management.ServiceModel.ImageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ImageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ImageType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ImageType.Os" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InfrastructureInformationType" Id="T:System.Fabric.Management.ServiceModel.InfrastructureInformationType">
      <Member Id="M:System.Fabric.Management.ServiceModel.InfrastructureInformationType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureInformationType.NodeList" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InfrastructureNodeType" Id="T:System.Fabric.Management.ServiceModel.InfrastructureNodeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.InfrastructureNodeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.Certificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.Endpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.FaultDomain" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.InfrastructurePlacementID" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.IPAddressOrFQDN" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.IsSeedNode" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.NodeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.NodeTypeRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.RoleOrTierName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InfrastructureNodeType.UpgradeDomain" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InputEndpointType" Id="T:System.Fabric.Management.ServiceModel.InputEndpointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.InputEndpointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InputEndpointType.Port" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InputEndpointType.Protocol" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InputEndpointTypeProtocol" Id="T:System.Fabric.Management.ServiceModel.InputEndpointTypeProtocol">
      <Member Id="F:System.Fabric.Management.ServiceModel.InputEndpointTypeProtocol.http" />
      <Member Id="F:System.Fabric.Management.ServiceModel.InputEndpointTypeProtocol.https" />
      <Member Id="F:System.Fabric.Management.ServiceModel.InputEndpointTypeProtocol.tcp" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InstanceLifecycleDescriptionType" Id="T:System.Fabric.Management.ServiceModel.InstanceLifecycleDescriptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.InstanceLifecycleDescriptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InstanceLifecycleDescriptionType.RestoreReplicaLocationAfterUpgrade" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InternalEndpointType" Id="T:System.Fabric.Management.ServiceModel.InternalEndpointType">
      <Member Id="M:System.Fabric.Management.ServiceModel.InternalEndpointType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InternalEndpointType.Port" />
      <Member Id="P:System.Fabric.Management.ServiceModel.InternalEndpointType.Protocol" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.InternalEndpointTypeProtocol" Id="T:System.Fabric.Management.ServiceModel.InternalEndpointTypeProtocol">
      <Member Id="F:System.Fabric.Management.ServiceModel.InternalEndpointTypeProtocol.http" />
      <Member Id="F:System.Fabric.Management.ServiceModel.InternalEndpointTypeProtocol.https" />
      <Member Id="F:System.Fabric.Management.ServiceModel.InternalEndpointTypeProtocol.tcp" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.KeyValuePairType" Id="T:System.Fabric.Management.ServiceModel.KeyValuePairType">
      <Member Id="M:System.Fabric.Management.ServiceModel.KeyValuePairType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.KeyValuePairType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.KeyValuePairType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LinuxInfrastructureType" Id="T:System.Fabric.Management.ServiceModel.LinuxInfrastructureType">
      <Member Id="M:System.Fabric.Management.ServiceModel.LinuxInfrastructureType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LinuxInfrastructureType.NodeList" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LoadMetricType" Id="T:System.Fabric.Management.ServiceModel.LoadMetricType">
      <Member Id="M:System.Fabric.Management.ServiceModel.LoadMetricType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.AuxiliaryDefaultLoad" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.DefaultLoad" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.PrimaryDefaultLoad" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.SecondaryDefaultLoad" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.Weight" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LoadMetricType.WeightSpecified" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LoadMetricTypeWeight" Id="T:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight">
      <Member Id="F:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight.High" />
      <Member Id="F:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight.Low" />
      <Member Id="F:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight.Medium" />
      <Member Id="F:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight.VeryHigh" />
      <Member Id="F:System.Fabric.Management.ServiceModel.LoadMetricTypeWeight.Zero" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LocalStoreETWType" Id="T:System.Fabric.Management.ServiceModel.LocalStoreETWType">
      <Member Id="M:System.Fabric.Management.ServiceModel.LocalStoreETWType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LocalStoreETWType.LevelFilter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LocalStoreType" Id="T:System.Fabric.Management.ServiceModel.LocalStoreType">
      <Member Id="M:System.Fabric.Management.ServiceModel.LocalStoreType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LocalStoreType.DataDeletionAgeInDays" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LocalStoreType.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LocalStoreType.Parameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LocalStoreType.RelativeFolderPath" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LogicalDirectoryType" Id="T:System.Fabric.Management.ServiceModel.LogicalDirectoryType">
      <Member Id="M:System.Fabric.Management.ServiceModel.LogicalDirectoryType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LogicalDirectoryType.Context" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LogicalDirectoryType.LogicalDirectoryName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.LogicalDirectoryType.MappedTo" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.LogicalDirectoryTypeContext" Id="T:System.Fabric.Management.ServiceModel.LogicalDirectoryTypeContext">
      <Member Id="F:System.Fabric.Management.ServiceModel.LogicalDirectoryTypeContext.application" />
      <Member Id="F:System.Fabric.Management.ServiceModel.LogicalDirectoryTypeContext.node" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ManagedApplicationIdentity" Id="T:System.Fabric.Management.ServiceModel.ManagedApplicationIdentity">
      <Member Id="M:System.Fabric.Management.ServiceModel.ManagedApplicationIdentity.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ManagedApplicationIdentity.TokenServiceEndpoint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ManagedAssemblyType" Id="T:System.Fabric.Management.ServiceModel.ManagedAssemblyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ManagedAssemblyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ManagedAssemblyType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ManagedIdentitiesType" Id="T:System.Fabric.Management.ServiceModel.ManagedIdentitiesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ManagedIdentitiesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ManagedIdentitiesType.ManagedIdentity" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ManagedIdentityType" Id="T:System.Fabric.Management.ServiceModel.ManagedIdentityType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ManagedIdentityType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ManagedIdentityType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ManagedIdentityType.PrincipalId" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.NetworkPoliciesType" Id="T:System.Fabric.Management.ServiceModel.NetworkPoliciesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.NetworkPoliciesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.NetworkPoliciesType.Items" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PaaSRoleType" Id="T:System.Fabric.Management.ServiceModel.PaaSRoleType">
      <Member Id="M:System.Fabric.Management.ServiceModel.PaaSRoleType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSRoleType.NodeTypeRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSRoleType.RoleName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSRoleType.RoleNodeCount" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PaaSVoteType" Id="T:System.Fabric.Management.ServiceModel.PaaSVoteType">
      <Member Id="M:System.Fabric.Management.ServiceModel.PaaSVoteType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSVoteType.IPAddressOrFQDN" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSVoteType.NodeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PaaSVoteType.Port" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PackageSharingPolicyType" Id="T:System.Fabric.Management.ServiceModel.PackageSharingPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.PackageSharingPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PackageSharingPolicyType.PackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PackageSharingPolicyType.Scope" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope" Id="T:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope">
      <Member Id="F:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope.All" />
      <Member Id="F:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope.Code" />
      <Member Id="F:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope.Config" />
      <Member Id="F:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope.Data" />
      <Member Id="F:System.Fabric.Management.ServiceModel.PackageSharingPolicyTypeScope.None" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ParametersType" Id="T:System.Fabric.Management.ServiceModel.ParametersType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ParametersType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ParametersType.Parameter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ParameterType" Id="T:System.Fabric.Management.ServiceModel.ParameterType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ParameterType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ParameterType.IsEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ParameterType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ParameterType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PersistencePolicy" Id="T:System.Fabric.Management.ServiceModel.PersistencePolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.PersistencePolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PersistencePolicy.Mode" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PersistencePolicy.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PersistencePolicy.Properties" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PersistencePolicy.Provider" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PersistencePolicy.WriteBehind" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PersistencePolicyMode" Id="T:System.Fabric.Management.ServiceModel.PersistencePolicyMode">
      <Member Id="F:System.Fabric.Management.ServiceModel.PersistencePolicyMode.Asynchronous" />
      <Member Id="F:System.Fabric.Management.ServiceModel.PersistencePolicyMode.Synchronous" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.PortBindingType" Id="T:System.Fabric.Management.ServiceModel.PortBindingType">
      <Member Id="M:System.Fabric.Management.ServiceModel.PortBindingType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PortBindingType.ContainerPort" />
      <Member Id="P:System.Fabric.Management.ServiceModel.PortBindingType.EndpointRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ProbeDescriptionType" Id="T:System.Fabric.Management.ServiceModel.ProbeDescriptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ProbeDescriptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.FailureThreshold" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.InitialDelaySeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.Item" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.PeriodSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.SuccessThreshold" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.TimeoutSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeDescriptionType.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ProbeDescriptionTypeType" Id="T:System.Fabric.Management.ServiceModel.ProbeDescriptionTypeType">
      <Member Id="F:System.Fabric.Management.ServiceModel.ProbeDescriptionTypeType.Liveness" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ProbeDescriptionTypeType.Readiness" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ProbeType" Id="T:System.Fabric.Management.ServiceModel.ProbeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ProbeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ProbeType.Probe" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ReplicaLifecycleDescriptionType" Id="T:System.Fabric.Management.ServiceModel.ReplicaLifecycleDescriptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ReplicaLifecycleDescriptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ReplicaLifecycleDescriptionType.IsSingletonReplicaMoveAllowedDuringUpgrade" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ReplicaLifecycleDescriptionType.RestoreReplicaLocationAfterUpgrade" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.RepositoryAuthenticationType" Id="T:System.Fabric.Management.ServiceModel.RepositoryAuthenticationType">
      <Member Id="M:System.Fabric.Management.ServiceModel.RepositoryAuthenticationType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryAuthenticationType.IdentityKind" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryAuthenticationType.IdentityRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind" Id="T:System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind">
      <Member Id="F:System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind.Cluster" />
      <Member Id="F:System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind.Host" />
      <Member Id="F:System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind.None" />
      <Member Id="F:System.Fabric.Management.ServiceModel.RepositoryAuthenticationTypeIdentityKind.Service" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.RepositoryCredentialsType" Id="T:System.Fabric.Management.ServiceModel.RepositoryCredentialsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.AccountName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.Email" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.Password" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.PasswordEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.PasswordEncryptedSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RepositoryCredentialsType.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType" Id="T:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.BlockIOWeight" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.CpuCores" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.CpuCoresLimit" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.CpuPercent" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.CpuShares" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.DiskQuotaInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.KernelMemoryInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MaximumIOBandwidth" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MaximumIOps" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MemoryInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MemoryInMBLimit" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MemoryReservationInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.MemorySwapInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.Resource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernancePolicyType.ShmSizeInMB" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourceGovernanceResourceOptionType" Id="T:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceOptionType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceOptionType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceOptionType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceOptionType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType" Id="T:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType.PluginName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType.ResourceOption" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceType.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourceGovernanceResourceTypeType" Id="T:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceTypeType">
      <Member Id="F:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceTypeType.Device" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ResourceGovernanceResourceTypeType.VMTopology" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourceOverridesType" Id="T:System.Fabric.Management.ServiceModel.ResourceOverridesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourceOverridesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourceOverridesType.Endpoints" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourcesType" Id="T:System.Fabric.Management.ServiceModel.ResourcesType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourcesType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourcesType.Endpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourcesType.ManagedIdentities" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentities" Id="T:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentities">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentities.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentities.DefaultIdentity" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentities.ManagedIdentity" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentitiesManagedIdentity" Id="T:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentitiesManagedIdentity">
      <Member Id="M:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentitiesManagedIdentity.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ResourcesTypeManagedIdentitiesManagedIdentity.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.RunAsPolicyType" Id="T:System.Fabric.Management.ServiceModel.RunAsPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.RunAsPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RunAsPolicyType.CodePackageRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RunAsPolicyType.EntryPointType" />
      <Member Id="P:System.Fabric.Management.ServiceModel.RunAsPolicyType.UserRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.RunAsPolicyTypeEntryPointType" Id="T:System.Fabric.Management.ServiceModel.RunAsPolicyTypeEntryPointType">
      <Member Id="F:System.Fabric.Management.ServiceModel.RunAsPolicyTypeEntryPointType.All" />
      <Member Id="F:System.Fabric.Management.ServiceModel.RunAsPolicyTypeEntryPointType.Main" />
      <Member Id="F:System.Fabric.Management.ServiceModel.RunAsPolicyTypeEntryPointType.Setup" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ScalingPolicyType" Id="T:System.Fabric.Management.ServiceModel.ScalingPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ScalingPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyType.AddRemoveIncrementalNamedPartitionScalingMechanism" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyType.AveragePartitionLoadScalingTrigger" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyType.AverageServiceLoadScalingTrigger" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyType.InstanceCountScalingMechanism" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism" Id="T:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism">
      <Member Id="M:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.MaxPartitionCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.MinPartitionCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAddRemoveIncrementalNamedPartitionScalingMechanism.ScaleIncrement" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger" Id="T:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger">
      <Member Id="M:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger.MetricName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger.ScaleIntervalInSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAveragePartitionLoadScalingTrigger.UpperLoadThreshold" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger" Id="T:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger">
      <Member Id="M:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.LowerLoadThreshold" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.MetricName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.ScaleIntervalInSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.UpperLoadThreshold" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeAverageServiceLoadScalingTrigger.UseOnlyPrimaryLoad" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism" Id="T:System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism">
      <Member Id="M:System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism.MaxInstanceCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism.MinInstanceCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ScalingPolicyTypeInstanceCountScalingMechanism.ScaleIncrement" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityAccessPolicyType" Id="T:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType.GrantRights" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType.PrincipalRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType.ResourceRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityAccessPolicyType.ResourceType" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeGrantRights" Id="T:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeGrantRights">
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeGrantRights.Change" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeGrantRights.Full" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeGrantRights.Read" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeResourceType" Id="T:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeResourceType">
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeResourceType.Certificate" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityAccessPolicyTypeResourceType.Endpoint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityOptionsType" Id="T:System.Fabric.Management.ServiceModel.SecurityOptionsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityOptionsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityOptionsType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsType" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsType.Groups" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsType.ManagedIdentities" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsType.Users" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup.Membership" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroup.NTLMAuthenticationPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainGroup" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainGroup.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainUser" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainUser">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainUser.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupDomainUser.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupNTLMAuthenticationPolicy" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupNTLMAuthenticationPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupNTLMAuthenticationPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupNTLMAuthenticationPolicy.IsEnabled" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupSystemGroup" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupSystemGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupSystemGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeGroupSystemGroup.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeManagedIdentities" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeManagedIdentities">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeManagedIdentities.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeManagedIdentities.DefaultIdentity" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeManagedIdentities.TokenServiceEndpoint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.AccountName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.AccountType" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.LoadUserProfile" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.MemberOf" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.NTLMAuthenticationPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.Password" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.PasswordEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.PasswordEncryptedSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUser.PerformInteractiveLogon" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType">
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.DomainUser" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.LocalService" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.LocalSystem" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.LocalUser" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.ManagedServiceAccount" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserAccountType.NetworkService" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserGroup" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserGroup.NameRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.IsEnabled" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.PasswordSecret" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.PasswordSecretEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.X509StoreLocation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.X509StoreName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicy.X509Thumbprint" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicyX509StoreLocation" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicyX509StoreLocation">
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicyX509StoreLocation.CurrentUser" />
      <Member Id="F:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserNTLMAuthenticationPolicyX509StoreLocation.LocalMachine" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserSystemGroup" Id="T:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserSystemGroup">
      <Member Id="M:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserSystemGroup.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SecurityPrincipalsTypeUserSystemGroup.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceDiagnosticsType" Id="T:System.Fabric.Management.ServiceModel.ServiceDiagnosticsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceDiagnosticsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceDiagnosticsType.ETW" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETW" Id="T:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETW">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETW.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETW.ManifestDataPackages" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETW.ProviderGuids" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETWProviderGuid" Id="T:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETWProviderGuid">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETWProviderGuid.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceDiagnosticsTypeETWProviderGuid.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceFabricRuntimeAccessPolicyType" Id="T:System.Fabric.Management.ServiceModel.ServiceFabricRuntimeAccessPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceFabricRuntimeAccessPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceFabricRuntimeAccessPolicyType.RemoveServiceFabricRuntimeAccess" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceFabricRuntimeAccessPolicyType.UseServiceFabricReplicatedStore" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceGroupMemberType" Id="T:System.Fabric.Management.ServiceModel.ServiceGroupMemberType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceGroupMemberType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupMemberType.LoadMetrics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupMemberType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupMemberType.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceGroupTypeMember" Id="T:System.Fabric.Management.ServiceModel.ServiceGroupTypeMember">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceGroupTypeMember.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeMember.LoadMetrics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeMember.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceGroupTypeType" Id="T:System.Fabric.Management.ServiceModel.ServiceGroupTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.Extensions" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.LoadMetrics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.PlacementConstraints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.ServiceGroupMembers" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.ServiceGroupTypeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.UseImplicitFactory" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceGroupTypeType.UseImplicitFactorySpecified" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceManifestRefType" Id="T:System.Fabric.Management.ServiceModel.ServiceManifestRefType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceManifestRefType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestRefType.ServiceManifestName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestRefType.ServiceManifestVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceManifestType" Id="T:System.Fabric.Management.ServiceModel.ServiceManifestType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceManifestType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.AnyAttr" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.CodePackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.ConfigPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.DataPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.Description" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.Diagnostics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.ManifestId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.Resources" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.ServiceTypes" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceManifestType.Version" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType" Id="T:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType.ContainerOS" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType.Hostname" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType.Isolation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageContainerPolicyType.Items" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType" Id="T:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.CpuCores" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.CpuCoresLimit" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.MemoryInMB" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.MemoryInMBLimit" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.Resource" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourceGovernancePolicyType.ResourcePlugin" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageResourcePluginType" Id="T:System.Fabric.Management.ServiceModel.ServicePackageResourcePluginType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageResourcePluginType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourcePluginType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageResourcePluginType.URI" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageType" Id="T:System.Fabric.Management.ServiceModel.ServicePackageType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ContentChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.Description" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.Diagnostics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedCodePackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedConfigPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedDataPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedManagedIdentityDescription" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedResources" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.DigestedServiceTypes" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ExecutionPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ManifestChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ManifestVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.NetworkPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.RolloutVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ServiceFabricRuntimeAccessPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ServicePackageContainerPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageType.ServicePackageResourceGovernancePolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.CodePackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.CodePackagePolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.ConfigPackagePolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.ContainerHostPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.ContentChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.DebugParameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.IsShared" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.IsSharedSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.ResourceGovernancePolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.RolloutVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedCodePackage.RunAsPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.ConfigOverride" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.ConfigPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.ContentChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.DebugParameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.IsShared" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.IsSharedSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedConfigPackage.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.ContentChecksum" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.DataPackage" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.DebugParameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.IsShared" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.IsSharedSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedDataPackage.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription.DefaultIdentity" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription.DigestedManagedIdentity" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription.TokenServiceEndpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescription.WhitelistedIdentity" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity.Identity" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity.IdentityBindingPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedManagedIdentityDescriptionDigestedManagedIdentity.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources.DigestedCertificates" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources.DigestedEndpoints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResources.RolloutVersion" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint.Endpoint" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint.EndpointBindingPolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint.ResourceGovernancePolicy" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedResourcesDigestedEndpoint.SecurityAccessPolicy" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedServiceTypes" Id="T:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedServiceTypes">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedServiceTypes.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedServiceTypes.RolloutVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServicePackageTypeDigestedServiceTypes.ServiceTypes" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceType" Id="T:System.Fabric.Management.ServiceModel.ServiceType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.DefaultMoveCost" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.DefaultMoveCostSpecified" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.LoadMetrics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.NamedPartition" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.PlacementConstraints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.ServiceCorrelations" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.ServicePlacementPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.ServiceScalingPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.ServiceTypeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.SingletonPartition" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.TagsRequiredToPlace" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.TagsRequiredToRun" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceType.UniformInt64Partition" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost">
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost.High" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost.Low" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost.Medium" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost.VeryHigh" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeDefaultMoveCost.Zero" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeExtensionPolicyPropertiesTypeProperty" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeExtensionPolicyPropertiesTypeProperty">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeExtensionPolicyPropertiesTypeProperty.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeExtensionPolicyPropertiesTypeProperty.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeExtensionPolicyPropertiesTypeProperty.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType.MaxPercentUnhealthyPartitionsPerService" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType.MaxPercentUnhealthyReplicasPerPartition" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeHealthPolicyType.MaxPercentUnhealthyServices" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeNamedPartition" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartition">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartition.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartition.Partition" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeNamedPartitionPartition" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartitionPartition">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartitionPartition.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeNamedPartitionPartition.Name" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelation" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelation">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelation.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelation.Scheme" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelation.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelationScheme" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelationScheme">
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelationScheme.Affinity" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelationScheme.AlignedAffinity" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServiceCorrelationScheme.NonAlignedAffinity" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicy" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicy.DomainName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicy.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType">
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.AllowMultipleStatelessInstancesOnNode" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.InvalidDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.NonPartiallyPlace" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.PreferredPrimaryDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.RequiredDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeServicePlacementPolicyType.RequiredDomainDistribution" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeSingletonPartition" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeSingletonPartition">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeSingletonPartition.#ctor" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeType" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeType.Extensions" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeType.LoadMetrics" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeType.PlacementConstraints" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeType.ServicePlacementPolicies" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeType.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicy" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicy">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicy.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicy.DomainName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicy.Type" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType">
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.AllowMultipleStatelessInstancesOnNode" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.InvalidDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.NonPartiallyPlace" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.PreferredPrimaryDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.RequiredDomain" />
      <Member Id="F:System.Fabric.Management.ServiceModel.ServiceTypeTypeServicePlacementPolicyType.RequiredDomainDistribution" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition" Id="T:System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition">
      <Member Id="M:System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition.HighKey" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition.LowKey" />
      <Member Id="P:System.Fabric.Management.ServiceModel.ServiceTypeUniformInt64Partition.PartitionCount" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SettingsOverridesTypeSection" Id="T:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSection">
      <Member Id="M:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSection.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSection.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSection.Parameter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter" Id="T:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter">
      <Member Id="M:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter.IsEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsOverridesTypeSectionParameter.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SettingsType" Id="T:System.Fabric.Management.ServiceModel.SettingsType">
      <Member Id="M:System.Fabric.Management.ServiceModel.SettingsType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsType.Section" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SettingsTypeSection" Id="T:System.Fabric.Management.ServiceModel.SettingsTypeSection">
      <Member Id="M:System.Fabric.Management.ServiceModel.SettingsTypeSection.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSection.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSection.Parameter" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter" Id="T:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter">
      <Member Id="M:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.IsEncrypted" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.MustOverride" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.Name" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.Type" />
      <Member Id="P:System.Fabric.Management.ServiceModel.SettingsTypeSectionParameter.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatefulServiceGroupType" Id="T:System.Fabric.Management.ServiceModel.StatefulServiceGroupType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatefulServiceGroupType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceGroupType.Members" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatefulServiceGroupTypeType" Id="T:System.Fabric.Management.ServiceModel.StatefulServiceGroupTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatefulServiceGroupTypeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceGroupTypeType.HasPersistedState" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatefulServiceType" Id="T:System.Fabric.Management.ServiceModel.StatefulServiceType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatefulServiceType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.AuxiliaryReplicaCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.DropSourceReplicaOnMove" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.MinReplicaSetSize" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.QuorumLossWaitDurationSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.ReplicaLifecycleDescription" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.ReplicaRestartWaitDurationSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.ServicePlacementTimeLimitSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.StandByReplicaKeepDurationSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceType.TargetReplicaSetSize" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatefulServiceTypeType" Id="T:System.Fabric.Management.ServiceModel.StatefulServiceTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatefulServiceTypeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceTypeType.HasPersistedState" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatefulServiceTypeType.UseImplicitHost" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatelessServiceGroupType" Id="T:System.Fabric.Management.ServiceModel.StatelessServiceGroupType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatelessServiceGroupType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceGroupType.Members" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatelessServiceGroupTypeType" Id="T:System.Fabric.Management.ServiceModel.StatelessServiceGroupTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatelessServiceGroupTypeType.#ctor" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatelessServiceType" Id="T:System.Fabric.Management.ServiceModel.StatelessServiceType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatelessServiceType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.InstanceCloseDelayDurationSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.InstanceCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.InstanceLifecycleDescription" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.InstanceRestartWaitDurationSeconds" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.MinInstanceCount" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceType.MinInstancePercentage" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StatelessServiceTypeType" Id="T:System.Fabric.Management.ServiceModel.StatelessServiceTypeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StatelessServiceTypeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StatelessServiceTypeType.UseImplicitHost" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.StaticVoteType" Id="T:System.Fabric.Management.ServiceModel.StaticVoteType">
      <Member Id="M:System.Fabric.Management.ServiceModel.StaticVoteType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StaticVoteType.IPAddressOrFQDN" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StaticVoteType.NodeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.StaticVoteType.NodeTypeRef" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.TargetInformationType" Id="T:System.Fabric.Management.ServiceModel.TargetInformationType">
      <Member Id="M:System.Fabric.Management.ServiceModel.TargetInformationType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.TargetInformationType.CurrentInstallation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.TargetInformationType.TargetInstallation" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.TcpProbeType" Id="T:System.Fabric.Management.ServiceModel.TcpProbeType">
      <Member Id="M:System.Fabric.Management.ServiceModel.TcpProbeType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.TcpProbeType.EndpointRef" />
      <Member Id="P:System.Fabric.Management.ServiceModel.TcpProbeType.Port" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.UnmanagedDllType" Id="T:System.Fabric.Management.ServiceModel.UnmanagedDllType">
      <Member Id="M:System.Fabric.Management.ServiceModel.UnmanagedDllType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.UnmanagedDllType.Value" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation" Id="T:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation">
      <Member Id="M:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.ClusterManifestLocation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.InfrastructureManifestLocation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.InstanceId" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.MSILocation" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.NodeName" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.RemoveNodeState" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.TargetVersion" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.UndoUpgradeEntryPointExe" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.UndoUpgradeEntryPointExeParameters" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.UpgradeEntryPointExe" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsFabricDeploymentInformation.UpgradeEntryPointExeParameters" />
    </Type>
    <Type Name="System.Fabric.Management.ServiceModel.WindowsInfrastructureType" Id="T:System.Fabric.Management.ServiceModel.WindowsInfrastructureType">
      <Member Id="M:System.Fabric.Management.ServiceModel.WindowsInfrastructureType.#ctor" />
      <Member Id="P:System.Fabric.Management.ServiceModel.WindowsInfrastructureType.NodeList" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Query">
    <Type Name="System.Fabric.Query.Application" Id="T:System.Fabric.Query.Application">
      <Member Id="P:System.Fabric.Query.Application.ApplicationDefinitionKind" />
      <Member Id="P:System.Fabric.Query.Application.ApplicationName" />
      <Member Id="P:System.Fabric.Query.Application.ApplicationParameters" />
      <Member Id="P:System.Fabric.Query.Application.ApplicationStatus" />
      <Member Id="P:System.Fabric.Query.Application.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Query.Application.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Query.Application.HealthState" />
      <Member Id="P:System.Fabric.Query.Application.ManagedApplicationIdentity" />
      <Member Id="P:System.Fabric.Query.Application.UpgradeParameters" />
      <Member Id="P:System.Fabric.Query.Application.UpgradeTypeVersion" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationDefinitionKind" Id="T:System.Fabric.Query.ApplicationDefinitionKind">
      <Member Id="F:System.Fabric.Query.ApplicationDefinitionKind.Compose" />
      <Member Id="F:System.Fabric.Query.ApplicationDefinitionKind.Invalid" />
      <Member Id="F:System.Fabric.Query.ApplicationDefinitionKind.MeshApplicationDescription" />
      <Member Id="F:System.Fabric.Query.ApplicationDefinitionKind.ServiceFabricApplicationDescription" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationList" Id="T:System.Fabric.Query.ApplicationList">
      <Member Id="M:System.Fabric.Query.ApplicationList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationLoadInformation" Id="T:System.Fabric.Query.ApplicationLoadInformation">
      <Member Id="M:System.Fabric.Query.ApplicationLoadInformation.#ctor" />
      <Member Id="M:System.Fabric.Query.ApplicationLoadInformation.ToString" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadInformation.MaximumNodes" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadInformation.MinimumNodes" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadInformation.Name" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadInformation.NodeCount" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationLoadMetricInformation" Id="T:System.Fabric.Query.ApplicationLoadMetricInformation">
      <Member Id="M:System.Fabric.Query.ApplicationLoadMetricInformation.#ctor" />
      <Member Id="M:System.Fabric.Query.ApplicationLoadMetricInformation.ToString" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadMetricInformation.Name" />
      <Member Id="P:System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationNameResult" Id="T:System.Fabric.Query.ApplicationNameResult">
      <Member Id="P:System.Fabric.Query.ApplicationNameResult.ApplicationName" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationNetwork" Id="T:System.Fabric.Query.ApplicationNetwork">
      <Member Id="P:System.Fabric.Query.ApplicationNetwork.NetworkName" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationNetworkList" Id="T:System.Fabric.Query.ApplicationNetworkList" />
    <Type Name="System.Fabric.Query.ApplicationStatus" Id="T:System.Fabric.Query.ApplicationStatus">
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Creating" />
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Deleting" />
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Failed" />
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Ready" />
      <Member Id="F:System.Fabric.Query.ApplicationStatus.Upgrading" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationType" Id="T:System.Fabric.Query.ApplicationType">
      <Member Id="P:System.Fabric.Query.ApplicationType.ApplicationTypeDefinitionKind" />
      <Member Id="P:System.Fabric.Query.ApplicationType.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Query.ApplicationType.ApplicationTypeVersion" />
      <Member Id="P:System.Fabric.Query.ApplicationType.DefaultParameters" />
      <Member Id="P:System.Fabric.Query.ApplicationType.Status" />
      <Member Id="P:System.Fabric.Query.ApplicationType.StatusDetails" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationTypeDefinitionKind" Id="T:System.Fabric.Query.ApplicationTypeDefinitionKind">
      <Member Id="F:System.Fabric.Query.ApplicationTypeDefinitionKind.Compose" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeDefinitionKind.Invalid" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeDefinitionKind.MeshApplicationDescription" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeDefinitionKind.ServiceFabricApplicationPackage" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationTypeList" Id="T:System.Fabric.Query.ApplicationTypeList">
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.Add(System.Fabric.Query.ApplicationType)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.Clear" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.Contains(System.Fabric.Query.ApplicationType)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.CopyTo(System.Fabric.Query.ApplicationType[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.IndexOf(System.Fabric.Query.ApplicationType)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.Insert(System.Int32,System.Fabric.Query.ApplicationType)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.Remove(System.Fabric.Query.ApplicationType)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ApplicationTypeList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ApplicationTypeList.Count" />
      <Member Id="P:System.Fabric.Query.ApplicationTypeList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ApplicationTypeList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationTypePagedList" Id="T:System.Fabric.Query.ApplicationTypePagedList">
      <Member Id="M:System.Fabric.Query.ApplicationTypePagedList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.ApplicationTypeStatus" Id="T:System.Fabric.Query.ApplicationTypeStatus">
      <Member Id="F:System.Fabric.Query.ApplicationTypeStatus.Available" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeStatus.Failed" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeStatus.Provisioning" />
      <Member Id="F:System.Fabric.Query.ApplicationTypeStatus.Unprovisioning" />
    </Type>
    <Type Name="System.Fabric.Query.ClusterLoadInformation" Id="T:System.Fabric.Query.ClusterLoadInformation">
      <Member Id="M:System.Fabric.Query.ClusterLoadInformation.#ctor" />
      <Member Id="M:System.Fabric.Query.ClusterLoadInformation.ToString" />
      <Member Id="P:System.Fabric.Query.ClusterLoadInformation.LastBalancingEndTimeUtc" />
      <Member Id="P:System.Fabric.Query.ClusterLoadInformation.LastBalancingStartTimeUtc" />
      <Member Id="P:System.Fabric.Query.ClusterLoadInformation.LoadMetricInformationList" />
    </Type>
    <Type Name="System.Fabric.Query.CodePackageEntryPoint" Id="T:System.Fabric.Query.CodePackageEntryPoint">
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.CodePackageInstanceId" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.EntryPointLocation" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.EntryPointStatus" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.NextActivationUtc" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.ProcessId" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.RunAsUserName" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPoint.Statistics" />
    </Type>
    <Type Name="System.Fabric.Query.CodePackageEntryPointStatistics" Id="T:System.Fabric.Query.CodePackageEntryPointStatistics">
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ActivationCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ActivationFailureCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ContinuousActivationFailureCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ContinuousExitFailureCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ExitCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.ExitFailureCount" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.LastActivationUtc" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.LastExitCode" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.LastExitUtc" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.LastSuccessfulActivationUtc" />
      <Member Id="P:System.Fabric.Query.CodePackageEntryPointStatistics.LastSuccessfulExitUtc" />
    </Type>
    <Type Name="System.Fabric.Query.CodePackageUsageStatistics" Id="T:System.Fabric.Query.CodePackageUsageStatistics">
      <Member Id="P:System.Fabric.Query.CodePackageUsageStatistics.CodePackageStats" />
      <Member Id="P:System.Fabric.Query.CodePackageUsageStatistics.TimeRead" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedApplication" Id="T:System.Fabric.Query.DeployedApplication">
      <Member Id="P:System.Fabric.Query.DeployedApplication.ApplicationName" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.ApplicationTypeName" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.DeployedApplicationStatus" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.HealthState" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.LogDirectory" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.TempDirectory" />
      <Member Id="P:System.Fabric.Query.DeployedApplication.WorkDirectory" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedApplicationList" Id="T:System.Fabric.Query.DeployedApplicationList">
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.Add(System.Fabric.Query.DeployedApplication)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.Clear" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.Contains(System.Fabric.Query.DeployedApplication)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.CopyTo(System.Fabric.Query.DeployedApplication[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.IndexOf(System.Fabric.Query.DeployedApplication)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.Insert(System.Int32,System.Fabric.Query.DeployedApplication)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.Remove(System.Fabric.Query.DeployedApplication)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedApplicationList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.DeployedApplicationList.Count" />
      <Member Id="P:System.Fabric.Query.DeployedApplicationList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.DeployedApplicationList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedApplicationPagedList" Id="T:System.Fabric.Query.DeployedApplicationPagedList">
      <Member Id="M:System.Fabric.Query.DeployedApplicationPagedList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedCodePackage" Id="T:System.Fabric.Query.DeployedCodePackage">
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.CodePackageName" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.CodePackageUsageStatistics" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.CodePackageVersion" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.DeployedCodePackageStatus" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.EntryPoint" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.HostIsolationMode" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.HostType" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.RunFrequencyInterval" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.ServicePackageActivationId" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackage.SetupEntryPoint" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedCodePackageList" Id="T:System.Fabric.Query.DeployedCodePackageList">
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.Add(System.Fabric.Query.DeployedCodePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.Clear" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.Contains(System.Fabric.Query.DeployedCodePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.CopyTo(System.Fabric.Query.DeployedCodePackage[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.IndexOf(System.Fabric.Query.DeployedCodePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.Insert(System.Int32,System.Fabric.Query.DeployedCodePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.Remove(System.Fabric.Query.DeployedCodePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedCodePackageList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackageList.Count" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackageList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.DeployedCodePackageList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedNetwork" Id="T:System.Fabric.Query.DeployedNetwork">
      <Member Id="P:System.Fabric.Query.DeployedNetwork.NetworkName" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedNetworkCodePackage" Id="T:System.Fabric.Query.DeployedNetworkCodePackage">
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.ApplicationName" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.CodePackageName" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.CodePackageVersion" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.ContainerAddress" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.ContainerId" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.NetworkName" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.DeployedNetworkCodePackage.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedNetworkCodePackageList" Id="T:System.Fabric.Query.DeployedNetworkCodePackageList" />
    <Type Name="System.Fabric.Query.DeployedNetworkList" Id="T:System.Fabric.Query.DeployedNetworkList" />
    <Type Name="System.Fabric.Query.DeployedServicePackage" Id="T:System.Fabric.Query.DeployedServicePackage">
      <Member Id="P:System.Fabric.Query.DeployedServicePackage.DeployedServicePackageStatus" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackage.HealthState" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackage.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackage.ServiceManifestVersion" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackage.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServicePackageList" Id="T:System.Fabric.Query.DeployedServicePackageList">
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.Add(System.Fabric.Query.DeployedServicePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.Clear" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.Contains(System.Fabric.Query.DeployedServicePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.CopyTo(System.Fabric.Query.DeployedServicePackage[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.IndexOf(System.Fabric.Query.DeployedServicePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.Insert(System.Int32,System.Fabric.Query.DeployedServicePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.Remove(System.Fabric.Query.DeployedServicePackage)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServicePackageList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackageList.Count" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackageList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.DeployedServicePackageList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServicePackagePagedList" Id="T:System.Fabric.Query.DeployedServicePackagePagedList">
      <Member Id="M:System.Fabric.Query.DeployedServicePackagePagedList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServiceReplica" Id="T:System.Fabric.Query.DeployedServiceReplica">
      <Member Id="M:System.Fabric.Query.DeployedServiceReplica.#ctor(System.Fabric.Query.ServiceKind)" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.Address" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.CodePackageName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.HostProcessId" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.Partitionid" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ReplicaStatus" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServiceKind" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServiceName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServicePackageActivationId" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplica.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServiceReplicaDetail" Id="T:System.Fabric.Query.DeployedServiceReplicaDetail">
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaDetail.#ctor(System.Fabric.Query.ServiceKind)" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.CurrentServiceOperation" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.CurrentServiceOperationStartTimeUtc" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.PartitionId" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.ReportedLoad" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.ServiceKind" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaDetail.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServiceReplicaList" Id="T:System.Fabric.Query.DeployedServiceReplicaList">
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.Add(System.Fabric.Query.DeployedServiceReplica)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.Clear" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.Contains(System.Fabric.Query.DeployedServiceReplica)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.CopyTo(System.Fabric.Query.DeployedServiceReplica[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.IndexOf(System.Fabric.Query.DeployedServiceReplica)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.Insert(System.Int32,System.Fabric.Query.DeployedServiceReplica)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.Remove(System.Fabric.Query.DeployedServiceReplica)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceReplicaList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaList.Count" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.DeployedServiceReplicaList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServiceType" Id="T:System.Fabric.Query.DeployedServiceType">
      <Member Id="P:System.Fabric.Query.DeployedServiceType.CodePackageName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceType.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceType.ServicePackageActivationId" />
      <Member Id="P:System.Fabric.Query.DeployedServiceType.ServiceTypeName" />
      <Member Id="P:System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedServiceTypeList" Id="T:System.Fabric.Query.DeployedServiceTypeList">
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.Add(System.Fabric.Query.DeployedServiceType)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.Clear" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.Contains(System.Fabric.Query.DeployedServiceType)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.CopyTo(System.Fabric.Query.DeployedServiceType[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.IndexOf(System.Fabric.Query.DeployedServiceType)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.Insert(System.Int32,System.Fabric.Query.DeployedServiceType)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.Remove(System.Fabric.Query.DeployedServiceType)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.DeployedServiceTypeList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.DeployedServiceTypeList.Count" />
      <Member Id="P:System.Fabric.Query.DeployedServiceTypeList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.DeployedServiceTypeList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedStatefulServiceReplica" Id="T:System.Fabric.Query.DeployedStatefulServiceReplica">
      <Member Id="M:System.Fabric.Query.DeployedStatefulServiceReplica.#ctor" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplica.ReconfigurationInformation" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplica.ReplicaId" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplica.ReplicaRole" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedStatefulServiceReplicaDetail" Id="T:System.Fabric.Query.DeployedStatefulServiceReplicaDetail">
      <Member Id="M:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.#ctor" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.CurrentReplicatorOperation" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.DeployedServiceReplica" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.ReadStatus" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.ReplicaId" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.ReplicaStatus" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.ReplicatorStatus" />
      <Member Id="P:System.Fabric.Query.DeployedStatefulServiceReplicaDetail.WriteStatus" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedStatelessServiceInstance" Id="T:System.Fabric.Query.DeployedStatelessServiceInstance">
      <Member Id="M:System.Fabric.Query.DeployedStatelessServiceInstance.#ctor" />
      <Member Id="P:System.Fabric.Query.DeployedStatelessServiceInstance.InstanceId" />
    </Type>
    <Type Name="System.Fabric.Query.DeployedStatelessServiceInstanceDetail" Id="T:System.Fabric.Query.DeployedStatelessServiceInstanceDetail">
      <Member Id="M:System.Fabric.Query.DeployedStatelessServiceInstanceDetail.#ctor" />
      <Member Id="P:System.Fabric.Query.DeployedStatelessServiceInstanceDetail.DeployedServiceReplicaInstance" />
      <Member Id="P:System.Fabric.Query.DeployedStatelessServiceInstanceDetail.InstanceId" />
    </Type>
    <Type Name="System.Fabric.Query.ImageStoreContentResult" Id="T:System.Fabric.Query.ImageStoreContentResult">
      <Member Id="P:System.Fabric.Query.ImageStoreContentResult.StoreFiles" />
      <Member Id="P:System.Fabric.Query.ImageStoreContentResult.StoreFolders" />
    </Type>
    <Type Name="System.Fabric.Query.ImageStoreFileInfo" Id="T:System.Fabric.Query.ImageStoreFileInfo">
      <Member Id="P:System.Fabric.Query.ImageStoreFileInfo.FileSize" />
      <Member Id="P:System.Fabric.Query.ImageStoreFileInfo.FileVersion" />
      <Member Id="P:System.Fabric.Query.ImageStoreFileInfo.ModifiedDate" />
      <Member Id="P:System.Fabric.Query.ImageStoreFileInfo.StoreRelativePath" />
    </Type>
    <Type Name="System.Fabric.Query.ImageStoreFileVersion" Id="T:System.Fabric.Query.ImageStoreFileVersion">
      <Member Id="P:System.Fabric.Query.ImageStoreFileVersion.EpochDataLossNumber" />
      <Member Id="P:System.Fabric.Query.ImageStoreFileVersion.VersionNumber" />
    </Type>
    <Type Name="System.Fabric.Query.ImageStoreFolderInfo" Id="T:System.Fabric.Query.ImageStoreFolderInfo">
      <Member Id="P:System.Fabric.Query.ImageStoreFolderInfo.FileCount" />
      <Member Id="P:System.Fabric.Query.ImageStoreFolderInfo.StoreRelativePath" />
    </Type>
    <Type Name="System.Fabric.Query.ImageStorePagedContentResult" Id="T:System.Fabric.Query.ImageStorePagedContentResult">
      <Member Id="P:System.Fabric.Query.ImageStorePagedContentResult.ContinuationToken" />
      <Member Id="P:System.Fabric.Query.ImageStorePagedContentResult.StoreFiles" />
      <Member Id="P:System.Fabric.Query.ImageStorePagedContentResult.StoreFolders" />
    </Type>
    <Type Name="System.Fabric.Query.KeyValueStoreMigrationPhase" Id="T:System.Fabric.Query.KeyValueStoreMigrationPhase">
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.Inactive" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.Migration" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.RestoreSourceBackup" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.SourceDatabaseCleanup" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.TargetDatabaseActive" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.TargetDatabaseCleanup" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationPhase.TargetDatabaseSwap" />
    </Type>
    <Type Name="System.Fabric.Query.KeyValueStoreMigrationState" Id="T:System.Fabric.Query.KeyValueStoreMigrationState">
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationState.Canceled" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationState.Completed" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationState.Failed" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationState.Inactive" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreMigrationState.Processing" />
    </Type>
    <Type Name="System.Fabric.Query.KeyValueStoreMigrationStatus" Id="T:System.Fabric.Query.KeyValueStoreMigrationStatus">
      <Member Id="P:System.Fabric.Query.KeyValueStoreMigrationStatus.CurrentPhase" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreMigrationStatus.NextPhase" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreMigrationStatus.State" />
    </Type>
    <Type Name="System.Fabric.Query.KeyValueStoreProviderKind" Id="T:System.Fabric.Query.KeyValueStoreProviderKind">
      <Member Id="F:System.Fabric.Query.KeyValueStoreProviderKind.ESE" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreProviderKind.TStore" />
      <Member Id="F:System.Fabric.Query.KeyValueStoreProviderKind.Unknown" />
    </Type>
    <Type Name="System.Fabric.Query.KeyValueStoreReplicaStatus" Id="T:System.Fabric.Query.KeyValueStoreReplicaStatus">
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.CopyNotificationCurrentKeyFilter" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.CopyNotificationCurrentProgress" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.DatabaseLogicalSizeEstimate" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.DatabaseRowCountEstimate" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.MigrationStatus" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.ProviderKind" />
      <Member Id="P:System.Fabric.Query.KeyValueStoreReplicaStatus.StatusDetails" />
    </Type>
    <Type Name="System.Fabric.Query.LoadedPartitionInformationResult" Id="T:System.Fabric.Query.LoadedPartitionInformationResult">
      <Member Id="M:System.Fabric.Query.LoadedPartitionInformationResult.#ctor(System.Uri,System.Guid,System.String,System.Int64)" />
      <Member Id="M:System.Fabric.Query.LoadedPartitionInformationResult.ToString" />
      <Member Id="P:System.Fabric.Query.LoadedPartitionInformationResult.Load" />
      <Member Id="P:System.Fabric.Query.LoadedPartitionInformationResult.MetricName" />
      <Member Id="P:System.Fabric.Query.LoadedPartitionInformationResult.PartitionId" />
      <Member Id="P:System.Fabric.Query.LoadedPartitionInformationResult.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Query.LoadedPartitionInformationResultList" Id="T:System.Fabric.Query.LoadedPartitionInformationResultList">
      <Member Id="M:System.Fabric.Query.LoadedPartitionInformationResultList.#ctor" />
      <Member Id="M:System.Fabric.Query.LoadedPartitionInformationResultList.#ctor(System.Collections.Generic.IList{System.Fabric.Query.LoadedPartitionInformationResult})" />
      <Member Id="M:System.Fabric.Query.LoadedPartitionInformationResultList.ToString" />
    </Type>
    <Type Name="System.Fabric.Query.LoadMetricInformation" Id="T:System.Fabric.Query.LoadMetricInformation">
      <Member Id="M:System.Fabric.Query.LoadMetricInformation.#ctor" />
      <Member Id="M:System.Fabric.Query.LoadMetricInformation.ToString" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.Action" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ActivityThreshold" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.BalancingThreshold" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.BufferedClusterCapacityRemaining" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterCapacity" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterCapacityRemaining" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterLoad" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.CurrentClusterLoad" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.DeviationAfter" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.DeviationBefore" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.IsBalancedAfter" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.IsBalancedBefore" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MaximumNodeLoad" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MinimumNodeLoad" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.Name" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage" />
      <Member Id="P:System.Fabric.Query.LoadMetricInformation.PlannedLoadRemoval" />
    </Type>
    <Type Name="System.Fabric.Query.LoadMetricReport" Id="T:System.Fabric.Query.LoadMetricReport">
      <Member Id="M:System.Fabric.Query.LoadMetricReport.#ctor" />
      <Member Id="P:System.Fabric.Query.LoadMetricReport.CurrentValue" />
      <Member Id="P:System.Fabric.Query.LoadMetricReport.LastReportedUtc" />
      <Member Id="P:System.Fabric.Query.LoadMetricReport.Name" />
      <Member Id="P:System.Fabric.Query.LoadMetricReport.Value" />
    </Type>
    <Type Name="System.Fabric.Query.LocalNetworkInformation" Id="T:System.Fabric.Query.LocalNetworkInformation">
      <Member Id="P:System.Fabric.Query.LocalNetworkInformation.NetworkConfiguration" />
      <Member Id="P:System.Fabric.Query.LocalNetworkInformation.NetworkName" />
      <Member Id="P:System.Fabric.Query.LocalNetworkInformation.NetworkStatus" />
    </Type>
    <Type Name="System.Fabric.Query.NetworkApplication" Id="T:System.Fabric.Query.NetworkApplication">
      <Member Id="P:System.Fabric.Query.NetworkApplication.ApplicationName" />
    </Type>
    <Type Name="System.Fabric.Query.NetworkApplicationList" Id="T:System.Fabric.Query.NetworkApplicationList" />
    <Type Name="System.Fabric.Query.NetworkInformation" Id="T:System.Fabric.Query.NetworkInformation">
      <Member Id="P:System.Fabric.Query.NetworkInformation.NetworkType" />
    </Type>
    <Type Name="System.Fabric.Query.NetworkList" Id="T:System.Fabric.Query.NetworkList" />
    <Type Name="System.Fabric.Query.NetworkNode" Id="T:System.Fabric.Query.NetworkNode">
      <Member Id="P:System.Fabric.Query.NetworkNode.NodeName" />
    </Type>
    <Type Name="System.Fabric.Query.NetworkNodeList" Id="T:System.Fabric.Query.NetworkNodeList" />
    <Type Name="System.Fabric.Query.Node" Id="T:System.Fabric.Query.Node">
      <Member Id="P:System.Fabric.Query.Node.CodeVersion" />
      <Member Id="P:System.Fabric.Query.Node.ConfigVersion" />
      <Member Id="P:System.Fabric.Query.Node.FaultDomain" />
      <Member Id="P:System.Fabric.Query.Node.HealthState" />
      <Member Id="P:System.Fabric.Query.Node.InfrastructurePlacementID" />
      <Member Id="P:System.Fabric.Query.Node.IpAddressOrFQDN" />
      <Member Id="P:System.Fabric.Query.Node.IsNodeByNodeUpgradeInProgress" />
      <Member Id="P:System.Fabric.Query.Node.IsSeedNode" />
      <Member Id="P:System.Fabric.Query.Node.IsStopped" />
      <Member Id="P:System.Fabric.Query.Node.NodeDeactivationInfo" />
      <Member Id="P:System.Fabric.Query.Node.NodeDownAt" />
      <Member Id="P:System.Fabric.Query.Node.NodeDownTime" />
      <Member Id="P:System.Fabric.Query.Node.NodeId" />
      <Member Id="P:System.Fabric.Query.Node.NodeInstanceId" />
      <Member Id="P:System.Fabric.Query.Node.NodeName" />
      <Member Id="P:System.Fabric.Query.Node.NodeStatus" />
      <Member Id="P:System.Fabric.Query.Node.NodeTags" />
      <Member Id="P:System.Fabric.Query.Node.NodeType" />
      <Member Id="P:System.Fabric.Query.Node.NodeUpAt" />
      <Member Id="P:System.Fabric.Query.Node.NodeUpTime" />
      <Member Id="P:System.Fabric.Query.Node.UpgradeDomain" />
    </Type>
    <Type Name="System.Fabric.Query.NodeDeactivationResult" Id="T:System.Fabric.Query.NodeDeactivationResult">
      <Member Id="P:System.Fabric.Query.NodeDeactivationResult.EffectiveIntent" />
      <Member Id="P:System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks" />
      <Member Id="P:System.Fabric.Query.NodeDeactivationResult.Status" />
      <Member Id="P:System.Fabric.Query.NodeDeactivationResult.Tasks" />
    </Type>
    <Type Name="System.Fabric.Query.NodeDeactivationTask" Id="T:System.Fabric.Query.NodeDeactivationTask">
      <Member Id="P:System.Fabric.Query.NodeDeactivationTask.Intent" />
      <Member Id="P:System.Fabric.Query.NodeDeactivationTask.TaskId" />
    </Type>
    <Type Name="System.Fabric.Query.NodeDeactivationTaskId" Id="T:System.Fabric.Query.NodeDeactivationTaskId">
      <Member Id="P:System.Fabric.Query.NodeDeactivationTaskId.Id" />
      <Member Id="P:System.Fabric.Query.NodeDeactivationTaskId.Type" />
    </Type>
    <Type Name="System.Fabric.Query.NodeList" Id="T:System.Fabric.Query.NodeList">
      <Member Id="M:System.Fabric.Query.NodeList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.NodeLoadInformation" Id="T:System.Fabric.Query.NodeLoadInformation">
      <Member Id="M:System.Fabric.Query.NodeLoadInformation.#ctor" />
      <Member Id="P:System.Fabric.Query.NodeLoadInformation.NodeLoadMetricInformationList" />
      <Member Id="P:System.Fabric.Query.NodeLoadInformation.NodeName" />
    </Type>
    <Type Name="System.Fabric.Query.NodeLoadMetricInformation" Id="T:System.Fabric.Query.NodeLoadMetricInformation">
      <Member Id="M:System.Fabric.Query.NodeLoadMetricInformation.#ctor" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.BufferedNodeCapacityRemaining" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.CurrentNodeLoad" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.Name" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeCapacityRemaining" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeLoad" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity" />
      <Member Id="P:System.Fabric.Query.NodeLoadMetricInformation.PlannedNodeLoadRemoval" />
    </Type>
    <Type Name="System.Fabric.Query.NodeStatus" Id="T:System.Fabric.Query.NodeStatus">
      <Member Id="F:System.Fabric.Query.NodeStatus.Disabled" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Disabling" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Down" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Enabling" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Removed" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Unknown" />
      <Member Id="F:System.Fabric.Query.NodeStatus.Up" />
    </Type>
    <Type Name="System.Fabric.Query.NodeStatusFilter" Id="T:System.Fabric.Query.NodeStatusFilter">
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.All" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Default" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Disabled" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Disabling" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Down" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Enabling" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Removed" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Unknown" />
      <Member Id="F:System.Fabric.Query.NodeStatusFilter.Up" />
    </Type>
    <Type Name="System.Fabric.Query.PagedList`1" Id="T:System.Fabric.Query.PagedList`1">
      <Member Id="M:System.Fabric.Query.PagedList`1.#ctor" />
      <Member Id="M:System.Fabric.Query.PagedList`1.#ctor(System.Collections.Generic.IList{`0})" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Add(`0)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Clear" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Contains(`0)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.CopyTo(`0[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.PagedList`1.IndexOf(`0)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Insert(System.Int32,`0)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Items" />
      <Member Id="M:System.Fabric.Query.PagedList`1.Remove(`0)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.PagedList`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.PagedList`1.ContinuationToken" />
      <Member Id="P:System.Fabric.Query.PagedList`1.Count" />
      <Member Id="P:System.Fabric.Query.PagedList`1.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.PagedList`1.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.PagedListHelper" Id="T:System.Fabric.Query.PagedListHelper">
      <Member Id="M:System.Fabric.Query.PagedListHelper.ToArray``1(System.Fabric.Query.PagedList{``0})" />
    </Type>
    <Type Name="System.Fabric.Query.Partition" Id="T:System.Fabric.Query.Partition">
      <Member Id="M:System.Fabric.Query.Partition.#ctor(System.Fabric.Query.ServiceKind,System.Fabric.ServicePartitionInformation,System.Fabric.Health.HealthState,System.Fabric.Query.ServicePartitionStatus)" />
      <Member Id="P:System.Fabric.Query.Partition.HealthState" />
      <Member Id="P:System.Fabric.Query.Partition.PartitionInformation" />
      <Member Id="P:System.Fabric.Query.Partition.PartitionStatus" />
      <Member Id="P:System.Fabric.Query.Partition.ServiceKind" />
    </Type>
    <Type Name="System.Fabric.Query.PartitionLoadInformation" Id="T:System.Fabric.Query.PartitionLoadInformation">
      <Member Id="M:System.Fabric.Query.PartitionLoadInformation.#ctor" />
      <Member Id="P:System.Fabric.Query.PartitionLoadInformation.AuxiliaryLoadMetricReports" />
      <Member Id="P:System.Fabric.Query.PartitionLoadInformation.PartitionId" />
      <Member Id="P:System.Fabric.Query.PartitionLoadInformation.PrimaryLoadMetricReports" />
      <Member Id="P:System.Fabric.Query.PartitionLoadInformation.SecondaryLoadMetricReports" />
    </Type>
    <Type Name="System.Fabric.Query.PrimaryReplicatorStatus" Id="T:System.Fabric.Query.PrimaryReplicatorStatus">
      <Member Id="M:System.Fabric.Query.PrimaryReplicatorStatus.#ctor" />
      <Member Id="P:System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators" />
      <Member Id="P:System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus" />
    </Type>
    <Type Name="System.Fabric.Query.ProvisionedFabricCodeVersion" Id="T:System.Fabric.Query.ProvisionedFabricCodeVersion">
      <Member Id="P:System.Fabric.Query.ProvisionedFabricCodeVersion.CodeVersion" />
    </Type>
    <Type Name="System.Fabric.Query.ProvisionedFabricCodeVersionList" Id="T:System.Fabric.Query.ProvisionedFabricCodeVersionList">
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.Add(System.Fabric.Query.ProvisionedFabricCodeVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.Clear" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.Contains(System.Fabric.Query.ProvisionedFabricCodeVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.CopyTo(System.Fabric.Query.ProvisionedFabricCodeVersion[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.IndexOf(System.Fabric.Query.ProvisionedFabricCodeVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.Insert(System.Int32,System.Fabric.Query.ProvisionedFabricCodeVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.Remove(System.Fabric.Query.ProvisionedFabricCodeVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricCodeVersionList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricCodeVersionList.Count" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricCodeVersionList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricCodeVersionList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ProvisionedFabricConfigVersion" Id="T:System.Fabric.Query.ProvisionedFabricConfigVersion">
      <Member Id="P:System.Fabric.Query.ProvisionedFabricConfigVersion.ConfigVersion" />
    </Type>
    <Type Name="System.Fabric.Query.ProvisionedFabricConfigVersionList" Id="T:System.Fabric.Query.ProvisionedFabricConfigVersionList">
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.Add(System.Fabric.Query.ProvisionedFabricConfigVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.Clear" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.Contains(System.Fabric.Query.ProvisionedFabricConfigVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.CopyTo(System.Fabric.Query.ProvisionedFabricConfigVersion[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.IndexOf(System.Fabric.Query.ProvisionedFabricConfigVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.Insert(System.Int32,System.Fabric.Query.ProvisionedFabricConfigVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.Remove(System.Fabric.Query.ProvisionedFabricConfigVersion)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ProvisionedFabricConfigVersionList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricConfigVersionList.Count" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricConfigVersionList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ProvisionedFabricConfigVersionList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.RemoteReplicatorAcknowledgementDetail" Id="T:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail">
      <Member Id="M:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount" />
    </Type>
    <Type Name="System.Fabric.Query.RemoteReplicatorAcknowledgementStatus" Id="T:System.Fabric.Query.RemoteReplicatorAcknowledgementStatus">
      <Member Id="M:System.Fabric.Query.RemoteReplicatorAcknowledgementStatus.#ctor" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementStatus.CopyStreamAcknowledgementDetail" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorAcknowledgementStatus.ReplicationStreamAcknowledgementDetail" />
    </Type>
    <Type Name="System.Fabric.Query.RemoteReplicatorStatus" Id="T:System.Fabric.Query.RemoteReplicatorStatus">
      <Member Id="M:System.Fabric.Query.RemoteReplicatorStatus.#ctor" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.IsInBuild" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus" />
      <Member Id="P:System.Fabric.Query.RemoteReplicatorStatus.ReplicaId" />
    </Type>
    <Type Name="System.Fabric.Query.Replica" Id="T:System.Fabric.Query.Replica">
      <Member Id="M:System.Fabric.Query.Replica.#ctor(System.Fabric.Query.ServiceKind,System.Int64,System.Fabric.Query.ServiceReplicaStatus,System.Fabric.Health.HealthState,System.String,System.String,System.TimeSpan)" />
      <Member Id="P:System.Fabric.Query.Replica.HealthState" />
      <Member Id="P:System.Fabric.Query.Replica.Id" />
      <Member Id="P:System.Fabric.Query.Replica.LastInBuildDuration" />
      <Member Id="P:System.Fabric.Query.Replica.LastInBuildDurationInSeconds" />
      <Member Id="P:System.Fabric.Query.Replica.NodeName" />
      <Member Id="P:System.Fabric.Query.Replica.ReplicaAddress" />
      <Member Id="P:System.Fabric.Query.Replica.ReplicaStatus" />
      <Member Id="P:System.Fabric.Query.Replica.ServiceKind" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicaLoadInformation" Id="T:System.Fabric.Query.ReplicaLoadInformation">
      <Member Id="M:System.Fabric.Query.ReplicaLoadInformation.#ctor" />
      <Member Id="P:System.Fabric.Query.ReplicaLoadInformation.LoadMetricReports" />
      <Member Id="P:System.Fabric.Query.ReplicaLoadInformation.PartitionId" />
      <Member Id="P:System.Fabric.Query.ReplicaLoadInformation.ReplicaOrInstanceId" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicaStatus" Id="T:System.Fabric.Query.ReplicaStatus">
      <Member Id="P:System.Fabric.Query.ReplicaStatus.Kind" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicaStatus/ReplicaKind" Id="T:System.Fabric.Query.ReplicaStatus.ReplicaKind">
      <Member Id="F:System.Fabric.Query.ReplicaStatus.ReplicaKind.Invalid" />
      <Member Id="F:System.Fabric.Query.ReplicaStatus.ReplicaKind.KeyValueStore" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicatorOperationName" Id="T:System.Fabric.Query.ReplicatorOperationName">
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.Abort" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.Build" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.ChangeRole" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.Close" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.Invalid" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.None" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.OnDataLoss" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.Open" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.UpdateEpoch" />
      <Member Id="F:System.Fabric.Query.ReplicatorOperationName.WaitForCatchup" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicatorQueueStatus" Id="T:System.Fabric.Query.ReplicatorQueueStatus">
      <Member Id="M:System.Fabric.Query.ReplicatorQueueStatus.#ctor" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize" />
      <Member Id="P:System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage" />
    </Type>
    <Type Name="System.Fabric.Query.ReplicatorStatus" Id="T:System.Fabric.Query.ReplicatorStatus">
      <Member Id="M:System.Fabric.Query.ReplicatorStatus.#ctor(System.Fabric.ReplicaRole)" />
    </Type>
    <Type Name="System.Fabric.Query.SecondaryReplicatorStatus" Id="T:System.Fabric.Query.SecondaryReplicatorStatus">
      <Member Id="M:System.Fabric.Query.SecondaryReplicatorStatus.#ctor" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.CopyQueueStatus" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.IsInBuild" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.LastAcknowledgementSentTimeUtc" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.LastCopyOperationReceivedTimeUtc" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.LastReplicationOperationReceivedTimeUtc" />
      <Member Id="P:System.Fabric.Query.SecondaryReplicatorStatus.ReplicationQueueStatus" />
    </Type>
    <Type Name="System.Fabric.Query.Service" Id="T:System.Fabric.Query.Service">
      <Member Id="P:System.Fabric.Query.Service.HealthState" />
      <Member Id="P:System.Fabric.Query.Service.IsServiceGroup" />
      <Member Id="P:System.Fabric.Query.Service.ServiceKind" />
      <Member Id="P:System.Fabric.Query.Service.ServiceManifestVersion" />
      <Member Id="P:System.Fabric.Query.Service.ServiceName" />
      <Member Id="P:System.Fabric.Query.Service.ServiceStatus" />
      <Member Id="P:System.Fabric.Query.Service.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMember" Id="T:System.Fabric.Query.ServiceGroupMember">
      <Member Id="P:System.Fabric.Query.ServiceGroupMember.ServiceGroupMemberMembers" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMember.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMemberList" Id="T:System.Fabric.Query.ServiceGroupMemberList">
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.Add(System.Fabric.Query.ServiceGroupMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.Clear" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.Contains(System.Fabric.Query.ServiceGroupMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.CopyTo(System.Fabric.Query.ServiceGroupMember[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.IndexOf(System.Fabric.Query.ServiceGroupMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.Insert(System.Int32,System.Fabric.Query.ServiceGroupMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.Remove(System.Fabric.Query.ServiceGroupMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberList.Count" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMemberMember" Id="T:System.Fabric.Query.ServiceGroupMemberMember">
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberMember.ServiceName" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberMember.ServiceTypeName" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMemberMemberList" Id="T:System.Fabric.Query.ServiceGroupMemberMemberList">
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.Add(System.Fabric.Query.ServiceGroupMemberMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.Clear" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.Contains(System.Fabric.Query.ServiceGroupMemberMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.CopyTo(System.Fabric.Query.ServiceGroupMemberMember[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.IndexOf(System.Fabric.Query.ServiceGroupMemberMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.Insert(System.Int32,System.Fabric.Query.ServiceGroupMemberMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.Remove(System.Fabric.Query.ServiceGroupMemberMember)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberMemberList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberMemberList.Count" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberMemberList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberMemberList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMemberType" Id="T:System.Fabric.Query.ServiceGroupMemberType">
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberType.ServiceGroupMemberTypeDescription" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberType.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberType.ServiceManifestVersion" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceGroupMemberTypeList" Id="T:System.Fabric.Query.ServiceGroupMemberTypeList">
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.Add(System.Fabric.Query.ServiceGroupMemberType)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.Clear" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.Contains(System.Fabric.Query.ServiceGroupMemberType)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.CopyTo(System.Fabric.Query.ServiceGroupMemberType[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.IndexOf(System.Fabric.Query.ServiceGroupMemberType)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.Insert(System.Int32,System.Fabric.Query.ServiceGroupMemberType)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.Remove(System.Fabric.Query.ServiceGroupMemberType)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceGroupMemberTypeList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberTypeList.Count" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberTypeList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ServiceGroupMemberTypeList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceKind" Id="T:System.Fabric.Query.ServiceKind">
      <Member Id="F:System.Fabric.Query.ServiceKind.Invalid" />
      <Member Id="F:System.Fabric.Query.ServiceKind.Stateful" />
      <Member Id="F:System.Fabric.Query.ServiceKind.Stateless" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceList" Id="T:System.Fabric.Query.ServiceList">
      <Member Id="M:System.Fabric.Query.ServiceList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceNameResult" Id="T:System.Fabric.Query.ServiceNameResult">
      <Member Id="P:System.Fabric.Query.ServiceNameResult.ServiceName" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceOperationName" Id="T:System.Fabric.Query.ServiceOperationName">
      <Member Id="F:System.Fabric.Query.ServiceOperationName.Abort" />
      <Member Id="F:System.Fabric.Query.ServiceOperationName.ChangeRole" />
      <Member Id="F:System.Fabric.Query.ServiceOperationName.Close" />
      <Member Id="F:System.Fabric.Query.ServiceOperationName.Invalid" />
      <Member Id="F:System.Fabric.Query.ServiceOperationName.None" />
      <Member Id="F:System.Fabric.Query.ServiceOperationName.Open" />
    </Type>
    <Type Name="System.Fabric.Query.ServicePartitionList" Id="T:System.Fabric.Query.ServicePartitionList">
      <Member Id="M:System.Fabric.Query.ServicePartitionList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.ServicePartitionStatus" Id="T:System.Fabric.Query.ServicePartitionStatus">
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.Deleting" />
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.InQuorumLoss" />
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.NotReady" />
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.Ready" />
      <Member Id="F:System.Fabric.Query.ServicePartitionStatus.Reconfiguring" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceReplicaList" Id="T:System.Fabric.Query.ServiceReplicaList">
      <Member Id="M:System.Fabric.Query.ServiceReplicaList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceReplicaStatus" Id="T:System.Fabric.Query.ServiceReplicaStatus">
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Completed" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Down" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Dropped" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.InBuild" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Ready" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatus.Standby" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceReplicaStatusFilter" Id="T:System.Fabric.Query.ServiceReplicaStatusFilter">
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.All" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Completed" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Default" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Down" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Dropped" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.InBuild" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Ready" />
      <Member Id="F:System.Fabric.Query.ServiceReplicaStatusFilter.Standby" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceStatus" Id="T:System.Fabric.Query.ServiceStatus">
      <Member Id="F:System.Fabric.Query.ServiceStatus.Active" />
      <Member Id="F:System.Fabric.Query.ServiceStatus.Creating" />
      <Member Id="F:System.Fabric.Query.ServiceStatus.Deleting" />
      <Member Id="F:System.Fabric.Query.ServiceStatus.Failed" />
      <Member Id="F:System.Fabric.Query.ServiceStatus.Unknown" />
      <Member Id="F:System.Fabric.Query.ServiceStatus.Upgrading" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceType" Id="T:System.Fabric.Query.ServiceType">
      <Member Id="P:System.Fabric.Query.ServiceType.IsServiceGroup" />
      <Member Id="P:System.Fabric.Query.ServiceType.ServiceManifestName" />
      <Member Id="P:System.Fabric.Query.ServiceType.ServiceManifestVersion" />
      <Member Id="P:System.Fabric.Query.ServiceType.ServiceTypeDescription" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceTypeList" Id="T:System.Fabric.Query.ServiceTypeList">
      <Member Id="M:System.Fabric.Query.ServiceTypeList.Add(System.Fabric.Query.ServiceType)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.Clear" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.Contains(System.Fabric.Query.ServiceType)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.CopyTo(System.Fabric.Query.ServiceType[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.IndexOf(System.Fabric.Query.ServiceType)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.Insert(System.Int32,System.Fabric.Query.ServiceType)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.Remove(System.Fabric.Query.ServiceType)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.ServiceTypeList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.ServiceTypeList.Count" />
      <Member Id="P:System.Fabric.Query.ServiceTypeList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.ServiceTypeList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.ServiceTypeRegistrationStatus" Id="T:System.Fabric.Query.ServiceTypeRegistrationStatus">
      <Member Id="F:System.Fabric.Query.ServiceTypeRegistrationStatus.Disabled" />
      <Member Id="F:System.Fabric.Query.ServiceTypeRegistrationStatus.Invalid" />
      <Member Id="F:System.Fabric.Query.ServiceTypeRegistrationStatus.NotRegistered" />
      <Member Id="F:System.Fabric.Query.ServiceTypeRegistrationStatus.Registered" />
    </Type>
    <Type Name="System.Fabric.Query.StatefulService" Id="T:System.Fabric.Query.StatefulService">
      <Member Id="P:System.Fabric.Query.StatefulService.HasPersistedState" />
    </Type>
    <Type Name="System.Fabric.Query.StatefulServicePartition" Id="T:System.Fabric.Query.StatefulServicePartition">
      <Member Id="P:System.Fabric.Query.StatefulServicePartition.AuxiliaryReplicaCount" />
      <Member Id="P:System.Fabric.Query.StatefulServicePartition.LastQuorumLossDuration" />
      <Member Id="P:System.Fabric.Query.StatefulServicePartition.MinReplicaSetSize" />
      <Member Id="P:System.Fabric.Query.StatefulServicePartition.PrimaryEpoch" />
      <Member Id="P:System.Fabric.Query.StatefulServicePartition.TargetReplicaSetSize" />
    </Type>
    <Type Name="System.Fabric.Query.StatefulServiceReplica" Id="T:System.Fabric.Query.StatefulServiceReplica">
      <Member Id="P:System.Fabric.Query.StatefulServiceReplica.ReplicaRole" />
    </Type>
    <Type Name="System.Fabric.Query.StatelessService" Id="T:System.Fabric.Query.StatelessService" />
    <Type Name="System.Fabric.Query.StatelessServiceInstance" Id="T:System.Fabric.Query.StatelessServiceInstance" />
    <Type Name="System.Fabric.Query.StatelessServicePartition" Id="T:System.Fabric.Query.StatelessServicePartition">
      <Member Id="P:System.Fabric.Query.StatelessServicePartition.InstanceCount" />
      <Member Id="P:System.Fabric.Query.StatelessServicePartition.MinInstanceCount" />
      <Member Id="P:System.Fabric.Query.StatelessServicePartition.MinInstancePercentage" />
    </Type>
    <Type Name="System.Fabric.Query.TestCommandStateFilter" Id="T:System.Fabric.Query.TestCommandStateFilter">
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.All" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.Cancelled" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.CompletedSuccessfully" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.Default" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.Failed" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.ForceCancelled" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.RollingBack" />
      <Member Id="F:System.Fabric.Query.TestCommandStateFilter.Running" />
    </Type>
    <Type Name="System.Fabric.Query.TestCommandStatus" Id="T:System.Fabric.Query.TestCommandStatus">
      <Member Id="M:System.Fabric.Query.TestCommandStatus.ToString" />
      <Member Id="P:System.Fabric.Query.TestCommandStatus.OperationId" />
      <Member Id="P:System.Fabric.Query.TestCommandStatus.State" />
      <Member Id="P:System.Fabric.Query.TestCommandStatus.TestCommandType" />
    </Type>
    <Type Name="System.Fabric.Query.TestCommandStatusList" Id="T:System.Fabric.Query.TestCommandStatusList">
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.Add(System.Fabric.Query.TestCommandStatus)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.Clear" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.Contains(System.Fabric.Query.TestCommandStatus)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.CopyTo(System.Fabric.Query.TestCommandStatus[],System.Int32)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.GetEnumerator" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.IndexOf(System.Fabric.Query.TestCommandStatus)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.Insert(System.Int32,System.Fabric.Query.TestCommandStatus)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.Remove(System.Fabric.Query.TestCommandStatus)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Query.TestCommandStatusList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Query.TestCommandStatusList.Count" />
      <Member Id="P:System.Fabric.Query.TestCommandStatusList.IsReadOnly" />
      <Member Id="P:System.Fabric.Query.TestCommandStatusList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Query.TestCommandTypeFilter" Id="T:System.Fabric.Query.TestCommandTypeFilter">
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.All" />
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.Default" />
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.NodeTransition" />
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.PartitionDataLoss" />
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.PartitionQuorumLoss" />
      <Member Id="F:System.Fabric.Query.TestCommandTypeFilter.PartitionRestart" />
    </Type>
    <Type Name="System.Fabric.Query.UnplacedReplicaInformation" Id="T:System.Fabric.Query.UnplacedReplicaInformation">
      <Member Id="M:System.Fabric.Query.UnplacedReplicaInformation.#ctor(System.String,System.Guid,System.Collections.Generic.IList{System.String})" />
      <Member Id="P:System.Fabric.Query.UnplacedReplicaInformation.PartitionId" />
      <Member Id="P:System.Fabric.Query.UnplacedReplicaInformation.ServiceName" />
      <Member Id="P:System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons" />
    </Type>
    <Type Name="System.Fabric.Query.UpdatePartitionLoadResult" Id="T:System.Fabric.Query.UpdatePartitionLoadResult">
      <Member Id="P:System.Fabric.Query.UpdatePartitionLoadResult.PartitionErrorCode" />
      <Member Id="P:System.Fabric.Query.UpdatePartitionLoadResult.PartitionId" />
    </Type>
    <Type Name="System.Fabric.Query.UpdatePartitionLoadResultList" Id="T:System.Fabric.Query.UpdatePartitionLoadResultList">
      <Member Id="M:System.Fabric.Query.UpdatePartitionLoadResultList.#ctor" />
    </Type>
    <Type Name="System.Fabric.Query.UploadChunkRange" Id="T:System.Fabric.Query.UploadChunkRange">
      <Member Id="P:System.Fabric.Query.UploadChunkRange.EndPosition" />
      <Member Id="P:System.Fabric.Query.UploadChunkRange.StartPosition" />
    </Type>
    <Type Name="System.Fabric.Query.UploadSession" Id="T:System.Fabric.Query.UploadSession">
      <Member Id="P:System.Fabric.Query.UploadSession.UploadSessions" />
    </Type>
    <Type Name="System.Fabric.Query.UploadSessionInfo" Id="T:System.Fabric.Query.UploadSessionInfo">
      <Member Id="P:System.Fabric.Query.UploadSessionInfo.ExpectedRanges" />
      <Member Id="P:System.Fabric.Query.UploadSessionInfo.FileSize" />
      <Member Id="P:System.Fabric.Query.UploadSessionInfo.ModifiedDate" />
      <Member Id="P:System.Fabric.Query.UploadSessionInfo.SessionId" />
      <Member Id="P:System.Fabric.Query.UploadSessionInfo.StoreRelativePath" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Repair">
    <Type Name="System.Fabric.Repair.ClusterRepairTask" Id="T:System.Fabric.Repair.ClusterRepairTask">
      <Member Id="M:System.Fabric.Repair.ClusterRepairTask.#ctor(System.String,System.String)" />
    </Type>
    <Type Name="System.Fabric.Repair.NodeImpact" Id="T:System.Fabric.Repair.NodeImpact">
      <Member Id="M:System.Fabric.Repair.NodeImpact.#ctor" />
      <Member Id="M:System.Fabric.Repair.NodeImpact.#ctor(System.String,System.Fabric.Repair.NodeImpactLevel)" />
      <Member Id="M:System.Fabric.Repair.NodeImpact.ToString" />
      <Member Id="P:System.Fabric.Repair.NodeImpact.ImpactLevel" />
      <Member Id="P:System.Fabric.Repair.NodeImpact.NodeName" />
    </Type>
    <Type Name="System.Fabric.Repair.NodeImpactLevel" Id="T:System.Fabric.Repair.NodeImpactLevel">
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.Invalid" />
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.None" />
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.Pause" />
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.RemoveData" />
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.RemoveNode" />
      <Member Id="F:System.Fabric.Repair.NodeImpactLevel.Restart" />
    </Type>
    <Type Name="System.Fabric.Repair.NodeRepairImpactDescription" Id="T:System.Fabric.Repair.NodeRepairImpactDescription">
      <Member Id="M:System.Fabric.Repair.NodeRepairImpactDescription.#ctor" />
      <Member Id="M:System.Fabric.Repair.NodeRepairImpactDescription.ToString" />
      <Member Id="P:System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes" />
    </Type>
    <Type Name="System.Fabric.Repair.NodeRepairTargetDescription" Id="T:System.Fabric.Repair.NodeRepairTargetDescription">
      <Member Id="M:System.Fabric.Repair.NodeRepairTargetDescription.#ctor" />
      <Member Id="M:System.Fabric.Repair.NodeRepairTargetDescription.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:System.Fabric.Repair.NodeRepairTargetDescription.#ctor(System.String)" />
      <Member Id="M:System.Fabric.Repair.NodeRepairTargetDescription.ToString" />
      <Member Id="P:System.Fabric.Repair.NodeRepairTargetDescription.Nodes" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairImpactDescription" Id="T:System.Fabric.Repair.RepairImpactDescription">
      <Member Id="P:System.Fabric.Repair.RepairImpactDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairImpactKind" Id="T:System.Fabric.Repair.RepairImpactKind">
      <Member Id="F:System.Fabric.Repair.RepairImpactKind.Invalid" />
      <Member Id="F:System.Fabric.Repair.RepairImpactKind.Node" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairScopeIdentifier" Id="T:System.Fabric.Repair.RepairScopeIdentifier">
      <Member Id="P:System.Fabric.Repair.RepairScopeIdentifier.Kind" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairScopeIdentifierKind" Id="T:System.Fabric.Repair.RepairScopeIdentifierKind">
      <Member Id="F:System.Fabric.Repair.RepairScopeIdentifierKind.Cluster" />
      <Member Id="F:System.Fabric.Repair.RepairScopeIdentifierKind.Invalid" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTargetDescription" Id="T:System.Fabric.Repair.RepairTargetDescription">
      <Member Id="P:System.Fabric.Repair.RepairTargetDescription.Kind" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTargetKind" Id="T:System.Fabric.Repair.RepairTargetKind">
      <Member Id="F:System.Fabric.Repair.RepairTargetKind.Invalid" />
      <Member Id="F:System.Fabric.Repair.RepairTargetKind.Node" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTask" Id="T:System.Fabric.Repair.RepairTask">
      <Member Id="P:System.Fabric.Repair.RepairTask.Action" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ApprovedTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ClaimedTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.CompletedTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.CreatedTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Description" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ExecutingTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Executor" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ExecutorData" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Flags" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Impact" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PreparingHealthCheckState" />
      <Member Id="P:System.Fabric.Repair.RepairTask.PreparingTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.RestoringHealthCheckState" />
      <Member Id="P:System.Fabric.Repair.RepairTask.RestoringTimestamp" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ResultCode" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ResultDetails" />
      <Member Id="P:System.Fabric.Repair.RepairTask.ResultStatus" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Scope" />
      <Member Id="P:System.Fabric.Repair.RepairTask.State" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Target" />
      <Member Id="P:System.Fabric.Repair.RepairTask.TaskId" />
      <Member Id="P:System.Fabric.Repair.RepairTask.Version" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskFlags" Id="T:System.Fabric.Repair.RepairTaskFlags">
      <Member Id="F:System.Fabric.Repair.RepairTaskFlags.AbortRequested" />
      <Member Id="F:System.Fabric.Repair.RepairTaskFlags.CancelRequested" />
      <Member Id="F:System.Fabric.Repair.RepairTaskFlags.ForcedApproval" />
      <Member Id="F:System.Fabric.Repair.RepairTaskFlags.None" />
      <Member Id="F:System.Fabric.Repair.RepairTaskFlags.ValidMask" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskHealthCheckState" Id="T:System.Fabric.Repair.RepairTaskHealthCheckState">
      <Member Id="F:System.Fabric.Repair.RepairTaskHealthCheckState.InProgress" />
      <Member Id="F:System.Fabric.Repair.RepairTaskHealthCheckState.NotStarted" />
      <Member Id="F:System.Fabric.Repair.RepairTaskHealthCheckState.Skipped" />
      <Member Id="F:System.Fabric.Repair.RepairTaskHealthCheckState.Succeeded" />
      <Member Id="F:System.Fabric.Repair.RepairTaskHealthCheckState.TimedOut" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskList" Id="T:System.Fabric.Repair.RepairTaskList">
      <Member Id="M:System.Fabric.Repair.RepairTaskList.Add(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.Clear" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.Contains(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.CopyTo(System.Fabric.Repair.RepairTask[],System.Int32)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.GetEnumerator" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.IndexOf(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.Insert(System.Int32,System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.Remove(System.Fabric.Repair.RepairTask)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.RemoveAt(System.Int32)" />
      <Member Id="M:System.Fabric.Repair.RepairTaskList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Fabric.Repair.RepairTaskList.Count" />
      <Member Id="P:System.Fabric.Repair.RepairTaskList.IsReadOnly" />
      <Member Id="P:System.Fabric.Repair.RepairTaskList.Item(System.Int32)" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskResult" Id="T:System.Fabric.Repair.RepairTaskResult">
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Cancelled" />
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Failed" />
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Interrupted" />
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Invalid" />
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Pending" />
      <Member Id="F:System.Fabric.Repair.RepairTaskResult.Succeeded" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskState" Id="T:System.Fabric.Repair.RepairTaskState">
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Approved" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Claimed" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Completed" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Created" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Executing" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Invalid" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Preparing" />
      <Member Id="F:System.Fabric.Repair.RepairTaskState.Restoring" />
    </Type>
    <Type Name="System.Fabric.Repair.RepairTaskStateFilter" Id="T:System.Fabric.Repair.RepairTaskStateFilter">
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Active" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.All" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Approved" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Claimed" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Completed" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Created" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Default" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Executing" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Preparing" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.ReadyToExecute" />
      <Member Id="F:System.Fabric.Repair.RepairTaskStateFilter.Restoring" />
    </Type>
    <Type Name="System.Fabric.Repair.SystemNodeRepairAction" Id="T:System.Fabric.Repair.SystemNodeRepairAction">
      <Member Id="F:System.Fabric.Repair.SystemNodeRepairAction.FullReimage" />
      <Member Id="F:System.Fabric.Repair.SystemNodeRepairAction.Reboot" />
      <Member Id="F:System.Fabric.Repair.SystemNodeRepairAction.ReimageOS" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Result">
    <Type Name="System.Fabric.Result.InvokeDataLossResult" Id="T:System.Fabric.Result.InvokeDataLossResult">
      <Member Id="M:System.Fabric.Result.InvokeDataLossResult.ToString" />
      <Member Id="P:System.Fabric.Result.InvokeDataLossResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.InvokeQuorumLossResult" Id="T:System.Fabric.Result.InvokeQuorumLossResult">
      <Member Id="M:System.Fabric.Result.InvokeQuorumLossResult.ToString" />
      <Member Id="P:System.Fabric.Result.InvokeQuorumLossResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.MoveAuxiliaryResult" Id="T:System.Fabric.Result.MoveAuxiliaryResult">
      <Member Id="M:System.Fabric.Result.MoveAuxiliaryResult.ToString" />
      <Member Id="P:System.Fabric.Result.MoveAuxiliaryResult.CurrentAuxiliaryNodeName" />
      <Member Id="P:System.Fabric.Result.MoveAuxiliaryResult.NewAuxiliaryNodeName" />
      <Member Id="P:System.Fabric.Result.MoveAuxiliaryResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.MoveInstanceResult" Id="T:System.Fabric.Result.MoveInstanceResult">
      <Member Id="M:System.Fabric.Result.MoveInstanceResult.ToString" />
      <Member Id="P:System.Fabric.Result.MoveInstanceResult.CurrentInstanceNodeName" />
      <Member Id="P:System.Fabric.Result.MoveInstanceResult.NewInstanceNodeName" />
      <Member Id="P:System.Fabric.Result.MoveInstanceResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.MovePrimaryResult" Id="T:System.Fabric.Result.MovePrimaryResult">
      <Member Id="M:System.Fabric.Result.MovePrimaryResult.ToString" />
      <Member Id="P:System.Fabric.Result.MovePrimaryResult.NodeName" />
      <Member Id="P:System.Fabric.Result.MovePrimaryResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.MoveSecondaryResult" Id="T:System.Fabric.Result.MoveSecondaryResult">
      <Member Id="M:System.Fabric.Result.MoveSecondaryResult.ToString" />
      <Member Id="P:System.Fabric.Result.MoveSecondaryResult.CurrentSecondaryNodeName" />
      <Member Id="P:System.Fabric.Result.MoveSecondaryResult.NewSecondaryNodeName" />
      <Member Id="P:System.Fabric.Result.MoveSecondaryResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.NodeCommandResult" Id="T:System.Fabric.Result.NodeCommandResult">
      <Member Id="M:System.Fabric.Result.NodeCommandResult.ToString" />
      <Member Id="P:System.Fabric.Result.NodeCommandResult.NodeResult" />
    </Type>
    <Type Name="System.Fabric.Result.NodeResult" Id="T:System.Fabric.Result.NodeResult">
      <Member Id="M:System.Fabric.Result.NodeResult.ToString" />
      <Member Id="P:System.Fabric.Result.NodeResult.NodeInstance" />
      <Member Id="P:System.Fabric.Result.NodeResult.NodeName" />
    </Type>
    <Type Name="System.Fabric.Result.PartitionDataLossResult" Id="T:System.Fabric.Result.PartitionDataLossResult">
      <Member Id="M:System.Fabric.Result.PartitionDataLossResult.ToString" />
      <Member Id="P:System.Fabric.Result.PartitionDataLossResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.PartitionQuorumLossResult" Id="T:System.Fabric.Result.PartitionQuorumLossResult">
      <Member Id="M:System.Fabric.Result.PartitionQuorumLossResult.ToString" />
      <Member Id="P:System.Fabric.Result.PartitionQuorumLossResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.PartitionRestartResult" Id="T:System.Fabric.Result.PartitionRestartResult">
      <Member Id="M:System.Fabric.Result.PartitionRestartResult.ToString" />
      <Member Id="P:System.Fabric.Result.PartitionRestartResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.RemoveReplicaResult" Id="T:System.Fabric.Result.RemoveReplicaResult" />
    <Type Name="System.Fabric.Result.ReplicaResult" Id="T:System.Fabric.Result.ReplicaResult">
      <Member Id="P:System.Fabric.Result.ReplicaResult.SelectedReplica" />
    </Type>
    <Type Name="System.Fabric.Result.ReportCompletionResult" Id="T:System.Fabric.Result.ReportCompletionResult" />
    <Type Name="System.Fabric.Result.RestartDeployedCodePackageResult" Id="T:System.Fabric.Result.RestartDeployedCodePackageResult">
      <Member Id="M:System.Fabric.Result.RestartDeployedCodePackageResult.ToString" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.ApplicationName" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.CodePackageInstanceId" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.CodePackageName" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.NodeName" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.SelectedReplica" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.ServiceManifestName" />
      <Member Id="P:System.Fabric.Result.RestartDeployedCodePackageResult.ServicePackageActivationId" />
    </Type>
    <Type Name="System.Fabric.Result.RestartNodeResult" Id="T:System.Fabric.Result.RestartNodeResult">
      <Member Id="M:System.Fabric.Result.RestartNodeResult.ToString" />
      <Member Id="P:System.Fabric.Result.RestartNodeResult.NodeResult" />
      <Member Id="P:System.Fabric.Result.RestartNodeResult.SelectedReplica" />
    </Type>
    <Type Name="System.Fabric.Result.RestartPartitionResult" Id="T:System.Fabric.Result.RestartPartitionResult">
      <Member Id="M:System.Fabric.Result.RestartPartitionResult.ToString" />
      <Member Id="P:System.Fabric.Result.RestartPartitionResult.SelectedPartition" />
    </Type>
    <Type Name="System.Fabric.Result.RestartReplicaResult" Id="T:System.Fabric.Result.RestartReplicaResult" />
    <Type Name="System.Fabric.Result.StartNodeResult" Id="T:System.Fabric.Result.StartNodeResult" />
    <Type Name="System.Fabric.Result.StopNodeResult" Id="T:System.Fabric.Result.StopNodeResult" />
    <Type Name="System.Fabric.Result.TestCommandResult" Id="T:System.Fabric.Result.TestCommandResult">
      <Member Id="M:System.Fabric.Result.TestCommandResult.#ctor" />
      <Member Id="P:System.Fabric.Result.TestCommandResult.Exception" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.SecretStore">
    <Type Name="System.Fabric.SecretStore.Secret" Id="T:System.Fabric.SecretStore.Secret">
      <Member Id="M:System.Fabric.SecretStore.Secret.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.Secret.Name" />
      <Member Id="P:System.Fabric.SecretStore.Secret.Value" />
      <Member Id="P:System.Fabric.SecretStore.Secret.Version" />
    </Type>
    <Type Name="System.Fabric.SecretStore.SecretDescription" Id="T:System.Fabric.SecretStore.SecretDescription">
      <Member Id="M:System.Fabric.SecretStore.SecretDescription.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.SecretDescription.Name" />
      <Member Id="P:System.Fabric.SecretStore.SecretDescription.Properties" />
    </Type>
    <Type Name="System.Fabric.SecretStore.SecretProperties" Id="T:System.Fabric.SecretStore.SecretProperties">
      <Member Id="M:System.Fabric.SecretStore.SecretProperties.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.SecretProperties.ContentType" />
      <Member Id="P:System.Fabric.SecretStore.SecretProperties.Description" />
      <Member Id="P:System.Fabric.SecretStore.SecretProperties.Kind" />
    </Type>
    <Type Name="System.Fabric.SecretStore.SecretReference" Id="T:System.Fabric.SecretStore.SecretReference">
      <Member Id="M:System.Fabric.SecretStore.SecretReference.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.SecretReference.Name" />
      <Member Id="P:System.Fabric.SecretStore.SecretReference.Version" />
    </Type>
    <Type Name="System.Fabric.SecretStore.SecretValueDescription" Id="T:System.Fabric.SecretStore.SecretValueDescription">
      <Member Id="M:System.Fabric.SecretStore.SecretValueDescription.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.SecretValueDescription.Name" />
      <Member Id="P:System.Fabric.SecretStore.SecretValueDescription.Properties" />
    </Type>
    <Type Name="System.Fabric.SecretStore.SecretValueProperties" Id="T:System.Fabric.SecretStore.SecretValueProperties">
      <Member Id="M:System.Fabric.SecretStore.SecretValueProperties.#ctor" />
      <Member Id="P:System.Fabric.SecretStore.SecretValueProperties.Value" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Security">
    <Type Name="System.Fabric.Security.AzureActiveDirectoryMetadata" Id="T:System.Fabric.Security.AzureActiveDirectoryMetadata">
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.Authority" />
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication" />
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect" />
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication" />
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint" />
      <Member Id="P:System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId" />
    </Type>
    <Type Name="System.Fabric.Security.EncryptionUtility" Id="T:System.Fabric.Security.EncryptionUtility">
      <Member Id="M:System.Fabric.Security.EncryptionUtility.#ctor" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.DecryptText(System.String)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.DecryptText(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.DecryptValue(System.String)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile(System.String,System.String,System.String)" />
      <Member Id="M:System.Fabric.Security.EncryptionUtility.EncryptValue(System.String,System.String,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Fabric.Testability.Scenario">
    <Type Name="System.Fabric.Testability.Scenario.ChaosTestScenario" Id="T:System.Fabric.Testability.Scenario.ChaosTestScenario">
      <Member Id="M:System.Fabric.Testability.Scenario.ChaosTestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.ChaosTestScenarioParameters)" />
      <Member Id="M:System.Fabric.Testability.Scenario.ChaosTestScenario.OnDispose(System.Boolean)" />
      <Member Id="M:System.Fabric.Testability.Scenario.ChaosTestScenario.OnExecuteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.Testability.Scenario.ChaosTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.Testability.Scenario.ChaosTestScenarioParameters" Id="T:System.Fabric.Testability.Scenario.ChaosTestScenarioParameters">
      <Member Id="M:System.Fabric.Testability.Scenario.ChaosTestScenarioParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan)" />
      <Member Id="P:System.Fabric.Testability.Scenario.ChaosTestScenarioParameters.MaxClusterStabilizationTimeout" />
      <Member Id="P:System.Fabric.Testability.Scenario.ChaosTestScenarioParameters.WaitTimeBetweenIterations" />
    </Type>
    <Type Name="System.Fabric.Testability.Scenario.FailoverTestScenario" Id="T:System.Fabric.Testability.Scenario.FailoverTestScenario">
      <Member Id="M:System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)" />
      <Member Id="M:System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose(System.Boolean)" />
      <Member Id="M:System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="System.Fabric.Testability.Scenario.FailoverTestScenarioParameters" Id="T:System.Fabric.Testability.Scenario.FailoverTestScenarioParameters">
      <Member Id="M:System.Fabric.Testability.Scenario.FailoverTestScenarioParameters.#ctor(System.Fabric.PartitionSelector,System.TimeSpan,System.TimeSpan)" />
      <Member Id="P:System.Fabric.Testability.Scenario.FailoverTestScenarioParameters.MaxServiceStabilizationTimeout" />
      <Member Id="P:System.Fabric.Testability.Scenario.FailoverTestScenarioParameters.PartitionSelector" />
    </Type>
    <Type Name="System.Fabric.Testability.Scenario.TestScenario" Id="T:System.Fabric.Testability.Scenario.TestScenario">
      <Member Id="F:System.Fabric.Testability.Scenario.TestScenario.ProgressChanged" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.Dispose" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)" />
      <Member Id="P:System.Fabric.Testability.Scenario.TestScenario.FabricClient" />
      <Member Id="P:System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters" />
    </Type>
    <Type Name="System.Fabric.Testability.Scenario.TestScenarioParameters" Id="T:System.Fabric.Testability.Scenario.TestScenarioParameters">
      <Member Id="F:System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaultsDefault" />
      <Member Id="M:System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor(System.TimeSpan)" />
      <Member Id="P:System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun" />
      <Member Id="P:System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults" />
    </Type>
  </Namespace>
</Framework>