<Type Name="SiteRecoveryMigrationItemResource" FullName="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource">
  <TypeSignature Language="C#" Value="public class SiteRecoveryMigrationItemResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteRecoveryMigrationItemResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteRecoveryMigrationItemResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SiteRecoveryMigrationItemResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SiteRecoveryMigrationItemResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteRecoveryMigrationItemResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteRecoveryMigrationItemResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of SiteRecoveryMigrationItemData), IPersistableModel(Of SiteRecoveryMigrationItemData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SiteRecoveryMigrationItemResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;SiteRecoveryMigrationItemData&gt;&#xA;    interface IPersistableModel&lt;SiteRecoveryMigrationItemData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a SiteRecoveryMigrationItem along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetSiteRecoveryMigrationItemResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryProtectionContainerResource" /> using the GetSiteRecoveryMigrationItem method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SiteRecoveryMigrationItemResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string resourceName, string fabricName, string protectionContainerName, string migrationItemName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string resourceName, string fabricName, string protectionContainerName, string migrationItemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, resourceName As String, fabricName As String, protectionContainerName As String, migrationItemName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName, migrationItemName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="protectionContainerName" Type="System.String" />
        <Parameter Name="migrationItemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="resourceName"> The resourceName. </param>
        <param name="fabricName"> The fabricName. </param>
        <param name="protectionContainerName"> The protectionContainerName. </param>
        <param name="migrationItemName"> The migrationItemName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As SiteRecoveryMigrationItemData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData" Usage="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, string deleteOption = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, string deleteOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Delete(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional deleteOption As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="siteRecoveryMigrationItemResource.Delete (waitUntil, deleteOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="deleteOption" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="deleteOption"> The delete option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to delete an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Delete</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, string deleteOption = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, string deleteOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.DeleteAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional deleteOption As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="siteRecoveryMigrationItemResource.DeleteAsync (waitUntil, deleteOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="deleteOption" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="deleteOption"> The delete option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to delete an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Delete</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Get</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Get</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMigrationRecoveryPoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt; GetMigrationRecoveryPoint (string migrationRecoveryPointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt; GetMigrationRecoveryPoint(string migrationRecoveryPointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.GetMigrationRecoveryPoint(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMigrationRecoveryPoint (migrationRecoveryPointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MigrationRecoveryPointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMigrationRecoveryPoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&#xA;override this.GetMigrationRecoveryPoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;" Usage="siteRecoveryMigrationItemResource.GetMigrationRecoveryPoint (migrationRecoveryPointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationRecoveryPointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="migrationRecoveryPointName"> The migration recovery point name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recovery point for a migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints/{migrationRecoveryPointName}</description></item><item><term>Operation Id</term><description>MigrationRecoveryPoints_Get</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="migrationRecoveryPointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="migrationRecoveryPointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMigrationRecoveryPointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&gt; GetMigrationRecoveryPointAsync (string migrationRecoveryPointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&gt; GetMigrationRecoveryPointAsync(string migrationRecoveryPointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.GetMigrationRecoveryPointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMigrationRecoveryPointAsync (migrationRecoveryPointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MigrationRecoveryPointResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMigrationRecoveryPointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&gt;&#xA;override this.GetMigrationRecoveryPointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.GetMigrationRecoveryPointAsync (migrationRecoveryPointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationRecoveryPointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="migrationRecoveryPointName"> The migration recovery point name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a recovery point for a migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints/{migrationRecoveryPointName}</description></item><item><term>Operation Id</term><description>MigrationRecoveryPoints_Get</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="migrationRecoveryPointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="migrationRecoveryPointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMigrationRecoveryPoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointCollection GetMigrationRecoveryPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointCollection GetMigrationRecoveryPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.GetMigrationRecoveryPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMigrationRecoveryPoints () As MigrationRecoveryPointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMigrationRecoveryPoints : unit -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointCollection&#xA;override this.GetMigrationRecoveryPoints : unit -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointCollection" Usage="siteRecoveryMigrationItemResource.GetMigrationRecoveryPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesSiteRecovery.MigrationRecoveryPointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of MigrationRecoveryPointResources in the SiteRecoveryMigrationItem. </summary>
        <returns> An object representing collection of MigrationRecoveryPointResources and their operations over a MigrationRecoveryPointResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Migrate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Migrate (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Migrate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Migrate(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Migrate (waitUntil As WaitUntil, content As SiteRecoveryMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Migrate : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.Migrate : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.Migrate (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Migrate input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate migration of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrate</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Migrate</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="MigrateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; MigrateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; MigrateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.MigrateAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MigrateAsync (waitUntil As WaitUntil, content As SiteRecoveryMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member MigrateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.MigrateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.MigrateAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Migrate input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate migration of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrate</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Migrate</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PauseReplication">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; PauseReplication (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; PauseReplication(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.PauseReplication(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseReplication (waitUntil As WaitUntil, content As PauseReplicationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member PauseReplication : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.PauseReplication : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.PauseReplication (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Pause replication input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate pause replication of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/pauseReplication</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_PauseReplication</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PauseReplicationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; PauseReplicationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; PauseReplicationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.PauseReplicationAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseReplicationAsync (waitUntil As WaitUntil, content As PauseReplicationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member PauseReplicationAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.PauseReplicationAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.PauseReplicationAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.PauseReplicationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Pause replication input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate pause replication of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/pauseReplication</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_PauseReplication</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeReplication">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; ResumeReplication (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; ResumeReplication(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.ResumeReplication(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeReplication (waitUntil As WaitUntil, content As ResumeReplicationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member ResumeReplication : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.ResumeReplication : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.ResumeReplication (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resume replication input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate resume replication of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/resumeReplication</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_ResumeReplication</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResumeReplicationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; ResumeReplicationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; ResumeReplicationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.ResumeReplicationAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeReplicationAsync (waitUntil As WaitUntil, content As ResumeReplicationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member ResumeReplicationAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.ResumeReplicationAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.ResumeReplicationAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.ResumeReplicationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resume replication input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate resume replication of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/resumeReplication</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_ResumeReplication</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Resync">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Resync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Resync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Resync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Resync (waitUntil As WaitUntil, content As MigrationItemResyncContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Resync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.Resync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.Resync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resync input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to resynchronize replication of an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/resync</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Resync</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResyncAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; ResyncAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; ResyncAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.ResyncAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResyncAsync (waitUntil As WaitUntil, content As MigrationItemResyncContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member ResyncAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.ResyncAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.ResyncAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.MigrationItemResyncContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resync input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to resynchronize replication of an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/resync</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Resync</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData IJsonModel&lt;SiteRecoveryMigrationItemData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#RecoveryServicesSiteRecovery#SiteRecoveryMigrationItemData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SiteRecoveryMigrationItemData Implements IJsonModel(Of SiteRecoveryMigrationItemData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData" Usage="siteRecoveryMigrationItemResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SiteRecoveryMigrationItemData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#RecoveryServicesSiteRecovery#SiteRecoveryMigrationItemData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SiteRecoveryMigrationItemData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="siteRecoveryMigrationItemResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData IPersistableModel&lt;SiteRecoveryMigrationItemData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#RecoveryServicesSiteRecovery#SiteRecoveryMigrationItemData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SiteRecoveryMigrationItemData Implements IPersistableModel(Of SiteRecoveryMigrationItemData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData" Usage="siteRecoveryMigrationItemResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#RecoveryServicesSiteRecovery#SiteRecoveryMigrationItemData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SiteRecoveryMigrationItemData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="siteRecoveryMigrationItemResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SiteRecoveryMigrationItemData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#RecoveryServicesSiteRecovery#SiteRecoveryMigrationItemData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SiteRecoveryMigrationItemData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="siteRecoveryMigrationItemResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TestMigrate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; TestMigrate (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; TestMigrate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.TestMigrate(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestMigrate (waitUntil As WaitUntil, content As TestMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member TestMigrate : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.TestMigrate : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.TestMigrate (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Test migrate input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate test migration of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrate</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_TestMigrate</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestMigrateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; TestMigrateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; TestMigrateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.TestMigrateAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestMigrateAsync (waitUntil As WaitUntil, content As TestMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member TestMigrateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.TestMigrateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.TestMigrateAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Test migrate input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate test migration of the item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrate</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_TestMigrate</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestMigrateCleanup">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; TestMigrateCleanup (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; TestMigrateCleanup(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.TestMigrateCleanup(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestMigrateCleanup (waitUntil As WaitUntil, content As TestMigrateCleanupContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member TestMigrateCleanup : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.TestMigrateCleanup : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.TestMigrateCleanup (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Test migrate cleanup input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate test migrate cleanup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrateCleanup</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_TestMigrateCleanup</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TestMigrateCleanupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; TestMigrateCleanupAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; TestMigrateCleanupAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.TestMigrateCleanupAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TestMigrateCleanupAsync (waitUntil As WaitUntil, content As TestMigrateCleanupContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member TestMigrateCleanupAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.TestMigrateCleanupAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.TestMigrateCleanupAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.TestMigrateCleanupContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Test migrate cleanup input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to initiate test migrate cleanup.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrateCleanup</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_TestMigrateCleanup</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.Update(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As SiteRecoveryMigrationItemPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SiteRecoveryMigrationItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;" Usage="siteRecoveryMigrationItemResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Update migration item input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to update the recovery settings of an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Update</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As SiteRecoveryMigrationItemPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SiteRecoveryMigrationItemResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;" Usage="siteRecoveryMigrationItemResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesSiteRecovery</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.RecoveryServicesSiteRecovery.Models.SiteRecoveryMigrationItemPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Update migration item input. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to update the recovery settings of an ASR migration item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}</description></item><item><term>Operation Id</term><description>ReplicationMigrationItems_Update</description></item><item><term>Default Api Version</term><description>2023-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesSiteRecovery.SiteRecoveryMigrationItemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
