<Type Name="ITrackedSaveOperation" FullName="Microsoft.Azure.Batch.Conventions.Files.ITrackedSaveOperation">
  <TypeSignature Language="C#" Value="public interface ITrackedSaveOperation : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITrackedSaveOperation implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Conventions.Files.ITrackedSaveOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch.Conventions.Files</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a tracked save, in which a background operation periodically copies appends
            to a file to the corresponding append blob in Azure Storage.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="M:Microsoft.Azure.Batch.Conventions.Files.TaskOutputStorage.SaveTrackedAsync(Microsoft.Azure.Batch.Conventions.Files.TaskOutputKind,System.String,System.String,System.TimeSpan)" />
  </Docs>
  <Members>
    <Member MemberName="FlushError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Exception&gt; FlushError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Exception&gt; FlushError" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Azure.Batch.Conventions.Files.ITrackedSaveOperation.FlushError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Batch.Conventions.Files</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when there is an error while performing a background append to the blob in Azure Storage.
            </summary>
        <remarks>
          <para>
            If an error occurs while appending, the 'last position' is not updated, so the data that
            could not be appended will be included in the next flush.
            </para>
          <para>
            This event is not raised if an error occurs during <see cref="M:System.IDisposable.Dispose" />; instead,
            the Dispose method method re-throws the exception directly. In this case, the background
            appends are no longer running, so it is up to the calling code to decide whether and how to
            save the unflushed data (for example, re-saving the file using the non-tracking methods).
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
