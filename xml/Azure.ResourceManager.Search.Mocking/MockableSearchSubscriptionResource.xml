<Type Name="MockableSearchSubscriptionResource" FullName="Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableSearchSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSearchSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSearchSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSearchSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSearchSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSearchServiceNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt; CheckSearchServiceNameAvailability (Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent content, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt; CheckSearchServiceNameAvailability(class Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent content, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.CheckSearchServiceNameAvailability(Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSearchServiceNameAvailability (content As SearchServiceNameAvailabilityContent, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchServiceNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckSearchServiceNameAvailability : Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&#xA;override this.CheckSearchServiceNameAvailability : Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;" Usage="mockableSearchSubscriptionResource.CheckSearchServiceNameAvailability (content, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The resource name and type to check. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether or not the given search service name is available for use. Search service names must be globally unique since they are part of the service URI (https://&lt;name&gt;.search.windows.net).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/checkNameAvailability</description></item><item><term>Operation Id</term><description>Services_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSearchServiceNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&gt; CheckSearchServiceNameAvailabilityAsync (Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent content, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&gt; CheckSearchServiceNameAvailabilityAsync(class Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent content, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.CheckSearchServiceNameAvailabilityAsync(Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSearchServiceNameAvailabilityAsync (content As SearchServiceNameAvailabilityContent, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchServiceNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckSearchServiceNameAvailabilityAsync : Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&gt;&#xA;override this.CheckSearchServiceNameAvailabilityAsync : Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&gt;" Usage="mockableSearchSubscriptionResource.CheckSearchServiceNameAvailabilityAsync (content, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Search.Models.SearchServiceNameAvailabilityContent" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The resource name and type to check. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether or not the given search service name is available for use. Search service names must be globally unique since they are part of the service URI (https://&lt;name&gt;.search.windows.net).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/checkNameAvailability</description></item><item><term>Operation Id</term><description>Services_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSearchServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchServices (Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchServices(class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.GetSearchServices(Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchServices (Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SearchServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSearchServices : Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&#xA;override this.GetSearchServices : Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;" Usage="mockableSearchSubscriptionResource.GetSearchServices (searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Search services in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/searchServices</description></item><item><term>Operation Id</term><description>Services_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchServicesAsync (Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchServicesAsync(class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.GetSearchServicesAsync(Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchServicesAsync (Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SearchServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSearchServicesAsync : Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&#xA;override this.GetSearchServicesAsync : Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;" Usage="mockableSearchSubscriptionResource.GetSearchServicesAsync (searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Search services in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/searchServices</description></item><item><term>Operation Id</term><description>Services_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; GetUsagesBySubscription (Azure.Core.AzureLocation location, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; GetUsagesBySubscription(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.GetUsagesBySubscription(Azure.Core.AzureLocation,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesBySubscription (location As AzureLocation, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuotaUsageResult)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesBySubscription : Azure.Core.AzureLocation * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&#xA;override this.GetUsagesBySubscription : Azure.Core.AzureLocation * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;" Usage="mockableSearchSubscriptionResource.GetUsagesBySubscription (location, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The unique location name for a Microsoft Azure geographic region. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Azure AI Search quota usages across the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Search.Models.QuotaUsageResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; GetUsagesBySubscriptionAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; GetUsagesBySubscriptionAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.GetUsagesBySubscriptionAsync(Azure.Core.AzureLocation,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesBySubscriptionAsync (location As AzureLocation, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuotaUsageResult)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesBySubscriptionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&#xA;override this.GetUsagesBySubscriptionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;" Usage="mockableSearchSubscriptionResource.GetUsagesBySubscriptionAsync (location, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The unique location name for a Microsoft Azure geographic region. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Azure AI Search quota usages across the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Search.Models.QuotaUsageResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsageBySubscriptionSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; UsageBySubscriptionSku (Azure.Core.AzureLocation location, string skuName, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Search.Models.QuotaUsageResult&gt; UsageBySubscriptionSku(valuetype Azure.Core.AzureLocation location, string skuName, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.UsageBySubscriptionSku(Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsageBySubscriptionSku (location As AzureLocation, skuName As String, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaUsageResult)" />
      <MemberSignature Language="F#" Value="abstract member UsageBySubscriptionSku : Azure.Core.AzureLocation * string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&#xA;override this.UsageBySubscriptionSku : Azure.Core.AzureLocation * string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;" Usage="mockableSearchSubscriptionResource.UsageBySubscriptionSku (location, skuName, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="skuName" Type="System.String" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The unique location name for a Microsoft Azure geographic region. </param>
        <param name="skuName"> The unique SKU name that identifies a billable tier. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the quota usage for a search sku in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/locations/{location}/usages/{skuName}</description></item><item><term>Operation Id</term><description>UsageBySubscriptionSku</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="skuName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="skuName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageBySubscriptionSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&gt; UsageBySubscriptionSkuAsync (Azure.Core.AzureLocation location, string skuName, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&gt; UsageBySubscriptionSkuAsync(valuetype Azure.Core.AzureLocation location, string skuName, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchSubscriptionResource.UsageBySubscriptionSkuAsync(Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsageBySubscriptionSkuAsync (location As AzureLocation, skuName As String, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaUsageResult))" />
      <MemberSignature Language="F#" Value="abstract member UsageBySubscriptionSkuAsync : Azure.Core.AzureLocation * string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&gt;&#xA;override this.UsageBySubscriptionSkuAsync : Azure.Core.AzureLocation * string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&gt;" Usage="mockableSearchSubscriptionResource.UsageBySubscriptionSkuAsync (location, skuName, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.Models.QuotaUsageResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="skuName" Type="System.String" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The unique location name for a Microsoft Azure geographic region. </param>
        <param name="skuName"> The unique SKU name that identifies a billable tier. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the quota usage for a search sku in the given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Search/locations/{location}/usages/{skuName}</description></item><item><term>Operation Id</term><description>UsageBySubscriptionSku</description></item><item><term>Default Api Version</term><description>2024-06-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="skuName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="skuName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
