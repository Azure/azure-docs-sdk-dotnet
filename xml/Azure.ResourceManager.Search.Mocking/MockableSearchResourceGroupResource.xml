<Type Name="MockableSearchResourceGroupResource" FullName="Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableSearchResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSearchResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSearchResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSearchResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSearchResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchService">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchService (string searchServiceName, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Search.SearchServiceResource&gt; GetSearchService(string searchServiceName, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource.GetSearchService(System.String,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchService (searchServiceName As String, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSearchService : string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&#xA;override this.GetSearchService : string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;" Usage="mockableSearchResourceGroupResource.GetSearchService (searchServiceName, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="searchServiceName"> The name of the Azure AI Search service associated with the specified resource group. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the search service with the given name in the given resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}</description></item><item><term>Operation Id</term><description>Services_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="searchServiceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="searchServiceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSearchServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&gt; GetSearchServiceAsync (string searchServiceName, Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Search.SearchServiceResource&gt;&gt; GetSearchServiceAsync(string searchServiceName, class Azure.ResourceManager.Search.Models.SearchManagementRequestOptions searchManagementRequestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource.GetSearchServiceAsync(System.String,Azure.ResourceManager.Search.Models.SearchManagementRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchServiceAsync (searchServiceName As String, Optional searchManagementRequestOptions As SearchManagementRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSearchServiceAsync : string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&gt;&#xA;override this.GetSearchServiceAsync : string * Azure.ResourceManager.Search.Models.SearchManagementRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&gt;" Usage="mockableSearchResourceGroupResource.GetSearchServiceAsync (searchServiceName, searchManagementRequestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Search.SearchServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="searchManagementRequestOptions" Type="Azure.ResourceManager.Search.Models.SearchManagementRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="searchServiceName"> The name of the Azure AI Search service associated with the specified resource group. </param>
        <param name="searchManagementRequestOptions"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the search service with the given name in the given resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}</description></item><item><term>Operation Id</term><description>Services_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Search.SearchServiceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="searchServiceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="searchServiceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSearchServices">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Search.SearchServiceCollection GetSearchServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Search.SearchServiceCollection GetSearchServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Search.Mocking.MockableSearchResourceGroupResource.GetSearchServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchServices () As SearchServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSearchServices : unit -&gt; Azure.ResourceManager.Search.SearchServiceCollection&#xA;override this.GetSearchServices : unit -&gt; Azure.ResourceManager.Search.SearchServiceCollection" Usage="mockableSearchResourceGroupResource.GetSearchServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Search</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Search.SearchServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SearchServiceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SearchServiceResources and their operations over a SearchServiceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
