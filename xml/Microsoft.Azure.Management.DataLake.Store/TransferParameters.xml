<Type Name="TransferParameters" FullName="Microsoft.Azure.Management.DataLake.Store.TransferParameters">
  <TypeSignature Language="C#" Value="public class TransferParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransferParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataLake.Store.TransferParameters" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents parameters for the DataLakeStoreTransferClient.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransferParameters (string inputFilePath, string targetStreamPath, string accountName, int perFileThreadCount = -1, int concurrentFileCount = -1, bool isOverwrite = false, bool isResume = false, bool isBinary = true, bool isRecursive = false, bool isDownload = false, long maxSegmentLength = 268435456, string localMetadataLocation = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string inputFilePath, string targetStreamPath, string accountName, int32 perFileThreadCount, int32 concurrentFileCount, bool isOverwrite, bool isResume, bool isBinary, bool isRecursive, bool isDownload, int64 maxSegmentLength, string localMetadataLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.TransferParameters.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int64,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputFilePath" Type="System.String" />
        <Parameter Name="targetStreamPath" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="perFileThreadCount" Type="System.Int32" />
        <Parameter Name="concurrentFileCount" Type="System.Int32" />
        <Parameter Name="isOverwrite" Type="System.Boolean" />
        <Parameter Name="isResume" Type="System.Boolean" />
        <Parameter Name="isBinary" Type="System.Boolean" />
        <Parameter Name="isRecursive" Type="System.Boolean" />
        <Parameter Name="isDownload" Type="System.Boolean" />
        <Parameter Name="maxSegmentLength" Type="System.Int64" />
        <Parameter Name="localMetadataLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFilePath">The full path to the file or folder to be transferred.</param>
        <param name="targetStreamPath">The full stream path where the file or folder will be transferred to.</param>
        <param name="accountName">Name of the account to transfer to.</param>
        <param name="perFileThreadCount">The per file thread count, indicating the number of file segments to transfer in parallel. This number is capped at FILE_SIZE/maxSegmentLength for optimal performance.</param>
        <param name="concurrentFileCount">The parallel file count, indicating the number of files to transfer in parallel during a folder transfer. This parameter is ignored for single file transfers. Default is 5 for folder transfers</param>
        <param name="isOverwrite">(Optional) Whether to overwrite the target stream or not.</param>
        <param name="isResume">(Optional) Indicates whether to resume a previously interrupted transfer.</param>
        <param name="isBinary">(Optional) Indicates whether to treat the input file as a binary file (true), or whether to align transfer blocks to record boundaries (false).</param>
        <param name="isRecursive">(Optional) Indicates whether to transfer the source folder recursively or not. If true, will transfer the source directory and all sub directories, preserving directory structure.</param>
        <param name="isDownload">(Optional) if set to <c>true</c> [is download] instead of an transfer scenario. Default is false.</param>
        <param name="maxSegmentLength">Maximum length of each segment. The default is 256mb, which gives optimal performance. Modify at your own risk.</param>
        <param name="localMetadataLocation">(Optional) Indicates the directory path where to store the local transfer metadata file while the transfer is in progress. This location must be writeable from this application. Default location: SpecialFolder.LocalApplicationData.</param>
        <summary>
            Creates a new set of parameters for the DataLakeStoreTransferClient.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the name of the account to transfer to or download from.
            </summary>
        <value>
            The name of the account.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentFileCount">
      <MemberSignature Language="C#" Value="public int ConcurrentFileCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConcurrentFileCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.ConcurrentFileCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parallel file count, which indicates how many files in a folder will be transferred or downloaded in parallel
            </summary>
        <value>
            The number of files to transfer or download at once.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the record boundary delimiter for the file, if any.
            </summary>
        <value>
            The record boundary delimiter
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding FileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding FileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.FileEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the encoding of the file being transferred.
            </summary>
        <value>
            The file encoding.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputFilePath">
      <MemberSignature Language="C#" Value="public string InputFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.InputFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the full path to the file or folder to be transferred.
            </summary>
        <value>
            The input file path.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinary">
      <MemberSignature Language="C#" Value="public bool IsBinary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the input file should be treated as a binary (true) or a delimited input (false).
            </summary>
        <value>
          <c>true</c> if this instance is binary; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDownload">
      <MemberSignature Language="C#" Value="public bool IsDownload { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDownload" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsDownload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this instance is downloading to the local machine instead of transfering.
            </summary>
        <value>
          <c>true</c> if this instance is download; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverwrite">
      <MemberSignature Language="C#" Value="public bool IsOverwrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverwrite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsOverwrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether to overwrite the target stream if it already exists.
            </summary>
        <value>
          <c>true</c> if this instance is overwrite; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecursive">
      <MemberSignature Language="C#" Value="public bool IsRecursive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecursive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsRecursive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the folder transfer should recursively transfer the source folder. This is only valid for folder transfers and will be ignored for file transfers.
            </summary>
        <value>
          <c>true</c> if this instance is recursive; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResume">
      <MemberSignature Language="C#" Value="public bool IsResume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResume" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsResume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether to resume a previously interrupted transfer.
            </summary>
        <value>
          <c>true</c> if this instance is resume; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalMetadataLocation">
      <MemberSignature Language="C#" Value="public string LocalMetadataLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.LocalMetadataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the directory path where to store the metadata for the transfer.
            </summary>
        <value>
            The local metadata location.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSegementLength">
      <MemberSignature Language="C#" Value="public long MaxSegementLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxSegementLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.MaxSegementLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum length of each segement.
            </summary>
        <value>
            The maximum length of each segement.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerFileThreadCount">
      <MemberSignature Language="C#" Value="public int PerFileThreadCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PerFileThreadCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.PerFileThreadCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the maximum number of parallel threads to use for a single file transfer or download.
            </summary>
        <value>
            The file thread count.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetStreamPath">
      <MemberSignature Language="C#" Value="public string TargetStreamPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetStreamPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.TargetStreamPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating the full stream path where the file will be transferred to.
            </summary>
        <value>
            The target stream path.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>