<Type Name="TransferSegmentMetadata" FullName="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata">
  <TypeSignature Language="C#" Value="public class TransferSegmentMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransferSegmentMetadata extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class TransferSegmentMetadata" />
  <TypeSignature Language="F#" Value="type TransferSegmentMetadata = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransferSegmentMetadata" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class TransferSegmentMetadata" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class TransferSegmentMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Segment {SegmentNumber}, Length = {Length}, Status = {Status}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents metadata for a particular file segment.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CalculateSegmentCount">
      <MemberSignature Language="C#" Value="public static int CalculateSegmentCount (long fileLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CalculateSegmentCount(int64 fileLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentCount(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CalculateSegmentCount (fileLength As Long) As Integer" />
      <MemberSignature Language="F#" Value="static member CalculateSegmentCount : int64 -&gt; int" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentCount fileLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CalculateSegmentCount(long fileLength);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static int CalculateSegmentCount(long long fileLength);" />
      <MemberSignature Language="C++ WINRT" Value=" static int CalculateSegmentCount(long fileLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileLength">The length of the file, in bytes.</param>
        <summary>
            Calculates the number of segments a file of the given length should be split into.
            The method to calculate this is based on some empirical measurements that allows both the number of segments and the length of each segment to grow as the input file size grows.
            They both grow on a logarithmic pattern as the file length increases.
            The formula is roughly this:
            * Multiplier = Min(100, 50 * 2 ^ Log10(FileLengthInGB))
            * SegmentCount = Max(1, Multiplier * 2 ^ Log10(FileLengthInGB)
            Essentially we quadruple the number of segments for each tenfold increase in the file length, with certain caps. The formula is designed to support both small files and
            extremely large files (and not cause very small segment lengths or very large number of segments).
            </summary>
        <returns>
            The number of segments to split the file into. Returns 0 if fileLength is 0.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">File Length cannot be negative</exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateSegmentLength">
      <MemberSignature Language="C#" Value="public static long CalculateSegmentLength (long fileLength, int segmentCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CalculateSegmentLength(int64 fileLength, int32 segmentCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentLength(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CalculateSegmentLength (fileLength As Long, segmentCount As Integer) As Long" />
      <MemberSignature Language="F#" Value="static member CalculateSegmentLength : int64 * int -&gt; int64" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentLength (fileLength, segmentCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long CalculateSegmentLength(long fileLength, int segmentCount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static long long CalculateSegmentLength(long long fileLength, int segmentCount);" />
      <MemberSignature Language="C++ WINRT" Value=" static long CalculateSegmentLength(long fileLength, int segmentCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLength" Type="System.Int64" />
        <Parameter Name="segmentCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileLength">The length of the file, in bytes.</param>
        <param name="segmentCount">The number of segments to split the file into.</param>
        <summary>
            Calculates the length of a typical (non-terminal) segment for a file of the given length that is split into the given number of segments.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Number of segments must be a positive integer</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="F#" Value="member this.Length : int64 with get, set" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Length" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property long long Length { long long get(); void set(long long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="Length")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the size of the segment (in bytes).
            </summary>
        <value>
            The length.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Long" />
      <MemberSignature Language="F#" Value="member this.Offset : int64 with get, set" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Offset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); void set(long value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property long long Offset { long long get(); void set(long long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="Offset")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the starting offset of the segment in the file.
            </summary>
        <value>
            The offset.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Path { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="Path")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the stream path assigned to this segment.
            </summary>
        <value>
            The path.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SegmentNumber">
      <MemberSignature Language="C#" Value="public int SegmentNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SegmentNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.SegmentNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property SegmentNumber As Integer" />
      <MemberSignature Language="F#" Value="member this.SegmentNumber : int with get, set" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.SegmentNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SegmentNumber { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int SegmentNumber { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="Number")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the number (sequence) of the segment in the file.
            </summary>
        <value>
            The segment number.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus Status" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As SegmentTransferStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus with get, set" Usage="Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Status" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus Status { Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus get(); void set(Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus Status { Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus get(); void set(Microsoft::Azure::Management::DataLake::Store::SegmentTransferStatus value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="Status")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating the current upload status for this segment.
            </summary>
        <value>
            The status.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>