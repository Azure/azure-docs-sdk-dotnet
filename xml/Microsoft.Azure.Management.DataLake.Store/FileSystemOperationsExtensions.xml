<Type Name="FileSystemOperationsExtensions" FullName="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class FileSystemOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FileSystemOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystemOperationsExtensions" />
  <TypeSignature Language="F#" Value="type FileSystemOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for FileSystemOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public static void Append (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, System.IO.Stream streamContents, Nullable&lt;long&gt; offset = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null, Nullable&lt;Guid&gt; leaseId = null, Nullable&lt;Guid&gt; fileSessionId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Append(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; leaseId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; fileSessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Append (operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream, Optional offset As Nullable(Of Long) = null, Optional syncFlag As Nullable(Of SyncFlag) = null, Optional leaseId As Nullable(Of Guid) = null, Optional fileSessionId As Nullable(Of Guid) = null)" />
      <MemberSignature Language="F#" Value="static member Append : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;int64&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append (operations, accountName, directFilePath, streamContents, offset, syncFlag, leaseId, fileSessionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
        <Parameter Name="leaseId" Type="System.Nullable&lt;System.Guid&gt;" Index="6" />
        <Parameter Name="fileSessionId" Type="System.Nullable&lt;System.Guid&gt;" Index="7" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to which to
            append.
            </param>
        <param name="streamContents">
            The file contents to include when appending to the file.
            </param>
        <param name="offset">
            The optional offset in the stream to begin the append operation. Default is
            to append at the end of the stream.
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
        <param name="leaseId">
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
        <param name="fileSessionId">
            Optional unique GUID per file indicating all the appends with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit when syncFlag is DATA or METADATA.
            </param>
        <summary>
            Used for serial appends to the specified file. NOTE: The target must not
            contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot
            be used interchangeably; once a target file has been modified using either
            of these append options, the other append option cannot be used on the
            target file.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AppendAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, System.IO.Stream streamContents, Nullable&lt;long&gt; offset = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null, Nullable&lt;Guid&gt; leaseId = null, Nullable&lt;Guid&gt; fileSessionId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AppendAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; leaseId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; fileSessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member AppendAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;int64&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync (operations, accountName, directFilePath, streamContents, offset, syncFlag, leaseId, fileSessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
        <Parameter Name="leaseId" Type="System.Nullable&lt;System.Guid&gt;" Index="6" />
        <Parameter Name="fileSessionId" Type="System.Nullable&lt;System.Guid&gt;" Index="7" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="8" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to which to
            append.
            </param>
        <param name="streamContents">
            The file contents to include when appending to the file.
            </param>
        <param name="offset">
            The optional offset in the stream to begin the append operation. Default is
            to append at the end of the stream.
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
        <param name="leaseId">
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
        <param name="fileSessionId">
            Optional unique GUID per file indicating all the appends with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit when syncFlag is DATA or METADATA.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Used for serial appends to the specified file. NOTE: The target must not
            contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot
            be used interchangeably; once a target file has been modified using either
            of these append options, the other append option cannot be used on the
            target file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, string fsaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, string fsaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CheckAccess (operations As IFileSystemOperations, accountName As String, path As String, fsaction As String)" />
      <MemberSignature Language="F#" Value="static member CheckAccess : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess (operations, accountName, path, fsaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fsaction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="path">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to check access.
            </param>
        <param name="fsaction">
            File system operation read/write/execute in string form, matching regex
            pattern '[rwx-]{3}'
            </param>
        <summary>
            Checks if the specified access is available at the given path.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task CheckAccessAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, string fsaction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task CheckAccessAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, string fsaction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CheckAccessAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync (operations, accountName, path, fsaction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fsaction" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="path">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to check access.
            </param>
        <param name="fsaction">
            File system operation read/write/execute in string form, matching regex
            pattern '[rwx-]{3}'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Checks if the specified access is available at the given path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static void Concat (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string destinationPath, System.Collections.Generic.IList&lt;string&gt; sources);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Concat(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string destinationPath, class System.Collections.Generic.IList`1&lt;string&gt; sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Concat (operations As IFileSystemOperations, accountName As String, destinationPath As String, sources As IList(Of String))" />
      <MemberSignature Language="F#" Value="static member Concat : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat (operations, accountName, destinationPath, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="destinationPath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sources" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="destinationPath">
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
        <param name="sources">
            A list of comma separated Data Lake Store paths (starting with '/') of the
            files to concatenate, in the order in which they should be concatenated.
            </param>
        <summary>
            Concatenates the list of source files into the destination file, removing
            all source files upon success.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcatAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ConcatAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string destinationPath, System.Collections.Generic.IList&lt;string&gt; sources, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ConcatAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string destinationPath, class System.Collections.Generic.IList`1&lt;string&gt; sources, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ConcatAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync (operations, accountName, destinationPath, sources, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="destinationPath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sources" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="destinationPath">
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
        <param name="sources">
            A list of comma separated Data Lake Store paths (starting with '/') of the
            files to concatenate, in the order in which they should be concatenated.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Concatenates the list of source files into the destination file, removing
            all source files upon success.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentAppend">
      <MemberSignature Language="C#" Value="public static void ConcurrentAppend (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, System.IO.Stream streamContents, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; appendMode = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConcurrentAppend(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; appendMode, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConcurrentAppend (operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream, Optional appendMode As Nullable(Of AppendModeType) = null, Optional syncFlag As Nullable(Of SyncFlag) = null)" />
      <MemberSignature Language="F#" Value="static member ConcurrentAppend : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend (operations, accountName, filePath, streamContents, appendMode, syncFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="appendMode" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file to which to append
            using concurrent append.
            </param>
        <param name="streamContents">
            The file contents to include when appending to the file.
            </param>
        <param name="appendMode">
            Indicates the concurrent append call should create the file if it doesn't
            exist or just open the existing file for append. Possible values include:
            'autocreate'
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
        <summary>
            Appends to the specified file, optionally first creating the file if it
            does not yet exist. This method supports multiple concurrent appends to the
            file. NOTE: The target must not contain data added by Create or normal
            (serial) Append. ConcurrentAppend and Append cannot be used
            interchangeably; once a target file has been modified using either of these
            append options, the other append option cannot be used on the target file.
            ConcurrentAppend does not guarantee order and can result in duplicated data
            landing in the target file.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentAppendAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ConcurrentAppendAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, System.IO.Stream streamContents, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; appendMode = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ConcurrentAppendAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; appendMode, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ConcurrentAppendAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync (operations, accountName, filePath, streamContents, appendMode, syncFlag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="appendMode" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file to which to append
            using concurrent append.
            </param>
        <param name="streamContents">
            The file contents to include when appending to the file.
            </param>
        <param name="appendMode">
            Indicates the concurrent append call should create the file if it doesn't
            exist or just open the existing file for append. Possible values include:
            'autocreate'
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Appends to the specified file, optionally first creating the file if it
            does not yet exist. This method supports multiple concurrent appends to the
            file. NOTE: The target must not contain data added by Create or normal
            (serial) Append. ConcurrentAppend and Append cannot be used
            interchangeably; once a target file has been modified using either of these
            append options, the other append option cannot be used on the target file.
            ConcurrentAppend does not guarantee order and can result in duplicated data
            landing in the target file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static void Create (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, System.IO.Stream streamContents = null, Nullable&lt;bool&gt; overwrite = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null, Nullable&lt;Guid&gt; leaseId = null, Nullable&lt;int&gt; permission = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Create(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;bool&gt; overwrite, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; leaseId, valuetype System.Nullable`1&lt;int32&gt; permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Create (operations As IFileSystemOperations, accountName As String, directFilePath As String, Optional streamContents As Stream = null, Optional overwrite As Nullable(Of Boolean) = null, Optional syncFlag As Nullable(Of SyncFlag) = null, Optional leaseId As Nullable(Of Guid) = null, Optional permission As Nullable(Of Integer) = null)" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create (operations, accountName, directFilePath, streamContents, overwrite, syncFlag, leaseId, permission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="overwrite" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
        <Parameter Name="leaseId" Type="System.Nullable&lt;System.Guid&gt;" Index="6" />
        <Parameter Name="permission" Type="System.Nullable&lt;System.Int32&gt;" Index="7" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
        <param name="streamContents">
            The file contents to include when creating the file. This parameter is
            optional, resulting in an empty file if not specified.
            </param>
        <param name="overwrite">
            The indication of if the file should be overwritten.
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the file
            handle should remain open/locked, and file metadata (including file length,
            last modified time) should NOT get updated. METADATA indicates that more
            data will be sent immediately by the client, the file handle should remain
            open/locked, and file metadata should get updated. CLOSE indicates that the
            client is done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
        <param name="leaseId">
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
        <param name="permission">
            The octal representation of the unnamed user, mask and other permissions
            that should be set for the file when created. If not specified, it inherits
            these from the container.
            </param>
        <summary>
            Creates a file with optionally specified content. NOTE: If content is
            provided, the resulting file cannot be modified using ConcurrentAppend.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task CreateAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, System.IO.Stream streamContents = null, Nullable&lt;bool&gt; overwrite = null, Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag = null, Nullable&lt;Guid&gt; leaseId = null, Nullable&lt;int&gt; permission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task CreateAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;bool&gt; overwrite, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; syncFlag, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; leaseId, valuetype System.Nullable`1&lt;int32&gt; permission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt; * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync (operations, accountName, directFilePath, streamContents, overwrite, syncFlag, leaseId, permission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="overwrite" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" />
        <Parameter Name="syncFlag" Type="System.Nullable&lt;Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag&gt;" Index="5" />
        <Parameter Name="leaseId" Type="System.Nullable&lt;System.Guid&gt;" Index="6" />
        <Parameter Name="permission" Type="System.Nullable&lt;System.Int32&gt;" Index="7" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="8" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
        <param name="streamContents">
            The file contents to include when creating the file. This parameter is
            optional, resulting in an empty file if not specified.
            </param>
        <param name="overwrite">
            The indication of if the file should be overwritten.
            </param>
        <param name="syncFlag">
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the file
            handle should remain open/locked, and file metadata (including file length,
            last modified time) should NOT get updated. METADATA indicates that more
            data will be sent immediately by the client, the file handle should remain
            open/locked, and file metadata should get updated. CLOSE indicates that the
            client is done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
        <param name="leaseId">
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
        <param name="permission">
            The octal representation of the unnamed user, mask and other permissions
            that should be set for the file when created. If not specified, it inherits
            these from the container.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a file with optionally specified content. NOTE: If content is
            provided, the resulting file cannot be modified using ConcurrentAppend.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Delete (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, Nullable&lt;bool&gt; recursive = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Delete(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Delete (operations As IFileSystemOperations, accountName As String, filePath As String, Optional recursive As Nullable(Of Boolean) = null) As FileOperationResult" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete (operations, accountName, filePath, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file or directory to
            delete.
            </param>
        <param name="recursive">
            The optional switch indicating if the delete should be recursive
            </param>
        <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; DeleteAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, Nullable&lt;bool&gt; recursive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; DeleteAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync (operations, accountName, filePath, recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file or directory to
            delete.
            </param>
        <param name="recursive">
            The optional switch indicating if the delete should be recursive
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAclStatus">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult GetAclStatus (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, Nullable&lt;bool&gt; tooId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult GetAclStatus(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, valuetype System.Nullable`1&lt;bool&gt; tooId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAclStatus (operations As IFileSystemOperations, accountName As String, aclFilePath As String, Optional tooId As Nullable(Of Boolean) = null) As AclStatusResult" />
      <MemberSignature Language="F#" Value="static member GetAclStatus : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus (operations, accountName, aclFilePath, tooId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="aclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="aclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to get the ACL.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of object ID for ACL
            entries. tooid=false returns friendly names instead of the AAD Object ID.
            Default value is true, returning AAD object IDs.
            </param>
        <summary>
            Gets Access Control List (ACL) entries for the specified file or directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAclStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult&gt; GetAclStatusAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, Nullable&lt;bool&gt; tooId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult&gt; GetAclStatusAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, valuetype System.Nullable`1&lt;bool&gt; tooId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetAclStatusAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync (operations, accountName, aclFilePath, tooId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="aclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="aclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to get the ACL.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of object ID for ACL
            entries. tooid=false returns friendly names instead of the AAD Object ID.
            Default value is true, returning AAD object IDs.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets Access Control List (ACL) entries for the specified file or directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentSummary">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult GetContentSummary (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getContentSummaryFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult GetContentSummary(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getContentSummaryFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContentSummary (operations As IFileSystemOperations, accountName As String, getContentSummaryFilePath As String) As ContentSummaryResult" />
      <MemberSignature Language="F#" Value="static member GetContentSummary : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string -&gt; Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary (operations, accountName, getContentSummaryFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="getContentSummaryFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getContentSummaryFilePath">
            The Data Lake Store path (starting with '/') of the file for which to
            retrieve the summary.
            </param>
        <summary>
            Gets the file content summary object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentSummaryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult&gt; GetContentSummaryAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getContentSummaryFilePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult&gt; GetContentSummaryAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getContentSummaryFilePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetContentSummaryAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync (operations, accountName, getContentSummaryFilePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="getContentSummaryFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getContentSummaryFilePath">
            The Data Lake Store path (starting with '/') of the file for which to
            retrieve the summary.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the file content summary object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileStatus">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult GetFileStatus (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, Nullable&lt;bool&gt; tooId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult GetFileStatus(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, valuetype System.Nullable`1&lt;bool&gt; tooId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFileStatus (operations As IFileSystemOperations, accountName As String, getFilePath As String, Optional tooId As Nullable(Of Boolean) = null) As FileStatusResult" />
      <MemberSignature Language="F#" Value="static member GetFileStatus : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus (operations, accountName, getFilePath, tooId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="getFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to retrieve the status.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        <summary>
            Get the file status object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult&gt; GetFileStatusAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, Nullable&lt;bool&gt; tooId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult&gt; GetFileStatusAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, valuetype System.Nullable`1&lt;bool&gt; tooId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetFileStatusAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync (operations, accountName, getFilePath, tooId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="getFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to retrieve the status.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get the file status object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFileStatus">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult ListFileStatus (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string listFilePath, Nullable&lt;int&gt; listSize = null, string listAfter = null, string listBefore = null, Nullable&lt;bool&gt; tooId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult ListFileStatus(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string listFilePath, valuetype System.Nullable`1&lt;int32&gt; listSize, string listAfter, string listBefore, valuetype System.Nullable`1&lt;bool&gt; tooId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListFileStatus (operations As IFileSystemOperations, accountName As String, listFilePath As String, Optional listSize As Nullable(Of Integer) = null, Optional listAfter As String = null, Optional listBefore As String = null, Optional tooId As Nullable(Of Boolean) = null) As FileStatusesResult" />
      <MemberSignature Language="F#" Value="static member ListFileStatus : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus (operations, accountName, listFilePath, listSize, listAfter, listBefore, tooId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="listFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="listSize" Type="System.Nullable&lt;System.Int32&gt;" Index="3" />
        <Parameter Name="listAfter" Type="System.String" Index="4" />
        <Parameter Name="listBefore" Type="System.String" Index="5" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="listFilePath">
            The Data Lake Store path (starting with '/') of the directory to list.
            </param>
        <param name="listSize">
            Gets or sets the number of items to return. Optional.
            </param>
        <param name="listAfter">
            Gets or sets the item or lexographical index after which to begin returning
            results. For example, a file list of 'a','b','d' and listAfter='b' will
            return 'd', and a listAfter='c' will also return 'd'. Optional.
            </param>
        <param name="listBefore">
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also return
            'a','b'. Optional.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        <summary>
            Get the list of file status objects specified by the file path, with
            optional pagination parameters
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFileStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult&gt; ListFileStatusAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string listFilePath, Nullable&lt;int&gt; listSize = null, string listAfter = null, string listBefore = null, Nullable&lt;bool&gt; tooId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult&gt; ListFileStatusAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string listFilePath, valuetype System.Nullable`1&lt;int32&gt; listSize, string listAfter, string listBefore, valuetype System.Nullable`1&lt;bool&gt; tooId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListFileStatusAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync (operations, accountName, listFilePath, listSize, listAfter, listBefore, tooId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="listFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="listSize" Type="System.Nullable&lt;System.Int32&gt;" Index="3" />
        <Parameter Name="listAfter" Type="System.String" Index="4" />
        <Parameter Name="listBefore" Type="System.String" Index="5" />
        <Parameter Name="tooId" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="listFilePath">
            The Data Lake Store path (starting with '/') of the directory to list.
            </param>
        <param name="listSize">
            Gets or sets the number of items to return. Optional.
            </param>
        <param name="listAfter">
            Gets or sets the item or lexographical index after which to begin returning
            results. For example, a file list of 'a','b','d' and listAfter='b' will
            return 'd', and a listAfter='c' will also return 'd'. Optional.
            </param>
        <param name="listBefore">
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also return
            'a','b'. Optional.
            </param>
        <param name="tooId">
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get the list of file status objects specified by the file path, with
            optional pagination parameters
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mkdirs">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Mkdirs (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, Nullable&lt;int&gt; permission = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Mkdirs(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, valuetype System.Nullable`1&lt;int32&gt; permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Mkdirs (operations As IFileSystemOperations, accountName As String, path As String, Optional permission As Nullable(Of Integer) = null) As FileOperationResult" />
      <MemberSignature Language="F#" Value="static member Mkdirs : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int&gt; -&gt; Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs (operations, accountName, path, permission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="permission" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="path">
            The Data Lake Store path (starting with '/') of the directory to create.
            </param>
        <param name="permission">
            Optional octal permission with which the directory should be created.
            </param>
        <summary>
            Creates a directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MkdirsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; MkdirsAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, Nullable&lt;int&gt; permission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; MkdirsAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string path, valuetype System.Nullable`1&lt;int32&gt; permission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member MkdirsAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync (operations, accountName, path, permission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="permission" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="path">
            The Data Lake Store path (starting with '/') of the directory to create.
            </param>
        <param name="permission">
            Optional octal permission with which the directory should be created.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAclEntries">
      <MemberSignature Language="C#" Value="public static void ModifyAclEntries (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ModifyAclEntries(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ModifyAclEntries (operations As IFileSystemOperations, accountName As String, modifyAclFilePath As String, aclspec As String)" />
      <MemberSignature Language="F#" Value="static member ModifyAclEntries : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries (operations, accountName, modifyAclFilePath, aclspec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="modifyAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="modifyAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being modified.
            </param>
        <param name="aclspec">
            The ACL specification included in ACL modification operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        <summary>
            Modifies existing Access Control List (ACL) entries on a file or folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAclEntriesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ModifyAclEntriesAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ModifyAclEntriesAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ModifyAclEntriesAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync (operations, accountName, modifyAclFilePath, aclspec, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="modifyAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="modifyAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being modified.
            </param>
        <param name="aclspec">
            The ACL specification included in ACL modification operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Modifies existing Access Control List (ACL) entries on a file or folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MsConcat">
      <MemberSignature Language="C#" Value="public static void MsConcat (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string msConcatDestinationPath, System.IO.Stream streamContents, Nullable&lt;bool&gt; deleteSourceDirectory = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MsConcat(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string msConcatDestinationPath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;bool&gt; deleteSourceDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MsConcat (operations As IFileSystemOperations, accountName As String, msConcatDestinationPath As String, streamContents As Stream, Optional deleteSourceDirectory As Nullable(Of Boolean) = null)" />
      <MemberSignature Language="F#" Value="static member MsConcat : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat (operations, accountName, msConcatDestinationPath, streamContents, deleteSourceDirectory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="msConcatDestinationPath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="deleteSourceDirectory" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="msConcatDestinationPath">
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
        <param name="streamContents">
            A list of Data Lake Store paths (starting with '/') of the source files.
            Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
        <param name="deleteSourceDirectory">
            Indicates that as an optimization instead of deleting each individual
            source stream, delete the source stream folder if all streams are in the
            same folder instead. This results in a substantial performance improvement
            when the only streams in the folder are part of the concatenation
            operation. WARNING: This includes the deletion of any other files that are
            not source files. Only set this to true when source files are the only
            files in the source directory.
            </param>
        <summary>
            Concatenates the list of source files into the destination file, deleting
            all source files upon success. This method accepts more source file paths
            than the Concat method. This method and the parameters it accepts are
            subject to change for usability in an upcoming version.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MsConcatAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task MsConcatAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string msConcatDestinationPath, System.IO.Stream streamContents, Nullable&lt;bool&gt; deleteSourceDirectory = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task MsConcatAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string msConcatDestinationPath, class System.IO.Stream streamContents, valuetype System.Nullable`1&lt;bool&gt; deleteSourceDirectory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member MsConcatAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.IO.Stream * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync (operations, accountName, msConcatDestinationPath, streamContents, deleteSourceDirectory, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="msConcatDestinationPath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="streamContents" Type="System.IO.Stream" Index="3" />
        <Parameter Name="deleteSourceDirectory" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="msConcatDestinationPath">
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
        <param name="streamContents">
            A list of Data Lake Store paths (starting with '/') of the source files.
            Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
        <param name="deleteSourceDirectory">
            Indicates that as an optimization instead of deleting each individual
            source stream, delete the source stream folder if all streams are in the
            same folder instead. This results in a substantial performance improvement
            when the only streams in the folder are part of the concatenation
            operation. WARNING: This includes the deletion of any other files that are
            not source files. Only set this to true when source files are the only
            files in the source directory.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Concatenates the list of source files into the destination file, deleting
            all source files upon success. This method accepts more source file paths
            than the Concat method. This method and the parameters it accepts are
            subject to change for usability in an upcoming version.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Open (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, Nullable&lt;long&gt; length = null, Nullable&lt;long&gt; offset = null, Nullable&lt;Guid&gt; fileSessionId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Open(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, valuetype System.Nullable`1&lt;int64&gt; length, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; fileSessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Open (operations As IFileSystemOperations, accountName As String, directFilePath As String, Optional length As Nullable(Of Long) = null, Optional offset As Nullable(Of Long) = null, Optional fileSessionId As Nullable(Of Guid) = null) As Stream" />
      <MemberSignature Language="F#" Value="static member Open : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;Guid&gt; -&gt; System.IO.Stream" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open (operations, accountName, directFilePath, length, offset, fileSessionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" Index="3" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
        <Parameter Name="fileSessionId" Type="System.Nullable&lt;System.Guid&gt;" Index="5" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
        <param name="length">
            The number of bytes that the server will attempt to retrieve. It will
            retrieve &lt;= length bytes.
            </param>
        <param name="offset">
            The byte offset to start reading data from.
            </param>
        <param name="fileSessionId">
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit.
            </param>
        <summary>
            Opens and reads from the specified file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, Nullable&lt;long&gt; length = null, Nullable&lt;long&gt; offset = null, Nullable&lt;Guid&gt; fileSessionId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string directFilePath, valuetype System.Nullable`1&lt;int64&gt; length, valuetype System.Nullable`1&lt;int64&gt; offset, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; fileSessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member OpenAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync (operations, accountName, directFilePath, length, offset, fileSessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="directFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" Index="3" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
        <Parameter Name="fileSessionId" Type="System.Nullable&lt;System.Guid&gt;" Index="5" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="directFilePath">
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
        <param name="length">
            The number of bytes that the server will attempt to retrieve. It will
            retrieve &lt;= length bytes.
            </param>
        <param name="offset">
            The byte offset to start reading data from.
            </param>
        <param name="fileSessionId">
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Opens and reads from the specified file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathExists">
      <MemberSignature Language="C#" Value="public static bool PathExists (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PathExists(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PathExists (operations As IFileSystemOperations, accountName As String, getFilePath As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member PathExists : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string -&gt; bool" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists (operations, accountName, getFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="getFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test the existence of.
            </param>
        <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathExistsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; PathExistsAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; PathExistsAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string getFilePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member PathExistsAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync (operations, accountName, getFilePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="getFilePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="getFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test the existence of.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAcl">
      <MemberSignature Language="C#" Value="public static void RemoveAcl (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAcl(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveAcl (operations As IFileSystemOperations, accountName As String, aclFilePath As String)" />
      <MemberSignature Language="F#" Value="static member RemoveAcl : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl (operations, accountName, aclFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="aclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="aclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
        <summary>
            Removes the existing Access Control List (ACL) of the specified file or
            directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAclAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task RemoveAclAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task RemoveAclAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string aclFilePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member RemoveAclAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync (operations, accountName, aclFilePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="aclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="aclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Removes the existing Access Control List (ACL) of the specified file or
            directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAclEntries">
      <MemberSignature Language="C#" Value="public static void RemoveAclEntries (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAclEntries(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveAclEntries (operations As IFileSystemOperations, accountName As String, removeAclFilePath As String, aclspec As String)" />
      <MemberSignature Language="F#" Value="static member RemoveAclEntries : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries (operations, accountName, removeAclFilePath, aclspec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="removeAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="removeAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
        <param name="aclspec">
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
        <summary>
            Removes existing Access Control List (ACL) entries for a file or folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAclEntriesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task RemoveAclEntriesAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task RemoveAclEntriesAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member RemoveAclEntriesAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync (operations, accountName, removeAclFilePath, aclspec, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="removeAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="removeAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
        <param name="aclspec">
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Removes existing Access Control List (ACL) entries for a file or folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAcl">
      <MemberSignature Language="C#" Value="public static void RemoveDefaultAcl (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string defaultAclFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDefaultAcl(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string defaultAclFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveDefaultAcl (operations As IFileSystemOperations, accountName As String, defaultAclFilePath As String)" />
      <MemberSignature Language="F#" Value="static member RemoveDefaultAcl : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl (operations, accountName, defaultAclFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="defaultAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="defaultAclFilePath">
            The Data Lake Store path (starting with '/') of the directory with the
            default ACL being removed.
            </param>
        <summary>
            Removes the existing Default Access Control List (ACL) of the specified
            directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAclAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task RemoveDefaultAclAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string defaultAclFilePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task RemoveDefaultAclAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string defaultAclFilePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member RemoveDefaultAclAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync (operations, accountName, defaultAclFilePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="defaultAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="defaultAclFilePath">
            The Data Lake Store path (starting with '/') of the directory with the
            default ACL being removed.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Removes the existing Default Access Control List (ACL) of the specified
            directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Rename (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string renameFilePath, string destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult Rename(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string renameFilePath, string destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Rename (operations As IFileSystemOperations, accountName As String, renameFilePath As String, destination As String) As FileOperationResult" />
      <MemberSignature Language="F#" Value="static member Rename : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename (operations, accountName, renameFilePath, destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="renameFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="destination" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="renameFilePath">
            The Data Lake Store path (starting with '/') of the file or directory to
            move/rename.
            </param>
        <param name="destination">
            The path to move/rename the file or folder to
            </param>
        <summary>
            Rename a file or directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; RenameAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string renameFilePath, string destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt; RenameAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string renameFilePath, string destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member RenameAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync (operations, accountName, renameFilePath, destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="renameFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="destination" Type="System.String" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="renameFilePath">
            The Data Lake Store path (starting with '/') of the file or directory to
            move/rename.
            </param>
        <param name="destination">
            The path to move/rename the file or folder to
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Rename a file or directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAcl">
      <MemberSignature Language="C#" Value="public static void SetAcl (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAcl(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAcl (operations As IFileSystemOperations, accountName As String, setAclFilePath As String, aclspec As String)" />
      <MemberSignature Language="F#" Value="static member SetAcl : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl (operations, accountName, setAclFilePath, aclspec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory on
            which to set the ACL.
            </param>
        <param name="aclspec">
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAclAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetAclAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetAclAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SetAclAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync (operations, accountName, setAclFilePath, aclspec, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setAclFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aclspec" Type="System.String" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setAclFilePath">
            The Data Lake Store path (starting with '/') of the file or directory on
            which to set the ACL.
            </param>
        <param name="aclspec">
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileExpiry">
      <MemberSignature Language="C#" Value="public static void SetFileExpiry (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType expiryOption, Nullable&lt;long&gt; expireTime = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileExpiry(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, valuetype Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType expiryOption, valuetype System.Nullable`1&lt;int64&gt; expireTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetFileExpiry (operations As IFileSystemOperations, accountName As String, filePath As String, expiryOption As ExpiryOptionType, Optional expireTime As Nullable(Of Long) = null)" />
      <MemberSignature Language="F#" Value="static member SetFileExpiry : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType * Nullable&lt;int64&gt; -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry (operations, accountName, filePath, expiryOption, expireTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="expiryOption" Type="Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType" Index="3" />
        <Parameter Name="expireTime" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file on which to set or
            remove the expiration time.
            </param>
        <param name="expiryOption">
            Indicates the type of expiration to use for the file: 1. NeverExpire:
            ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in
            milliseconds representing the expiration date relative to when file
            expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer
            in milliseconds representing the expiration date relative to file creation.
            4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp
            relative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',
            'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
            </param>
        <param name="expireTime">
            The time that the file will expire, corresponding to the ExpiryOption that
            was set.
            </param>
        <summary>
            Sets or removes the expiration time on the specified file. This operation
            can only be executed against files. Folders are not supported.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileExpiryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetFileExpiryAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType expiryOption, Nullable&lt;long&gt; expireTime = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetFileExpiryAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string filePath, valuetype Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType expiryOption, valuetype System.Nullable`1&lt;int64&gt; expireTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SetFileExpiryAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync (operations, accountName, filePath, expiryOption, expireTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="filePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="expiryOption" Type="Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType" Index="3" />
        <Parameter Name="expireTime" Type="System.Nullable&lt;System.Int64&gt;" Index="4" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="filePath">
            The Data Lake Store path (starting with '/') of the file on which to set or
            remove the expiration time.
            </param>
        <param name="expiryOption">
            Indicates the type of expiration to use for the file: 1. NeverExpire:
            ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in
            milliseconds representing the expiration date relative to when file
            expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer
            in milliseconds representing the expiration date relative to file creation.
            4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp
            relative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',
            'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
            </param>
        <param name="expireTime">
            The time that the file will expire, corresponding to the ExpiryOption that
            was set.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Sets or removes the expiration time on the specified file. This operation
            can only be executed against files. Folders are not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOwner">
      <MemberSignature Language="C#" Value="public static void SetOwner (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOwner(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner, string group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetOwner (operations As IFileSystemOperations, accountName As String, setOwnerFilePath As String, Optional owner As String = null, Optional group As String = null)" />
      <MemberSignature Language="F#" Value="static member SetOwner : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner (operations, accountName, setOwnerFilePath, owner, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setOwnerFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="owner" Type="System.String" Index="3" />
        <Parameter Name="group" Type="System.String" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setOwnerFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the owner.
            </param>
        <param name="owner">
            The AAD Object ID of the user owner of the file or directory. If empty, the
            property will remain unchanged.
            </param>
        <param name="group">
            The AAD Object ID of the group owner of the file or directory. If empty,
            the property will remain unchanged.
            </param>
        <summary>
            Sets the owner of a file or directory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOwnerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetOwnerAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetOwnerAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner, string group, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SetOwnerAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync (operations, accountName, setOwnerFilePath, owner, group, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setOwnerFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="owner" Type="System.String" Index="3" />
        <Parameter Name="group" Type="System.String" Index="4" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setOwnerFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the owner.
            </param>
        <param name="owner">
            The AAD Object ID of the user owner of the file or directory. If empty, the
            property will remain unchanged.
            </param>
        <param name="group">
            The AAD Object ID of the group owner of the file or directory. If empty,
            the property will remain unchanged.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Sets the owner of a file or directory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public static void SetPermission (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPermission(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetPermission (operations As IFileSystemOperations, accountName As String, setPermissionFilePath As String, Optional permission As String = null)" />
      <MemberSignature Language="F#" Value="static member SetPermission : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string -&gt; unit" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission (operations, accountName, setPermissionFilePath, permission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setPermissionFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="permission" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setPermissionFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the permission.
            </param>
        <param name="permission">
            A string representation of the permission (i.e 'rwx'). If empty, this
            property remains unchanged.
            </param>
        <summary>
            Sets the permission of the file or folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SetPermissionAsync (this Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SetPermissionAsync(class Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SetPermissionAsync : Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync (operations, accountName, setPermissionFilePath, permission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataLake.Store</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations" RefType="this" Index="0" />
        <Parameter Name="accountName" Type="System.String" Index="1" />
        <Parameter Name="setPermissionFilePath" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="permission" Type="System.String" Index="3" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="accountName">
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
        <param name="setPermissionFilePath">
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the permission.
            </param>
        <param name="permission">
            A string representation of the permission (i.e 'rwx'). If empty, this
            property remains unchanged.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Sets the permission of the file or folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>