<Type Name="AppendBlobAppendBlockOptions" FullName="Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions">
  <TypeSignature Language="C#" Value="public class AppendBlobAppendBlockOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppendBlobAppendBlockOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AppendBlobAppendBlockOptions" />
  <TypeSignature Language="F#" Value="type AppendBlobAppendBlockOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Optional parameters for appending a block with
            <see cref="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions,System.Threading.CancellationToken)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobAppendBlockOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public Azure.Storage.Blobs.Models.AppendBlobRequestConditions Conditions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Blobs.Models.AppendBlobRequestConditions Conditions" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public Property Conditions As AppendBlobRequestConditions" />
      <MemberSignature Language="F#" Value="member this.Conditions : Azure.Storage.Blobs.Models.AppendBlobRequestConditions with get, set" Usage="Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.AppendBlobRequestConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions" /> to add
            conditions on the upload of this Append Blob.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressHandler">
      <MemberSignature Language="C#" Value="public IProgress&lt;long&gt; ProgressHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IProgress`1&lt;int64&gt; ProgressHandler" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.ProgressHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressHandler As IProgress(Of Long)" />
      <MemberSignature Language="F#" Value="member this.ProgressHandler : IProgress&lt;int64&gt; with get, set" Usage="Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.ProgressHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IProgress&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional <see cref="T:System.IProgress`1" /> to provide
            progress updates about data transfers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferValidationOptions">
      <MemberSignature Language="C#" Value="public Azure.Storage.UploadTransferValidationOptions TransferValidationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.UploadTransferValidationOptions TransferValidationOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.TransferValidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferValidationOptions As UploadTransferValidationOptions" />
      <MemberSignature Language="F#" Value="member this.TransferValidationOptions : Azure.Storage.UploadTransferValidationOptions with get, set" Usage="Azure.Storage.Blobs.Models.AppendBlobAppendBlockOptions.TransferValidationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.UploadTransferValidationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Optional <see cref="T:Azure.Storage.UploadTransferValidationOptions" /> for using additional
             transactional validation on block appending. Transactional checksums are
             discarded after use.
            
             AppendBlock accepts precalcualted checksums, but the method will calculate
             one if not provided.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
