<Type Name="BlobsModelFactory" FullName="Azure.Storage.Blobs.Models.BlobsModelFactory">
  <TypeSignature Language="C#" Value="public static class BlobsModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BlobsModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Models.BlobsModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobsModelFactory" />
  <TypeSignature Language="F#" Value="type BlobsModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.0.0</AssemblyVersion>
    <AssemblyVersion>12.3.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.1.0</AssemblyVersion>
    <AssemblyVersion>12.4.2.0</AssemblyVersion>
    <AssemblyVersion>12.4.3.0</AssemblyVersion>
    <AssemblyVersion>12.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccountInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.AccountInfo AccountInfo (Azure.Storage.Blobs.Models.SkuName skuName, Azure.Storage.Blobs.Models.AccountKind accountKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.AccountInfo AccountInfo(valuetype Azure.Storage.Blobs.Models.SkuName skuName, valuetype Azure.Storage.Blobs.Models.AccountKind accountKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccountInfo (skuName As SkuName, accountKind As AccountKind) As AccountInfo" />
      <MemberSignature Language="F#" Value="static member AccountInfo : Azure.Storage.Blobs.Models.SkuName * Azure.Storage.Blobs.Models.AccountKind -&gt; Azure.Storage.Blobs.Models.AccountInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo (skuName, accountKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.AccountInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skuName" Type="Azure.Storage.Blobs.Models.SkuName" />
        <Parameter Name="accountKind" Type="Azure.Storage.Blobs.Models.AccountKind" />
      </Parameters>
      <Docs>
        <param name="skuName">To be added.</param>
        <param name="accountKind">To be added.</param>
        <summary>
            Creates a new AccountInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobAppendInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] contentCrc64, string blobAppendOffset, int blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] contentCrc64, string blobAppendOffset, int32 blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobAppendInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), contentCrc64 As Byte(), blobAppendOffset As String, blobCommittedBlockCount As Integer, isServerEncrypted As Boolean, encryptionKeySha256 As String) As BlobAppendInfo" />
      <MemberSignature Language="F#" Value="static member BlobAppendInfo : Azure.ETag * DateTimeOffset * byte[] * byte[] * string * int * bool * string -&gt; Azure.Storage.Blobs.Models.BlobAppendInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo (eTag, lastModified, contentHash, contentCrc64, blobAppendOffset, blobCommittedBlockCount, isServerEncrypted, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobAppendInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobAppendOffset" Type="System.String" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="blobAppendOffset">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new BlobAppendInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobAppendInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] contentCrc64, string blobAppendOffset, int blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256, string encryptionScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] contentCrc64, string blobAppendOffset, int32 blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256, string encryptionScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobAppendInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), contentCrc64 As Byte(), blobAppendOffset As String, blobCommittedBlockCount As Integer, isServerEncrypted As Boolean, encryptionKeySha256 As String, encryptionScope As String) As BlobAppendInfo" />
      <MemberSignature Language="F#" Value="static member BlobAppendInfo : Azure.ETag * DateTimeOffset * byte[] * byte[] * string * int * bool * string * string -&gt; Azure.Storage.Blobs.Models.BlobAppendInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo (eTag, lastModified, contentHash, contentCrc64, blobAppendOffset, blobCommittedBlockCount, isServerEncrypted, encryptionKeySha256, encryptionScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobAppendInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobAppendOffset" Type="System.String" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="blobAppendOffset">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <summary>
            Creates a new BlobAppendInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobBlock">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobBlock BlobBlock (string name, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Azure.Storage.Blobs.Models.BlobBlock BlobBlock(string name, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobBlock(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobBlock (name As String, size As Integer) As BlobBlock" />
      <MemberSignature Language="F#" Value="static member BlobBlock : string * int -&gt; Azure.Storage.Blobs.Models.BlobBlock" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobBlock (name, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="size">To be added.</param>
        <summary>
            Creates a new BlobBlock instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerAccessPolicy">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContainerAccessPolicy BlobContainerAccessPolicy (Azure.Storage.Blobs.Models.PublicAccessType blobPublicAccess, Azure.ETag eTag, DateTimeOffset lastModified, System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobSignedIdentifier&gt; signedIdentifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContainerAccessPolicy BlobContainerAccessPolicy(valuetype Azure.Storage.Blobs.Models.PublicAccessType blobPublicAccess, valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.BlobSignedIdentifier&gt; signedIdentifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,Azure.ETag,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerAccessPolicy (blobPublicAccess As PublicAccessType, eTag As ETag, lastModified As DateTimeOffset, signedIdentifiers As IEnumerable(Of BlobSignedIdentifier)) As BlobContainerAccessPolicy" />
      <MemberSignature Language="F#" Value="static member BlobContainerAccessPolicy : Azure.Storage.Blobs.Models.PublicAccessType * Azure.ETag * DateTimeOffset * seq&lt;Azure.Storage.Blobs.Models.BlobSignedIdentifier&gt; -&gt; Azure.Storage.Blobs.Models.BlobContainerAccessPolicy" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerAccessPolicy (blobPublicAccess, eTag, lastModified, signedIdentifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContainerAccessPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobPublicAccess" Type="Azure.Storage.Blobs.Models.PublicAccessType" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="signedIdentifiers" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobSignedIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="blobPublicAccess">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="signedIdentifiers">To be added.</param>
        <summary>
            Creates a new BlobContainerAccessPolicy instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContainerInfo BlobContainerInfo (Azure.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContainerInfo BlobContainerInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerInfo(Azure.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerInfo (eTag As ETag, lastModified As DateTimeOffset) As BlobContainerInfo" />
      <MemberSignature Language="F#" Value="static member BlobContainerInfo : Azure.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobContainerInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerInfo (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContainerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new BlobContainerInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContainerItem BlobContainerItem (string name, Azure.Storage.Blobs.Models.BlobContainerProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContainerItem BlobContainerItem(string name, class Azure.Storage.Blobs.Models.BlobContainerProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem(System.String,Azure.Storage.Blobs.Models.BlobContainerProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerItem (name As String, properties As BlobContainerProperties) As BlobContainerItem" />
      <MemberSignature Language="F#" Value="static member BlobContainerItem : string * Azure.Storage.Blobs.Models.BlobContainerProperties -&gt; Azure.Storage.Blobs.Models.BlobContainerItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem (name, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContainerItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="properties" Type="Azure.Storage.Blobs.Models.BlobContainerProperties" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>
            Creates a new BlobContainerItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContainerProperties BlobContainerProperties (DateTimeOffset lastModified, Azure.ETag eTag, Azure.Storage.Blobs.Models.LeaseStatus? leaseStatus, Azure.Storage.Blobs.Models.LeaseState? leaseState, Azure.Storage.Blobs.Models.LeaseDurationType? leaseDuration, Azure.Storage.Blobs.Models.PublicAccessType? publicAccess, bool? hasImmutabilityPolicy, bool? hasLegalHold, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContainerProperties BlobContainerProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.ETag eTag, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PublicAccessType&gt; publicAccess, valuetype System.Nullable`1&lt;bool&gt; hasImmutabilityPolicy, valuetype System.Nullable`1&lt;bool&gt; hasLegalHold, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerProperties (lastModified As DateTimeOffset, eTag As ETag, leaseStatus As Nullable(Of LeaseStatus), leaseState As Nullable(Of LeaseState), leaseDuration As Nullable(Of LeaseDurationType), publicAccess As Nullable(Of PublicAccessType), hasImmutabilityPolicy As Nullable(Of Boolean), hasLegalHold As Nullable(Of Boolean), metadata As IDictionary(Of String, String)) As BlobContainerProperties" />
      <MemberSignature Language="F#" Value="static member BlobContainerProperties : DateTimeOffset * Azure.ETag * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.Storage.Blobs.Models.BlobContainerProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties (lastModified, eTag, leaseStatus, leaseState, leaseDuration, publicAccess, hasImmutabilityPolicy, hasLegalHold, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContainerProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="publicAccess" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt;" />
        <Parameter Name="hasImmutabilityPolicy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="publicAccess">To be added.</param>
        <param name="hasImmutabilityPolicy">To be added.</param>
        <param name="hasLegalHold">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>
            Creates a new BlobContainerProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContainerProperties BlobContainerProperties (DateTimeOffset lastModified, Azure.ETag eTag, Azure.Storage.Blobs.Models.LeaseState? leaseState = default, Azure.Storage.Blobs.Models.LeaseDurationType? leaseDuration = default, Azure.Storage.Blobs.Models.PublicAccessType? publicAccess = default, Azure.Storage.Blobs.Models.LeaseStatus? leaseStatus = default, bool? hasLegalHold = default, string defaultEncryptionScope = default, bool? preventEncryptionScopeOverride = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, bool? hasImmutabilityPolicy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContainerProperties BlobContainerProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.ETag eTag, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PublicAccessType&gt; publicAccess, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;bool&gt; hasLegalHold, string defaultEncryptionScope, valuetype System.Nullable`1&lt;bool&gt; preventEncryptionScopeOverride, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;bool&gt; hasImmutabilityPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerProperties (lastModified As DateTimeOffset, eTag As ETag, Optional leaseState As Nullable(Of LeaseState) = Nothing, Optional leaseDuration As Nullable(Of LeaseDurationType) = Nothing, Optional publicAccess As Nullable(Of PublicAccessType) = Nothing, Optional leaseStatus As Nullable(Of LeaseStatus) = Nothing, Optional hasLegalHold As Nullable(Of Boolean) = Nothing, Optional defaultEncryptionScope As String = Nothing, Optional preventEncryptionScopeOverride As Nullable(Of Boolean) = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional hasImmutabilityPolicy As Nullable(Of Boolean) = Nothing) As BlobContainerProperties" />
      <MemberSignature Language="F#" Value="static member BlobContainerProperties : DateTimeOffset * Azure.ETag * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;bool&gt; -&gt; Azure.Storage.Blobs.Models.BlobContainerProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties (lastModified, eTag, leaseState, leaseDuration, publicAccess, leaseStatus, hasLegalHold, defaultEncryptionScope, preventEncryptionScopeOverride, metadata, hasImmutabilityPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContainerProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="publicAccess" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="defaultEncryptionScope" Type="System.String" />
        <Parameter Name="preventEncryptionScopeOverride" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="hasImmutabilityPolicy" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="publicAccess">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="hasLegalHold">To be added.</param>
        <param name="defaultEncryptionScope">To be added.</param>
        <param name="preventEncryptionScopeOverride">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="hasImmutabilityPolicy">To be added.</param>
        <summary>
            Creates a new BlobContainerProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContentInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, string encryptionKeySha256, long blobSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, string encryptionKeySha256, int64 blobSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContentInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), encryptionKeySha256 As String, blobSequenceNumber As Long) As BlobContentInfo" />
      <MemberSignature Language="F#" Value="static member BlobContentInfo : Azure.ETag * DateTimeOffset * byte[] * string * int64 -&gt; Azure.Storage.Blobs.Models.BlobContentInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo (eTag, lastModified, contentHash, encryptionKeySha256, blobSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <summary>
            Creates a new BlobContentInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContentInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, string encryptionKeySha256, string encryptionScope, long blobSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, string encryptionKeySha256, string encryptionScope, int64 blobSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContentInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), encryptionKeySha256 As String, encryptionScope As String, blobSequenceNumber As Long) As BlobContentInfo" />
      <MemberSignature Language="F#" Value="static member BlobContentInfo : Azure.ETag * DateTimeOffset * byte[] * string * string * int64 -&gt; Azure.Storage.Blobs.Models.BlobContentInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo (eTag, lastModified, contentHash, encryptionKeySha256, encryptionScope, blobSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <summary>
            Creates a new BlobContentInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobCopyInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobCopyInfo BlobCopyInfo (Azure.ETag eTag, DateTimeOffset lastModified, string copyId, Azure.Storage.Blobs.Models.CopyStatus copyStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobCopyInfo BlobCopyInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, string copyId, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.CopyStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobCopyInfo (eTag As ETag, lastModified As DateTimeOffset, copyId As String, copyStatus As CopyStatus) As BlobCopyInfo" />
      <MemberSignature Language="F#" Value="static member BlobCopyInfo : Azure.ETag * DateTimeOffset * string * Azure.Storage.Blobs.Models.CopyStatus -&gt; Azure.Storage.Blobs.Models.BlobCopyInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo (eTag, lastModified, copyId, copyStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobCopyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <summary>
            Creates a new BlobCopyInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobDownloadInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobDownloadInfo BlobDownloadInfo (DateTimeOffset lastModified, long blobSequenceNumber, Azure.Storage.Blobs.Models.BlobType blobType, byte[] contentCrc64, string contentLanguage, string copyStatusDescription, string copyId, string copyProgress, Uri copySource, Azure.Storage.Blobs.Models.CopyStatus copyStatus, string contentDisposition, Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, string cacheControl, Azure.Storage.Blobs.Models.LeaseState leaseState, string contentEncoding, Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, byte[] contentHash, string acceptRanges, Azure.ETag eTag, int blobCommittedBlockCount, string contentRange, bool isServerEncrypted, string contentType, string encryptionKeySha256, long contentLength, byte[] blobContentHash, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.IO.Stream content, DateTimeOffset copyCompletionTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobDownloadInfo BlobDownloadInfo(valuetype System.DateTimeOffset lastModified, int64 blobSequenceNumber, valuetype Azure.Storage.Blobs.Models.BlobType blobType, unsigned int8[] contentCrc64, string contentLanguage, string copyStatusDescription, string copyId, string copyProgress, class System.Uri copySource, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus, string contentDisposition, valuetype Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, string cacheControl, valuetype Azure.Storage.Blobs.Models.LeaseState leaseState, string contentEncoding, valuetype Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, unsigned int8[] contentHash, string acceptRanges, valuetype Azure.ETag eTag, int32 blobCommittedBlockCount, string contentRange, bool isServerEncrypted, string contentType, string encryptionKeySha256, int64 contentLength, unsigned int8[] blobContentHash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class System.IO.Stream content, valuetype System.DateTimeOffset copyCompletionTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobDownloadInfo (lastModified As DateTimeOffset, blobSequenceNumber As Long, blobType As BlobType, contentCrc64 As Byte(), contentLanguage As String, copyStatusDescription As String, copyId As String, copyProgress As String, copySource As Uri, copyStatus As CopyStatus, contentDisposition As String, leaseDuration As LeaseDurationType, cacheControl As String, leaseState As LeaseState, contentEncoding As String, leaseStatus As LeaseStatus, contentHash As Byte(), acceptRanges As String, eTag As ETag, blobCommittedBlockCount As Integer, contentRange As String, isServerEncrypted As Boolean, contentType As String, encryptionKeySha256 As String, contentLength As Long, blobContentHash As Byte(), metadata As IDictionary(Of String, String), content As Stream, copyCompletionTime As DateTimeOffset) As BlobDownloadInfo" />
      <MemberSignature Language="F#" Value="static member BlobDownloadInfo : DateTimeOffset * int64 * Azure.Storage.Blobs.Models.BlobType * byte[] * string * string * string * string * Uri * Azure.Storage.Blobs.Models.CopyStatus * string * Azure.Storage.Blobs.Models.LeaseDurationType * string * Azure.Storage.Blobs.Models.LeaseState * string * Azure.Storage.Blobs.Models.LeaseStatus * byte[] * string * Azure.ETag * int * string * bool * string * string * int64 * byte[] * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.IO.Stream * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobDownloadInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo (lastModified, blobSequenceNumber, blobType, contentCrc64, contentLanguage, copyStatusDescription, copyId, copyProgress, copySource, copyStatus, contentDisposition, leaseDuration, cacheControl, leaseState, contentEncoding, leaseStatus, contentHash, acceptRanges, eTag, blobCommittedBlockCount, contentRange, isServerEncrypted, contentType, encryptionKeySha256, contentLength, blobContentHash, metadata, content, copyCompletionTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobDownloadInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="leaseDuration" Type="Azure.Storage.Blobs.Models.LeaseDurationType" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="leaseState" Type="Azure.Storage.Blobs.Models.LeaseState" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="leaseStatus" Type="Azure.Storage.Blobs.Models.LeaseStatus" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="acceptRanges" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="contentRange" Type="System.String" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="blobContentHash" Type="System.Byte[]" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="copyCompletionTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="acceptRanges">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="contentRange">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="blobContentHash">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="content">To be added.</param>
        <param name="copyCompletionTime">To be added.</param>
        <summary>
            Creates a new BlobDownloadInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobDownloadInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobDownloadInfo BlobDownloadInfo (DateTimeOffset lastModified = default, long blobSequenceNumber = 0, Azure.Storage.Blobs.Models.BlobType blobType = Azure.Storage.Blobs.Models.BlobType.Block, byte[] contentCrc64 = default, string contentLanguage = default, string copyStatusDescription = default, string copyId = default, string copyProgress = default, Uri copySource = default, Azure.Storage.Blobs.Models.CopyStatus copyStatus = Azure.Storage.Blobs.Models.CopyStatus.Pending, string contentDisposition = default, Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration = Azure.Storage.Blobs.Models.LeaseDurationType.Infinite, string cacheControl = default, Azure.Storage.Blobs.Models.LeaseState leaseState = Azure.Storage.Blobs.Models.LeaseState.Available, string contentEncoding = default, Azure.Storage.Blobs.Models.LeaseStatus leaseStatus = Azure.Storage.Blobs.Models.LeaseStatus.Locked, byte[] contentHash = default, string acceptRanges = default, Azure.ETag eTag = default, int blobCommittedBlockCount = 0, string contentRange = default, bool isServerEncrypted = false, string contentType = default, string encryptionKeySha256 = default, string encryptionScope = default, long contentLength = 0, byte[] blobContentHash = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.IO.Stream content = default, DateTimeOffset copyCompletionTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobDownloadInfo BlobDownloadInfo(valuetype System.DateTimeOffset lastModified, int64 blobSequenceNumber, valuetype Azure.Storage.Blobs.Models.BlobType blobType, unsigned int8[] contentCrc64, string contentLanguage, string copyStatusDescription, string copyId, string copyProgress, class System.Uri copySource, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus, string contentDisposition, valuetype Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, string cacheControl, valuetype Azure.Storage.Blobs.Models.LeaseState leaseState, string contentEncoding, valuetype Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, unsigned int8[] contentHash, string acceptRanges, valuetype Azure.ETag eTag, int32 blobCommittedBlockCount, string contentRange, bool isServerEncrypted, string contentType, string encryptionKeySha256, string encryptionScope, int64 contentLength, unsigned int8[] blobContentHash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class System.IO.Stream content, valuetype System.DateTimeOffset copyCompletionTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobDownloadInfo (Optional lastModified As DateTimeOffset = Nothing, Optional blobSequenceNumber As Long = 0, Optional blobType As BlobType = Azure.Storage.Blobs.Models.BlobType.Block, Optional contentCrc64 As Byte() = Nothing, Optional contentLanguage As String = Nothing, Optional copyStatusDescription As String = Nothing, Optional copyId As String = Nothing, Optional copyProgress As String = Nothing, Optional copySource As Uri = Nothing, Optional copyStatus As CopyStatus = Azure.Storage.Blobs.Models.CopyStatus.Pending, Optional contentDisposition As String = Nothing, Optional leaseDuration As LeaseDurationType = Azure.Storage.Blobs.Models.LeaseDurationType.Infinite, Optional cacheControl As String = Nothing, Optional leaseState As LeaseState = Azure.Storage.Blobs.Models.LeaseState.Available, Optional contentEncoding As String = Nothing, Optional leaseStatus As LeaseStatus = Azure.Storage.Blobs.Models.LeaseStatus.Locked, Optional contentHash As Byte() = Nothing, Optional acceptRanges As String = Nothing, Optional eTag As ETag = Nothing, Optional blobCommittedBlockCount As Integer = 0, Optional contentRange As String = Nothing, Optional isServerEncrypted As Boolean = false, Optional contentType As String = Nothing, Optional encryptionKeySha256 As String = Nothing, Optional encryptionScope As String = Nothing, Optional contentLength As Long = 0, Optional blobContentHash As Byte() = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional content As Stream = Nothing, Optional copyCompletionTime As DateTimeOffset = Nothing) As BlobDownloadInfo" />
      <MemberSignature Language="F#" Value="static member BlobDownloadInfo : DateTimeOffset * int64 * Azure.Storage.Blobs.Models.BlobType * byte[] * string * string * string * string * Uri * Azure.Storage.Blobs.Models.CopyStatus * string * Azure.Storage.Blobs.Models.LeaseDurationType * string * Azure.Storage.Blobs.Models.LeaseState * string * Azure.Storage.Blobs.Models.LeaseStatus * byte[] * string * Azure.ETag * int * string * bool * string * string * string * int64 * byte[] * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.IO.Stream * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobDownloadInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo (lastModified, blobSequenceNumber, blobType, contentCrc64, contentLanguage, copyStatusDescription, copyId, copyProgress, copySource, copyStatus, contentDisposition, leaseDuration, cacheControl, leaseState, contentEncoding, leaseStatus, contentHash, acceptRanges, eTag, blobCommittedBlockCount, contentRange, isServerEncrypted, contentType, encryptionKeySha256, encryptionScope, contentLength, blobContentHash, metadata, content, copyCompletionTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobDownloadInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="leaseDuration" Type="Azure.Storage.Blobs.Models.LeaseDurationType" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="leaseState" Type="Azure.Storage.Blobs.Models.LeaseState" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="leaseStatus" Type="Azure.Storage.Blobs.Models.LeaseStatus" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="acceptRanges" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="contentRange" Type="System.String" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="blobContentHash" Type="System.Byte[]" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="copyCompletionTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="acceptRanges">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="contentRange">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="blobContentHash">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="content">To be added.</param>
        <param name="copyCompletionTime">To be added.</param>
        <summary>
            Creates a new BlobDownloadInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobGeoReplication">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobGeoReplication BlobGeoReplication (Azure.Storage.Blobs.Models.BlobGeoReplicationStatus status, DateTimeOffset? lastSyncedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobGeoReplication BlobGeoReplication(valuetype Azure.Storage.Blobs.Models.BlobGeoReplicationStatus status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSyncedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGeoReplication(Azure.Storage.Blobs.Models.BlobGeoReplicationStatus,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobGeoReplication (status As BlobGeoReplicationStatus, Optional lastSyncedOn As Nullable(Of DateTimeOffset) = Nothing) As BlobGeoReplication" />
      <MemberSignature Language="F#" Value="static member BlobGeoReplication : Azure.Storage.Blobs.Models.BlobGeoReplicationStatus * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Storage.Blobs.Models.BlobGeoReplication" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGeoReplication (status, lastSyncedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobGeoReplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.Storage.Blobs.Models.BlobGeoReplicationStatus" />
        <Parameter Name="lastSyncedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="status">To be added.</param>
        <param name="lastSyncedOn">To be added.</param>
        <summary>
            Creates a new BlobGeoReplication instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobHierarchyItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobHierarchyItem BlobHierarchyItem (string prefix, Azure.Storage.Blobs.Models.BlobItem blob);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobHierarchyItem BlobHierarchyItem(string prefix, class Azure.Storage.Blobs.Models.BlobItem blob) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem(System.String,Azure.Storage.Blobs.Models.BlobItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobHierarchyItem (prefix As String, blob As BlobItem) As BlobHierarchyItem" />
      <MemberSignature Language="F#" Value="static member BlobHierarchyItem : string * Azure.Storage.Blobs.Models.BlobItem -&gt; Azure.Storage.Blobs.Models.BlobHierarchyItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem (prefix, blob)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobHierarchyItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="blob" Type="Azure.Storage.Blobs.Models.BlobItem" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="blob">To be added.</param>
        <summary>
            Creates a new BlobHierarchyItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobInfo BlobInfo (Azure.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobInfo BlobInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo(Azure.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobInfo (eTag As ETag, lastModified As DateTimeOffset) As BlobInfo" />
      <MemberSignature Language="F#" Value="static member BlobInfo : Azure.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new BlobInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobItem BlobItem (string name, bool deleted, Azure.Storage.Blobs.Models.BlobItemProperties properties, string snapshot = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobItem BlobItem(string name, bool deleted, class Azure.Storage.Blobs.Models.BlobItemProperties properties, string snapshot, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,System.Boolean,Azure.Storage.Blobs.Models.BlobItemProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobItem (name As String, deleted As Boolean, properties As BlobItemProperties, Optional snapshot As String = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing) As BlobItem" />
      <MemberSignature Language="F#" Value="static member BlobItem : string * bool * Azure.Storage.Blobs.Models.BlobItemProperties * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.Storage.Blobs.Models.BlobItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem (name, deleted, properties, snapshot, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="deleted" Type="System.Boolean" />
        <Parameter Name="properties" Type="Azure.Storage.Blobs.Models.BlobItemProperties" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="deleted">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>
            Creates a new BlobItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobItemProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties (bool accessTierInferred, Uri copySource, string contentType, string contentEncoding, string contentLanguage, byte[] contentHash, string contentDisposition, string cacheControl, long? blobSequenceNumber, Azure.Storage.Blobs.Models.BlobType? blobType, Azure.Storage.Blobs.Models.LeaseStatus? leaseStatus, Azure.Storage.Blobs.Models.LeaseState? leaseState, Azure.Storage.Blobs.Models.LeaseDurationType? leaseDuration, string copyId, Azure.Storage.Blobs.Models.CopyStatus? copyStatus, long? contentLength, string copyProgress, string copyStatusDescription, bool? serverEncrypted, bool? incrementalCopy, string destinationSnapshot, int? remainingRetentionDays, Azure.Storage.Blobs.Models.AccessTier? accessTier, DateTimeOffset? lastModified, Azure.Storage.Blobs.Models.ArchiveStatus? archiveStatus, string customerProvidedKeySha256, Azure.ETag? eTag, DateTimeOffset? createdOn, DateTimeOffset? copyCompletedOn, DateTimeOffset? deletedOn, DateTimeOffset? accessTierChangedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties(bool accessTierInferred, class System.Uri copySource, string contentType, string contentEncoding, string contentLanguage, unsigned int8[] contentHash, string contentDisposition, string cacheControl, valuetype System.Nullable`1&lt;int64&gt; blobSequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobType&gt; blobType, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, string copyId, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.CopyStatus&gt; copyStatus, valuetype System.Nullable`1&lt;int64&gt; contentLength, string copyProgress, string copyStatusDescription, valuetype System.Nullable`1&lt;bool&gt; serverEncrypted, valuetype System.Nullable`1&lt;bool&gt; incrementalCopy, string destinationSnapshot, valuetype System.Nullable`1&lt;int32&gt; remainingRetentionDays, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.ArchiveStatus&gt; archiveStatus, string customerProvidedKeySha256, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; copyCompletedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; accessTierChangedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Uri,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobItemProperties (accessTierInferred As Boolean, copySource As Uri, contentType As String, contentEncoding As String, contentLanguage As String, contentHash As Byte(), contentDisposition As String, cacheControl As String, blobSequenceNumber As Nullable(Of Long), blobType As Nullable(Of BlobType), leaseStatus As Nullable(Of LeaseStatus), leaseState As Nullable(Of LeaseState), leaseDuration As Nullable(Of LeaseDurationType), copyId As String, copyStatus As Nullable(Of CopyStatus), contentLength As Nullable(Of Long), copyProgress As String, copyStatusDescription As String, serverEncrypted As Nullable(Of Boolean), incrementalCopy As Nullable(Of Boolean), destinationSnapshot As String, remainingRetentionDays As Nullable(Of Integer), accessTier As Nullable(Of AccessTier), lastModified As Nullable(Of DateTimeOffset), archiveStatus As Nullable(Of ArchiveStatus), customerProvidedKeySha256 As String, eTag As Nullable(Of ETag), createdOn As Nullable(Of DateTimeOffset), copyCompletedOn As Nullable(Of DateTimeOffset), deletedOn As Nullable(Of DateTimeOffset), accessTierChangedOn As Nullable(Of DateTimeOffset)) As BlobItemProperties" />
      <MemberSignature Language="F#" Value="static member BlobItemProperties : bool * Uri * string * string * string * byte[] * string * string * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt; * Nullable&lt;int64&gt; * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt; * string * Nullable&lt;Azure.ETag&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Storage.Blobs.Models.BlobItemProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties (accessTierInferred, copySource, contentType, contentEncoding, contentLanguage, contentHash, contentDisposition, cacheControl, blobSequenceNumber, blobType, leaseStatus, leaseState, leaseDuration, copyId, copyStatus, contentLength, copyProgress, copyStatusDescription, serverEncrypted, incrementalCopy, destinationSnapshot, remainingRetentionDays, accessTier, lastModified, archiveStatus, customerProvidedKeySha256, eTag, createdOn, copyCompletedOn, deletedOn, accessTierChangedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobItemProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessTierInferred" Type="System.Boolean" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="blobType" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt;" />
        <Parameter Name="contentLength" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="serverEncrypted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="incrementalCopy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="remainingRetentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="archiveStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt;" />
        <Parameter Name="customerProvidedKeySha256" Type="System.String" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="copyCompletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="accessTierChangedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="accessTierInferred">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="serverEncrypted">To be added.</param>
        <param name="incrementalCopy">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="remainingRetentionDays">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="customerProvidedKeySha256">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="createdOn">To be added.</param>
        <param name="copyCompletedOn">To be added.</param>
        <param name="deletedOn">To be added.</param>
        <param name="accessTierChangedOn">To be added.</param>
        <summary>
            Creates a new BlobItemProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobItemProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties (bool accessTierInferred, string copyProgress = default, string contentType = default, string contentEncoding = default, string contentLanguage = default, byte[] contentHash = default, string contentDisposition = default, string cacheControl = default, long? blobSequenceNumber = default, Azure.Storage.Blobs.Models.BlobType? blobType = default, Azure.Storage.Blobs.Models.LeaseStatus? leaseStatus = default, Azure.Storage.Blobs.Models.LeaseState? leaseState = default, Azure.Storage.Blobs.Models.LeaseDurationType? leaseDuration = default, string copyId = default, Azure.Storage.Blobs.Models.CopyStatus? copyStatus = default, Uri copySource = default, long? contentLength = default, string copyStatusDescription = default, bool? serverEncrypted = default, bool? incrementalCopy = default, string destinationSnapshot = default, int? remainingRetentionDays = default, Azure.Storage.Blobs.Models.AccessTier? accessTier = default, DateTimeOffset? lastModified = default, Azure.Storage.Blobs.Models.ArchiveStatus? archiveStatus = default, string customerProvidedKeySha256 = default, string encryptionScope = default, Azure.ETag? eTag = default, DateTimeOffset? createdOn = default, DateTimeOffset? copyCompletedOn = default, DateTimeOffset? deletedOn = default, DateTimeOffset? accessTierChangedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties(bool accessTierInferred, string copyProgress, string contentType, string contentEncoding, string contentLanguage, unsigned int8[] contentHash, string contentDisposition, string cacheControl, valuetype System.Nullable`1&lt;int64&gt; blobSequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobType&gt; blobType, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, string copyId, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.CopyStatus&gt; copyStatus, class System.Uri copySource, valuetype System.Nullable`1&lt;int64&gt; contentLength, string copyStatusDescription, valuetype System.Nullable`1&lt;bool&gt; serverEncrypted, valuetype System.Nullable`1&lt;bool&gt; incrementalCopy, string destinationSnapshot, valuetype System.Nullable`1&lt;int32&gt; remainingRetentionDays, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.ArchiveStatus&gt; archiveStatus, string customerProvidedKeySha256, string encryptionScope, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; eTag, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; copyCompletedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; accessTierChangedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.String,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Uri,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobItemProperties (accessTierInferred As Boolean, Optional copyProgress As String = Nothing, Optional contentType As String = Nothing, Optional contentEncoding As String = Nothing, Optional contentLanguage As String = Nothing, Optional contentHash As Byte() = Nothing, Optional contentDisposition As String = Nothing, Optional cacheControl As String = Nothing, Optional blobSequenceNumber As Nullable(Of Long) = Nothing, Optional blobType As Nullable(Of BlobType) = Nothing, Optional leaseStatus As Nullable(Of LeaseStatus) = Nothing, Optional leaseState As Nullable(Of LeaseState) = Nothing, Optional leaseDuration As Nullable(Of LeaseDurationType) = Nothing, Optional copyId As String = Nothing, Optional copyStatus As Nullable(Of CopyStatus) = Nothing, Optional copySource As Uri = Nothing, Optional contentLength As Nullable(Of Long) = Nothing, Optional copyStatusDescription As String = Nothing, Optional serverEncrypted As Nullable(Of Boolean) = Nothing, Optional incrementalCopy As Nullable(Of Boolean) = Nothing, Optional destinationSnapshot As String = Nothing, Optional remainingRetentionDays As Nullable(Of Integer) = Nothing, Optional accessTier As Nullable(Of AccessTier) = Nothing, Optional lastModified As Nullable(Of DateTimeOffset) = Nothing, Optional archiveStatus As Nullable(Of ArchiveStatus) = Nothing, Optional customerProvidedKeySha256 As String = Nothing, Optional encryptionScope As String = Nothing, Optional eTag As Nullable(Of ETag) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional copyCompletedOn As Nullable(Of DateTimeOffset) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing, Optional accessTierChangedOn As Nullable(Of DateTimeOffset) = Nothing) As BlobItemProperties" />
      <MemberSignature Language="F#" Value="static member BlobItemProperties : bool * string * string * string * string * byte[] * string * string * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt; * Uri * Nullable&lt;int64&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt; * string * string * Nullable&lt;Azure.ETag&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Storage.Blobs.Models.BlobItemProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties (accessTierInferred, copyProgress, contentType, contentEncoding, contentLanguage, contentHash, contentDisposition, cacheControl, blobSequenceNumber, blobType, leaseStatus, leaseState, leaseDuration, copyId, copyStatus, copySource, contentLength, copyStatusDescription, serverEncrypted, incrementalCopy, destinationSnapshot, remainingRetentionDays, accessTier, lastModified, archiveStatus, customerProvidedKeySha256, encryptionScope, eTag, createdOn, copyCompletedOn, deletedOn, accessTierChangedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobItemProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessTierInferred" Type="System.Boolean" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="blobType" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt;" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="contentLength" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="serverEncrypted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="incrementalCopy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="remainingRetentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="archiveStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt;" />
        <Parameter Name="customerProvidedKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="copyCompletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="accessTierChangedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="accessTierInferred">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="serverEncrypted">To be added.</param>
        <param name="incrementalCopy">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="remainingRetentionDays">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="customerProvidedKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="createdOn">To be added.</param>
        <param name="copyCompletedOn">To be added.</param>
        <param name="deletedOn">To be added.</param>
        <param name="accessTierChangedOn">To be added.</param>
        <summary>
            Creates a new BlobItemProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobLease">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobLease BlobLease (Azure.ETag eTag, DateTimeOffset lastModified, string leaseId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobLease BlobLease(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, string leaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobLease(Azure.ETag,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobLease (eTag As ETag, lastModified As DateTimeOffset, leaseId As String) As BlobLease" />
      <MemberSignature Language="F#" Value="static member BlobLease : Azure.ETag * DateTimeOffset * string -&gt; Azure.Storage.Blobs.Models.BlobLease" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobLease (eTag, lastModified, leaseId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobLease</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="leaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="leaseId">To be added.</param>
        <summary>
            Creates a new BlobLease instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobProperties BlobProperties (DateTimeOffset lastModified, Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, Azure.Storage.Blobs.Models.LeaseState leaseState, Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, long contentLength, string destinationSnapshot, Azure.ETag eTag, byte[] contentHash, string contentEncoding, string contentDisposition, string contentLanguage, bool isIncrementalCopy, string cacheControl, Azure.Storage.Blobs.Models.CopyStatus copyStatus, long blobSequenceNumber, Uri copySource, string acceptRanges, string copyProgress, int blobCommittedBlockCount, string copyId, bool isServerEncrypted, string copyStatusDescription, string encryptionKeySha256, DateTimeOffset copyCompletedOn, string accessTier, Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string archiveStatus, DateTimeOffset createdOn, DateTimeOffset accessTierChangedOn, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobProperties BlobProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, valuetype Azure.Storage.Blobs.Models.LeaseState leaseState, valuetype Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, int64 contentLength, string destinationSnapshot, valuetype Azure.ETag eTag, unsigned int8[] contentHash, string contentEncoding, string contentDisposition, string contentLanguage, bool isIncrementalCopy, string cacheControl, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus, int64 blobSequenceNumber, class System.Uri copySource, string acceptRanges, string copyProgress, int32 blobCommittedBlockCount, string copyId, bool isServerEncrypted, string copyStatusDescription, string encryptionKeySha256, valuetype System.DateTimeOffset copyCompletedOn, string accessTier, valuetype Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string archiveStatus, valuetype System.DateTimeOffset createdOn, valuetype System.DateTimeOffset accessTierChangedOn, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.Boolean,System.String,Azure.Storage.Blobs.Models.CopyStatus,System.Int64,System.Uri,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobProperties (lastModified As DateTimeOffset, leaseDuration As LeaseDurationType, leaseState As LeaseState, leaseStatus As LeaseStatus, contentLength As Long, destinationSnapshot As String, eTag As ETag, contentHash As Byte(), contentEncoding As String, contentDisposition As String, contentLanguage As String, isIncrementalCopy As Boolean, cacheControl As String, copyStatus As CopyStatus, blobSequenceNumber As Long, copySource As Uri, acceptRanges As String, copyProgress As String, blobCommittedBlockCount As Integer, copyId As String, isServerEncrypted As Boolean, copyStatusDescription As String, encryptionKeySha256 As String, copyCompletedOn As DateTimeOffset, accessTier As String, blobType As BlobType, accessTierInferred As Boolean, metadata As IDictionary(Of String, String), archiveStatus As String, createdOn As DateTimeOffset, accessTierChangedOn As DateTimeOffset, contentType As String) As BlobProperties" />
      <MemberSignature Language="F#" Value="static member BlobProperties : DateTimeOffset * Azure.Storage.Blobs.Models.LeaseDurationType * Azure.Storage.Blobs.Models.LeaseState * Azure.Storage.Blobs.Models.LeaseStatus * int64 * string * Azure.ETag * byte[] * string * string * string * bool * string * Azure.Storage.Blobs.Models.CopyStatus * int64 * Uri * string * string * int * string * bool * string * string * DateTimeOffset * string * Azure.Storage.Blobs.Models.BlobType * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * DateTimeOffset * DateTimeOffset * string -&gt; Azure.Storage.Blobs.Models.BlobProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties (lastModified, leaseDuration, leaseState, leaseStatus, contentLength, destinationSnapshot, eTag, contentHash, contentEncoding, contentDisposition, contentLanguage, isIncrementalCopy, cacheControl, copyStatus, blobSequenceNumber, copySource, acceptRanges, copyProgress, blobCommittedBlockCount, copyId, isServerEncrypted, copyStatusDescription, encryptionKeySha256, copyCompletedOn, accessTier, blobType, accessTierInferred, metadata, archiveStatus, createdOn, accessTierChangedOn, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="leaseDuration" Type="Azure.Storage.Blobs.Models.LeaseDurationType" />
        <Parameter Name="leaseState" Type="Azure.Storage.Blobs.Models.LeaseState" />
        <Parameter Name="leaseStatus" Type="Azure.Storage.Blobs.Models.LeaseStatus" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="isIncrementalCopy" Type="System.Boolean" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="acceptRanges" Type="System.String" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="copyCompletedOn" Type="System.DateTimeOffset" />
        <Parameter Name="accessTier" Type="System.String" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="accessTierInferred" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="archiveStatus" Type="System.String" />
        <Parameter Name="createdOn" Type="System.DateTimeOffset" />
        <Parameter Name="accessTierChangedOn" Type="System.DateTimeOffset" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="isIncrementalCopy">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="acceptRanges">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="copyCompletedOn">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="accessTierInferred">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="createdOn">To be added.</param>
        <param name="accessTierChangedOn">To be added.</param>
        <param name="contentType">To be added.</param>
        <summary>
            Creates a new BlobProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobProperties BlobProperties (DateTimeOffset lastModified, Azure.Storage.Blobs.Models.LeaseState leaseState, Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, long contentLength, Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, Azure.ETag eTag, byte[] contentHash, string contentEncoding, string contentDisposition, string contentLanguage, string destinationSnapshot, string cacheControl, bool isIncrementalCopy, long blobSequenceNumber, Azure.Storage.Blobs.Models.CopyStatus copyStatus, string acceptRanges, Uri copySource, int blobCommittedBlockCount, string copyProgress, bool isServerEncrypted, string copyId, string encryptionKeySha256, string copyStatusDescription, string encryptionScope, DateTimeOffset copyCompletedOn, string accessTier, Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string archiveStatus, DateTimeOffset createdOn, DateTimeOffset accessTierChangedOn, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobProperties BlobProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.Storage.Blobs.Models.LeaseState leaseState, valuetype Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, int64 contentLength, valuetype Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, valuetype Azure.ETag eTag, unsigned int8[] contentHash, string contentEncoding, string contentDisposition, string contentLanguage, string destinationSnapshot, string cacheControl, bool isIncrementalCopy, int64 blobSequenceNumber, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus, string acceptRanges, class System.Uri copySource, int32 blobCommittedBlockCount, string copyProgress, bool isServerEncrypted, string copyId, string encryptionKeySha256, string copyStatusDescription, string encryptionScope, valuetype System.DateTimeOffset copyCompletedOn, string accessTier, valuetype Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string archiveStatus, valuetype System.DateTimeOffset createdOn, valuetype System.DateTimeOffset accessTierChangedOn, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int64,Azure.Storage.Blobs.Models.CopyStatus,System.String,System.Uri,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobProperties (lastModified As DateTimeOffset, leaseState As LeaseState, leaseStatus As LeaseStatus, contentLength As Long, leaseDuration As LeaseDurationType, eTag As ETag, contentHash As Byte(), contentEncoding As String, contentDisposition As String, contentLanguage As String, destinationSnapshot As String, cacheControl As String, isIncrementalCopy As Boolean, blobSequenceNumber As Long, copyStatus As CopyStatus, acceptRanges As String, copySource As Uri, blobCommittedBlockCount As Integer, copyProgress As String, isServerEncrypted As Boolean, copyId As String, encryptionKeySha256 As String, copyStatusDescription As String, encryptionScope As String, copyCompletedOn As DateTimeOffset, accessTier As String, blobType As BlobType, accessTierInferred As Boolean, metadata As IDictionary(Of String, String), archiveStatus As String, createdOn As DateTimeOffset, accessTierChangedOn As DateTimeOffset, contentType As String) As BlobProperties" />
      <MemberSignature Language="F#" Value="static member BlobProperties : DateTimeOffset * Azure.Storage.Blobs.Models.LeaseState * Azure.Storage.Blobs.Models.LeaseStatus * int64 * Azure.Storage.Blobs.Models.LeaseDurationType * Azure.ETag * byte[] * string * string * string * string * string * bool * int64 * Azure.Storage.Blobs.Models.CopyStatus * string * Uri * int * string * bool * string * string * string * string * DateTimeOffset * string * Azure.Storage.Blobs.Models.BlobType * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * DateTimeOffset * DateTimeOffset * string -&gt; Azure.Storage.Blobs.Models.BlobProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties (lastModified, leaseState, leaseStatus, contentLength, leaseDuration, eTag, contentHash, contentEncoding, contentDisposition, contentLanguage, destinationSnapshot, cacheControl, isIncrementalCopy, blobSequenceNumber, copyStatus, acceptRanges, copySource, blobCommittedBlockCount, copyProgress, isServerEncrypted, copyId, encryptionKeySha256, copyStatusDescription, encryptionScope, copyCompletedOn, accessTier, blobType, accessTierInferred, metadata, archiveStatus, createdOn, accessTierChangedOn, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="leaseState" Type="Azure.Storage.Blobs.Models.LeaseState" />
        <Parameter Name="leaseStatus" Type="Azure.Storage.Blobs.Models.LeaseStatus" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="leaseDuration" Type="Azure.Storage.Blobs.Models.LeaseDurationType" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="isIncrementalCopy" Type="System.Boolean" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
        <Parameter Name="acceptRanges" Type="System.String" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
        <Parameter Name="copyCompletedOn" Type="System.DateTimeOffset" />
        <Parameter Name="accessTier" Type="System.String" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="accessTierInferred" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="archiveStatus" Type="System.String" />
        <Parameter Name="createdOn" Type="System.DateTimeOffset" />
        <Parameter Name="accessTierChangedOn" Type="System.DateTimeOffset" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="isIncrementalCopy">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="acceptRanges">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <param name="copyCompletedOn">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="accessTierInferred">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="createdOn">To be added.</param>
        <param name="accessTierChangedOn">To be added.</param>
        <param name="contentType">To be added.</param>
        <summary>
            Creates a new BlobProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobServiceStatistics">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobServiceStatistics BlobServiceStatistics (Azure.Storage.Blobs.Models.BlobGeoReplication geoReplication = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobServiceStatistics BlobServiceStatistics(class Azure.Storage.Blobs.Models.BlobGeoReplication geoReplication) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics(Azure.Storage.Blobs.Models.BlobGeoReplication)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobServiceStatistics (Optional geoReplication As BlobGeoReplication = Nothing) As BlobServiceStatistics" />
      <MemberSignature Language="F#" Value="static member BlobServiceStatistics : Azure.Storage.Blobs.Models.BlobGeoReplication -&gt; Azure.Storage.Blobs.Models.BlobServiceStatistics" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics geoReplication" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobServiceStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geoReplication" Type="Azure.Storage.Blobs.Models.BlobGeoReplication" />
      </Parameters>
      <Docs>
        <param name="geoReplication">To be added.</param>
        <summary>
            Creates a new BlobServiceStatistics instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobSnapshotInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobSnapshotInfo BlobSnapshotInfo (string snapshot, Azure.ETag eTag, DateTimeOffset lastModified, bool isServerEncrypted);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobSnapshotInfo BlobSnapshotInfo(string snapshot, valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, bool isServerEncrypted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobSnapshotInfo (snapshot As String, eTag As ETag, lastModified As DateTimeOffset, isServerEncrypted As Boolean) As BlobSnapshotInfo" />
      <MemberSignature Language="F#" Value="static member BlobSnapshotInfo : string * Azure.ETag * DateTimeOffset * bool -&gt; Azure.Storage.Blobs.Models.BlobSnapshotInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo (snapshot, eTag, lastModified, isServerEncrypted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobSnapshotInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <summary>
            Creates a new BlobSnapshotInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlockInfo BlockInfo (byte[] contentHash, byte[] contentCrc64, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlockInfo BlockInfo(unsigned int8[] contentHash, unsigned int8[] contentCrc64, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockInfo (contentHash As Byte(), contentCrc64 As Byte(), encryptionKeySha256 As String) As BlockInfo" />
      <MemberSignature Language="F#" Value="static member BlockInfo : byte[] * byte[] * string -&gt; Azure.Storage.Blobs.Models.BlockInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo (contentHash, contentCrc64, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlockInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new BlockInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlockInfo BlockInfo (byte[] contentHash, byte[] contentCrc64, string encryptionKeySha256, string encryptionScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlockInfo BlockInfo(unsigned int8[] contentHash, unsigned int8[] contentCrc64, string encryptionKeySha256, string encryptionScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockInfo (contentHash As Byte(), contentCrc64 As Byte(), encryptionKeySha256 As String, encryptionScope As String) As BlockInfo" />
      <MemberSignature Language="F#" Value="static member BlockInfo : byte[] * byte[] * string * string -&gt; Azure.Storage.Blobs.Models.BlockInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo (contentHash, contentCrc64, encryptionKeySha256, encryptionScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlockInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <summary>
            Creates a new BlockInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockList">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlockList BlockList (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobBlock&gt; committedBlocks = default, System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobBlock&gt; uncommittedBlocks = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlockList BlockList(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobBlock&gt; committedBlocks, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobBlock&gt; uncommittedBlocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockList (Optional committedBlocks As IEnumerable(Of BlobBlock) = Nothing, Optional uncommittedBlocks As IEnumerable(Of BlobBlock) = Nothing) As BlockList" />
      <MemberSignature Language="F#" Value="static member BlockList : seq&lt;Azure.Storage.Blobs.Models.BlobBlock&gt; * seq&lt;Azure.Storage.Blobs.Models.BlobBlock&gt; -&gt; Azure.Storage.Blobs.Models.BlockList" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList (committedBlocks, uncommittedBlocks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlockList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="committedBlocks" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobBlock&gt;" />
        <Parameter Name="uncommittedBlocks" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.BlobBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="committedBlocks">To be added.</param>
        <param name="uncommittedBlocks">To be added.</param>
        <summary>
            Creates a new BlockList instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageBlobInfo PageBlobInfo (Azure.ETag eTag, DateTimeOffset lastModified, long blobSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageBlobInfo PageBlobInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, int64 blobSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo(Azure.ETag,System.DateTimeOffset,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageBlobInfo (eTag As ETag, lastModified As DateTimeOffset, blobSequenceNumber As Long) As PageBlobInfo" />
      <MemberSignature Language="F#" Value="static member PageBlobInfo : Azure.ETag * DateTimeOffset * int64 -&gt; Azure.Storage.Blobs.Models.PageBlobInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo (eTag, lastModified, blobSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageBlobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <summary>
            Creates a new PageBlobInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageInfo PageInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] contentCrc64, long blobSequenceNumber, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageInfo PageInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] contentCrc64, int64 blobSequenceNumber, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), contentCrc64 As Byte(), blobSequenceNumber As Long, encryptionKeySha256 As String) As PageInfo" />
      <MemberSignature Language="F#" Value="static member PageInfo : Azure.ETag * DateTimeOffset * byte[] * byte[] * int64 * string -&gt; Azure.Storage.Blobs.Models.PageInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo (eTag, lastModified, contentHash, contentCrc64, blobSequenceNumber, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new PageInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageInfo PageInfo (Azure.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] contentCrc64, long blobSequenceNumber, string encryptionKeySha256, string encryptionScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageInfo PageInfo(valuetype Azure.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] contentCrc64, int64 blobSequenceNumber, string encryptionKeySha256, string encryptionScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageInfo (eTag As ETag, lastModified As DateTimeOffset, contentHash As Byte(), contentCrc64 As Byte(), blobSequenceNumber As Long, encryptionKeySha256 As String, encryptionScope As String) As PageInfo" />
      <MemberSignature Language="F#" Value="static member PageInfo : Azure.ETag * DateTimeOffset * byte[] * byte[] * int64 * string * string -&gt; Azure.Storage.Blobs.Models.PageInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo (eTag, lastModified, contentHash, contentCrc64, blobSequenceNumber, encryptionKeySha256, encryptionScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="encryptionScope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentCrc64">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="encryptionScope">To be added.</param>
        <summary>
            Creates a new PageInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRangesInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageRangesInfo PageRangesInfo (DateTimeOffset lastModified, Azure.ETag eTag, long blobContentLength, System.Collections.Generic.IEnumerable&lt;Azure.HttpRange&gt; pageRanges, System.Collections.Generic.IEnumerable&lt;Azure.HttpRange&gt; clearRanges);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageRangesInfo PageRangesInfo(valuetype System.DateTimeOffset lastModified, valuetype Azure.ETag eTag, int64 blobContentLength, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.HttpRange&gt; pageRanges, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.HttpRange&gt; clearRanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange},System.Collections.Generic.IEnumerable{Azure.HttpRange})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageRangesInfo (lastModified As DateTimeOffset, eTag As ETag, blobContentLength As Long, pageRanges As IEnumerable(Of HttpRange), clearRanges As IEnumerable(Of HttpRange)) As PageRangesInfo" />
      <MemberSignature Language="F#" Value="static member PageRangesInfo : DateTimeOffset * Azure.ETag * int64 * seq&lt;Azure.HttpRange&gt; * seq&lt;Azure.HttpRange&gt; -&gt; Azure.Storage.Blobs.Models.PageRangesInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo (lastModified, eTag, blobContentLength, pageRanges, clearRanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageRangesInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="eTag" Type="Azure.ETag" />
        <Parameter Name="blobContentLength" Type="System.Int64" />
        <Parameter Name="pageRanges" Type="System.Collections.Generic.IEnumerable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="clearRanges" Type="System.Collections.Generic.IEnumerable&lt;Azure.HttpRange&gt;" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="blobContentLength">To be added.</param>
        <param name="pageRanges">To be added.</param>
        <param name="clearRanges">To be added.</param>
        <summary>
            Creates a new PageRangesInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDelegationKey">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.UserDelegationKey UserDelegationKey (string signedObjectId, string signedTenantId, string signedService, string signedVersion, string value, DateTimeOffset signedExpiresOn, DateTimeOffset signedStartsOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.UserDelegationKey UserDelegationKey(string signedObjectId, string signedTenantId, string signedService, string signedVersion, string value, valuetype System.DateTimeOffset signedExpiresOn, valuetype System.DateTimeOffset signedStartsOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey(System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserDelegationKey (signedObjectId As String, signedTenantId As String, signedService As String, signedVersion As String, value As String, signedExpiresOn As DateTimeOffset, signedStartsOn As DateTimeOffset) As UserDelegationKey" />
      <MemberSignature Language="F#" Value="static member UserDelegationKey : string * string * string * string * string * DateTimeOffset * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.UserDelegationKey" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey (signedObjectId, signedTenantId, signedService, signedVersion, value, signedExpiresOn, signedStartsOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.UserDelegationKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedObjectId" Type="System.String" />
        <Parameter Name="signedTenantId" Type="System.String" />
        <Parameter Name="signedService" Type="System.String" />
        <Parameter Name="signedVersion" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="signedExpiresOn" Type="System.DateTimeOffset" />
        <Parameter Name="signedStartsOn" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="signedObjectId">To be added.</param>
        <param name="signedTenantId">To be added.</param>
        <param name="signedService">To be added.</param>
        <param name="signedVersion">To be added.</param>
        <param name="value">To be added.</param>
        <param name="signedExpiresOn">To be added.</param>
        <param name="signedStartsOn">To be added.</param>
        <summary>
            Creates a new UserDelegationKey instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
