<Type Name="FormTrainingClient" FullName="Azure.AI.FormRecognizer.Training.FormTrainingClient">
  <TypeSignature Language="C#" Value="public class FormTrainingClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormTrainingClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FormTrainingClient" />
  <TypeSignature Language="F#" Value="type FormTrainingClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use to connect with the Form Recognizer Azure Cognitive Service to train models from
            custom forms.  It also supports listing and deleting trained models, as well as accessing account
            properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormTrainingClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.FormRecognizer.FormRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.FormRecognizer.FormRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.FormRecognizer.FormRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As FormRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.AzureKeyCredential * Azure.AI.FormRecognizer.FormRecognizerClientOptions -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.FormRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.FormRecognizer.FormRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.FormRecognizer.FormRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.FormRecognizer.FormRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As FormRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.Core.TokenCredential * Azure.AI.FormRecognizer.FormRecognizerClientOptions -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.FormRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.DeleteModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModel (modelId As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="formTrainingClient.DeleteModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModelAsync (modelId As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="formTrainingClient.DeleteModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt; GetAccountProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.AccountProperties&gt; GetAccountProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetAccountProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountProperties (Optional cancellationToken As CancellationToken = null) As Response(Of AccountProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&#xA;override this.GetAccountProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;" Usage="formTrainingClient.GetAccountProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of models trained on this Cognitive Services Account and the account limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.Training.AccountProperties" /> containing
            the account properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt; GetAccountPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt; GetAccountPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountPropertiesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of AccountProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetAccountPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;&#xA;override this.GetAccountPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;" Usage="formTrainingClient.GetAccountPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of models trained on this Cognitive Services Account and the account limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.Training.AccountProperties" /> containing
            the account properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyAuthorization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt; GetCopyAuthorization (string resourceId, string resourceRegion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CopyAuthorization&gt; GetCopyAuthorization(string resourceId, string resourceRegion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCopyAuthorization(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorization (resourceId As String, resourceRegion As String, Optional cancellationToken As CancellationToken = null) As Response(Of CopyAuthorization)" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorization : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&#xA;override this.GetCopyAuthorization : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;" Usage="formTrainingClient.GetCopyAuthorization (resourceId, resourceRegion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="resourceRegion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId">Azure Resource Id of the target Form Recognizer resource where the model will be copied to.
            This information can be found in the Properties section of the Form Recognizer resource in the Azure Portal.</param>
        <param name="resourceRegion">Location of the target Form Recognizer resource.
            This information can be found in the Keys and Endpoint section of the Form Recognizer resource in the Azure Portal.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Generate authorization for copying a custom model into the target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to <see cref="T:Azure.AI.FormRecognizer.Training.CopyAuthorization" /> containing
            the authorization information necessary to copy a custom model into a target Form Recognizer resource.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCopyAuthorizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&gt; GetCopyAuthorizationAsync (string resourceId, string resourceRegion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&gt; GetCopyAuthorizationAsync(string resourceId, string resourceRegion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCopyAuthorizationAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCopyAuthorizationAsync (resourceId As String, resourceRegion As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CopyAuthorization))" />
      <MemberSignature Language="F#" Value="abstract member GetCopyAuthorizationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&gt;&#xA;override this.GetCopyAuthorizationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&gt;" Usage="formTrainingClient.GetCopyAuthorizationAsync (resourceId, resourceRegion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CopyAuthorization&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="resourceRegion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId">Azure Resource Id of the target Form Recognizer resource where the model will be copied to.
            This information can be found in the Properties section of the Form Recognizer resource in the Azure Portal.</param>
        <param name="resourceRegion">Location of the target Form Recognizer resource.
            This information can be found in the Keys and Endpoint section of the Form Recognizer resource in the Azure Portal.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Generate authorization for copying a custom model into the target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to <see cref="T:Azure.AI.FormRecognizer.Training.CopyAuthorization" /> containing
            the authorization information necessary to copy a custom model into a target Form Recognizer resource.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt; GetCustomModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModel&gt; GetCustomModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModel (modelId As String, Optional cancellationToken As CancellationToken = null) As Response(Of CustomFormModel)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&#xA;override this.GetCustomModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;" Usage="formTrainingClient.GetCustomModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a description of a custom model, including the types of forms it can recognize and the fields it will extract for each form type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModel" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt; GetCustomModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt; GetCustomModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModelAsync (modelId As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CustomFormModel))" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;&#xA;override this.GetCustomModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;" Usage="formTrainingClient.GetCustomModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a description of a custom model, including the types of forms it can recognize and the fields it will extract for each form type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModel" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModels">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetCustomModels (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetCustomModels(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModels(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModels (Optional cancellationToken As CancellationToken = null) As Pageable(Of CustomFormModelInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;&#xA;override this.GetCustomModels : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;" Usage="formTrainingClient.GetCustomModels cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models trained on this Cognitive Services Account
            and their training status.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModelInfo" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModelsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetCustomModelsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetCustomModelsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModelsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModelsAsync (Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of CustomFormModelInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;&#xA;override this.GetCustomModelsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;" Usage="formTrainingClient.GetCustomModelsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models trained on this Cognitive Services Account
            and their training status.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModelInfo" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRecognizerClient">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.FormRecognizerClient GetFormRecognizerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.FormRecognizerClient GetFormRecognizerClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetFormRecognizerClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormRecognizerClient () As FormRecognizerClient" />
      <MemberSignature Language="F#" Value="abstract member GetFormRecognizerClient : unit -&gt; Azure.AI.FormRecognizer.FormRecognizerClient&#xA;override this.GetFormRecognizerClient : unit -&gt; Azure.AI.FormRecognizer.FormRecognizerClient" Usage="formTrainingClient.GetFormRecognizerClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.FormRecognizerClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an instance of a <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> that shares the same endpoint, the same
            credentials and the same set of <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClientOptions" /> this client has.
            </summary>
        <returns>A new instance of a <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyModel">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Training.CopyModelOperation StartCopyModel (string modelId, Azure.AI.FormRecognizer.Training.CopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Training.CopyModelOperation StartCopyModel(string modelId, class Azure.AI.FormRecognizer.Training.CopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartCopyModel(System.String,Azure.AI.FormRecognizer.Training.CopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyModel (modelId As String, target As CopyAuthorization, Optional cancellationToken As CancellationToken = null) As CopyModelOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCopyModel : string * Azure.AI.FormRecognizer.Training.CopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.CopyModelOperation&#xA;override this.StartCopyModel : string * Azure.AI.FormRecognizer.Training.CopyAuthorization * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.CopyModelOperation" Usage="formTrainingClient.StartCopyModel (modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Training.CopyModelOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.Training.CopyAuthorization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.Training.CopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Training.CopyModelOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Training.CopyModelOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.CopyModelOperation&gt; StartCopyModelAsync (string modelId, Azure.AI.FormRecognizer.Training.CopyAuthorization target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Training.CopyModelOperation&gt; StartCopyModelAsync(string modelId, class Azure.AI.FormRecognizer.Training.CopyAuthorization target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartCopyModelAsync(System.String,Azure.AI.FormRecognizer.Training.CopyAuthorization,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyModelAsync (modelId As String, target As CopyAuthorization, Optional cancellationToken As CancellationToken = null) As Task(Of CopyModelOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyModelAsync : string * Azure.AI.FormRecognizer.Training.CopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.CopyModelOperation&gt;&#xA;override this.StartCopyModelAsync : string * Azure.AI.FormRecognizer.Training.CopyAuthorization * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.CopyModelOperation&gt;" Usage="formTrainingClient.StartCopyModelAsync (modelId, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.CopyModelOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="target" Type="Azure.AI.FormRecognizer.Training.CopyAuthorization" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">Model identifier of the model to copy to the target Form Recognizer resource.</param>
        <param name="target">A <see cref="T:Azure.AI.FormRecognizer.Training.CopyAuthorization" /> with the copy authorization to the target Form Recognizer resource.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Copy a custom model stored in this resource (the source) to the user specified
            target Form Recognizer resource.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Training.CopyModelOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Training.CopyModelOperation.Value" /> upon successful
            completion will contain meta-data about the model copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTraining">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Training.TrainingOperation StartTraining (Uri trainingFilesUri, bool useTrainingLabels, Azure.AI.FormRecognizer.Training.TrainingFileFilter trainingFileFilter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Training.TrainingOperation StartTraining(class System.Uri trainingFilesUri, bool useTrainingLabels, class Azure.AI.FormRecognizer.Training.TrainingFileFilter trainingFileFilter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartTraining(System.Uri,System.Boolean,Azure.AI.FormRecognizer.Training.TrainingFileFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTraining (trainingFilesUri As Uri, useTrainingLabels As Boolean, Optional trainingFileFilter As TrainingFileFilter = null, Optional cancellationToken As CancellationToken = null) As TrainingOperation" />
      <MemberSignature Language="F#" Value="abstract member StartTraining : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.TrainingOperation&#xA;override this.StartTraining : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.TrainingOperation" Usage="formTrainingClient.StartTraining (trainingFilesUri, useTrainingLabels, trainingFileFilter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Training.TrainingOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainingFilesUri" Type="System.Uri" />
        <Parameter Name="useTrainingLabels" Type="System.Boolean" />
        <Parameter Name="trainingFileFilter" Type="Azure.AI.FormRecognizer.Training.TrainingFileFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="trainingFilesUri">An externally accessible Azure storage blob container Uri.
            For more information see <a href="https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data" />.</param>
        <param name="useTrainingLabels">If <c>true</c>, use a label file created in the &lt;link-to-label-tool-doc&gt; to provide training-time labels for training a model. If <c>false</c>, the model will be trained from forms only.</param>
        <param name="trainingFileFilter">Filter to apply to the documents in the source path for training.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Trains a model from a collection of custom forms in a blob storage container.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" /> to wait on this long-running operation. Its <see cref="P:Azure.AI.FormRecognizer.Training.TrainingOperation.Value" /> upon successful
            completion will contain meta-data about the trained model.</para>
          <para>Even if training fails, a model is created in the Form Recognizer account with an "invalid" status.
            A <see cref="T:Azure.RequestFailedException" /> will be raised containing the modelId to access this invalid model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrainingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt; StartTrainingAsync (Uri trainingFilesUri, bool useTrainingLabels, Azure.AI.FormRecognizer.Training.TrainingFileFilter trainingFileFilter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Training.TrainingOperation&gt; StartTrainingAsync(class System.Uri trainingFilesUri, bool useTrainingLabels, class Azure.AI.FormRecognizer.Training.TrainingFileFilter trainingFileFilter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartTrainingAsync(System.Uri,System.Boolean,Azure.AI.FormRecognizer.Training.TrainingFileFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTrainingAsync (trainingFilesUri As Uri, useTrainingLabels As Boolean, Optional trainingFileFilter As TrainingFileFilter = null, Optional cancellationToken As CancellationToken = null) As Task(Of TrainingOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartTrainingAsync : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;&#xA;override this.StartTrainingAsync : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;" Usage="formTrainingClient.StartTrainingAsync (trainingFilesUri, useTrainingLabels, trainingFileFilter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainingFilesUri" Type="System.Uri" />
        <Parameter Name="useTrainingLabels" Type="System.Boolean" />
        <Parameter Name="trainingFileFilter" Type="Azure.AI.FormRecognizer.Training.TrainingFileFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="trainingFilesUri">An externally accessible Azure storage blob container Uri.
            For more information see <a href="https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data" />.</param>
        <param name="useTrainingLabels">If <c>true</c>, use a label file created in the &lt;link-to-label-tool-doc&gt; to provide training-time labels for training a model. If <c>false</c>, the model will be trained from forms only.</param>
        <param name="trainingFileFilter">Filter to apply to the documents in the source path for training.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Trains a model from a collection of custom forms in a blob storage container.
            </summary>
        <returns>
          <para>A <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" /> to wait on this long-running operation. Its <see cref="P:Azure.AI.FormRecognizer.Training.TrainingOperation.Value" /> upon successful
            completion will contain meta-data about the trained model.</para>
          <para>Even if training fails, a model is created in the Form Recognizer account with an "invalid" status.
            A <see cref="T:Azure.RequestFailedException" /> will be raised containing the modelId to access this invalid model.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
