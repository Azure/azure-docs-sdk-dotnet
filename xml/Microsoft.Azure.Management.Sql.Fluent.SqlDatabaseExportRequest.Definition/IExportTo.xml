<Type Name="IExportTo" FullName="Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IExportTo">
  <TypeSignature Language="C#" Value="public interface IExportTo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExportTo" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IExportTo" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExportTo" />
  <TypeSignature Language="F#" Value="type IExportTo = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Sets the storage URI to use.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportTo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithStorageTypeAndKey ExportTo (string storageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithStorageTypeAndKey ExportTo(string storageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IExportTo.ExportTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportTo (storageUri As String) As IWithStorageTypeAndKey" />
      <MemberSignature Language="F#" Value="abstract member ExportTo : string -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithStorageTypeAndKey" Usage="iExportTo.ExportTo storageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithStorageTypeAndKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageUri">The storage URI to use.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next definition stage.</return>
      </Docs>
    </Member>
    <Member MemberName="ExportTo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword ExportTo (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable, string containerName, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword ExportTo(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable, string containerName, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IExportTo.ExportTo(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportTo (storageAccountCreatable As ICreatable(Of IStorageAccount), containerName As String, fileName As String) As IWithAuthenticationTypeAndLoginPassword" />
      <MemberSignature Language="F#" Value="abstract member ExportTo : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; * string * string -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword" Usage="iExportTo.ExportTo (storageAccountCreatable, containerName, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountCreatable" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt;" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccountCreatable">A storage account to be created as part of this execution flow.</param>
        <param name="containerName">The container name within the storage account to use.</param>
        <param name="fileName">The exported database file name.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Next definition stage.</return>
      </Docs>
    </Member>
    <Member MemberName="ExportTo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword ExportTo (Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount, string containerName, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword ExportTo(class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount, string containerName, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IExportTo.ExportTo(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportTo (storageAccount As IStorageAccount, containerName As String, fileName As String) As IWithAuthenticationTypeAndLoginPassword" />
      <MemberSignature Language="F#" Value="abstract member ExportTo : Microsoft.Azure.Management.Storage.Fluent.IStorageAccount * string * string -&gt; Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword" Usage="iExportTo.ExportTo (storageAccount, containerName, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Sql.Fluent.SqlDatabaseExportRequest.Definition.IWithAuthenticationTypeAndLoginPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccount" Type="Microsoft.Azure.Management.Storage.Fluent.IStorageAccount" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccount">An existing storage account to be used.</param>
        <param name="containerName">The container name within the storage account to use.</param>
        <param name="fileName">The exported database file name.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>