<Type Name="ArmResource" FullName="Azure.ResourceManager.ArmResource">
  <TypeSignature Language="C#" Value="public abstract class ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArmResource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArmResource" />
  <TypeSignature Language="F#" Value="type ArmResource = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing the operations that can be performed over a specific resource.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArmResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.ResourceManager.ArmResource" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ArmResource (Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (client As ArmClient, id As ResourceIdentifier)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.ArmResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArmResource" Usage="new Azure.ResourceManager.ArmResource (client, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> this resource client should be created from. </param>
        <param name="id"> The identifier of the resource that is the target of operations. </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.ResourceManager.ArmResource" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUseTagResource">
      <MemberSignature Language="C#" Value="protected virtual bool CanUseTagResource (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanUseTagResource(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.CanUseTagResource(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanUseTagResource (Optional cancellationToken As CancellationToken = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanUseTagResource : System.Threading.CancellationToken -&gt; bool&#xA;override this.CanUseTagResource : System.Threading.CancellationToken -&gt; bool" Usage="armResource.CanUseTagResource cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Checks to see if the TagResource API is deployed in the current environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUseTagResourceAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; CanUseTagResourceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; CanUseTagResourceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.CanUseTagResourceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanUseTagResourceAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CanUseTagResourceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.CanUseTagResourceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="armResource.CanUseTagResourceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Checks to see if the TagResource API is deployed in the current environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="protected internal virtual Azure.ResourceManager.ArmClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ArmClient Client" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ArmResource.Client" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Client As ArmClient" />
      <MemberSignature Language="F#" Value="member this.Client : Azure.ResourceManager.ArmClient" Usage="Azure.ResourceManager.ArmResource.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.ResourceManager.ArmClient" /> this resource client was created from.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagnostics">
      <MemberSignature Language="C#" Value="protected internal Azure.Core.DiagnosticsOptions Diagnostics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.DiagnosticsOptions Diagnostics" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ArmResource.Diagnostics" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Diagnostics As DiagnosticsOptions" />
      <MemberSignature Language="F#" Value="member this.Diagnostics : Azure.Core.DiagnosticsOptions" Usage="Azure.ResourceManager.ArmResource.Diagnostics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.DiagnosticsOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the diagnostic options for this resource client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="protected internal Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ArmResource.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.ResourceManager.ArmResource.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the base uri for this resource client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt; GetAvailableLocations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.AzureLocation&gt;&gt; GetAvailableLocations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetAvailableLocations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocations (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IEnumerable(Of AzureLocation))" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocations : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;&#xA;override this.GetAvailableLocations : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;" Usage="armResource.GetAvailableLocations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Lists all available geo-locations.
            </summary>
        <returns> A collection of location that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt;&gt; GetAvailableLocationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.AzureLocation&gt;&gt;&gt; GetAvailableLocationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetAvailableLocationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IEnumerable(Of AzureLocation)))" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;&gt;&#xA;override this.GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;&gt;" Usage="armResource.GetAvailableLocationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Lists all available geo-locations.
            </summary>
        <returns> A collection of location that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedClient&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetCachedClient&lt;T&gt; (Func&lt;Azure.ResourceManager.ArmClient,T&gt; clientFactory) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetCachedClient&lt;class T&gt;(class System.Func`2&lt;class Azure.ResourceManager.ArmClient, !!T&gt; clientFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetCachedClient``1(System.Func{Azure.ResourceManager.ArmClient,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCachedClient(Of T As Class) (clientFactory As Func(Of ArmClient, T)) As T" />
      <MemberSignature Language="F#" Value="abstract member GetCachedClient : Func&lt;Azure.ResourceManager.ArmClient, 'T (requires 'T : null)&gt; -&gt; 'T (requires 'T : null)&#xA;override this.GetCachedClient : Func&lt;Azure.ResourceManager.ArmClient, 'T (requires 'T : null)&gt; -&gt; 'T (requires 'T : null)" Usage="armResource.GetCachedClient clientFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="clientFactory" Type="System.Func&lt;Azure.ResourceManager.ArmClient,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of client to get. </typeparam>
        <param name="clientFactory"> The constructor factory for the client. </param>
        <summary>
            Gets a cached client to use for extension methods.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagementLock">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt; GetManagementLock (string lockName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ManagementLockResource&gt; GetManagementLock(string lockName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetManagementLock(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementLock (lockName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagementLockResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagementLock : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;&#xA;override this.GetManagementLock : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;" Usage="armResource.GetManagementLock (lockName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockName"> The name of lock. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a management lock by scope.
            Request Path: /{scope}/providers/Microsoft.Authorization/locks/{lockName}
            Operation Id: ManagementLocks_GetByScope
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="lockName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lockName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagementLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;&gt; GetManagementLockAsync (string lockName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ManagementLockResource&gt;&gt; GetManagementLockAsync(string lockName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetManagementLockAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementLockAsync (lockName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagementLockResource))" />
      <MemberSignature Language="F#" Value="abstract member GetManagementLockAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;&gt;&#xA;override this.GetManagementLockAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;&gt;" Usage="armResource.GetManagementLockAsync (lockName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockName"> The name of lock. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a management lock by scope.
            Request Path: /{scope}/providers/Microsoft.Authorization/locks/{lockName}
            Operation Id: ManagementLocks_GetByScope
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="lockName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lockName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagementLocks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ManagementLockCollection GetManagementLocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ManagementLockCollection GetManagementLocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetManagementLocks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementLocks () As ManagementLockCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagementLocks : unit -&gt; Azure.ResourceManager.Resources.ManagementLockCollection&#xA;override this.GetManagementLocks : unit -&gt; Azure.ResourceManager.Resources.ManagementLockCollection" Usage="armResource.GetManagementLocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ManagementLockCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagementLockResources in the ArmResource. </summary>
        <returns> An object representing collection of ManagementLockResources and their operations over a ManagementLockResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt; GetPolicyAssignment (string policyAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.PolicyAssignmentResource&gt; GetPolicyAssignment(string policyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyAssignment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAssignment (policyAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PolicyAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&#xA;override this.GetPolicyAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;" Usage="armResource.GetPolicyAssignment (policyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyAssignmentName"> The name of the policy assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves a single policy assignment, given its name and the scope it was created at.
            Request Path: /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}
            Operation Id: PolicyAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&gt; GetPolicyAssignmentAsync (string policyAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&gt; GetPolicyAssignmentAsync(string policyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyAssignmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAssignmentAsync (policyAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PolicyAssignmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&gt;&#xA;override this.GetPolicyAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&gt;" Usage="armResource.GetPolicyAssignmentAsync (policyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyAssignmentName"> The name of the policy assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves a single policy assignment, given its name and the scope it was created at.
            Request Path: /{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}
            Operation Id: PolicyAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.PolicyAssignmentCollection GetPolicyAssignments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.PolicyAssignmentCollection GetPolicyAssignments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAssignments () As PolicyAssignmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAssignments : unit -&gt; Azure.ResourceManager.Resources.PolicyAssignmentCollection&#xA;override this.GetPolicyAssignments : unit -&gt; Azure.ResourceManager.Resources.PolicyAssignmentCollection" Usage="armResource.GetPolicyAssignments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.PolicyAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PolicyAssignmentResources in the ArmResource. </summary>
        <returns> An object representing collection of PolicyAssignmentResources and their operations over a PolicyAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyExemption">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt; GetPolicyExemption (string policyExemptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.PolicyExemptionResource&gt; GetPolicyExemption(string policyExemptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyExemption(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyExemption (policyExemptionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PolicyExemptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyExemption : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&#xA;override this.GetPolicyExemption : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;" Usage="armResource.GetPolicyExemption (policyExemptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyExemptionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="policyExemptionName"> The name of the policy exemption to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves a single policy exemption, given its name and the scope it was created at.
            Request Path: /{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}
            Operation Id: PolicyExemptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyExemptionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyExemptionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyExemptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&gt; GetPolicyExemptionAsync (string policyExemptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&gt; GetPolicyExemptionAsync(string policyExemptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyExemptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyExemptionAsync (policyExemptionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PolicyExemptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyExemptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&gt;&#xA;override this.GetPolicyExemptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&gt;" Usage="armResource.GetPolicyExemptionAsync (policyExemptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.PolicyExemptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyExemptionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="policyExemptionName"> The name of the policy exemption to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves a single policy exemption, given its name and the scope it was created at.
            Request Path: /{scope}/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}
            Operation Id: PolicyExemptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyExemptionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyExemptionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyExemptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.PolicyExemptionCollection GetPolicyExemptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.PolicyExemptionCollection GetPolicyExemptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetPolicyExemptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyExemptions () As PolicyExemptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyExemptions : unit -&gt; Azure.ResourceManager.Resources.PolicyExemptionCollection&#xA;override this.GetPolicyExemptions : unit -&gt; Azure.ResourceManager.Resources.PolicyExemptionCollection" Usage="armResource.GetPolicyExemptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.PolicyExemptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PolicyExemptionResources in the ArmResource. </summary>
        <returns> An object representing collection of PolicyExemptionResources and their operations over a PolicyExemptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TagResource GetTagResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TagResource GetTagResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.GetTagResource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagResource () As TagResource" />
      <MemberSignature Language="F#" Value="abstract member GetTagResource : unit -&gt; Azure.ResourceManager.Resources.TagResource&#xA;override this.GetTagResource : unit -&gt; Azure.ResourceManager.Resources.TagResource" Usage="armResource.GetTagResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TagResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a TagResource along with the instance operations that can be performed on it in the ArmResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Resources.TagResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.ResourceIdentifier Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.ResourceIdentifier Id" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ArmResource.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="member this.Id : Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ArmResource.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource identifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="protected internal Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ArmResource.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.ResourceManager.ArmResource.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the pipeline for this resource client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetApiVersion">
      <MemberSignature Language="C#" Value="protected virtual bool TryGetApiVersion (Azure.Core.ResourceType resourceType, out string apiVersion);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryGetApiVersion(valuetype Azure.Core.ResourceType resourceType, [out] string&amp; apiVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArmResource.TryGetApiVersion(Azure.Core.ResourceType,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetApiVersion (resourceType As ResourceType, ByRef apiVersion As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetApiVersion : Azure.Core.ResourceType * string -&gt; bool&#xA;override this.TryGetApiVersion : Azure.Core.ResourceType * string -&gt; bool" Usage="armResource.TryGetApiVersion (resourceType, apiVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="apiVersion" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceType"> The resource type to get the version for. </param>
        <param name="apiVersion"> The api version to variable to set. </param>
        <summary>
            Gets the api version override if it has been set for the current client options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
