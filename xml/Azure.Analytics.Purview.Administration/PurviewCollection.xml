<Type Name="PurviewCollection" FullName="Azure.Analytics.Purview.Administration.PurviewCollection">
  <TypeSignature Language="C#" Value="public class PurviewCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Administration.PurviewCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewCollection" />
  <TypeSignature Language="F#" Value="type PurviewCollection = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewCollection service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewCollection for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateCollection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateCollection (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateCollection(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.CreateOrUpdateCollection(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateCollection (content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateCollection : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdateCollection : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCollection.CreateOrUpdateCollection (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates or updates a collection entity. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateCollectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateCollectionAsync (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateCollectionAsync(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.CreateOrUpdateCollectionAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateCollectionAsync (content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateCollectionAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateCollectionAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollection.CreateOrUpdateCollectionAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates or updates a collection entity. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCollection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteCollection (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteCollection(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.DeleteCollection(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteCollection (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteCollection : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteCollection : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCollection.DeleteCollection options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Deletes a Collection entity. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCollectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteCollectionAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteCollectionAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.DeleteCollectionAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteCollectionAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteCollectionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteCollectionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollection.DeleteCollectionAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Deletes a Collection entity. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCollection (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCollection(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.GetCollection(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollection (options As RequestOptions) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCollection : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetCollection : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCollection.GetCollection options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Get a collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCollectionAsync (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCollectionAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.GetCollectionAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionAsync (options As RequestOptions) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCollectionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollection.GetCollectionAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Get a collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded",
              description: string,
              friendlyName: string,
              name: string,
              parentCollection: {
                referenceName: string,
                type: string
              },
              systemData: {
                createdAt: string (ISO 8601 Format),
                createdBy: string,
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key",
                lastModifiedAt: string (ISO 8601 Format),
                lastModifiedBy: string,
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key"
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionPath">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCollectionPath (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCollectionPath(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.GetCollectionPath(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionPath (options As RequestOptions) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionPath : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetCollectionPath : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCollection.GetCollectionPath options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Gets the parent name and parent friendly name chains that represent the collection path. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              parentFriendlyNameChain: [string],
              parentNameChain: [string]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionPathAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCollectionPathAsync (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCollectionPathAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.GetCollectionPathAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionPathAsync (options As RequestOptions) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionPathAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCollectionPathAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollection.GetCollectionPathAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Gets the parent name and parent friendly name chains that represent the collection path. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              parentFriendlyNameChain: [string],
              parentNameChain: [string]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChildCollectionNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; ListChildCollectionNames (Azure.RequestOptions options, string skipToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; ListChildCollectionNames(class Azure.RequestOptions options, string skipToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.ListChildCollectionNames(Azure.RequestOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListChildCollectionNames (options As RequestOptions, Optional skipToken As String = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member ListChildCollectionNames : Azure.RequestOptions * string -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.ListChildCollectionNames : Azure.RequestOptions * string -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="purviewCollection.ListChildCollectionNames (options, skipToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="skipToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <param name="skipToken"> The String to use. </param>
        <summary> Lists the child collections names in the collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              count: number,
              nextLink: string,
              value: [
                {
                  friendlyName: string,
                  name: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChildCollectionNamesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; ListChildCollectionNamesAsync (Azure.RequestOptions options, string skipToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; ListChildCollectionNamesAsync(class Azure.RequestOptions options, string skipToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewCollection.ListChildCollectionNamesAsync(Azure.RequestOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListChildCollectionNamesAsync (options As RequestOptions, Optional skipToken As String = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member ListChildCollectionNamesAsync : Azure.RequestOptions * string -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.ListChildCollectionNamesAsync : Azure.RequestOptions * string -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="purviewCollection.ListChildCollectionNamesAsync (options, skipToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="skipToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <param name="skipToken"> The String to use. </param>
        <summary> Lists the child collections names in the collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              count: number,
              nextLink: string,
              value: [
                {
                  friendlyName: string,
                  name: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                details: [
                  {
                    code: string,
                    details: [ErrorModel],
                    message: string,
                    target: string
                  }
                ],
                message: string,
                target: string
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Administration.PurviewCollection.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Administration.PurviewCollection.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
