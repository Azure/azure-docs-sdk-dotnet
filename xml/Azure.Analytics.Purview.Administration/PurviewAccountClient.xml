<Type Name="PurviewAccountClient" FullName="Azure.Analytics.Purview.Administration.PurviewAccountClient">
  <TypeSignature Language="C#" Value="public class PurviewAccountClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewAccountClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Administration.PurviewAccountClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewAccountClient" />
  <TypeSignature Language="F#" Value="type PurviewAccountClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewAccount service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewAccountClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewAccountClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PurviewAccountClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Purview.Administration.PurviewAccountClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Analytics.Purview.Administration.PurviewAccountClient" Usage="new Azure.Analytics.Purview.Administration.PurviewAccountClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/account/. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of PurviewAccountClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PurviewAccountClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Purview.Administration.PurviewAccountClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Purview.Administration.PurviewAccountClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Purview.Administration.PurviewAccountClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As PurviewAccountClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Purview.Administration.PurviewAccountClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Purview.Administration.PurviewAccountClientOptions -&gt; Azure.Analytics.Purview.Administration.PurviewAccountClient" Usage="new Azure.Analytics.Purview.Administration.PurviewAccountClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Purview.Administration.PurviewAccountClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/account/. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of PurviewAccountClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetAccessKeys (Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetAccessKeys(class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetAccessKeys(Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessKeys (Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetAccessKeys : Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetAccessKeys : Azure.RequestContext -&gt; Azure.Response" Usage="purviewAccountClient.GetAccessKeys context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> List the authorization keys associated with this account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AccessKeys</c>:
            <code>{
              atlasKafkaPrimaryEndpoint: string, # Optional. Gets or sets the primary connection string.
              atlasKafkaSecondaryEndpoint: string, # Optional. Gets or sets the secondary connection string.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAccessKeys and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            Response response = client.GetAccessKeys();
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("atlasKafkaPrimaryEndpoint").ToString());
            Console.WriteLine(result.GetProperty("atlasKafkaSecondaryEndpoint").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAccessKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetAccessKeysAsync (Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetAccessKeysAsync(class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetAccessKeysAsync(Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessKeysAsync (Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessKeysAsync : Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetAccessKeysAsync : Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewAccountClient.GetAccessKeysAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> List the authorization keys associated with this account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AccessKeys</c>:
            <code>{
              atlasKafkaPrimaryEndpoint: string, # Optional. Gets or sets the primary connection string.
              atlasKafkaSecondaryEndpoint: string, # Optional. Gets or sets the secondary connection string.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAccessKeysAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            Response response = await client.GetAccessKeysAsync();
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("atlasKafkaPrimaryEndpoint").ToString());
            Console.WriteLine(result.GetProperty("atlasKafkaSecondaryEndpoint").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAccountProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetAccountProperties (Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetAccountProperties(class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetAccountProperties(Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountProperties (Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetAccountProperties : Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetAccountProperties : Azure.RequestContext -&gt; Azure.Response" Usage="purviewAccountClient.GetAccountProperties context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get an account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>Account</c>:
            <code>{
              id: string, # Optional. Gets or sets the identifier.
              identity: {
                principalId: string, # Optional. Service principal object Id
                tenantId: string, # Optional. Tenant Id
                type: "SystemAssigned", # Optional. Identity Type
              }, # Optional. Identity Info on the tracked resource
              location: string, # Optional. Gets or sets the location.
              name: string, # Optional. Gets or sets the name.
              properties: {
                cloudConnectors: {
                  awsExternalId: string, # Optional. AWS external identifier.
            Configured in AWS to allow use of the role arn used for scanning
                }, # Optional. Cloud connectors.
            External cloud identifier used as part of scanning configuration.
                createdAt: string (ISO 8601 Format), # Optional. Gets the time at which the entity was created.
                createdBy: string, # Optional. Gets the creator of the entity.
                createdByObjectId: string, # Optional. Gets the creators of the entity's object id.
                endpoints: {
                  catalog: string, # Optional. Gets the catalog endpoint.
                  guardian: string, # Optional. Gets the guardian endpoint.
                  scan: string, # Optional. Gets the scan endpoint.
                }, # Optional. The URIs that are the public endpoints of the account.
                friendlyName: string, # Optional. Gets or sets the friendly name.
                managedResourceGroupName: string, # Optional. Gets or sets the managed resource group name
                managedResources: {
                  eventHubNamespace: string, # Optional. Gets the managed event hub namespace resource identifier.
                  resourceGroup: string, # Optional. Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
                  storageAccount: string, # Optional. Gets the managed storage account resource identifier.
                }, # Optional. Gets the resource identifiers of the managed resources.
                privateEndpointConnections: [
                  {
                    id: string, # Optional. Gets or sets the identifier.
                    name: string, # Optional. Gets or sets the name.
                    properties: {
                      privateEndpoint: {
                        id: string, # Optional. The private endpoint identifier.
                      }, # Optional. The private endpoint information.
                      privateLinkServiceConnectionState: {
                        actionsRequired: string, # Optional. The required actions.
                        description: string, # Optional. The description.
                        status: "Unknown" | "Pending" | "Approved" | "Rejected" | "Disconnected", # Optional. The status.
                      }, # Optional. The private link service connection state.
                      provisioningState: string, # Optional. The provisioning state.
                    }, # Optional. The connection identifier.
                    type: string, # Optional. Gets or sets the type.
                  }
                ], # Optional. Gets the private endpoint connections information.
                provisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "SoftDeleting" | "SoftDeleted" | "Failed" | "Succeeded" | "Canceled", # Optional. Gets or sets the state of the provisioning.
                publicNetworkAccess: "NotSpecified" | "Enabled" | "Disabled", # Optional. Gets or sets the public network access.
              }, # Optional. Gets or sets the properties.
              sku: {
                capacity: number, # Optional. Gets or sets the sku capacity. Possible values include: 4, 16
                name: "Standard", # Optional. Gets or sets the sku name.
              }, # Optional. Gets or sets the Sku.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Metadata pertaining to creation and last modification of the resource.
              tags: Dictionary&lt;string, string&gt;, # Optional. Tags on the azure resource.
              type: string, # Optional. Gets or sets the type.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAccountProperties and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            Response response = client.GetAccountProperties();
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cloudConnectors").GetProperty("awsExternalId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdByObjectId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("catalog").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("guardian").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("scan").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResourceGroupName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("eventHubNamespace").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("resourceGroup").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("storageAccount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateEndpoint").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("actionsRequired").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publicNetworkAccess").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAccountPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetAccountPropertiesAsync (Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetAccountPropertiesAsync(class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetAccountPropertiesAsync(Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountPropertiesAsync (Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountPropertiesAsync : Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetAccountPropertiesAsync : Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewAccountClient.GetAccountPropertiesAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get an account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>Account</c>:
            <code>{
              id: string, # Optional. Gets or sets the identifier.
              identity: {
                principalId: string, # Optional. Service principal object Id
                tenantId: string, # Optional. Tenant Id
                type: "SystemAssigned", # Optional. Identity Type
              }, # Optional. Identity Info on the tracked resource
              location: string, # Optional. Gets or sets the location.
              name: string, # Optional. Gets or sets the name.
              properties: {
                cloudConnectors: {
                  awsExternalId: string, # Optional. AWS external identifier.
            Configured in AWS to allow use of the role arn used for scanning
                }, # Optional. Cloud connectors.
            External cloud identifier used as part of scanning configuration.
                createdAt: string (ISO 8601 Format), # Optional. Gets the time at which the entity was created.
                createdBy: string, # Optional. Gets the creator of the entity.
                createdByObjectId: string, # Optional. Gets the creators of the entity's object id.
                endpoints: {
                  catalog: string, # Optional. Gets the catalog endpoint.
                  guardian: string, # Optional. Gets the guardian endpoint.
                  scan: string, # Optional. Gets the scan endpoint.
                }, # Optional. The URIs that are the public endpoints of the account.
                friendlyName: string, # Optional. Gets or sets the friendly name.
                managedResourceGroupName: string, # Optional. Gets or sets the managed resource group name
                managedResources: {
                  eventHubNamespace: string, # Optional. Gets the managed event hub namespace resource identifier.
                  resourceGroup: string, # Optional. Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
                  storageAccount: string, # Optional. Gets the managed storage account resource identifier.
                }, # Optional. Gets the resource identifiers of the managed resources.
                privateEndpointConnections: [
                  {
                    id: string, # Optional. Gets or sets the identifier.
                    name: string, # Optional. Gets or sets the name.
                    properties: {
                      privateEndpoint: {
                        id: string, # Optional. The private endpoint identifier.
                      }, # Optional. The private endpoint information.
                      privateLinkServiceConnectionState: {
                        actionsRequired: string, # Optional. The required actions.
                        description: string, # Optional. The description.
                        status: "Unknown" | "Pending" | "Approved" | "Rejected" | "Disconnected", # Optional. The status.
                      }, # Optional. The private link service connection state.
                      provisioningState: string, # Optional. The provisioning state.
                    }, # Optional. The connection identifier.
                    type: string, # Optional. Gets or sets the type.
                  }
                ], # Optional. Gets the private endpoint connections information.
                provisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "SoftDeleting" | "SoftDeleted" | "Failed" | "Succeeded" | "Canceled", # Optional. Gets or sets the state of the provisioning.
                publicNetworkAccess: "NotSpecified" | "Enabled" | "Disabled", # Optional. Gets or sets the public network access.
              }, # Optional. Gets or sets the properties.
              sku: {
                capacity: number, # Optional. Gets or sets the sku capacity. Possible values include: 4, 16
                name: "Standard", # Optional. Gets or sets the sku name.
              }, # Optional. Gets or sets the Sku.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Metadata pertaining to creation and last modification of the resource.
              tags: Dictionary&lt;string, string&gt;, # Optional. Tags on the azure resource.
              type: string, # Optional. Gets or sets the type.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAccountPropertiesAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            Response response = await client.GetAccountPropertiesAsync();
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cloudConnectors").GetProperty("awsExternalId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdByObjectId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("catalog").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("guardian").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("scan").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResourceGroupName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("eventHubNamespace").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("resourceGroup").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("storageAccount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateEndpoint").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("actionsRequired").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publicNetworkAccess").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Purview.Administration.PurviewCollection GetCollectionClient (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Purview.Administration.PurviewCollection GetCollectionClient(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetCollectionClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionClient (collectionName As String) As PurviewCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionClient : string -&gt; Azure.Analytics.Purview.Administration.PurviewCollection&#xA;override this.GetCollectionClient : string -&gt; Azure.Analytics.Purview.Administration.PurviewCollection" Usage="purviewAccountClient.GetCollectionClient collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Administration.PurviewCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">The name of the collection to use.</param>
        <summary>
            Gets a service client for interacting with a collection.
            </summary>
        <returns>A service client for interacting with a collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollections">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetCollections (string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetCollections(string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetCollections(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollections (Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetCollections : string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetCollections : string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="purviewAccountClient.GetCollections (skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The String to use. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> List the collections in the account. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>CollectionListValue</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded", # Optional. Gets the state of the provisioning.
              description: string, # Optional. Gets or sets the description.
              friendlyName: string, # Optional. Gets or sets the friendly name of the collection.
              name: string, # Optional. Gets the name.
              parentCollection: {
                referenceName: string, # Optional. Gets or sets the reference name.
                type: string, # Optional. Gets the reference type property.
              }, # Optional. Gets or sets the parent collection reference.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Gets the system data that contains information about who and when created and updated the resource.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetCollections and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            foreach (var data in client.GetCollections())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetCollections with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            foreach (var data in client.GetCollections("<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("collectionProvisioningState").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("friendlyName").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("parentCollection").GetProperty("referenceName").ToString());
                Console.WriteLine(result.GetProperty("parentCollection").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetCollectionsAsync (string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetCollectionsAsync(string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetCollectionsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionsAsync (Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionsAsync : string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetCollectionsAsync : string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="purviewAccountClient.GetCollectionsAsync (skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The String to use. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> List the collections in the account. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>CollectionListValue</c>:
            <code>{
              collectionProvisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "Failed" | "Succeeded", # Optional. Gets the state of the provisioning.
              description: string, # Optional. Gets or sets the description.
              friendlyName: string, # Optional. Gets or sets the friendly name of the collection.
              name: string, # Optional. Gets the name.
              parentCollection: {
                referenceName: string, # Optional. Gets or sets the reference name.
                type: string, # Optional. Gets the reference type property.
              }, # Optional. Gets or sets the parent collection reference.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Gets the system data that contains information about who and when created and updated the resource.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetCollectionsAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            await foreach (var data in client.GetCollectionsAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetCollectionsAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            await foreach (var data in client.GetCollectionsAsync("<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("collectionProvisioningState").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("friendlyName").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("parentCollection").GetProperty("referenceName").ToString());
                Console.WriteLine(result.GetProperty("parentCollection").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewCollectionClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Purview.Administration.PurviewCollection GetPurviewCollectionClient (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Purview.Administration.PurviewCollection GetPurviewCollectionClient(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetPurviewCollectionClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPurviewCollectionClient (collectionName As String) As PurviewCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPurviewCollectionClient : string -&gt; Azure.Analytics.Purview.Administration.PurviewCollection&#xA;override this.GetPurviewCollectionClient : string -&gt; Azure.Analytics.Purview.Administration.PurviewCollection" Usage="purviewAccountClient.GetPurviewCollectionClient collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Administration.PurviewCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName"> The String to use. </param>
        <summary> Initializes a new instance of PurviewCollection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPurviewResourceSetRuleClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Purview.Administration.PurviewResourceSetRule GetPurviewResourceSetRuleClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Purview.Administration.PurviewResourceSetRule GetPurviewResourceSetRuleClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetPurviewResourceSetRuleClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPurviewResourceSetRuleClient () As PurviewResourceSetRule" />
      <MemberSignature Language="F#" Value="abstract member GetPurviewResourceSetRuleClient : unit -&gt; Azure.Analytics.Purview.Administration.PurviewResourceSetRule&#xA;override this.GetPurviewResourceSetRuleClient : unit -&gt; Azure.Analytics.Purview.Administration.PurviewResourceSetRule" Usage="purviewAccountClient.GetPurviewResourceSetRuleClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Administration.PurviewResourceSetRule</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewResourceSetRule. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSetRuleClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Purview.Administration.PurviewResourceSetRule GetResourceSetRuleClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Purview.Administration.PurviewResourceSetRule GetResourceSetRuleClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetResourceSetRuleClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSetRuleClient () As PurviewResourceSetRule" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSetRuleClient : unit -&gt; Azure.Analytics.Purview.Administration.PurviewResourceSetRule&#xA;override this.GetResourceSetRuleClient : unit -&gt; Azure.Analytics.Purview.Administration.PurviewResourceSetRule" Usage="purviewAccountClient.GetResourceSetRuleClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Administration.PurviewResourceSetRule</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a service client for interacting with a resource set rule.
            </summary>
        <returns>A service client for interacting with a resource set rule.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSetRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetResourceSetRules (string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetResourceSetRules(string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetResourceSetRules(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSetRules (Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSetRules : string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetResourceSetRules : string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="purviewAccountClient.GetResourceSetRules (skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The String to use. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a resource set config service model. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ResourceSetRuleConfigListValue</c>:
            <code>{
              advancedResourceSet: {
                modifiedAt: string (ISO 8601 Format), # Optional. Date at which ResourceSetProcessing property of the account is updated.
                resourceSetProcessing: "Default" | "Advanced", # Optional. The advanced resource property of the account.
              }, # Optional. Gets or sets the advanced resource set property of the account.
              name: string, # Optional. The name of the rule
              pathPatternConfig: {
                acceptedPatterns: [
                  {
                    createdBy: string, # Optional.
                    filterType: "Pattern" | "Regex", # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Required.
                    path: string, # Required.
                  }
                ], # Optional.
                complexReplacers: [
                  {
                    createdBy: string, # Optional.
                    description: string, # Optional.
                    disabled: boolean, # Optional.
                    disableRecursiveReplacerApplication: boolean, # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Optional.
                    typeName: string, # Optional.
                  }
                ], # Optional.
                createdBy: string, # Required.
                enableDefaultPatterns: boolean, # Required.
                lastUpdatedTimestamp: number, # Optional.
                modifiedBy: string, # Optional.
                normalizationRules: [
                  {
                    description: string, # Optional.
                    disabled: boolean, # Optional.
                    dynamicReplacement: boolean, # Optional.
                    entityTypes: [string], # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    name: string, # Optional.
                    regex: {
                      maxDigits: number, # Optional.
                      maxLetters: number, # Optional.
                      minDashes: number, # Optional.
                      minDigits: number, # Optional.
                      minDigitsOrLetters: number, # Optional.
                      minDots: number, # Optional.
                      minHex: number, # Optional.
                      minLetters: number, # Optional.
                      minUnderscores: number, # Optional.
                      options: number, # Optional.
                      regexStr: string, # Optional.
                    }, # Optional.
                    replaceWith: string, # Optional.
                    version: number, # Optional.
                  }
                ], # Optional.
                regexReplacers: [
                  {
                    condition: string, # Optional.
                    createdBy: string, # Optional.
                    description: string, # Optional.
                    disabled: boolean, # Required.
                    disableRecursiveReplacerApplication: boolean, # Optional.
                    doNotReplaceRegex: FastRegex, # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Required.
                    regex: FastRegex, # Optional.
                    replaceWith: string, # Optional.
                  }
                ], # Optional.
                rejectedPatterns: [Filter], # Optional.
                scopedRules: [
                  {
                    bindingUrl: string, # Required.
                    rules: [
                      {
                        displayName: string, # Optional.
                        isResourceSet: boolean, # Optional.
                        lastUpdatedTimestamp: number, # Optional.
                        name: string, # Optional.
                        qualifiedName: string, # Required.
                      }
                    ], # Optional.
                    storeType: string, # Required.
                  }
                ], # Optional.
                version: number, # Optional.
              }, # Optional. The configuration rules for path pattern extraction.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetResourceSetRules and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            foreach (var data in client.GetResourceSetRules())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetResourceSetRules with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            foreach (var data in client.GetResourceSetRules("<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("advancedResourceSet").GetProperty("modifiedAt").ToString());
                Console.WriteLine(result.GetProperty("advancedResourceSet").GetProperty("resourceSetProcessing").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("filterType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("disableRecursiveReplacerApplication").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("typeName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("enableDefaultPatterns").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("dynamicReplacement").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("entityTypes")[0].ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("replaceWith").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("condition").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("disableRecursiveReplacerApplication").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("replaceWith").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("filterType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("bindingUrl").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("isResourceSet").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("qualifiedName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("storeType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("version").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSetRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetResourceSetRulesAsync (string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetResourceSetRulesAsync(string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.GetResourceSetRulesAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSetRulesAsync (Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSetRulesAsync : string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetResourceSetRulesAsync : string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="purviewAccountClient.GetResourceSetRulesAsync (skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="skipToken"> The String to use. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a resource set config service model. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ResourceSetRuleConfigListValue</c>:
            <code>{
              advancedResourceSet: {
                modifiedAt: string (ISO 8601 Format), # Optional. Date at which ResourceSetProcessing property of the account is updated.
                resourceSetProcessing: "Default" | "Advanced", # Optional. The advanced resource property of the account.
              }, # Optional. Gets or sets the advanced resource set property of the account.
              name: string, # Optional. The name of the rule
              pathPatternConfig: {
                acceptedPatterns: [
                  {
                    createdBy: string, # Optional.
                    filterType: "Pattern" | "Regex", # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Required.
                    path: string, # Required.
                  }
                ], # Optional.
                complexReplacers: [
                  {
                    createdBy: string, # Optional.
                    description: string, # Optional.
                    disabled: boolean, # Optional.
                    disableRecursiveReplacerApplication: boolean, # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Optional.
                    typeName: string, # Optional.
                  }
                ], # Optional.
                createdBy: string, # Required.
                enableDefaultPatterns: boolean, # Required.
                lastUpdatedTimestamp: number, # Optional.
                modifiedBy: string, # Optional.
                normalizationRules: [
                  {
                    description: string, # Optional.
                    disabled: boolean, # Optional.
                    dynamicReplacement: boolean, # Optional.
                    entityTypes: [string], # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    name: string, # Optional.
                    regex: {
                      maxDigits: number, # Optional.
                      maxLetters: number, # Optional.
                      minDashes: number, # Optional.
                      minDigits: number, # Optional.
                      minDigitsOrLetters: number, # Optional.
                      minDots: number, # Optional.
                      minHex: number, # Optional.
                      minLetters: number, # Optional.
                      minUnderscores: number, # Optional.
                      options: number, # Optional.
                      regexStr: string, # Optional.
                    }, # Optional.
                    replaceWith: string, # Optional.
                    version: number, # Optional.
                  }
                ], # Optional.
                regexReplacers: [
                  {
                    condition: string, # Optional.
                    createdBy: string, # Optional.
                    description: string, # Optional.
                    disabled: boolean, # Required.
                    disableRecursiveReplacerApplication: boolean, # Optional.
                    doNotReplaceRegex: FastRegex, # Optional.
                    lastUpdatedTimestamp: number, # Optional.
                    modifiedBy: string, # Optional.
                    name: string, # Required.
                    regex: FastRegex, # Optional.
                    replaceWith: string, # Optional.
                  }
                ], # Optional.
                rejectedPatterns: [Filter], # Optional.
                scopedRules: [
                  {
                    bindingUrl: string, # Required.
                    rules: [
                      {
                        displayName: string, # Optional.
                        isResourceSet: boolean, # Optional.
                        lastUpdatedTimestamp: number, # Optional.
                        name: string, # Optional.
                        qualifiedName: string, # Required.
                      }
                    ], # Optional.
                    storeType: string, # Required.
                  }
                ], # Optional.
                version: number, # Optional.
              }, # Optional. The configuration rules for path pattern extraction.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetResourceSetRulesAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            await foreach (var data in client.GetResourceSetRulesAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetResourceSetRulesAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            await foreach (var data in client.GetResourceSetRulesAsync("<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("advancedResourceSet").GetProperty("modifiedAt").ToString());
                Console.WriteLine(result.GetProperty("advancedResourceSet").GetProperty("resourceSetProcessing").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("filterType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("acceptedPatterns")[0].GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("disableRecursiveReplacerApplication").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("complexReplacers")[0].GetProperty("typeName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("enableDefaultPatterns").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("dynamicReplacement").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("entityTypes")[0].ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("regex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("replaceWith").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("normalizationRules")[0].GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("condition").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("disabled").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("disableRecursiveReplacerApplication").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("doNotReplaceRegex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("maxDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("maxLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDashes").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDigits").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDigitsOrLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minDots").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minHex").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minLetters").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("minUnderscores").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("options").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("regex").GetProperty("regexStr").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("regexReplacers")[0].GetProperty("replaceWith").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("filterType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("modifiedBy").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("rejectedPatterns")[0].GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("bindingUrl").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("isResourceSet").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("lastUpdatedTimestamp").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("rules")[0].GetProperty("qualifiedName").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("scopedRules")[0].GetProperty("storeType").ToString());
                Console.WriteLine(result.GetProperty("pathPatternConfig").GetProperty("version").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Administration.PurviewAccountClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Administration.PurviewAccountClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAccessKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RegenerateAccessKey (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RegenerateAccessKey(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.RegenerateAccessKey(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAccessKey (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAccessKey : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RegenerateAccessKey : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewAccountClient.RegenerateAccessKey (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Regenerate the authorization keys associated with this data catalog. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AccessKeyOptions</c>:
            <code>{
              keyType: "PrimaryAtlasKafkaKey" | "SecondaryAtlasKafkaKey", # Optional. The access key type.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AccessKeys</c>:
            <code>{
              atlasKafkaPrimaryEndpoint: string, # Optional. Gets or sets the primary connection string.
              atlasKafkaSecondaryEndpoint: string, # Optional. Gets or sets the secondary connection string.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call RegenerateAccessKey and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {};
            
            Response response = client.RegenerateAccessKey(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call RegenerateAccessKey with all request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {
                keyType = "PrimaryAtlasKafkaKey",
            };
            
            Response response = client.RegenerateAccessKey(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("atlasKafkaPrimaryEndpoint").ToString());
            Console.WriteLine(result.GetProperty("atlasKafkaSecondaryEndpoint").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAccessKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RegenerateAccessKeyAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RegenerateAccessKeyAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.RegenerateAccessKeyAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAccessKeyAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAccessKeyAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RegenerateAccessKeyAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewAccountClient.RegenerateAccessKeyAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Regenerate the authorization keys associated with this data catalog. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AccessKeyOptions</c>:
            <code>{
              keyType: "PrimaryAtlasKafkaKey" | "SecondaryAtlasKafkaKey", # Optional. The access key type.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AccessKeys</c>:
            <code>{
              atlasKafkaPrimaryEndpoint: string, # Optional. Gets or sets the primary connection string.
              atlasKafkaSecondaryEndpoint: string, # Optional. Gets or sets the secondary connection string.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call RegenerateAccessKeyAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {};
            
            Response response = await client.RegenerateAccessKeyAsync(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call RegenerateAccessKeyAsync with all request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {
                keyType = "PrimaryAtlasKafkaKey",
            };
            
            Response response = await client.RegenerateAccessKeyAsync(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("atlasKafkaPrimaryEndpoint").ToString());
            Console.WriteLine(result.GetProperty("atlasKafkaSecondaryEndpoint").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="UpdateAccountProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateAccountProperties (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateAccountProperties(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.UpdateAccountProperties(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAccountProperties (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateAccountProperties : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateAccountProperties : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewAccountClient.UpdateAccountProperties (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Updates an account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>DataPlaneAccountUpdateParameters</c>:
            <code>{
              friendlyName: string, # Optional. The friendly name for the azure resource.
            }
            </code>
            
            Response Body:
            
            Schema for <c>Account</c>:
            <code>{
              id: string, # Optional. Gets or sets the identifier.
              identity: {
                principalId: string, # Optional. Service principal object Id
                tenantId: string, # Optional. Tenant Id
                type: "SystemAssigned", # Optional. Identity Type
              }, # Optional. Identity Info on the tracked resource
              location: string, # Optional. Gets or sets the location.
              name: string, # Optional. Gets or sets the name.
              properties: {
                cloudConnectors: {
                  awsExternalId: string, # Optional. AWS external identifier.
            Configured in AWS to allow use of the role arn used for scanning
                }, # Optional. Cloud connectors.
            External cloud identifier used as part of scanning configuration.
                createdAt: string (ISO 8601 Format), # Optional. Gets the time at which the entity was created.
                createdBy: string, # Optional. Gets the creator of the entity.
                createdByObjectId: string, # Optional. Gets the creators of the entity's object id.
                endpoints: {
                  catalog: string, # Optional. Gets the catalog endpoint.
                  guardian: string, # Optional. Gets the guardian endpoint.
                  scan: string, # Optional. Gets the scan endpoint.
                }, # Optional. The URIs that are the public endpoints of the account.
                friendlyName: string, # Optional. Gets or sets the friendly name.
                managedResourceGroupName: string, # Optional. Gets or sets the managed resource group name
                managedResources: {
                  eventHubNamespace: string, # Optional. Gets the managed event hub namespace resource identifier.
                  resourceGroup: string, # Optional. Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
                  storageAccount: string, # Optional. Gets the managed storage account resource identifier.
                }, # Optional. Gets the resource identifiers of the managed resources.
                privateEndpointConnections: [
                  {
                    id: string, # Optional. Gets or sets the identifier.
                    name: string, # Optional. Gets or sets the name.
                    properties: {
                      privateEndpoint: {
                        id: string, # Optional. The private endpoint identifier.
                      }, # Optional. The private endpoint information.
                      privateLinkServiceConnectionState: {
                        actionsRequired: string, # Optional. The required actions.
                        description: string, # Optional. The description.
                        status: "Unknown" | "Pending" | "Approved" | "Rejected" | "Disconnected", # Optional. The status.
                      }, # Optional. The private link service connection state.
                      provisioningState: string, # Optional. The provisioning state.
                    }, # Optional. The connection identifier.
                    type: string, # Optional. Gets or sets the type.
                  }
                ], # Optional. Gets the private endpoint connections information.
                provisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "SoftDeleting" | "SoftDeleted" | "Failed" | "Succeeded" | "Canceled", # Optional. Gets or sets the state of the provisioning.
                publicNetworkAccess: "NotSpecified" | "Enabled" | "Disabled", # Optional. Gets or sets the public network access.
              }, # Optional. Gets or sets the properties.
              sku: {
                capacity: number, # Optional. Gets or sets the sku capacity. Possible values include: 4, 16
                name: "Standard", # Optional. Gets or sets the sku name.
              }, # Optional. Gets or sets the Sku.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Metadata pertaining to creation and last modification of the resource.
              tags: Dictionary&lt;string, string&gt;, # Optional. Tags on the azure resource.
              type: string, # Optional. Gets or sets the type.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call UpdateAccountProperties and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {};
            
            Response response = client.UpdateAccountProperties(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call UpdateAccountProperties with all request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {
                friendlyName = "<friendlyName>",
            };
            
            Response response = client.UpdateAccountProperties(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cloudConnectors").GetProperty("awsExternalId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdByObjectId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("catalog").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("guardian").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("scan").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResourceGroupName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("eventHubNamespace").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("resourceGroup").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("storageAccount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateEndpoint").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("actionsRequired").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publicNetworkAccess").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="UpdateAccountPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateAccountPropertiesAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateAccountPropertiesAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Administration.PurviewAccountClient.UpdateAccountPropertiesAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAccountPropertiesAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAccountPropertiesAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateAccountPropertiesAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewAccountClient.UpdateAccountPropertiesAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Administration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Updates an account. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>DataPlaneAccountUpdateParameters</c>:
            <code>{
              friendlyName: string, # Optional. The friendly name for the azure resource.
            }
            </code>
            
            Response Body:
            
            Schema for <c>Account</c>:
            <code>{
              id: string, # Optional. Gets or sets the identifier.
              identity: {
                principalId: string, # Optional. Service principal object Id
                tenantId: string, # Optional. Tenant Id
                type: "SystemAssigned", # Optional. Identity Type
              }, # Optional. Identity Info on the tracked resource
              location: string, # Optional. Gets or sets the location.
              name: string, # Optional. Gets or sets the name.
              properties: {
                cloudConnectors: {
                  awsExternalId: string, # Optional. AWS external identifier.
            Configured in AWS to allow use of the role arn used for scanning
                }, # Optional. Cloud connectors.
            External cloud identifier used as part of scanning configuration.
                createdAt: string (ISO 8601 Format), # Optional. Gets the time at which the entity was created.
                createdBy: string, # Optional. Gets the creator of the entity.
                createdByObjectId: string, # Optional. Gets the creators of the entity's object id.
                endpoints: {
                  catalog: string, # Optional. Gets the catalog endpoint.
                  guardian: string, # Optional. Gets the guardian endpoint.
                  scan: string, # Optional. Gets the scan endpoint.
                }, # Optional. The URIs that are the public endpoints of the account.
                friendlyName: string, # Optional. Gets or sets the friendly name.
                managedResourceGroupName: string, # Optional. Gets or sets the managed resource group name
                managedResources: {
                  eventHubNamespace: string, # Optional. Gets the managed event hub namespace resource identifier.
                  resourceGroup: string, # Optional. Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
                  storageAccount: string, # Optional. Gets the managed storage account resource identifier.
                }, # Optional. Gets the resource identifiers of the managed resources.
                privateEndpointConnections: [
                  {
                    id: string, # Optional. Gets or sets the identifier.
                    name: string, # Optional. Gets or sets the name.
                    properties: {
                      privateEndpoint: {
                        id: string, # Optional. The private endpoint identifier.
                      }, # Optional. The private endpoint information.
                      privateLinkServiceConnectionState: {
                        actionsRequired: string, # Optional. The required actions.
                        description: string, # Optional. The description.
                        status: "Unknown" | "Pending" | "Approved" | "Rejected" | "Disconnected", # Optional. The status.
                      }, # Optional. The private link service connection state.
                      provisioningState: string, # Optional. The provisioning state.
                    }, # Optional. The connection identifier.
                    type: string, # Optional. Gets or sets the type.
                  }
                ], # Optional. Gets the private endpoint connections information.
                provisioningState: "Unknown" | "Creating" | "Moving" | "Deleting" | "SoftDeleting" | "SoftDeleted" | "Failed" | "Succeeded" | "Canceled", # Optional. Gets or sets the state of the provisioning.
                publicNetworkAccess: "NotSpecified" | "Enabled" | "Disabled", # Optional. Gets or sets the public network access.
              }, # Optional. Gets or sets the properties.
              sku: {
                capacity: number, # Optional. Gets or sets the sku capacity. Possible values include: 4, 16
                name: "Standard", # Optional. Gets or sets the sku name.
              }, # Optional. Gets or sets the Sku.
              systemData: {
                createdAt: string (ISO 8601 Format), # Optional. The timestamp of resource creation (UTC).
                createdBy: string, # Optional. The identity that created the resource.
                createdByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that created the resource.
                lastModifiedAt: string (ISO 8601 Format), # Optional. The timestamp of the last modification the resource (UTC).
                lastModifiedBy: string, # Optional. The identity that last modified the resource.
                lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key", # Optional. The type of identity that last modified the resource.
              }, # Optional. Metadata pertaining to creation and last modification of the resource.
              tags: Dictionary&lt;string, string&gt;, # Optional. Tags on the azure resource.
              type: string, # Optional. Gets or sets the type.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call UpdateAccountPropertiesAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {};
            
            Response response = await client.UpdateAccountPropertiesAsync(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call UpdateAccountPropertiesAsync with all request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new PurviewAccountClient(endpoint, credential);
            
            var data = new {
                friendlyName = "<friendlyName>",
            };
            
            Response response = await client.UpdateAccountPropertiesAsync(RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cloudConnectors").GetProperty("awsExternalId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdByObjectId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("catalog").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("guardian").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endpoints").GetProperty("scan").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResourceGroupName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("eventHubNamespace").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("resourceGroup").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("managedResources").GetProperty("storageAccount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateEndpoint").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("actionsRequired").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("privateLinkServiceConnectionState").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("privateEndpointConnections")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publicNetworkAccess").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            ]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
