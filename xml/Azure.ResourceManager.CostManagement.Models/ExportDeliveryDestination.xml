<Type Name="ExportDeliveryDestination" FullName="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination">
  <TypeSignature Language="C#" Value="public class ExportDeliveryDestination" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportDeliveryDestination extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportDeliveryDestination" />
  <TypeSignature Language="F#" Value="type ExportDeliveryDestination = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> This represents the blob storage account location where exports of costs will be delivered. There are two ways to configure the destination. The approach recommended for most customers is to specify the resourceId of the storage account. This requires a one-time registration of the account's subscription with the Microsoft.CostManagementExports resource provider in order to give Cost Management services access to the storage. When creating an export in the Azure portal this registration is performed automatically but API users may need to register the subscription explicitly (for more information see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services ). Another way to configure the destination is available ONLY to Partners with a Microsoft Partner Agreement plan who are global admins of their billing account. These Partners, instead of specifying the resourceId of a storage account, can specify the storage account name along with a SAS token for the account. This allows exports of costs to a storage account in any tenant. The SAS token should be created for the blob service with Service/Container/Object resource types and with Read/Write/Delete/List/Add/Create permissions (for more information see https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/export-cost-data-storage-account-sas-key ). </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportDeliveryDestination (string container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination : string -&gt; Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination" Usage="new Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container"> The name of the container where exports will be uploaded. If the container does not exist it will be created. </param>
        <summary> Initializes a new instance of ExportDeliveryDestination. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As String" />
      <MemberSignature Language="F#" Value="member this.Container : string with get, set" Usage="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the container where exports will be uploaded. If the container does not exist it will be created. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public Azure.Core.ResourceIdentifier ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.ResourceIdentifier ResourceId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="member this.ResourceId : Azure.Core.ResourceIdentifier with get, set" Usage="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount are specified. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootFolderPath">
      <MemberSignature Language="C#" Value="public string RootFolderPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootFolderPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.RootFolderPath" />
      <MemberSignature Language="VB.NET" Value="Public Property RootFolderPath As String" />
      <MemberSignature Language="F#" Value="member this.RootFolderPath : string with get, set" Usage="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.RootFolderPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the directory where exports will be uploaded. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SasToken">
      <MemberSignature Language="C#" Value="public string SasToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SasToken" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.SasToken" />
      <MemberSignature Language="VB.NET" Value="Public Property SasToken As String" />
      <MemberSignature Language="F#" Value="member this.SasToken : string with get, set" Usage="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.SasToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be specified. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccount">
      <MemberSignature Language="C#" Value="public string StorageAccount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageAccount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.StorageAccount" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccount As String" />
      <MemberSignature Language="F#" Value="member this.StorageAccount : string with get, set" Usage="Azure.ResourceManager.CostManagement.Models.ExportDeliveryDestination.StorageAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken can be specified instead of resourceId. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
