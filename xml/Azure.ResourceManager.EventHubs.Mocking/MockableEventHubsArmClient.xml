<Type Name="MockableEventHubsArmClient" FullName="Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient">
  <TypeSignature Language="C#" Value="public class MockableEventHubsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableEventHubsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableEventHubsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableEventHubsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableEventHubsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubAuthorizationRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource GetEventHubAuthorizationRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource GetEventHubAuthorizationRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubAuthorizationRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubAuthorizationRuleResource (id As ResourceIdentifier) As EventHubAuthorizationRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource&#xA;override this.GetEventHubAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource" Usage="mockableEventHubsArmClient.GetEventHubAuthorizationRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubAuthorizationRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubResource GetEventHubResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubResource GetEventHubResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubResource (id As ResourceIdentifier) As EventHubResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubResource&#xA;override this.GetEventHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubResource" Usage="mockableEventHubsArmClient.GetEventHubResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsApplicationGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource GetEventHubsApplicationGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource GetEventHubsApplicationGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsApplicationGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsApplicationGroupResource (id As ResourceIdentifier) As EventHubsApplicationGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsApplicationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource&#xA;override this.GetEventHubsApplicationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource" Usage="mockableEventHubsArmClient.GetEventHubsApplicationGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsApplicationGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsClusterResource GetEventHubsClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsClusterResource GetEventHubsClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsClusterResource (id As ResourceIdentifier) As EventHubsClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsClusterResource&#xA;override this.GetEventHubsClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsClusterResource" Usage="mockableEventHubsArmClient.GetEventHubsClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsConsumerGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource GetEventHubsConsumerGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource GetEventHubsConsumerGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsConsumerGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsConsumerGroupResource (id As ResourceIdentifier) As EventHubsConsumerGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsConsumerGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource&#xA;override this.GetEventHubsConsumerGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource" Usage="mockableEventHubsArmClient.GetEventHubsConsumerGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsConsumerGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsDisasterRecoveryAuthorizationRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource GetEventHubsDisasterRecoveryAuthorizationRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource GetEventHubsDisasterRecoveryAuthorizationRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsDisasterRecoveryAuthorizationRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsDisasterRecoveryAuthorizationRuleResource (id As ResourceIdentifier) As EventHubsDisasterRecoveryAuthorizationRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsDisasterRecoveryAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource&#xA;override this.GetEventHubsDisasterRecoveryAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource" Usage="mockableEventHubsArmClient.GetEventHubsDisasterRecoveryAuthorizationRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryAuthorizationRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsDisasterRecoveryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource GetEventHubsDisasterRecoveryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource GetEventHubsDisasterRecoveryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsDisasterRecoveryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsDisasterRecoveryResource (id As ResourceIdentifier) As EventHubsDisasterRecoveryResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsDisasterRecoveryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource&#xA;override this.GetEventHubsDisasterRecoveryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource" Usage="mockableEventHubsArmClient.GetEventHubsDisasterRecoveryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsDisasterRecoveryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNamespaceAuthorizationRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource GetEventHubsNamespaceAuthorizationRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource GetEventHubsNamespaceAuthorizationRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsNamespaceAuthorizationRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNamespaceAuthorizationRuleResource (id As ResourceIdentifier) As EventHubsNamespaceAuthorizationRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNamespaceAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource&#xA;override this.GetEventHubsNamespaceAuthorizationRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource" Usage="mockableEventHubsArmClient.GetEventHubsNamespaceAuthorizationRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceAuthorizationRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNamespaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsNamespaceResource GetEventHubsNamespaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsNamespaceResource GetEventHubsNamespaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsNamespaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNamespaceResource (id As ResourceIdentifier) As EventHubsNamespaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNamespaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&#xA;override this.GetEventHubsNamespaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" Usage="mockableEventHubsArmClient.GetEventHubsNamespaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsNamespaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNetworkRuleSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource GetEventHubsNetworkRuleSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource GetEventHubsNetworkRuleSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsNetworkRuleSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNetworkRuleSetResource (id As ResourceIdentifier) As EventHubsNetworkRuleSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNetworkRuleSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource&#xA;override this.GetEventHubsNetworkRuleSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource" Usage="mockableEventHubsArmClient.GetEventHubsNetworkRuleSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsNetworkRuleSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource GetEventHubsPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource GetEventHubsPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsPrivateEndpointConnectionResource (id As ResourceIdentifier) As EventHubsPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource&#xA;override this.GetEventHubsPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource" Usage="mockableEventHubsArmClient.GetEventHubsPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsSchemaGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource GetEventHubsSchemaGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource GetEventHubsSchemaGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsArmClient.GetEventHubsSchemaGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsSchemaGroupResource (id As ResourceIdentifier) As EventHubsSchemaGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsSchemaGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource&#xA;override this.GetEventHubsSchemaGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource" Usage="mockableEventHubsArmClient.GetEventHubsSchemaGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubsSchemaGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
