<Type Name="MockableEventHubsResourceGroupResource" FullName="Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableEventHubsResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableEventHubsResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableEventHubsResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableEventHubsResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableEventHubsResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt; GetEventHubsCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt; GetEventHubsCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventHubsClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&#xA;override this.GetEventHubsCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;" Usage="mockableEventHubsResourceGroupResource.GetEventHubsCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the resource description of the specified Event Hubs Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EventHubs.EventHubsClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&gt; GetEventHubsClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&gt; GetEventHubsClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventHubsClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&gt;&#xA;override this.GetEventHubsClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&gt;" Usage="mockableEventHubsResourceGroupResource.GetEventHubsClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the resource description of the specified Event Hubs Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EventHubs.EventHubsClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsClusterCollection GetEventHubsClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsClusterCollection GetEventHubsClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsClusters () As EventHubsClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsClusters : unit -&gt; Azure.ResourceManager.EventHubs.EventHubsClusterCollection&#xA;override this.GetEventHubsClusters : unit -&gt; Azure.ResourceManager.EventHubs.EventHubsClusterCollection" Usage="mockableEventHubsResourceGroupResource.GetEventHubsClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of EventHubsClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventHubsClusterResources and their operations over a EventHubsClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNamespace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt; GetEventHubsNamespace (string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt; GetEventHubsNamespace(string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsNamespace(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNamespace (namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventHubsNamespaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNamespace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&#xA;override this.GetEventHubsNamespace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;" Usage="mockableEventHubsResourceGroupResource.GetEventHubsNamespace (namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the description of the specified namespace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}</description></item><item><term>Operation Id</term><description>Namespaces_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNamespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&gt; GetEventHubsNamespaceAsync (string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&gt; GetEventHubsNamespaceAsync(string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsNamespaceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNamespaceAsync (namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventHubsNamespaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNamespaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&gt;&#xA;override this.GetEventHubsNamespaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&gt;" Usage="mockableEventHubsResourceGroupResource.GetEventHubsNamespaceAsync (namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubsNamespaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the description of the specified namespace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}</description></item><item><term>Operation Id</term><description>Namespaces_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EventHubs.EventHubsNamespaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubsNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection GetEventHubsNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection GetEventHubsNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.Mocking.MockableEventHubsResourceGroupResource.GetEventHubsNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubsNamespaces () As EventHubsNamespaceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubsNamespaces : unit -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection&#xA;override this.GetEventHubsNamespaces : unit -&gt; Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection" Usage="mockableEventHubsResourceGroupResource.GetEventHubsNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubsNamespaceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of EventHubsNamespaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventHubsNamespaceResources and their operations over a EventHubsNamespaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
