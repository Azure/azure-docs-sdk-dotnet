<Type Name="EventProcessorHost" FullName="Microsoft.Azure.EventHubs.Processor.EventProcessorHost">
  <TypeSignature Language="C#" Value="public sealed class EventProcessorHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventProcessorHost extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.EventHubs.Processor.EventProcessorHost" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventProcessorHost" />
  <TypeSignature Language="F#" Value="type EventProcessorHost = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a host for processing Event Hubs event data.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorHost (string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, storageConnectionString As String, leaseContainerName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost : string * string * string * string * string -&gt; Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Usage="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost (eventHubPath, consumerGroupName, eventHubConnectionString, storageConnectionString, leaseContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="eventHubConnectionString" Type="System.String" />
        <Parameter Name="storageConnectionString" Type="System.String" />
        <Parameter Name="leaseContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventHubPath">The name of the EventHub.</param>
        <param name="consumerGroupName">The name of the consumer group within the Event Hub.</param>
        <param name="eventHubConnectionString">Connection string for the Event Hub to receive from.</param>
        <param name="storageConnectionString">Connection string to Azure Storage account used for leases and checkpointing.</param>
        <param name="leaseContainerName">Azure Storage container name for use by built-in lease and checkpoint manager.</param>
        <summary>
             Create a new host to process events from an Event Hub.
             
             <para>Since Event Hubs are frequently used for scale-out, high-traffic scenarios, generally there will
             be only one host per process, and the processes will be run on separate machines. However, it is
             supported to run multiple hosts on one machine, or even within one process, if throughput is not
             a concern.</para>
            
             This overload of the constructor uses the default, built-in lease and checkpoint managers. The
             Azure Storage account specified by the storageConnectionString parameter is used by the built-in
             managers to record leases and checkpoints.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorHost (string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, Microsoft.Azure.EventHubs.Processor.ICheckpointManager checkpointManager, Microsoft.Azure.EventHubs.Processor.ILeaseManager leaseManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, class Microsoft.Azure.EventHubs.Processor.ICheckpointManager checkpointManager, class Microsoft.Azure.EventHubs.Processor.ILeaseManager leaseManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.EventHubs.Processor.ICheckpointManager,Microsoft.Azure.EventHubs.Processor.ILeaseManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostName As String, eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, checkpointManager As ICheckpointManager, leaseManager As ILeaseManager)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost : string * string * string * string * Microsoft.Azure.EventHubs.Processor.ICheckpointManager * Microsoft.Azure.EventHubs.Processor.ILeaseManager -&gt; Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Usage="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost (hostName, eventHubPath, consumerGroupName, eventHubConnectionString, checkpointManager, leaseManager)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="eventHubConnectionString" Type="System.String" />
        <Parameter Name="checkpointManager" Type="Microsoft.Azure.EventHubs.Processor.ICheckpointManager" />
        <Parameter Name="leaseManager" Type="Microsoft.Azure.EventHubs.Processor.ILeaseManager" />
      </Parameters>
      <Docs>
        <param name="hostName">Name of the processor host. MUST BE UNIQUE. Strongly recommend including a Guid to ensure uniqueness.</param>
        <param name="eventHubPath">The name of the EventHub.</param>
        <param name="consumerGroupName">The name of the consumer group within the Event Hub.</param>
        <param name="eventHubConnectionString">Connection string for the Event Hub to receive from.</param>
        <param name="checkpointManager">Object implementing ICheckpointManager which handles partition checkpointing.</param>
        <param name="leaseManager">Object implementing ILeaseManager which handles leases for partitions.</param>
        <summary>
            Create a new host to process events from an Event Hub.
            
            <para>This overload of the constructor allows maximum flexibility.
            This one allows the caller to specify the name of the processor host as well.
            The overload also allows the caller to provide their own lease and checkpoint managers to replace the built-in
            ones based on Azure Storage.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorHost (Uri endpointAddress, string eventHubPath, string consumerGroupName, Microsoft.Azure.EventHubs.ITokenProvider tokenProvider, Microsoft.WindowsAzure.Storage.CloudStorageAccount cloudStorageAccount, string leaseContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpointAddress, string eventHubPath, string consumerGroupName, class Microsoft.Azure.EventHubs.ITokenProvider tokenProvider, class Microsoft.WindowsAzure.Storage.CloudStorageAccount cloudStorageAccount, string leaseContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost : Uri * string * string * Microsoft.Azure.EventHubs.ITokenProvider * Microsoft.WindowsAzure.Storage.CloudStorageAccount * string -&gt; Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Usage="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost (endpointAddress, eventHubPath, consumerGroupName, tokenProvider, cloudStorageAccount, leaseContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointAddress" Type="System.Uri" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="tokenProvider" Type="Microsoft.Azure.EventHubs.ITokenProvider" />
        <Parameter Name="cloudStorageAccount" Type="Microsoft.WindowsAzure.Storage.CloudStorageAccount" />
        <Parameter Name="leaseContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpointAddress">Fully qualified domain name for Event Hubs. Most likely, {yournamespace}.servicebus.windows.net</param>
        <param name="eventHubPath">The name of the EventHub.</param>
        <param name="consumerGroupName">The name of the consumer group within the Event Hub.</param>
        <param name="tokenProvider">Token provider which will generate security tokens for authorization.</param>
        <param name="cloudStorageAccount">Azure Storage account used for leases and checkpointing.</param>
        <param name="leaseContainerName">Azure Storage container name for use by built-in lease and checkpoint manager.</param>
        <summary>
            Create a new host to process events from an Event Hub with provided <see cref="T:Microsoft.Azure.EventHubs.TokenProvider" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorHost (string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName, string storageBlobPrefix = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName, string eventHubPath, string consumerGroupName, string eventHubConnectionString, string storageConnectionString, string leaseContainerName, string storageBlobPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostName As String, eventHubPath As String, consumerGroupName As String, eventHubConnectionString As String, storageConnectionString As String, leaseContainerName As String, Optional storageBlobPrefix As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost : string * string * string * string * string * string * string -&gt; Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Usage="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost (hostName, eventHubPath, consumerGroupName, eventHubConnectionString, storageConnectionString, leaseContainerName, storageBlobPrefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="eventHubConnectionString" Type="System.String" />
        <Parameter Name="storageConnectionString" Type="System.String" />
        <Parameter Name="leaseContainerName" Type="System.String" />
        <Parameter Name="storageBlobPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">A name for this event processor host. See method notes.</param>
        <param name="eventHubPath">The name of the EventHub.</param>
        <param name="consumerGroupName">The name of the consumer group within the Event Hub.</param>
        <param name="eventHubConnectionString">Connection string for the Event Hub to receive from.</param>
        <param name="storageConnectionString">Connection string to Azure Storage account used for leases and checkpointing.</param>
        <param name="leaseContainerName">Azure Storage container name for use by built-in lease and checkpoint manager.</param>
        <param name="storageBlobPrefix">Prefix used when naming blobs within the storage container.</param>
        <summary>
            Create a new host to process events from an Event Hub.
            
            <para>This overload of the constructor uses the default, built-in lease and checkpoint managers.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorHost (string hostName, Uri endpointAddress, string eventHubPath, string consumerGroupName, Microsoft.Azure.EventHubs.ITokenProvider tokenProvider, Microsoft.WindowsAzure.Storage.CloudStorageAccount cloudStorageAccount, string leaseContainerName, string storageBlobPrefix = null, Nullable&lt;TimeSpan&gt; operationTimeout = null, Microsoft.Azure.EventHubs.TransportType transportType = Microsoft.Azure.EventHubs.TransportType.Amqp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName, class System.Uri endpointAddress, string eventHubPath, string consumerGroupName, class Microsoft.Azure.EventHubs.ITokenProvider tokenProvider, class Microsoft.WindowsAzure.Storage.CloudStorageAccount cloudStorageAccount, string leaseContainerName, string storageBlobPrefix, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; operationTimeout, valuetype Microsoft.Azure.EventHubs.TransportType transportType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.#ctor(System.String,System.Uri,System.String,System.String,Microsoft.Azure.EventHubs.ITokenProvider,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.EventHubs.TransportType)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost : string * Uri * string * string * Microsoft.Azure.EventHubs.ITokenProvider * Microsoft.WindowsAzure.Storage.CloudStorageAccount * string * string * Nullable&lt;TimeSpan&gt; * Microsoft.Azure.EventHubs.TransportType -&gt; Microsoft.Azure.EventHubs.Processor.EventProcessorHost" Usage="new Microsoft.Azure.EventHubs.Processor.EventProcessorHost (hostName, endpointAddress, eventHubPath, consumerGroupName, tokenProvider, cloudStorageAccount, leaseContainerName, storageBlobPrefix, operationTimeout, transportType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="endpointAddress" Type="System.Uri" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="tokenProvider" Type="Microsoft.Azure.EventHubs.ITokenProvider" />
        <Parameter Name="cloudStorageAccount" Type="Microsoft.WindowsAzure.Storage.CloudStorageAccount" />
        <Parameter Name="leaseContainerName" Type="System.String" />
        <Parameter Name="storageBlobPrefix" Type="System.String" />
        <Parameter Name="operationTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="transportType" Type="Microsoft.Azure.EventHubs.TransportType" />
      </Parameters>
      <Docs>
        <param name="hostName">Name of the processor host. MUST BE UNIQUE. Strongly recommend including a Guid to ensure uniqueness.</param>
        <param name="endpointAddress">Fully qualified domain name for Event Hubs. Most likely, {yournamespace}.servicebus.windows.net</param>
        <param name="eventHubPath">The name of the EventHub.</param>
        <param name="consumerGroupName">The name of the consumer group within the Event Hub.</param>
        <param name="tokenProvider">Token provider which will generate security tokens for authorization.</param>
        <param name="cloudStorageAccount">Azure Storage account used for leases and checkpointing.</param>
        <param name="leaseContainerName">Azure Storage container name for use by built-in lease and checkpoint manager.</param>
        <param name="storageBlobPrefix">Prefix used when naming blobs within the storage container.</param>
        <param name="operationTimeout">Operation timeout for Event Hubs operations.</param>
        <param name="transportType">Transport type on connection.</param>
        <summary>
            Create a new host to process events from an Event Hub with provided <see cref="T:Microsoft.Azure.EventHubs.TokenProvider" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumerGroupName">
      <MemberSignature Language="C#" Value="public string ConsumerGroupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerGroupName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerGroupName As String" />
      <MemberSignature Language="F#" Value="member this.ConsumerGroupName : string" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.ConsumerGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the consumer group name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="public Uri EndpointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri EndpointAddress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointAddress As Uri" />
      <MemberSignature Language="F#" Value="member this.EndpointAddress : Uri" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EndpointAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the event endpoint URI.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubPath">
      <MemberSignature Language="C#" Value="public string EventHubPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubPath As String" />
      <MemberSignature Language="F#" Value="member this.EventHubPath : string" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventHubPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the event hub path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostName As String" />
      <MemberSignature Language="F#" Value="member this.HostName : string" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns processor host name.
            If the processor host name was automatically generated, this is the only way to get it.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OperationTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OperationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.OperationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperationTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.OperationTimeout : TimeSpan" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.OperationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the operation timeout.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionManagerOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions PartitionManagerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions PartitionManagerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.PartitionManagerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionManagerOptions As PartitionManagerOptions" />
      <MemberSignature Language="F#" Value="member this.PartitionManagerOptions : Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions with get, set" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.PartitionManagerOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.EventHubs.Processor.PartitionManagerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the 
            <see cref="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.PartitionManagerOptions" /> instance used by the 
            <see cref="T:Microsoft.Azure.EventHubs.Processor.EventProcessorHost" /> object.</summary>
        <value>The <see cref="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.PartitionManagerOptions" /> instance.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterEventProcessorAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterEventProcessorAsync&lt;T&gt; () where T : Microsoft.Azure.EventHubs.Processor.IEventProcessornew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RegisterEventProcessorAsync&lt;.ctor (class Microsoft.Azure.EventHubs.Processor.IEventProcessor) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterEventProcessorAsync(Of T As {IEventProcessorNew}) () As Task" />
      <MemberSignature Language="F#" Value="member this.RegisterEventProcessorAsync : unit -&gt; System.Threading.Tasks.Task (requires 'T :&gt; Microsoft.Azure.EventHubs.Processor.IEventProcessor and 'T : (new : unit -&gt; 'T))" Usage="eventProcessorHost.RegisterEventProcessorAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Azure.EventHubs.Processor.IEventProcessor</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Implementation of your application specific <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" />.</typeparam>
        <summary>
            This registers <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" /> implementation with the host using <see cref="T:Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory`1" />.  
            This also starts the host and causes it to start participating in the partition distribution process.
            </summary>
        <returns>A task to indicate EventProcessorHost instance is started.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterEventProcessorAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterEventProcessorAsync&lt;T&gt; (Microsoft.Azure.EventHubs.Processor.EventProcessorOptions processorOptions) where T : Microsoft.Azure.EventHubs.Processor.IEventProcessornew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RegisterEventProcessorAsync&lt;.ctor (class Microsoft.Azure.EventHubs.Processor.IEventProcessor) T&gt;(class Microsoft.Azure.EventHubs.Processor.EventProcessorOptions processorOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorAsync``1(Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterEventProcessorAsync(Of T As {IEventProcessorNew}) (processorOptions As EventProcessorOptions) As Task" />
      <MemberSignature Language="F#" Value="member this.RegisterEventProcessorAsync : Microsoft.Azure.EventHubs.Processor.EventProcessorOptions -&gt; System.Threading.Tasks.Task (requires 'T :&gt; Microsoft.Azure.EventHubs.Processor.IEventProcessor and 'T : (new : unit -&gt; 'T))" Usage="eventProcessorHost.RegisterEventProcessorAsync processorOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Azure.EventHubs.Processor.IEventProcessor</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="processorOptions" Type="Microsoft.Azure.EventHubs.Processor.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">Implementation of your application specific <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" />.</typeparam>
        <param name="processorOptions">
          <see cref="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions" /> to control various aspects of message pump created when ownership 
            is acquired for a particular partition of EventHub.</param>
        <summary>
            This registers <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" /> implementation with the host using <see cref="T:Microsoft.Azure.EventHubs.Processor.DefaultEventProcessorFactory`1" />.  
            This also starts the host and causes it to start participating in the partition distribution process.
            </summary>
        <returns>A task to indicate EventProcessorHost instance is started.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterEventProcessorFactoryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterEventProcessorFactoryAsync (Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RegisterEventProcessorFactoryAsync(class Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterEventProcessorFactoryAsync (factory As IEventProcessorFactory) As Task" />
      <MemberSignature Language="F#" Value="member this.RegisterEventProcessorFactoryAsync : Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory -&gt; System.Threading.Tasks.Task" Usage="eventProcessorHost.RegisterEventProcessorFactoryAsync factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" />
      </Parameters>
      <Docs>
        <param name="factory">Instance of <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" /> implementation.</param>
        <summary>
            This registers <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" /> implementation with the host which is used to create an instance of 
            <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" /> when it takes ownership of a partition.  This also starts the host and causes it to start participating 
            in the partition distribution process.
            </summary>
        <returns>A task to indicate EventProcessorHost instance is started.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterEventProcessorFactoryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterEventProcessorFactoryAsync (Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory factory, Microsoft.Azure.EventHubs.Processor.EventProcessorOptions processorOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RegisterEventProcessorFactoryAsync(class Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory factory, class Microsoft.Azure.EventHubs.Processor.EventProcessorOptions processorOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.RegisterEventProcessorFactoryAsync(Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory,Microsoft.Azure.EventHubs.Processor.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterEventProcessorFactoryAsync (factory As IEventProcessorFactory, processorOptions As EventProcessorOptions) As Task" />
      <MemberSignature Language="F#" Value="member this.RegisterEventProcessorFactoryAsync : Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory * Microsoft.Azure.EventHubs.Processor.EventProcessorOptions -&gt; System.Threading.Tasks.Task" Usage="eventProcessorHost.RegisterEventProcessorFactoryAsync (factory, processorOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" />
        <Parameter Name="processorOptions" Type="Microsoft.Azure.EventHubs.Processor.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="factory">Instance of <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" /> implementation.</param>
        <param name="processorOptions">
          <see cref="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.EventProcessorOptions" /> to control various aspects of message pump created when ownership 
            is acquired for a particular partition of EventHub.</param>
        <summary>
            This registers <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessorFactory" /> implementation with the host which is used to create an instance of 
            <see cref="T:Microsoft.Azure.EventHubs.Processor.IEventProcessor" /> when it takes ownership of a partition.  This also starts the host and causes it to start participating 
            in the partition distribution process.
            </summary>
        <returns>A task to indicate EventProcessorHost instance is started.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.EventHubs.TransportType TransportType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.EventHubs.TransportType TransportType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.TransportType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportType As TransportType" />
      <MemberSignature Language="F#" Value="member this.TransportType : Microsoft.Azure.EventHubs.TransportType" Usage="Microsoft.Azure.EventHubs.Processor.EventProcessorHost.TransportType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.EventHubs.TransportType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the transport type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterEventProcessorAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UnregisterEventProcessorAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UnregisterEventProcessorAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.Processor.EventProcessorHost.UnregisterEventProcessorAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterEventProcessorAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.UnregisterEventProcessorAsync : unit -&gt; System.Threading.Tasks.Task" Usage="eventProcessorHost.UnregisterEventProcessorAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stop processing events.  Does not return until the shutdown is complete.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>