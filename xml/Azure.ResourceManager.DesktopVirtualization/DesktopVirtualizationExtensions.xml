<Type Name="DesktopVirtualizationExtensions" FullName="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions">
  <TypeSignature Language="C#" Value="public static class DesktopVirtualizationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DesktopVirtualizationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DesktopVirtualizationExtensions" />
  <TypeSignature Language="F#" Value="type DesktopVirtualizationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DesktopVirtualization. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHostPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPool (resourceGroupResource As ResourceGroupResource, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetHostPool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool (resourceGroupResource, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt; GetHostPoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt; GetHostPoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolAsync (resourceGroupResource As ResourceGroupResource, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostPoolResource))" />
      <MemberSignature Language="F#" Value="static member GetHostPoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolAsync (resourceGroupResource, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolResource GetHostPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolResource GetHostPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolResource (client As ArmClient, id As ResourceIdentifier) As HostPoolResource" />
      <MemberSignature Language="F#" Value="static member GetHostPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.HostPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPools (resourceGroupResource As ResourceGroupResource) As HostPoolCollection" />
      <MemberSignature Language="F#" Value="static member GetHostPools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of HostPoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of HostPoolResources and their operations over a HostPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetHostPools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools
            Operation Id: HostPools_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetHostPoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools
            Operation Id: HostPools_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMsixPackageResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.MsixPackageResource GetMsixPackageResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.MsixPackageResource GetMsixPackageResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetMsixPackageResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMsixPackageResource (client As ArmClient, id As ResourceIdentifier) As MsixPackageResource" />
      <MemberSignature Language="F#" Value="static member GetMsixPackageResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetMsixPackageResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.MsixPackageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlan">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlan (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlan(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlan (resourceGroupResource As ResourceGroupResource, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlan : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan (resourceGroupResource, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt; GetScalingPlanAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt; GetScalingPlanAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlanAsync (resourceGroupResource As ResourceGroupResource, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScalingPlanResource))" />
      <MemberSignature Language="F#" Value="static member GetScalingPlanAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanAsync (resourceGroupResource, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource GetScalingPlanResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource GetScalingPlanResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlanResource (client As ArmClient, id As ResourceIdentifier) As ScalingPlanResource" />
      <MemberSignature Language="F#" Value="static member GetScalingPlanResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlans (resourceGroupResource As ResourceGroupResource) As ScalingPlanCollection" />
      <MemberSignature Language="F#" Value="static member GetScalingPlans : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of ScalingPlanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ScalingPlanResources and their operations over a ScalingPlanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlans (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlans : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans
            Operation Id: ScalingPlans_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlansAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlansAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlansAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlansAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlansAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans
            Operation Id: ScalingPlans_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionHostResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.SessionHostResource GetSessionHostResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.SessionHostResource GetSessionHostResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetSessionHostResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSessionHostResource (client As ArmClient, id As ResourceIdentifier) As SessionHostResource" />
      <MemberSignature Language="F#" Value="static member GetSessionHostResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.SessionHostResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetSessionHostResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.SessionHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.SessionHostResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserSessionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.UserSessionResource GetUserSessionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.UserSessionResource GetUserSessionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetUserSessionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUserSessionResource (client As ArmClient, id As ResourceIdentifier) As UserSessionResource" />
      <MemberSignature Language="F#" Value="static member GetUserSessionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.UserSessionResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetUserSessionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.UserSessionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.UserSessionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroup (resourceGroupResource As ResourceGroupResource, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroup : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup (resourceGroupResource, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt; GetVirtualApplicationGroupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt; GetVirtualApplicationGroupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupAsync (resourceGroupResource As ResourceGroupResource, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualApplicationGroupResource))" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupAsync (resourceGroupResource, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource GetVirtualApplicationGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource GetVirtualApplicationGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupResource (client As ArmClient, id As ResourceIdentifier) As VirtualApplicationGroupResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroups (resourceGroupResource As ResourceGroupResource) As VirtualApplicationGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroups : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualApplicationGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualApplicationGroupResources and their operations over a VirtualApplicationGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroups (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroups(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroups (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroups : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups (subscriptionResource, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups
            Operation Id: ApplicationGroups_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroupsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroupsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupsAsync (subscriptionResource, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups
            Operation Id: ApplicationGroups_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource GetVirtualApplicationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource GetVirtualApplicationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationResource (client As ArmClient, id As ResourceIdentifier) As VirtualApplicationResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualDesktopResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource GetVirtualDesktopResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource GetVirtualDesktopResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualDesktopResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualDesktopResource (client As ArmClient, id As ResourceIdentifier) As VirtualDesktopResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualDesktopResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualDesktopResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspace (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspace(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspace (resourceGroupResource As ResourceGroupResource, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspace : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace (resourceGroupResource, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt; GetVirtualWorkspaceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt; GetVirtualWorkspaceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaceAsync (resourceGroupResource As ResourceGroupResource, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualWorkspaceResource))" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceAsync (resourceGroupResource, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource GetVirtualWorkspaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource GetVirtualWorkspaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaceResource (client As ArmClient, id As ResourceIdentifier) As VirtualWorkspaceResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaces (resourceGroupResource As ResourceGroupResource) As VirtualWorkspaceCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaces : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualWorkspaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualWorkspaceResources and their operations over a VirtualWorkspaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspaces(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaces (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaces : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces
            Operation Id: Workspaces_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspacesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspacesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspacesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspacesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspacesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces
            Operation Id: Workspaces_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
