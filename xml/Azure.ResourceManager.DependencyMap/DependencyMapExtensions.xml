<Type Name="DependencyMapExtensions" FullName="Azure.ResourceManager.DependencyMap.DependencyMapExtensions">
  <TypeSignature Language="C#" Value="public static class DependencyMapExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyMapExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DependencyMap.DependencyMapExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DependencyMapExtensions" />
  <TypeSignature Language="F#" Value="type DependencyMapExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DependencyMap. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDependencyMap">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMap (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMap(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMap(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMap (resourceGroupResource As ResourceGroupResource, mapName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DependencyMapResource)" />
      <MemberSignature Language="F#" Value="static member GetDependencyMap : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMap (resourceGroupResource, mapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="mapName"> Maps resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a MapsResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}</description></item><item><term>Operation Id</term><description>MapsResource_Get</description></item><item><term>Default Api Version</term><description>2025-01-31-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapResourceGroupResource.GetDependencyMap(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="mapName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mapName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMapAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;&gt; GetDependencyMapAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;&gt; GetDependencyMapAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMapAsync (resourceGroupResource As ResourceGroupResource, mapName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DependencyMapResource))" />
      <MemberSignature Language="F#" Value="static member GetDependencyMapAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;&gt;" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapAsync (resourceGroupResource, mapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="mapName"> Maps resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a MapsResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}</description></item><item><term>Operation Id</term><description>MapsResource_Get</description></item><item><term>Default Api Version</term><description>2025-01-31-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapResourceGroupResource.GetDependencyMapAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="mapName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mapName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMapDiscoverySourceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource GetDependencyMapDiscoverySourceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource GetDependencyMapDiscoverySourceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapDiscoverySourceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMapDiscoverySourceResource (client As ArmClient, id As ResourceIdentifier) As DependencyMapDiscoverySourceResource" />
      <MemberSignature Language="F#" Value="static member GetDependencyMapDiscoverySourceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapDiscoverySourceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapArmClient.GetDependencyMapDiscoverySourceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMapResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.DependencyMapResource GetDependencyMapResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.DependencyMapResource GetDependencyMapResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMapResource (client As ArmClient, id As ResourceIdentifier) As DependencyMapResource" />
      <MemberSignature Language="F#" Value="static member GetDependencyMapResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DependencyMap.DependencyMapResource" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.DependencyMapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DependencyMap.DependencyMapResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapArmClient.GetDependencyMapResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMaps">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.DependencyMapCollection GetDependencyMaps (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.DependencyMapCollection GetDependencyMaps(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMaps(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMaps (resourceGroupResource As ResourceGroupResource) As DependencyMapCollection" />
      <MemberSignature Language="F#" Value="static member GetDependencyMaps : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DependencyMap.DependencyMapCollection" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMaps resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.DependencyMapCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DependencyMapResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapResourceGroupResource.GetDependencyMaps" /> instead.</description></item></summary>
        <returns> An object representing collection of DependencyMapResources and their operations over a DependencyMapResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMaps">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMaps (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMaps(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMaps(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMaps (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DependencyMapResource)" />
      <MemberSignature Language="F#" Value="static member GetDependencyMaps : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMaps (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List MapsResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DependencyMap/maps</description></item><item><term>Operation Id</term><description>MapsResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-01-31-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapSubscriptionResource.GetDependencyMaps(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyMapsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMapsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DependencyMap.DependencyMapResource&gt; GetDependencyMapsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDependencyMapsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DependencyMapResource)" />
      <MemberSignature Language="F#" Value="static member GetDependencyMapsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;" Usage="Azure.ResourceManager.DependencyMap.DependencyMapExtensions.GetDependencyMapsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DependencyMap.DependencyMapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List MapsResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DependencyMap/maps</description></item><item><term>Operation Id</term><description>MapsResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-01-31-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DependencyMap.Mocking.MockableDependencyMapSubscriptionResource.GetDependencyMaps(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
