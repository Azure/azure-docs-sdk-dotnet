<Type Name="Entities" FullName="Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities">
  <TypeSignature Language="C#" Value="public class Entities : Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.SearchResultsAnswer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Entities extends Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.SearchResultsAnswer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities" />
  <TypeSignature Language="VB.NET" Value="Public Class Entities&#xA;Inherits SearchResultsAnswer" />
  <TypeSignature Language="F#" Value="type Entities = class&#xA;    inherit SearchResultsAnswer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.SearchResultsAnswer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines an entity answer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Entities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Entities class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Entities (System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; value, string id = null, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.ContractualRulesContractualRule&gt; contractualRules = null, string webSearchUrl = null, Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.QueryContext queryContext = null, string queryScenario = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; value, string id, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.ContractualRulesContractualRule&gt; contractualRules, string webSearchUrl, class Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.QueryContext queryContext, string queryScenario) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.#ctor(System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing},System.String,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.ContractualRulesContractualRule},System.String,Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.QueryContext,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; * string * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.ContractualRulesContractualRule&gt; * string * Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.QueryContext * string -&gt; Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities" Usage="new Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities (value, id, contractualRules, webSearchUrl, queryContext, queryScenario)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt;" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="contractualRules" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.ContractualRulesContractualRule&gt;" />
        <Parameter Name="webSearchUrl" Type="System.String" />
        <Parameter Name="queryContext" Type="Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.QueryContext" />
        <Parameter Name="queryScenario" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A list of entities.</param>
        <param name="id">A String identifier.</param>
        <param name="contractualRules">A list of rules that you must adhere
            to if you display the item.</param>
        <param name="webSearchUrl">The URL To Bing's search result for this
            item.</param>
        <param name="queryContext">To be added.</param>
        <param name="queryScenario">The supported query scenario. This
            field is set to DominantEntity or DisambiguationItem. The field is
            set to DominantEntity if Bing determines that only a single entity
            satisfies the request. For example, a book, movie, person, or
            attraction. If multiple entities could satisfy the request, the
            field is set to DisambiguationItem. For example, if the request
            uses the generic title of a movie franchise, the entity's type
            would likely be DisambiguationItem. But, if the request specifies a
            specific title from the franchise, the entity's type would likely
            be DominantEntity. Possible values include: 'DominantEntity',
            'DominantEntityWithDisambiguation', 'Disambiguation', 'List',
            'ListWithPivot'</param>
        <summary>
            Initializes a new instance of the Entities class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryScenario">
      <MemberSignature Language="C#" Value="public string QueryScenario { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryScenario" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.QueryScenario" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryScenario As String" />
      <MemberSignature Language="F#" Value="member this.QueryScenario : string" Usage="Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.QueryScenario" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="queryScenario")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the supported query scenario. This field is set to
            DominantEntity or DisambiguationItem. The field is set to
            DominantEntity if Bing determines that only a single entity
            satisfies the request. For example, a book, movie, person, or
            attraction. If multiple entities could satisfy the request, the
            field is set to DisambiguationItem. For example, if the request
            uses the generic title of a movie franchise, the entity's type
            would likely be DisambiguationItem. But, if the request specifies a
            specific title from the franchise, the entity's type would likely
            be DominantEntity. Possible values include: 'DominantEntity',
            'DominantEntityWithDisambiguation', 'Disambiguation', 'List',
            'ListWithPivot'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="entities.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As IList(Of Thing)" />
      <MemberSignature Language="F#" Value="member this.Value : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Entities.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.EntitySearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="value")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.EntitySearch.Models.Thing&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of entities.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>