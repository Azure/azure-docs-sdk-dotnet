<Type Name="MockableCdnResourceGroupResource" FullName="Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableCdnResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCdnResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCdnResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCdnResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCdnResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMigrateProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt; CanMigrateProfile (Azure.WaitUntil waitUntil, Azure.ResourceManager.Cdn.Models.CanMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt; CanMigrateProfile(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Cdn.Models.CanMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.CanMigrateProfile(Azure.WaitUntil,Azure.ResourceManager.Cdn.Models.CanMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanMigrateProfile (waitUntil As WaitUntil, content As CanMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CanMigrateResult)" />
      <MemberSignature Language="F#" Value="abstract member CanMigrateProfile : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.CanMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&#xA;override this.CanMigrateProfile : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.CanMigrateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;" Usage="mockableCdnResourceGroupResource.CanMigrateProfile (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.CanMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties needed to check if cdn profile or classic frontdoor can be migrated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/canMigrate</description></item><item><term>Operation Id</term><description>Profiles_CanMigrate</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CanMigrateProfileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&gt; CanMigrateProfileAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Cdn.Models.CanMigrateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&gt; CanMigrateProfileAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Cdn.Models.CanMigrateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.CanMigrateProfileAsync(Azure.WaitUntil,Azure.ResourceManager.Cdn.Models.CanMigrateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanMigrateProfileAsync (waitUntil As WaitUntil, content As CanMigrateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CanMigrateResult))" />
      <MemberSignature Language="F#" Value="abstract member CanMigrateProfileAsync : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.CanMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&gt;&#xA;override this.CanMigrateProfileAsync : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.CanMigrateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&gt;" Usage="mockableCdnResourceGroupResource.CanMigrateProfileAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.CanMigrateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.CanMigrateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties needed to check if cdn profile or classic frontdoor can be migrated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/canMigrate</description></item><item><term>Operation Id</term><description>Profiles_CanMigrate</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEndpointNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt; CheckEndpointNameAvailability (Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt; CheckEndpointNameAvailability(class Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.CheckEndpointNameAvailability(Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEndpointNameAvailability (content As EndpointNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EndpointNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckEndpointNameAvailability : Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&#xA;override this.CheckEndpointNameAvailability : Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;" Usage="mockableCdnResourceGroupResource.CheckEndpointNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/checkEndpointNameAvailability</description></item><item><term>Operation Id</term><description>CheckEndpointNameAvailability</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEndpointNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&gt; CheckEndpointNameAvailabilityAsync (Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&gt; CheckEndpointNameAvailabilityAsync(class Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.CheckEndpointNameAvailabilityAsync(Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEndpointNameAvailabilityAsync (content As EndpointNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EndpointNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckEndpointNameAvailabilityAsync : Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&gt;&#xA;override this.CheckEndpointNameAvailabilityAsync : Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&gt;" Usage="mockableCdnResourceGroupResource.CheckEndpointNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.EndpointNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/checkEndpointNameAvailability</description></item><item><term>Operation Id</term><description>CheckEndpointNameAvailability</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnWebApplicationFirewallPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyCollection GetCdnWebApplicationFirewallPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyCollection GetCdnWebApplicationFirewallPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnWebApplicationFirewallPolicies () As CdnWebApplicationFirewallPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCdnWebApplicationFirewallPolicies : unit -&gt; Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyCollection&#xA;override this.GetCdnWebApplicationFirewallPolicies : unit -&gt; Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyCollection" Usage="mockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CdnWebApplicationFirewallPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CdnWebApplicationFirewallPolicyResources and their operations over a CdnWebApplicationFirewallPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCdnWebApplicationFirewallPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt; GetCdnWebApplicationFirewallPolicy (string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt; GetCdnWebApplicationFirewallPolicy(string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnWebApplicationFirewallPolicy (policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnWebApplicationFirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCdnWebApplicationFirewallPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&#xA;override this.GetCdnWebApplicationFirewallPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;" Usage="mockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicy (policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyName"> The name of the CdnWebApplicationFirewallPolicy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve protection policy with specified name within a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}</description></item><item><term>Operation Id</term><description>Policies_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnWebApplicationFirewallPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&gt; GetCdnWebApplicationFirewallPolicyAsync (string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&gt; GetCdnWebApplicationFirewallPolicyAsync(string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnWebApplicationFirewallPolicyAsync (policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnWebApplicationFirewallPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCdnWebApplicationFirewallPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&gt;&#xA;override this.GetCdnWebApplicationFirewallPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&gt;" Usage="mockableCdnResourceGroupResource.GetCdnWebApplicationFirewallPolicyAsync (policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyName"> The name of the CdnWebApplicationFirewallPolicy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve protection policy with specified name within a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}</description></item><item><term>Operation Id</term><description>Policies_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.CdnWebApplicationFirewallPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt; GetProfile (string profileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.ProfileResource&gt; GetProfile(string profileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetProfile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProfile (profileName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProfileResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;&#xA;override this.GetProfile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;" Usage="mockableCdnResourceGroupResource.GetProfile (profileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="profileName"> Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}</description></item><item><term>Operation Id</term><description>Profiles_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="profileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;&gt; GetProfileAsync (string profileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.ProfileResource&gt;&gt; GetProfileAsync(string profileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetProfileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProfileAsync (profileName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProfileResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProfileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;&gt;&#xA;override this.GetProfileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;&gt;" Usage="mockableCdnResourceGroupResource.GetProfileAsync (profileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.ProfileResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="profileName"> Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}</description></item><item><term>Operation Id</term><description>Profiles_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="profileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.ProfileCollection GetProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.ProfileCollection GetProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.GetProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProfiles () As ProfileCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProfiles : unit -&gt; Azure.ResourceManager.Cdn.ProfileCollection&#xA;override this.GetProfiles : unit -&gt; Azure.ResourceManager.Cdn.ProfileCollection" Usage="mockableCdnResourceGroupResource.GetProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.ProfileCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ProfileResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ProfileResources and their operations over a ProfileResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt; MigrateProfile (Azure.WaitUntil waitUntil, Azure.ResourceManager.Cdn.Models.MigrationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Cdn.Models.MigrateResult&gt; MigrateProfile(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Cdn.Models.MigrationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.MigrateProfile(Azure.WaitUntil,Azure.ResourceManager.Cdn.Models.MigrationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MigrateProfile (waitUntil As WaitUntil, content As MigrationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of MigrateResult)" />
      <MemberSignature Language="F#" Value="abstract member MigrateProfile : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.MigrationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&#xA;override this.MigrateProfile : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.MigrationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;" Usage="mockableCdnResourceGroupResource.MigrateProfile (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.MigrationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties needed to migrate the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. The change need to be committed after this.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/migrate</description></item><item><term>Operation Id</term><description>Profiles_Migrate</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="MigrateProfileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&gt; MigrateProfileAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Cdn.Models.MigrationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&gt; MigrateProfileAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Cdn.Models.MigrationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnResourceGroupResource.MigrateProfileAsync(Azure.WaitUntil,Azure.ResourceManager.Cdn.Models.MigrationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MigrateProfileAsync (waitUntil As WaitUntil, content As MigrationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of MigrateResult))" />
      <MemberSignature Language="F#" Value="abstract member MigrateProfileAsync : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.MigrationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&gt;&#xA;override this.MigrateProfileAsync : Azure.WaitUntil * Azure.ResourceManager.Cdn.Models.MigrationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&gt;" Usage="mockableCdnResourceGroupResource.MigrateProfileAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Cdn.Models.MigrateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.MigrationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties needed to migrate the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. The change need to be committed after this.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/migrate</description></item><item><term>Operation Id</term><description>Profiles_Migrate</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Cdn.ProfileResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
