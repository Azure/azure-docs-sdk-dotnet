<Type Name="MockableCdnTenantResource" FullName="Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource">
  <TypeSignature Language="C#" Value="public class MockableCdnTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCdnTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCdnTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCdnTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCdnTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCdnNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt; CheckCdnNameAvailability (Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt; CheckCdnNameAvailability(class Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource.CheckCdnNameAvailability(Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckCdnNameAvailability (content As CdnNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckCdnNameAvailability : Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&#xA;override this.CheckCdnNameAvailability : Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;" Usage="mockableCdnTenantResource.CheckCdnNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Cdn/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCdnNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&gt; CheckCdnNameAvailabilityAsync (Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&gt; CheckCdnNameAvailabilityAsync(class Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource.CheckCdnNameAvailabilityAsync(Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckCdnNameAvailabilityAsync (content As CdnNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckCdnNameAvailabilityAsync : Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&gt;&#xA;override this.CheckCdnNameAvailabilityAsync : Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&gt;" Usage="mockableCdnTenantResource.CheckCdnNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Cdn.Models.CdnNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Cdn/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeNodes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt; GetEdgeNodes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Cdn.Models.EdgeNode&gt; GetEdgeNodes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource.GetEdgeNodes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeNodes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EdgeNode)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeNodes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;&#xA;override this.GetEdgeNodes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;" Usage="mockableCdnTenantResource.GetEdgeNodes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Cdn/edgenodes</description></item><item><term>Operation Id</term><description>EdgeNodes_List</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Cdn.Models.EdgeNode" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeNodesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt; GetEdgeNodesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Cdn.Models.EdgeNode&gt; GetEdgeNodesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Mocking.MockableCdnTenantResource.GetEdgeNodesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeNodesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EdgeNode)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeNodesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;&#xA;override this.GetEdgeNodesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;" Usage="mockableCdnTenantResource.GetEdgeNodesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.EdgeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Cdn/edgenodes</description></item><item><term>Operation Id</term><description>EdgeNodes_List</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Cdn.Models.EdgeNode" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
