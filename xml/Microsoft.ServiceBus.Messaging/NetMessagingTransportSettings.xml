<Type Name="NetMessagingTransportSettings" FullName="Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings">
  <TypeSignature Language="C#" Value="public sealed class NetMessagingTransportSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetMessagingTransportSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceBus</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents .NET messaging transport settings.</summary>
    <remarks>
            This class provides Net Messaging Protocol (SBMP) specific configuration support for the NetMessagingBinding.MessagingFactorySettings property.  
            It exposes to configuration the settings available on the MessagingFactorySettings.
            </remarks>
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
    <altmember cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />
    <altmember cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
    <example>
      <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetMessagingTransportSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceBus</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchFlushInterval">
      <MemberSignature Language="C#" Value="public TimeSpan BatchFlushInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BatchFlushInterval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.BatchFlushInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceBus</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the batch flush interval.</summary>
        <value>The batch flush interval.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceBus</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes a deep copy of this object.</summary>
        <returns>A copy of this object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRedirect">
      <MemberSignature Language="C#" Value="public bool EnableRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRedirect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnableRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceBus</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the message redirect is enabled.</summary>
        <value>true if the message redirect is enabled; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.LeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceBus</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the lease timeout value for the LeaseTimeout property within 
            the <seealso cref="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" /> class.
            Default is 5 minutes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">throw if value is less than TimeSpan.Zero or larger than Int32.MaxValue milliseconds</exception>
      </Docs>
    </Member>
  </Members>
</Type>