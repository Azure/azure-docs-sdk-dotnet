<Type Name="DatabaseUpdate" FullName="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate">
  <TypeSignature Language="C#" Value="public class DatabaseUpdate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatabaseUpdate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate" />
  <TypeSignature Language="VB.NET" Value="Public Class DatabaseUpdate" />
  <TypeSignature Language="F#" Value="type DatabaseUpdate = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A partial update to the RedisEnterprise database
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatabaseUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the DatabaseUpdate class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatabaseUpdate (string clientProtocol = default, int? port = default, string provisioningState = default, string resourceState = default, string clusteringPolicy = default, string evictionPolicy = default, Microsoft.Azure.Management.RedisEnterprise.Models.Persistence persistence = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; modules = default, Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication geoReplication = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientProtocol, valuetype System.Nullable`1&lt;int32&gt; port, string provisioningState, string resourceState, string clusteringPolicy, string evictionPolicy, class Microsoft.Azure.Management.RedisEnterprise.Models.Persistence persistence, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; modules, class Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication geoReplication) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,Microsoft.Azure.Management.RedisEnterprise.Models.Persistence,System.Collections.Generic.IList{Microsoft.Azure.Management.RedisEnterprise.Models.Module},Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional clientProtocol As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional provisioningState As String = Nothing, Optional resourceState As String = Nothing, Optional clusteringPolicy As String = Nothing, Optional evictionPolicy As String = Nothing, Optional persistence As Persistence = Nothing, Optional modules As IList(Of Module) = Nothing, Optional geoReplication As DatabasePropertiesGeoReplication = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate : string * Nullable&lt;int&gt; * string * string * string * string * Microsoft.Azure.Management.RedisEnterprise.Models.Persistence * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; * Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication -&gt; Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate" Usage="new Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate (clientProtocol, port, provisioningState, resourceState, clusteringPolicy, evictionPolicy, persistence, modules, geoReplication)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientProtocol" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="resourceState" Type="System.String" />
        <Parameter Name="clusteringPolicy" Type="System.String" />
        <Parameter Name="evictionPolicy" Type="System.String" />
        <Parameter Name="persistence" Type="Microsoft.Azure.Management.RedisEnterprise.Models.Persistence" />
        <Parameter Name="modules" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt;" />
        <Parameter Name="geoReplication" Type="Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication" />
      </Parameters>
      <Docs>
        <param name="clientProtocol">Specifies whether redis clients can
            connect using TLS-encrypted or plaintext redis protocols. Default
            is TLS-encrypted. Possible values include: 'Encrypted',
            'Plaintext'</param>
        <param name="port">TCP port of the database endpoint. Specified at
            create time. Defaults to an available port.</param>
        <param name="provisioningState">Current provisioning status of the
            database. Possible values include: 'Succeeded', 'Failed',
            'Canceled', 'Creating', 'Updating', 'Deleting'</param>
        <param name="resourceState">Current resource status of the
            database. Possible values include: 'Running', 'Creating',
            'CreateFailed', 'Updating', 'UpdateFailed', 'Deleting',
            'DeleteFailed', 'Enabling', 'EnableFailed', 'Disabling',
            'DisableFailed', 'Disabled'</param>
        <param name="clusteringPolicy">Clustering policy - default is
            OSSCluster. Specified at create time. Possible values include:
            'EnterpriseCluster', 'OSSCluster'</param>
        <param name="evictionPolicy">Redis eviction policy - default is
            VolatileLRU. Possible values include: 'AllKeysLFU', 'AllKeysLRU',
            'AllKeysRandom', 'VolatileLRU', 'VolatileLFU', 'VolatileTTL',
            'VolatileRandom', 'NoEviction'</param>
        <param name="persistence">Persistence settings</param>
        <param name="modules">Optional set of redis modules to enable in
            this database - modules can only be added at creation time.</param>
        <param name="geoReplication">Optional set of properties to
            configure geo replication for this database.</param>
        <summary>
            Initializes a new instance of the DatabaseUpdate class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProtocol">
      <MemberSignature Language="C#" Value="public string ClientProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientProtocol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ClientProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientProtocol As String" />
      <MemberSignature Language="F#" Value="member this.ClientProtocol : string with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ClientProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.clientProtocol")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.clientProtocol")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies whether redis clients can connect using
            TLS-encrypted or plaintext redis protocols. Default is
            TLS-encrypted. Possible values include: 'Encrypted', 'Plaintext'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusteringPolicy">
      <MemberSignature Language="C#" Value="public string ClusteringPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusteringPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ClusteringPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusteringPolicy As String" />
      <MemberSignature Language="F#" Value="member this.ClusteringPolicy : string with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ClusteringPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.clusteringPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.clusteringPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets clustering policy - default is OSSCluster. Specified
            at create time. Possible values include: 'EnterpriseCluster',
            'OSSCluster'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvictionPolicy">
      <MemberSignature Language="C#" Value="public string EvictionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvictionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.EvictionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property EvictionPolicy As String" />
      <MemberSignature Language="F#" Value="member this.EvictionPolicy : string with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.EvictionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.evictionPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.evictionPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets redis eviction policy - default is VolatileLRU.
            Possible values include: 'AllKeysLFU', 'AllKeysLRU',
            'AllKeysRandom', 'VolatileLRU', 'VolatileLFU', 'VolatileTTL',
            'VolatileRandom', 'NoEviction'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoReplication">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication GeoReplication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication GeoReplication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.GeoReplication" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoReplication As DatabasePropertiesGeoReplication" />
      <MemberSignature Language="F#" Value="member this.GeoReplication : Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.GeoReplication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.geoReplication")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.geoReplication")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.RedisEnterprise.Models.DatabasePropertiesGeoReplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets optional set of properties to configure geo
            replication for this database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; Modules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Property Modules As IList(Of Module)" />
      <MemberSignature Language="F#" Value="member this.Modules : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt; with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.modules")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.modules")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.RedisEnterprise.Models.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets optional set of redis modules to enable in this
            database - modules can only be added at creation time.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persistence">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.RedisEnterprise.Models.Persistence Persistence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.RedisEnterprise.Models.Persistence Persistence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Persistence" />
      <MemberSignature Language="VB.NET" Value="Public Property Persistence As Persistence" />
      <MemberSignature Language="F#" Value="member this.Persistence : Microsoft.Azure.Management.RedisEnterprise.Models.Persistence with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Persistence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.persistence")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.persistence")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.RedisEnterprise.Models.Persistence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets persistence settings
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int? Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Port" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Port : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.port")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.port")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets TCP port of the database endpoint. Specified at create
            time. Defaults to an available port.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets current provisioning status of the database. Possible values
            include: 'Succeeded', 'Failed', 'Canceled', 'Creating', 'Updating',
            'Deleting'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceState">
      <MemberSignature Language="C#" Value="public string ResourceState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ResourceState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceState As String" />
      <MemberSignature Language="F#" Value="member this.ResourceState : string" Usage="Microsoft.Azure.Management.RedisEnterprise.Models.DatabaseUpdate.ResourceState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RedisEnterprise</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.resourceState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.resourceState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets current resource status of the database. Possible values
            include: 'Running', 'Creating', 'CreateFailed', 'Updating',
            'UpdateFailed', 'Deleting', 'DeleteFailed', 'Enabling',
            'EnableFailed', 'Disabling', 'DisableFailed', 'Disabled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
