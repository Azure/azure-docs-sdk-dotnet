<Type Name="DnsZoneResource" FullName="Azure.ResourceManager.Dns.DnsZoneResource">
  <TypeSignature Language="C#" Value="public class DnsZoneResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DnsZoneResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Dns.DnsZoneResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DnsZoneResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DnsZoneResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DnsZone along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDnsZoneResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDnsZone method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DnsZoneResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string zoneName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, zoneName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Dns.DnsZoneResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, zoneName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="zoneName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="zoneName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsZoneData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Dns.DnsZoneData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.DnsZoneResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DnsZoneData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Dns.DnsZoneData" Usage="Azure.ResourceManager.Dns.DnsZoneResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsZoneData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.Delete(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dnsZoneResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.DeleteAsync(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dnsZoneResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAaaaRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt; GetAaaaRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.AaaaRecordResource&gt; GetAaaaRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAaaaRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAaaaRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AaaaRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAaaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;&#xA;override this.GetAaaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;" Usage="dnsZoneResource.GetAaaaRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAaaaRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;&gt; GetAaaaRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.AaaaRecordResource&gt;&gt; GetAaaaRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAaaaRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAaaaRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AaaaRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAaaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;&gt;&#xA;override this.GetAaaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;&gt;" Usage="dnsZoneResource.GetAaaaRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.AaaaRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAaaaRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.AaaaRecordCollection GetAaaaRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.AaaaRecordCollection GetAaaaRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAaaaRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAaaaRecords () As AaaaRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAaaaRecords : unit -&gt; Azure.ResourceManager.Dns.AaaaRecordCollection&#xA;override this.GetAaaaRecords : unit -&gt; Azure.ResourceManager.Dns.AaaaRecordCollection" Usage="dnsZoneResource.GetAaaaRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.AaaaRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AaaaRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of AaaaRecordResources and their operations over a AaaaRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRecordSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt; GetAllRecordSets (int? top = default, string recordSetNameSuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Dns.RecordSetData&gt; GetAllRecordSets(valuetype System.Nullable`1&lt;int32&gt; top, string recordSetNameSuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAllRecordSets(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllRecordSets (Optional top As Nullable(Of Integer) = Nothing, Optional recordSetNameSuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecordSetData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;&#xA;override this.GetAllRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;" Usage="dnsZoneResource.GetAllRecordSets (top, recordSetNameSuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordSetNameSuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all
            Operation Id: RecordSets_ListAllByDnsZone
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRecordSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt; GetAllRecordSetsAsync (int? top = default, string recordSetNameSuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Dns.RecordSetData&gt; GetAllRecordSetsAsync(valuetype System.Nullable`1&lt;int32&gt; top, string recordSetNameSuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAllRecordSetsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllRecordSetsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional recordSetNameSuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecordSetData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;&#xA;override this.GetAllRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;" Usage="dnsZoneResource.GetAllRecordSetsAsync (top, recordSetNameSuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordSetNameSuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all
            Operation Id: RecordSets_ListAllByDnsZone
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetARecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt; GetARecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.ARecordResource&gt; GetARecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetARecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetARecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ARecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetARecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;&#xA;override this.GetARecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;" Usage="dnsZoneResource.GetARecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetARecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;&gt; GetARecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.ARecordResource&gt;&gt; GetARecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetARecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetARecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ARecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetARecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;&gt;&#xA;override this.GetARecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;&gt;" Usage="dnsZoneResource.GetARecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.ARecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetARecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.ARecordCollection GetARecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.ARecordCollection GetARecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetARecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetARecords () As ARecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetARecords : unit -&gt; Azure.ResourceManager.Dns.ARecordCollection&#xA;override this.GetARecords : unit -&gt; Azure.ResourceManager.Dns.ARecordCollection" Usage="dnsZoneResource.GetARecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.ARecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ARecordResources in the DnsZone. </summary>
        <returns> An object representing collection of ARecordResources and their operations over a ARecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaaRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt; GetCaaRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.CaaRecordResource&gt; GetCaaRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCaaRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCaaRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CaaRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;&#xA;override this.GetCaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;" Usage="dnsZoneResource.GetCaaRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCaaRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;&gt; GetCaaRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.CaaRecordResource&gt;&gt; GetCaaRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCaaRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCaaRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CaaRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;&gt;&#xA;override this.GetCaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;&gt;" Usage="dnsZoneResource.GetCaaRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CaaRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCaaRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.CaaRecordCollection GetCaaRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.CaaRecordCollection GetCaaRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCaaRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCaaRecords () As CaaRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCaaRecords : unit -&gt; Azure.ResourceManager.Dns.CaaRecordCollection&#xA;override this.GetCaaRecords : unit -&gt; Azure.ResourceManager.Dns.CaaRecordCollection" Usage="dnsZoneResource.GetCaaRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.CaaRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CaaRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of CaaRecordResources and their operations over a CaaRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCnameRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt; GetCnameRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.CnameRecordResource&gt; GetCnameRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCnameRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCnameRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CnameRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCnameRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;&#xA;override this.GetCnameRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;" Usage="dnsZoneResource.GetCnameRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCnameRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;&gt; GetCnameRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.CnameRecordResource&gt;&gt; GetCnameRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCnameRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCnameRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CnameRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCnameRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;&gt;&#xA;override this.GetCnameRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;&gt;" Usage="dnsZoneResource.GetCnameRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.CnameRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCnameRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.CnameRecordCollection GetCnameRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.CnameRecordCollection GetCnameRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetCnameRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCnameRecords () As CnameRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCnameRecords : unit -&gt; Azure.ResourceManager.Dns.CnameRecordCollection&#xA;override this.GetCnameRecords : unit -&gt; Azure.ResourceManager.Dns.CnameRecordCollection" Usage="dnsZoneResource.GetCnameRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.CnameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CnameRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of CnameRecordResources and their operations over a CnameRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMXRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt; GetMXRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.MXRecordResource&gt; GetMXRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetMXRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMXRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MXRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMXRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;&#xA;override this.GetMXRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;" Usage="dnsZoneResource.GetMXRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMXRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;&gt; GetMXRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.MXRecordResource&gt;&gt; GetMXRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetMXRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMXRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MXRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMXRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;&gt;&#xA;override this.GetMXRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;&gt;" Usage="dnsZoneResource.GetMXRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.MXRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMXRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.MXRecordCollection GetMXRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.MXRecordCollection GetMXRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetMXRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMXRecords () As MXRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMXRecords : unit -&gt; Azure.ResourceManager.Dns.MXRecordCollection&#xA;override this.GetMXRecords : unit -&gt; Azure.ResourceManager.Dns.MXRecordCollection" Usage="dnsZoneResource.GetMXRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.MXRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of MXRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of MXRecordResources and their operations over a MXRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNSRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt; GetNSRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.NSRecordResource&gt; GetNSRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetNSRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNSRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NSRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNSRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;&#xA;override this.GetNSRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;" Usage="dnsZoneResource.GetNSRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNSRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;&gt; GetNSRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.NSRecordResource&gt;&gt; GetNSRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetNSRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNSRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NSRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNSRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;&gt;&#xA;override this.GetNSRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;&gt;" Usage="dnsZoneResource.GetNSRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.NSRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNSRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.NSRecordCollection GetNSRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.NSRecordCollection GetNSRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetNSRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNSRecords () As NSRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNSRecords : unit -&gt; Azure.ResourceManager.Dns.NSRecordCollection&#xA;override this.GetNSRecords : unit -&gt; Azure.ResourceManager.Dns.NSRecordCollection" Usage="dnsZoneResource.GetNSRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.NSRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NSRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of NSRecordResources and their operations over a NSRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPtrRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt; GetPtrRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.PtrRecordResource&gt; GetPtrRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetPtrRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPtrRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PtrRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPtrRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;&#xA;override this.GetPtrRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;" Usage="dnsZoneResource.GetPtrRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPtrRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;&gt; GetPtrRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.PtrRecordResource&gt;&gt; GetPtrRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetPtrRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPtrRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PtrRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPtrRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;&gt;&#xA;override this.GetPtrRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;&gt;" Usage="dnsZoneResource.GetPtrRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.PtrRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPtrRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.PtrRecordCollection GetPtrRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.PtrRecordCollection GetPtrRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetPtrRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPtrRecords () As PtrRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPtrRecords : unit -&gt; Azure.ResourceManager.Dns.PtrRecordCollection&#xA;override this.GetPtrRecords : unit -&gt; Azure.ResourceManager.Dns.PtrRecordCollection" Usage="dnsZoneResource.GetPtrRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.PtrRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PtrRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of PtrRecordResources and their operations over a PtrRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt; GetRecordSets (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Dns.RecordSetData&gt; GetRecordSets(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSets(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSets (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecordSetData)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;&#xA;override this.GetRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;" Usage="dnsZoneResource.GetRecordSets (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets
            Operation Id: RecordSets_ListByDnsZone
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt; GetRecordSetsAsync (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Dns.RecordSetData&gt; GetRecordSetsAsync(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecordSetData)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;&#xA;override this.GetRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;" Usage="dnsZoneResource.GetRecordSetsAsync (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets
            Operation Id: RecordSets_ListByDnsZone
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoaRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt; GetSoaRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.SoaRecordResource&gt; GetSoaRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSoaRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoaRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoaRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;&#xA;override this.GetSoaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;" Usage="dnsZoneResource.GetSoaRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoaRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;&gt; GetSoaRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.SoaRecordResource&gt;&gt; GetSoaRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSoaRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoaRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoaRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSoaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;&gt;&#xA;override this.GetSoaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;&gt;" Usage="dnsZoneResource.GetSoaRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SoaRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoaRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.SoaRecordCollection GetSoaRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.SoaRecordCollection GetSoaRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSoaRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoaRecords () As SoaRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSoaRecords : unit -&gt; Azure.ResourceManager.Dns.SoaRecordCollection&#xA;override this.GetSoaRecords : unit -&gt; Azure.ResourceManager.Dns.SoaRecordCollection" Usage="dnsZoneResource.GetSoaRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.SoaRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SoaRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of SoaRecordResources and their operations over a SoaRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSrvRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt; GetSrvRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.SrvRecordResource&gt; GetSrvRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSrvRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSrvRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SrvRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSrvRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;&#xA;override this.GetSrvRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;" Usage="dnsZoneResource.GetSrvRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSrvRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;&gt; GetSrvRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.SrvRecordResource&gt;&gt; GetSrvRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSrvRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSrvRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SrvRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSrvRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;&gt;&#xA;override this.GetSrvRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;&gt;" Usage="dnsZoneResource.GetSrvRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.SrvRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSrvRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.SrvRecordCollection GetSrvRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.SrvRecordCollection GetSrvRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetSrvRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSrvRecords () As SrvRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSrvRecords : unit -&gt; Azure.ResourceManager.Dns.SrvRecordCollection&#xA;override this.GetSrvRecords : unit -&gt; Azure.ResourceManager.Dns.SrvRecordCollection" Usage="dnsZoneResource.GetSrvRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.SrvRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SrvRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of SrvRecordResources and their operations over a SrvRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTxtRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt; GetTxtRecord (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.TxtRecordResource&gt; GetTxtRecord(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetTxtRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTxtRecord (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TxtRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTxtRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;&#xA;override this.GetTxtRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;" Usage="dnsZoneResource.GetTxtRecord (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTxtRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;&gt; GetTxtRecordAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.TxtRecordResource&gt;&gt; GetTxtRecordAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetTxtRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTxtRecordAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TxtRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTxtRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;&gt;&#xA;override this.GetTxtRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;&gt;" Usage="dnsZoneResource.GetTxtRecordAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.TxtRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTxtRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.TxtRecordCollection GetTxtRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.TxtRecordCollection GetTxtRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetTxtRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTxtRecords () As TxtRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTxtRecords : unit -&gt; Azure.ResourceManager.Dns.TxtRecordCollection&#xA;override this.GetTxtRecords : unit -&gt; Azure.ResourceManager.Dns.TxtRecordCollection" Usage="dnsZoneResource.GetTxtRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.TxtRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TxtRecordResources in the DnsZone. </summary>
        <returns> An object representing collection of TxtRecordResources and their operations over a TxtRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.DnsZoneResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Dns.DnsZoneResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Dns.DnsZoneResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Dns.DnsZoneResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; Update (Azure.ResourceManager.Dns.Models.DnsZonePatch patch, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; Update(class Azure.ResourceManager.Dns.Models.DnsZonePatch patch, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.Update(Azure.ResourceManager.Dns.Models.DnsZonePatch,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As DnsZonePatch, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.Dns.Models.DnsZonePatch * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.Update : Azure.ResourceManager.Dns.Models.DnsZonePatch * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.Update (patch, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Dns.Models.DnsZonePatch" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> Parameters supplied to the Update operation. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a DNS zone. Does not modify DNS records within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; UpdateAsync (Azure.ResourceManager.Dns.Models.DnsZonePatch patch, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.Dns.Models.DnsZonePatch patch, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.UpdateAsync(Azure.ResourceManager.Dns.Models.DnsZonePatch,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As DnsZonePatch, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.Dns.Models.DnsZonePatch * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.Dns.Models.DnsZonePatch * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.UpdateAsync (patch, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Dns.Models.DnsZonePatch" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> Parameters supplied to the Update operation. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a DNS zone. Does not modify DNS records within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
