<Type Name="LicenseProfileMachineInstanceView" FullName="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView">
  <TypeSignature Language="C#" Value="public class LicenseProfileMachineInstanceView : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseProfileMachineInstanceView extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseProfileMachineInstanceView&#xA;Implements IJsonModel(Of LicenseProfileMachineInstanceView), IPersistableModel(Of LicenseProfileMachineInstanceView)" />
  <TypeSignature Language="F#" Value="type LicenseProfileMachineInstanceView = class&#xA;    interface IJsonModel&lt;LicenseProfileMachineInstanceView&gt;&#xA;    interface IPersistableModel&lt;LicenseProfileMachineInstanceView&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> License Profile Instance View in Machine Properties. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseProfileMachineInstanceView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BillingEndOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? BillingEndOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; BillingEndOn" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.BillingEndOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BillingEndOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.BillingEndOn : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.BillingEndOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The timestamp in UTC when the billing ends. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BillingStartOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? BillingStartOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; BillingStartOn" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.BillingStartOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BillingStartOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.BillingStartOn : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.BillingStartOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The timestamp in UTC when the billing starts. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisenrollmentOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? DisenrollmentOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; DisenrollmentOn" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.DisenrollmentOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisenrollmentOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.DisenrollmentOn : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.DisenrollmentOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The timestamp in UTC when the user disenrolled the feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnrollmentOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? EnrollmentOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; EnrollmentOn" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.EnrollmentOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnrollmentOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.EnrollmentOn : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.EnrollmentOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The timestamp in UTC when the user enrolls the feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Azure.ResponseError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResponseError Error" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As ResponseError" />
      <MemberSignature Language="F#" Value="member this.Error : Azure.ResponseError" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResponseError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The errors that were encountered during the feature enrollment or disenrollment. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EsuProfile">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties EsuProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties EsuProfile" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.EsuProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property EsuProfile As LicenseProfileMachineInstanceViewEsuProperties" />
      <MemberSignature Language="F#" Value="member this.EsuProfile : Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties with get, set" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.EsuProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Properties for the Machine ESU profile. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftwareAssuranceCustomer">
      <MemberSignature Language="C#" Value="public bool? IsSoftwareAssuranceCustomer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSoftwareAssuranceCustomer" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.IsSoftwareAssuranceCustomer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSoftwareAssuranceCustomer As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSoftwareAssuranceCustomer : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.IsSoftwareAssuranceCustomer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies if this machine is licensed as part of a Software Assurance agreement. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseChannel">
      <MemberSignature Language="C#" Value="public string LicenseChannel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseChannel" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.LicenseChannel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicenseChannel As String" />
      <MemberSignature Language="F#" Value="member this.LicenseChannel : string" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.LicenseChannel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates the license channel. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseStatus">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus? LicenseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt; LicenseStatus" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.LicenseStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicenseStatus As Nullable(Of HybridComputeLicenseStatus)" />
      <MemberSignature Language="F#" Value="member this.LicenseStatus : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.LicenseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates the license status of the OS. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductFeatures">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt; ProductFeatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt; ProductFeatures" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.ProductFeatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductFeatures As IList(Of HybridComputeProductFeature)" />
      <MemberSignature Language="F#" Value="member this.ProductFeatures : System.Collections.Generic.IList&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt;" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.ProductFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of product features. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType? ProductType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt; ProductType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.ProductType" />
      <MemberSignature Language="VB.NET" Value="Public Property ProductType As Nullable(Of LicenseProfileProductType)" />
      <MemberSignature Language="F#" Value="member this.ProductType : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt; with get, set" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.ProductType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates the product type of the license. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionStatus">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus? SubscriptionStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; SubscriptionStatus" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.SubscriptionStatus" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscriptionStatus As Nullable(Of LicenseProfileSubscriptionStatus)" />
      <MemberSignature Language="F#" Value="member this.SubscriptionStatus : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; with get, set" Usage="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.SubscriptionStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates the subscription status of the product. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView IJsonModel&lt;LicenseProfileMachineInstanceView&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HybridCompute#Models#LicenseProfileMachineInstanceView&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As LicenseProfileMachineInstanceView Implements IJsonModel(Of LicenseProfileMachineInstanceView).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" Usage="licenseProfileMachineInstanceView.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;LicenseProfileMachineInstanceView&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HybridCompute#Models#LicenseProfileMachineInstanceView&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of LicenseProfileMachineInstanceView).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="licenseProfileMachineInstanceView.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView IPersistableModel&lt;LicenseProfileMachineInstanceView&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HybridCompute#Models#LicenseProfileMachineInstanceView&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As LicenseProfileMachineInstanceView Implements IPersistableModel(Of LicenseProfileMachineInstanceView).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" Usage="licenseProfileMachineInstanceView.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HybridCompute#Models#LicenseProfileMachineInstanceView&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of LicenseProfileMachineInstanceView).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="licenseProfileMachineInstanceView.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;LicenseProfileMachineInstanceView&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HybridCompute#Models#LicenseProfileMachineInstanceView&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of LicenseProfileMachineInstanceView).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="licenseProfileMachineInstanceView.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
