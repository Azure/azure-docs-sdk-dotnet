<Type Name="ArmHybridComputeModelFactory" FullName="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmHybridComputeModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmHybridComputeModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmHybridComputeModelFactory" />
  <TypeSignature Language="F#" Value="type ArmHybridComputeModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AgentConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AgentConfiguration AgentConfiguration (Uri proxyUri = default, System.Collections.Generic.IEnumerable&lt;string&gt; incomingConnectionsPorts = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; extensionsAllowList = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; extensionsBlockList = default, System.Collections.Generic.IEnumerable&lt;string&gt; proxyBypass = default, string extensionsEnabled = default, string guestConfigurationEnabled = default, Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode? configMode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AgentConfiguration AgentConfiguration(class System.Uri proxyUri, class System.Collections.Generic.IEnumerable`1&lt;string&gt; incomingConnectionsPorts, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; extensionsAllowList, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; extensionsBlockList, class System.Collections.Generic.IEnumerable`1&lt;string&gt; proxyBypass, string extensionsEnabled, string guestConfigurationEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt; configMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentConfiguration(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentConfiguration (Optional proxyUri As Uri = Nothing, Optional incomingConnectionsPorts As IEnumerable(Of String) = Nothing, Optional extensionsAllowList As IEnumerable(Of HybridComputeConfigurationExtension) = Nothing, Optional extensionsBlockList As IEnumerable(Of HybridComputeConfigurationExtension) = Nothing, Optional proxyBypass As IEnumerable(Of String) = Nothing, Optional extensionsEnabled As String = Nothing, Optional guestConfigurationEnabled As String = Nothing, Optional configMode As Nullable(Of AgentConfigurationMode) = Nothing) As AgentConfiguration" />
      <MemberSignature Language="F#" Value="static member AgentConfiguration : Uri * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt; * seq&lt;string&gt; * string * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentConfiguration (proxyUri, incomingConnectionsPorts, extensionsAllowList, extensionsBlockList, proxyBypass, extensionsEnabled, guestConfigurationEnabled, configMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AgentConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxyUri" Type="System.Uri" />
        <Parameter Name="incomingConnectionsPorts" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="extensionsAllowList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt;" />
        <Parameter Name="extensionsBlockList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension&gt;" />
        <Parameter Name="proxyBypass" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="extensionsEnabled" Type="System.String" />
        <Parameter Name="guestConfigurationEnabled" Type="System.String" />
        <Parameter Name="configMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt;" />
      </Parameters>
      <Docs>
        <param name="proxyUri"> Specifies the URL of the proxy to be used. </param>
        <param name="incomingConnectionsPorts"> Specifies the list of ports that the agent will be able to listen on. </param>
        <param name="extensionsAllowList"> Array of extensions that are allowed to be installed or updated. </param>
        <param name="extensionsBlockList"> Array of extensions that are blocked (cannot be installed or updated). </param>
        <param name="proxyBypass"> List of service names which should not use the specified proxy server. </param>
        <param name="extensionsEnabled"> Specifies whether the extension service is enabled or disabled. </param>
        <param name="guestConfigurationEnabled"> Specified whether the guest configuration service is enabled or disabled. </param>
        <param name="configMode"> Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentUpgrade">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AgentUpgrade AgentUpgrade (string desiredVersion = default, Guid? correlationId = default, bool? isAutomaticUpgradeEnabled = default, string lastAttemptDesiredVersion = default, DateTimeOffset? lastAttemptedOn = default, Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum? lastAttemptStatus = default, string lastAttemptMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AgentUpgrade AgentUpgrade(string desiredVersion, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; correlationId, valuetype System.Nullable`1&lt;bool&gt; isAutomaticUpgradeEnabled, string lastAttemptDesiredVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastAttemptedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt; lastAttemptStatus, string lastAttemptMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentUpgrade(System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentUpgrade (Optional desiredVersion As String = Nothing, Optional correlationId As Nullable(Of Guid) = Nothing, Optional isAutomaticUpgradeEnabled As Nullable(Of Boolean) = Nothing, Optional lastAttemptDesiredVersion As String = Nothing, Optional lastAttemptedOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastAttemptStatus As Nullable(Of LastAttemptStatusEnum) = Nothing, Optional lastAttemptMessage As String = Nothing) As AgentUpgrade" />
      <MemberSignature Language="F#" Value="static member AgentUpgrade : string * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt; * string -&gt; Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentUpgrade (desiredVersion, correlationId, isAutomaticUpgradeEnabled, lastAttemptDesiredVersion, lastAttemptedOn, lastAttemptStatus, lastAttemptMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AgentUpgrade</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredVersion" Type="System.String" />
        <Parameter Name="correlationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isAutomaticUpgradeEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastAttemptDesiredVersion" Type="System.String" />
        <Parameter Name="lastAttemptedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastAttemptStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt;" />
        <Parameter Name="lastAttemptMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="desiredVersion"> Specifies the version info w.r.t AgentUpgrade for the machine. </param>
        <param name="correlationId"> The correlation ID passed in from RSM per upgrade. </param>
        <param name="isAutomaticUpgradeEnabled"> Specifies if RSM should try to upgrade this machine. </param>
        <param name="lastAttemptDesiredVersion"> Specifies the version of the last attempt. </param>
        <param name="lastAttemptedOn"> Timestamp of last upgrade attempt. </param>
        <param name="lastAttemptStatus"> Specifies the status of Agent Upgrade. </param>
        <param name="lastAttemptMessage"> Failure message of last upgrade attempt if any. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePatchCountByClassification">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification AvailablePatchCountByClassification (int? security = default, int? critical = default, int? definition = default, int? updateRollup = default, int? featurePack = default, int? servicePack = default, int? tools = default, int? updates = default, int? other = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification AvailablePatchCountByClassification(valuetype System.Nullable`1&lt;int32&gt; security, valuetype System.Nullable`1&lt;int32&gt; critical, valuetype System.Nullable`1&lt;int32&gt; definition, valuetype System.Nullable`1&lt;int32&gt; updateRollup, valuetype System.Nullable`1&lt;int32&gt; featurePack, valuetype System.Nullable`1&lt;int32&gt; servicePack, valuetype System.Nullable`1&lt;int32&gt; tools, valuetype System.Nullable`1&lt;int32&gt; updates, valuetype System.Nullable`1&lt;int32&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AvailablePatchCountByClassification(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AvailablePatchCountByClassification (Optional security As Nullable(Of Integer) = Nothing, Optional critical As Nullable(Of Integer) = Nothing, Optional definition As Nullable(Of Integer) = Nothing, Optional updateRollup As Nullable(Of Integer) = Nothing, Optional featurePack As Nullable(Of Integer) = Nothing, Optional servicePack As Nullable(Of Integer) = Nothing, Optional tools As Nullable(Of Integer) = Nothing, Optional updates As Nullable(Of Integer) = Nothing, Optional other As Nullable(Of Integer) = Nothing) As AvailablePatchCountByClassification" />
      <MemberSignature Language="F#" Value="static member AvailablePatchCountByClassification : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AvailablePatchCountByClassification (security, critical, definition, updateRollup, featurePack, servicePack, tools, updates, other)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="security" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="critical" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="definition" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="updateRollup" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="featurePack" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="servicePack" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tools" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="updates" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="other" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="security"> Number of security patches available for installation. </param>
        <param name="critical"> Number of critical patches available for installation. </param>
        <param name="definition"> Number of definition patches available for installation. </param>
        <param name="updateRollup"> Number of update Rollup patches available for installation. </param>
        <param name="featurePack"> Number of feature pack patches available for installation. </param>
        <param name="servicePack"> Number of service pack patches available for installation. </param>
        <param name="tools"> Number of tools patches available for installation. </param>
        <param name="updates"> Number of updates category patches available for installation. </param>
        <param name="other"> Number of other patches available for installation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EsuKey">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.EsuKey EsuKey (string sku = default, int? licenseStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.EsuKey EsuKey(string sku, valuetype System.Nullable`1&lt;int32&gt; licenseStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.EsuKey(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EsuKey (Optional sku As String = Nothing, Optional licenseStatus As Nullable(Of Integer) = Nothing) As EsuKey" />
      <MemberSignature Language="F#" Value="static member EsuKey : string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.EsuKey" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.EsuKey (sku, licenseStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.EsuKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="licenseStatus" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="sku"> SKU number. </param>
        <param name="licenseStatus"> The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.EsuKey" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.EsuKey" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionsResourceStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus ExtensionsResourceStatus (string code = default, Azure.ResourceManager.HybridCompute.Models.ExtensionsStatusLevelType? level = default, string displayStatus = default, string message = default, DateTimeOffset? time = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus ExtensionsResourceStatus(string code, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.ExtensionsStatusLevelType&gt; level, string displayStatus, string message, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; time) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ExtensionsResourceStatus(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.ExtensionsStatusLevelType},System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtensionsResourceStatus (Optional code As String = Nothing, Optional level As Nullable(Of ExtensionsStatusLevelType) = Nothing, Optional displayStatus As String = Nothing, Optional message As String = Nothing, Optional time As Nullable(Of DateTimeOffset) = Nothing) As ExtensionsResourceStatus" />
      <MemberSignature Language="F#" Value="static member ExtensionsResourceStatus : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.ExtensionsStatusLevelType&gt; * string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ExtensionsResourceStatus (code, level, displayStatus, message, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="level" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.ExtensionsStatusLevelType&gt;" />
        <Parameter Name="displayStatus" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="time" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="code"> The status code. </param>
        <param name="level"> The level code. </param>
        <param name="displayStatus"> The short localizable label for the status. </param>
        <param name="message"> The detailed status message, including for alerts and error messages. </param>
        <param name="time"> The time of the status. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeAccessRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule HybridComputeAccessRule (string name = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRuleDirection? direction = default, System.Collections.Generic.IEnumerable&lt;string&gt; addressPrefixes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule HybridComputeAccessRule(string name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRuleDirection&gt; direction, class System.Collections.Generic.IEnumerable`1&lt;string&gt; addressPrefixes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeAccessRule(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRuleDirection},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeAccessRule (Optional name As String = Nothing, Optional direction As Nullable(Of HybridComputeAccessRuleDirection) = Nothing, Optional addressPrefixes As IEnumerable(Of String) = Nothing) As HybridComputeAccessRule" />
      <MemberSignature Language="F#" Value="static member HybridComputeAccessRule : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRuleDirection&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeAccessRule (name, direction, addressPrefixes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="direction" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRuleDirection&gt;" />
        <Parameter Name="addressPrefixes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the access rule. </param>
        <param name="direction"> Direction of the access rule. </param>
        <param name="addressPrefixes"> Address prefixes that are allowed access. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeConfigurationExtension">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension HybridComputeConfigurationExtension (string publisher = default, string configurationExtensionType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension HybridComputeConfigurationExtension(string publisher, string configurationExtensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeConfigurationExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeConfigurationExtension (Optional publisher As String = Nothing, Optional configurationExtensionType As String = Nothing) As HybridComputeConfigurationExtension" />
      <MemberSignature Language="F#" Value="static member HybridComputeConfigurationExtension : string * string -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeConfigurationExtension (publisher, configurationExtensionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="configurationExtensionType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publisher"> Publisher of the extension. </param>
        <param name="configurationExtensionType"> Type of the extension. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeConfigurationExtension" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeConnectionDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail HybridComputeConnectionDetail (Azure.Core.ResourceIdentifier id = default, string privateIPAddress = default, string linkIdentifier = default, string groupId = default, string memberName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail HybridComputeConnectionDetail(class Azure.Core.ResourceIdentifier id, string privateIPAddress, string linkIdentifier, string groupId, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeConnectionDetail(Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeConnectionDetail (Optional id As ResourceIdentifier = Nothing, Optional privateIPAddress As String = Nothing, Optional linkIdentifier As String = Nothing, Optional groupId As String = Nothing, Optional memberName As String = Nothing) As HybridComputeConnectionDetail" />
      <MemberSignature Language="F#" Value="static member HybridComputeConnectionDetail : Azure.Core.ResourceIdentifier * string * string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeConnectionDetail (id, privateIPAddress, linkIdentifier, groupId, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="privateIPAddress" Type="System.String" />
        <Parameter Name="linkIdentifier" Type="System.String" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Azure resource Id. </param>
        <param name="privateIPAddress"> The private endpoint connection private ip address. </param>
        <param name="linkIdentifier"> The private endpoint connection link identifier. </param>
        <param name="groupId"> The private endpoint connection group id. </param>
        <param name="memberName"> The private endpoint connection member name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeExtensionValueData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData HybridComputeExtensionValueData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string version = default, string extensionType = default, string publisher = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData HybridComputeExtensionValueData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string version, string extensionType, string publisher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeExtensionValueData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeExtensionValueData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional version As String = Nothing, Optional extensionType As String = Nothing, Optional publisher As String = Nothing) As HybridComputeExtensionValueData" />
      <MemberSignature Language="F#" Value="static member HybridComputeExtensionValueData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string -&gt; Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeExtensionValueData (id, name, resourceType, systemData, version, extensionType, publisher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="extensionType" Type="System.String" />
        <Parameter Name="publisher" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="version"> The version of the Extension being received. </param>
        <param name="extensionType"> The type of the Extension being received. </param>
        <param name="publisher"> The publisher of the Extension being received. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeExtensionValueData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeGatewayData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeGatewayData HybridComputeGatewayData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState? provisioningState = default, string gatewayId = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeGatewayType? gatewayType = default, string gatewayEndpoint = default, System.Collections.Generic.IEnumerable&lt;string&gt; allowedFeatures = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeGatewayData HybridComputeGatewayData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt; provisioningState, string gatewayId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeGatewayType&gt; gatewayType, string gatewayEndpoint, class System.Collections.Generic.IEnumerable`1&lt;string&gt; allowedFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeGatewayData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState},System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeGatewayType},System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeGatewayData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As Nullable(Of HybridComputeProvisioningState) = Nothing, Optional gatewayId As String = Nothing, Optional gatewayType As Nullable(Of HybridComputeGatewayType) = Nothing, Optional gatewayEndpoint As String = Nothing, Optional allowedFeatures As IEnumerable(Of String) = Nothing) As HybridComputeGatewayData" />
      <MemberSignature Language="F#" Value="static member HybridComputeGatewayData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt; * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeGatewayType&gt; * string * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.HybridComputeGatewayData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeGatewayData (id, name, resourceType, systemData, tags, location, provisioningState, gatewayId, gatewayType, gatewayEndpoint, allowedFeatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeGatewayData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt;" />
        <Parameter Name="gatewayId" Type="System.String" />
        <Parameter Name="gatewayType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeGatewayType&gt;" />
        <Parameter Name="gatewayEndpoint" Type="System.String" />
        <Parameter Name="allowedFeatures" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="gatewayId"> A unique, immutable, identifier for the Gateway. </param>
        <param name="gatewayType"> The type of the Gateway resource. </param>
        <param name="gatewayEndpoint"> The endpoint fqdn for the Gateway. </param>
        <param name="allowedFeatures"> Specifies the list of features that are enabled for this Gateway. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeGatewayData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeGatewayData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeIPAddress">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress HybridComputeIPAddress (string address = default, string ipAddressVersion = default, string subnetAddressPrefix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress HybridComputeIPAddress(string address, string ipAddressVersion, string subnetAddressPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeIPAddress(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeIPAddress (Optional address As String = Nothing, Optional ipAddressVersion As String = Nothing, Optional subnetAddressPrefix As String = Nothing) As HybridComputeIPAddress" />
      <MemberSignature Language="F#" Value="static member HybridComputeIPAddress : string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeIPAddress (address, ipAddressVersion, subnetAddressPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="ipAddressVersion" Type="System.String" />
        <Parameter Name="subnetAddressPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"> Represents the IP Address. </param>
        <param name="ipAddressVersion"> Represents the Ip Address Version. </param>
        <param name="subnetAddressPrefix"> The subnet to which this IP address belongs. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeLicenseData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeLicenseData HybridComputeLicenseData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState? provisioningState = default, Guid? tenantId = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseType? licenseType = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails licenseDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeLicenseData HybridComputeLicenseData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseType&gt; licenseType, class Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails licenseDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLicenseData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState},System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseType},Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeLicenseData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As Nullable(Of HybridComputeProvisioningState) = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional licenseType As Nullable(Of HybridComputeLicenseType) = Nothing, Optional licenseDetails As HybridComputeLicenseDetails = Nothing) As HybridComputeLicenseData" />
      <MemberSignature Language="F#" Value="static member HybridComputeLicenseData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt; * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseType&gt; * Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails -&gt; Azure.ResourceManager.HybridCompute.HybridComputeLicenseData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLicenseData (id, name, resourceType, systemData, tags, location, provisioningState, tenantId, licenseType, licenseDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeLicenseData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningState&gt;" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="licenseType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseType&gt;" />
        <Parameter Name="licenseDetails" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="tenantId"> Describes the tenant id. </param>
        <param name="licenseType"> The type of the license resource. </param>
        <param name="licenseDetails"> Describes the properties of a License. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeLicenseData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeLicenseData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeLicenseDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails HybridComputeLicenseDetails (Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseState? state = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseTarget? target = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseEdition? edition = default, Azure.ResourceManager.HybridCompute.Models.LicenseCoreType? licenseCoreType = default, int? processors = default, int? assignedLicenses = default, string immutableId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.VolumeLicenseDetails&gt; volumeLicenseDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails HybridComputeLicenseDetails(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseState&gt; state, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseTarget&gt; target, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseEdition&gt; edition, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseCoreType&gt; licenseCoreType, valuetype System.Nullable`1&lt;int32&gt; processors, valuetype System.Nullable`1&lt;int32&gt; assignedLicenses, string immutableId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.VolumeLicenseDetails&gt; volumeLicenseDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLicenseDetails(System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseState},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseTarget},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseEdition},System.Nullable{Azure.ResourceManager.HybridCompute.Models.LicenseCoreType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.VolumeLicenseDetails})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeLicenseDetails (Optional state As Nullable(Of HybridComputeLicenseState) = Nothing, Optional target As Nullable(Of HybridComputeLicenseTarget) = Nothing, Optional edition As Nullable(Of HybridComputeLicenseEdition) = Nothing, Optional licenseCoreType As Nullable(Of LicenseCoreType) = Nothing, Optional processors As Nullable(Of Integer) = Nothing, Optional assignedLicenses As Nullable(Of Integer) = Nothing, Optional immutableId As String = Nothing, Optional volumeLicenseDetails As IEnumerable(Of VolumeLicenseDetails) = Nothing) As HybridComputeLicenseDetails" />
      <MemberSignature Language="F#" Value="static member HybridComputeLicenseDetails : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseState&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseTarget&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseEdition&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseCoreType&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * seq&lt;Azure.ResourceManager.HybridCompute.Models.VolumeLicenseDetails&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLicenseDetails (state, target, edition, licenseCoreType, processors, assignedLicenses, immutableId, volumeLicenseDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseState&gt;" />
        <Parameter Name="target" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseTarget&gt;" />
        <Parameter Name="edition" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseEdition&gt;" />
        <Parameter Name="licenseCoreType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseCoreType&gt;" />
        <Parameter Name="processors" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="assignedLicenses" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="immutableId" Type="System.String" />
        <Parameter Name="volumeLicenseDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.VolumeLicenseDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="state"> Describes the state of the license. </param>
        <param name="target"> Describes the license target server. </param>
        <param name="edition"> Describes the edition of the license. The values are either Standard or Datacenter. </param>
        <param name="licenseCoreType"> Describes the license core type (pCore or vCore). </param>
        <param name="processors"> Describes the number of processors. </param>
        <param name="assignedLicenses"> Describes the number of assigned licenses. </param>
        <param name="immutableId"> Describes the immutable id. </param>
        <param name="volumeLicenseDetails"> A list of volume license details. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeLinuxConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration HybridComputeLinuxConfiguration (Azure.ResourceManager.HybridCompute.Models.AssessmentModeType? assessmentMode = default, Azure.ResourceManager.HybridCompute.Models.PatchModeType? patchMode = default, bool? isHotpatchingEnabled = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration HybridComputeLinuxConfiguration(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt; assessmentMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt; patchMode, valuetype System.Nullable`1&lt;bool&gt; isHotpatchingEnabled, class Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLinuxConfiguration(System.Nullable{Azure.ResourceManager.HybridCompute.Models.AssessmentModeType},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchModeType},System.Nullable{System.Boolean},Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeLinuxConfiguration (Optional assessmentMode As Nullable(Of AssessmentModeType) = Nothing, Optional patchMode As Nullable(Of PatchModeType) = Nothing, Optional isHotpatchingEnabled As Nullable(Of Boolean) = Nothing, Optional status As HybridComputePatchSettingsStatus = Nothing) As HybridComputeLinuxConfiguration" />
      <MemberSignature Language="F#" Value="static member HybridComputeLinuxConfiguration : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeLinuxConfiguration (assessmentMode, patchMode, isHotpatchingEnabled, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt;" />
        <Parameter Name="patchMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt;" />
        <Parameter Name="isHotpatchingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus" />
      </Parameters>
      <Docs>
        <param name="assessmentMode"> Specifies the assessment mode. </param>
        <param name="patchMode"> Specifies the patch mode. </param>
        <param name="isHotpatchingEnabled"> Captures the hotpatch capability enrollment intent of the customers, which enables customers to patch their Windows machines without requiring a reboot. </param>
        <param name="status"> Status of the hotpatch capability enrollment or disenrollment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeMachineData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeMachineData HybridComputeMachineData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; resources = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.HybridCompute.Models.ArcKindEnum? kind = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLocation locationData = default, Azure.ResourceManager.HybridCompute.Models.AgentConfiguration agentConfiguration = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses serviceStatuses = default, string cloudMetadataProvider = default, Azure.ResourceManager.HybridCompute.Models.AgentUpgrade agentUpgrade = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile osProfile = default, Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView licenseProfile = default, string provisioningState = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType? status = default, DateTimeOffset? lastStatusChange = default, System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt; errorDetails = default, string agentVersion = default, Guid? vmId = default, string displayName = default, string machineFqdn = default, string clientPublicKey = default, string osName = default, string osVersion = default, string osType = default, Guid? vmUuid = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; extensions = default, string osSku = default, string osEdition = default, string domainName = default, string adFqdn = default, string dnsFqdn = default, Azure.Core.ResourceIdentifier privateLinkScopeResourceId = default, Azure.Core.ResourceIdentifier parentClusterResourceId = default, string msSqlDiscovered = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; detectedProperties = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; networkInterfaces = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeMachineData HybridComputeMachineData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; resources, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.ArcKindEnum&gt; kind, class Azure.ResourceManager.HybridCompute.Models.HybridComputeLocation locationData, class Azure.ResourceManager.HybridCompute.Models.AgentConfiguration agentConfiguration, class Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses serviceStatuses, string cloudMetadataProvider, class Azure.ResourceManager.HybridCompute.Models.AgentUpgrade agentUpgrade, class Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile osProfile, class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView licenseProfile, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastStatusChange, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResponseError&gt; errorDetails, string agentVersion, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; vmId, string displayName, string machineFqdn, string clientPublicKey, string osName, string osVersion, string osType, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; vmUuid, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; extensions, string osSku, string osEdition, string domainName, string adFqdn, string dnsFqdn, class Azure.Core.ResourceIdentifier privateLinkScopeResourceId, class Azure.Core.ResourceIdentifier parentClusterResourceId, string msSqlDiscovered, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; detectedProperties, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; networkInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.HybridCompute.Models.ArcKindEnum},Azure.ResourceManager.HybridCompute.Models.HybridComputeLocation,Azure.ResourceManager.HybridCompute.Models.AgentConfiguration,Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses,System.String,Azure.ResourceManager.HybridCompute.Models.AgentUpgrade,Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile,Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView,System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResponseError},System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView},System.String,System.String,System.String,System.String,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeMachineData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional resources As IEnumerable(Of HybridComputeMachineExtensionData) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional kind As Nullable(Of ArcKindEnum) = Nothing, Optional locationData As HybridComputeLocation = Nothing, Optional agentConfiguration As AgentConfiguration = Nothing, Optional serviceStatuses As HybridComputeServiceStatuses = Nothing, Optional cloudMetadataProvider As String = Nothing, Optional agentUpgrade As AgentUpgrade = Nothing, Optional osProfile As HybridComputeOSProfile = Nothing, Optional licenseProfile As LicenseProfileMachineInstanceView = Nothing, Optional provisioningState As String = Nothing, Optional status As Nullable(Of HybridComputeStatusType) = Nothing, Optional lastStatusChange As Nullable(Of DateTimeOffset) = Nothing, Optional errorDetails As IEnumerable(Of ResponseError) = Nothing, Optional agentVersion As String = Nothing, Optional vmId As Nullable(Of Guid) = Nothing, Optional displayName As String = Nothing, Optional machineFqdn As String = Nothing, Optional clientPublicKey As String = Nothing, Optional osName As String = Nothing, Optional osVersion As String = Nothing, Optional osType As String = Nothing, Optional vmUuid As Nullable(Of Guid) = Nothing, Optional extensions As IEnumerable(Of MachineExtensionInstanceView) = Nothing, Optional osSku As String = Nothing, Optional osEdition As String = Nothing, Optional domainName As String = Nothing, Optional adFqdn As String = Nothing, Optional dnsFqdn As String = Nothing, Optional privateLinkScopeResourceId As ResourceIdentifier = Nothing, Optional parentClusterResourceId As ResourceIdentifier = Nothing, Optional msSqlDiscovered As String = Nothing, Optional detectedProperties As IReadOnlyDictionary(Of String, String) = Nothing, Optional networkInterfaces As IEnumerable(Of HybridComputeNetworkInterface) = Nothing) As HybridComputeMachineData" />
      <MemberSignature Language="F#" Value="static member HybridComputeMachineData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.ArcKindEnum&gt; * Azure.ResourceManager.HybridCompute.Models.HybridComputeLocation * Azure.ResourceManager.HybridCompute.Models.AgentConfiguration * Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses * string * Azure.ResourceManager.HybridCompute.Models.AgentUpgrade * Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile * Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResponseError&gt; * string * Nullable&lt;Guid&gt; * string * string * string * string * string * string * Nullable&lt;Guid&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; * string * string * string * string * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; -&gt; Azure.ResourceManager.HybridCompute.HybridComputeMachineData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineData (id, name, resourceType, systemData, tags, location, resources, identity, kind, locationData, agentConfiguration, serviceStatuses, cloudMetadataProvider, agentUpgrade, osProfile, licenseProfile, provisioningState, status, lastStatusChange, errorDetails, agentVersion, vmId, displayName, machineFqdn, clientPublicKey, osName, osVersion, osType, vmUuid, extensions, osSku, osEdition, domainName, adFqdn, dnsFqdn, privateLinkScopeResourceId, parentClusterResourceId, msSqlDiscovered, detectedProperties, networkInterfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeMachineData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.ArcKindEnum&gt;" />
        <Parameter Name="locationData" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeLocation" />
        <Parameter Name="agentConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" />
        <Parameter Name="serviceStatuses" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses" />
        <Parameter Name="cloudMetadataProvider" Type="System.String" />
        <Parameter Name="agentUpgrade" Type="Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" />
        <Parameter Name="osProfile" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile" />
        <Parameter Name="licenseProfile" Type="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt;" />
        <Parameter Name="lastStatusChange" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="errorDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt;" />
        <Parameter Name="agentVersion" Type="System.String" />
        <Parameter Name="vmId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="machineFqdn" Type="System.String" />
        <Parameter Name="clientPublicKey" Type="System.String" />
        <Parameter Name="osName" Type="System.String" />
        <Parameter Name="osVersion" Type="System.String" />
        <Parameter Name="osType" Type="System.String" />
        <Parameter Name="vmUuid" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="extensions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt;" />
        <Parameter Name="osSku" Type="System.String" />
        <Parameter Name="osEdition" Type="System.String" />
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="adFqdn" Type="System.String" />
        <Parameter Name="dnsFqdn" Type="System.String" />
        <Parameter Name="privateLinkScopeResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="parentClusterResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="msSqlDiscovered" Type="System.String" />
        <Parameter Name="detectedProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="resources"> The list of extensions affiliated to the machine. </param>
        <param name="identity"> Identity for the resource. Current supported identity types: SystemAssigned. </param>
        <param name="kind"> Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc. </param>
        <param name="locationData"> Metadata pertaining to the geographic location of the resource. </param>
        <param name="agentConfiguration"> Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM. </param>
        <param name="serviceStatuses"> Statuses of dependent services that are reported back to ARM. </param>
        <param name="cloudMetadataProvider"> The metadata of the cloud environment (Azure/GCP/AWS/OCI...). </param>
        <param name="agentUpgrade"> The info of the machine w.r.t Agent Upgrade. </param>
        <param name="osProfile"> Specifies the operating system settings for the hybrid machine. </param>
        <param name="licenseProfile"> Specifies the License related properties for a machine. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="status"> The status of the hybrid machine agent. </param>
        <param name="lastStatusChange"> The time of the last status change. </param>
        <param name="errorDetails"> Details about the error state. </param>
        <param name="agentVersion"> The hybrid machine agent full version. </param>
        <param name="vmId"> Specifies the hybrid machine unique ID. </param>
        <param name="displayName"> Specifies the hybrid machine display name. </param>
        <param name="machineFqdn"> Specifies the hybrid machine FQDN. </param>
        <param name="clientPublicKey"> Public Key that the client provides to be used during initial resource onboarding. </param>
        <param name="osName"> The Operating System running on the hybrid machine. </param>
        <param name="osVersion"> The version of Operating System running on the hybrid machine. </param>
        <param name="osType"> The type of Operating System (windows/linux). </param>
        <param name="vmUuid"> Specifies the Arc Machine's unique SMBIOS ID. </param>
        <param name="extensions"> Machine Extensions information (deprecated field). </param>
        <param name="osSku"> Specifies the Operating System product SKU. </param>
        <param name="osEdition"> The edition of the Operating System. </param>
        <param name="domainName"> Specifies the Windows domain name. </param>
        <param name="adFqdn"> Specifies the AD fully qualified display name. </param>
        <param name="dnsFqdn"> Specifies the DNS fully qualified display name. </param>
        <param name="privateLinkScopeResourceId"> The resource id of the private link scope this machine is assigned to, if any. </param>
        <param name="parentClusterResourceId"> The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any. </param>
        <param name="msSqlDiscovered"> Specifies whether any MS SQL instance is discovered on the machine. </param>
        <param name="detectedProperties"> Detected properties from the machine. </param>
        <param name="networkInterfaces"> Information about the network the machine is on. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeMachineExtensionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData HybridComputeMachineExtensionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData HybridComputeMachineExtensionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineExtensionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeMachineExtensionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As MachineExtensionProperties = Nothing) As HybridComputeMachineExtensionData" />
      <MemberSignature Language="F#" Value="static member HybridComputeMachineExtensionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineExtensionData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> Describes Machine Extension Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeNetworkInterface">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface HybridComputeNetworkInterface (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress&gt; ipAddresses = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface HybridComputeNetworkInterface(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress&gt; ipAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeNetworkInterface(System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeNetworkInterface (Optional ipAddresses As IEnumerable(Of HybridComputeIPAddress) = Nothing) As HybridComputeNetworkInterface" />
      <MemberSignature Language="F#" Value="static member HybridComputeNetworkInterface : seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeNetworkInterface ipAddresses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeIPAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="ipAddresses"> The list of IP addresses in this interface. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeNetworkProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile HybridComputeNetworkProfile (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; networkInterfaces = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile HybridComputeNetworkProfile(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; networkInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeNetworkProfile(System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeNetworkProfile (Optional networkInterfaces As IEnumerable(Of HybridComputeNetworkInterface) = Nothing) As HybridComputeNetworkProfile" />
      <MemberSignature Language="F#" Value="static member HybridComputeNetworkProfile : seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeNetworkProfile networkInterfaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkInterface&gt;" />
      </Parameters>
      <Docs>
        <param name="networkInterfaces"> The list of network interfaces. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeNetworkProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeOSProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile HybridComputeOSProfile (string computerName = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration windowsConfiguration = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration linuxConfiguration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile HybridComputeOSProfile(string computerName, class Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration windowsConfiguration, class Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration linuxConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeOSProfile(System.String,Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration,Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeOSProfile (Optional computerName As String = Nothing, Optional windowsConfiguration As HybridComputeWindowsConfiguration = Nothing, Optional linuxConfiguration As HybridComputeLinuxConfiguration = Nothing) As HybridComputeOSProfile" />
      <MemberSignature Language="F#" Value="static member HybridComputeOSProfile : string * Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration * Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeOSProfile (computerName, windowsConfiguration, linuxConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="computerName" Type="System.String" />
        <Parameter Name="windowsConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration" />
        <Parameter Name="linuxConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxConfiguration" />
      </Parameters>
      <Docs>
        <param name="computerName"> Specifies the host OS name of the hybrid machine. </param>
        <param name="windowsConfiguration"> Specifies the windows configuration for update management. </param>
        <param name="linuxConfiguration"> Specifies the linux configuration for update management. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeOSProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePatchSettingsStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus HybridComputePatchSettingsStatus (Azure.ResourceManager.HybridCompute.Models.HotpatchEnablementStatus? hotpatchEnablementStatus = default, Azure.ResponseError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus HybridComputePatchSettingsStatus(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HotpatchEnablementStatus&gt; hotpatchEnablementStatus, class Azure.ResponseError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePatchSettingsStatus(System.Nullable{Azure.ResourceManager.HybridCompute.Models.HotpatchEnablementStatus},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePatchSettingsStatus (Optional hotpatchEnablementStatus As Nullable(Of HotpatchEnablementStatus) = Nothing, Optional error As ResponseError = Nothing) As HybridComputePatchSettingsStatus" />
      <MemberSignature Language="F#" Value="static member HybridComputePatchSettingsStatus : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HotpatchEnablementStatus&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePatchSettingsStatus (hotpatchEnablementStatus, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hotpatchEnablementStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HotpatchEnablementStatus&gt;" />
        <Parameter Name="error" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="hotpatchEnablementStatus"> Indicates the current status of the hotpatch being enabled or disabled. </param>
        <param name="error"> The errors that were encountered during the hotpatch capability enrollment or disenrollment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData HybridComputePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData HybridComputePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As HybridComputePrivateEndpointConnectionProperties = Nothing) As HybridComputePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Resource properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateEndpointConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties HybridComputePrivateEndpointConnectionProperties (Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty connectionState = default, string provisioningState = default, System.Collections.Generic.IEnumerable&lt;string&gt; groupIds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties HybridComputePrivateEndpointConnectionProperties(class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty connectionState, string provisioningState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; groupIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionProperties(Azure.Core.ResourceIdentifier,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateEndpointConnectionProperties (Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As HybridComputePrivateLinkServiceConnectionStateProperty = Nothing, Optional provisioningState As String = Nothing, Optional groupIds As IEnumerable(Of String) = Nothing) As HybridComputePrivateEndpointConnectionProperties" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateEndpointConnectionProperties : Azure.Core.ResourceIdentifier * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty * string * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionProperties (privateEndpointId, connectionState, provisioningState, groupIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="privateEndpointId"> Private endpoint which the connection belongs to. </param>
        <param name="connectionState"> Connection state of the private endpoint connection. </param>
        <param name="provisioningState"> State of the private endpoint connection. </param>
        <param name="groupIds"> List of group IDs. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData HybridComputePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData HybridComputePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As HybridComputePrivateLinkResourceProperties = Nothing) As HybridComputePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Resource properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkResourceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties HybridComputePrivateLinkResourceProperties (string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties HybridComputePrivateLinkResourceProperties(string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceProperties(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkResourceProperties (Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As HybridComputePrivateLinkResourceProperties" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkResourceProperties : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceProperties (groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> Required DNS zone names of the the private link resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkScopeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData HybridComputePrivateLinkScopeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData HybridComputePrivateLinkScopeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkScopeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As HybridComputePrivateLinkScopeProperties = Nothing) As HybridComputePrivateLinkScopeData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkScopeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> Properties that define a Azure Arc PrivateLinkScope resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkScopeProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties HybridComputePrivateLinkScopeProperties (Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType? publicNetworkAccess = default, string provisioningState = default, string privateLinkScopeId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties HybridComputePrivateLinkScopeProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt; publicNetworkAccess, string provisioningState, string privateLinkScopeId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeProperties(System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkScopeProperties (Optional publicNetworkAccess As Nullable(Of HybridComputePublicNetworkAccessType) = Nothing, Optional provisioningState As String = Nothing, Optional privateLinkScopeId As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of PrivateEndpointConnectionDataModel) = Nothing) As HybridComputePrivateLinkScopeProperties" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkScopeProperties : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt; * string * string * seq&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeProperties (publicNetworkAccess, provisioningState, privateLinkScopeId, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="privateLinkScopeId" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt;" />
      </Parameters>
      <Docs>
        <param name="publicNetworkAccess"> Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints. </param>
        <param name="provisioningState"> Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed. </param>
        <param name="privateLinkScopeId"> The Guid id of the private link scope. </param>
        <param name="privateEndpointConnections"> The collection of associated Private Endpoint Connections. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkServiceConnectionStateProperty">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty HybridComputePrivateLinkServiceConnectionStateProperty (string status = default, string description = default, string actionsRequired = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty HybridComputePrivateLinkServiceConnectionStateProperty(string status, string description, string actionsRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkServiceConnectionStateProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkServiceConnectionStateProperty (Optional status As String = Nothing, Optional description As String = Nothing, Optional actionsRequired As String = Nothing) As HybridComputePrivateLinkServiceConnectionStateProperty" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkServiceConnectionStateProperty : string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkServiceConnectionStateProperty (status, description, actionsRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="actionsRequired" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The private link service connection status. </param>
        <param name="description"> The private link service connection description. </param>
        <param name="actionsRequired"> The actions required for private link service connection. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeProductFeature">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature HybridComputeProductFeature (string name = default, Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus? subscriptionStatus = default, DateTimeOffset? enrollmentOn = default, DateTimeOffset? billingStartOn = default, DateTimeOffset? disenrollmentOn = default, DateTimeOffset? billingEndOn = default, Azure.ResponseError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature HybridComputeProductFeature(string name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; subscriptionStatus, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; enrollmentOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; billingStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; disenrollmentOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; billingEndOn, class Azure.ResponseError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeProductFeature(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeProductFeature (Optional name As String = Nothing, Optional subscriptionStatus As Nullable(Of LicenseProfileSubscriptionStatus) = Nothing, Optional enrollmentOn As Nullable(Of DateTimeOffset) = Nothing, Optional billingStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional disenrollmentOn As Nullable(Of DateTimeOffset) = Nothing, Optional billingEndOn As Nullable(Of DateTimeOffset) = Nothing, Optional error As ResponseError = Nothing) As HybridComputeProductFeature" />
      <MemberSignature Language="F#" Value="static member HybridComputeProductFeature : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeProductFeature (name, subscriptionStatus, enrollmentOn, billingStartOn, disenrollmentOn, billingEndOn, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="subscriptionStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt;" />
        <Parameter Name="enrollmentOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="billingStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="disenrollmentOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="billingEndOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="error" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="name"> Product feature name. </param>
        <param name="subscriptionStatus"> Indicates the current status of the product features. </param>
        <param name="enrollmentOn"> The timestamp in UTC when the user enrolls the feature. </param>
        <param name="billingStartOn"> The timestamp in UTC when the billing starts. </param>
        <param name="disenrollmentOn"> The timestamp in UTC when the user disenrolled the feature. </param>
        <param name="billingEndOn"> The timestamp in UTC when the billing ends. </param>
        <param name="error"> The errors that were encountered during the feature enrollment or disenrollment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeProvisioningIssue">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue HybridComputeProvisioningIssue (string name = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueType? issueType = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueSeverity? severity = default, string description = default, System.Collections.Generic.IEnumerable&lt;string&gt; suggestedResourceIds = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; suggestedAccessRules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue HybridComputeProvisioningIssue(string name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueType&gt; issueType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueSeverity&gt; severity, string description, class System.Collections.Generic.IEnumerable`1&lt;string&gt; suggestedResourceIds, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; suggestedAccessRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeProvisioningIssue(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueType},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueSeverity},System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeProvisioningIssue (Optional name As String = Nothing, Optional issueType As Nullable(Of HybridComputeProvisioningIssueType) = Nothing, Optional severity As Nullable(Of HybridComputeProvisioningIssueSeverity) = Nothing, Optional description As String = Nothing, Optional suggestedResourceIds As IEnumerable(Of String) = Nothing, Optional suggestedAccessRules As IEnumerable(Of HybridComputeAccessRule) = Nothing) As HybridComputeProvisioningIssue" />
      <MemberSignature Language="F#" Value="static member HybridComputeProvisioningIssue : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueType&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueSeverity&gt; * string * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeProvisioningIssue (name, issueType, severity, description, suggestedResourceIds, suggestedAccessRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="issueType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueType&gt;" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssueSeverity&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="suggestedResourceIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="suggestedAccessRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the provisioning issue. </param>
        <param name="issueType"> Issue type. </param>
        <param name="severity"> Severity of the provisioning issue. </param>
        <param name="description"> Description of the provisioning issue. </param>
        <param name="suggestedResourceIds"> ARM Ids of the resources that can be associated to the same perimeter to remediate the issue. </param>
        <param name="suggestedAccessRules"> Access rules that can be added to the perimeter to remediate the issue. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeResourceAssociation">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation HybridComputeResourceAssociation (string name = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessMode? accessMode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation HybridComputeResourceAssociation(string name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessMode&gt; accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeResourceAssociation(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeResourceAssociation (Optional name As String = Nothing, Optional accessMode As Nullable(Of HybridComputeAccessMode) = Nothing) As HybridComputeResourceAssociation" />
      <MemberSignature Language="F#" Value="static member HybridComputeResourceAssociation : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessMode&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeResourceAssociation (name, accessMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="accessMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessMode&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the Resource Association. </param>
        <param name="accessMode"> The access mode. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeTargetResourceSettings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings HybridComputeTargetResourceSettings (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Guid? tenantId = default, Azure.Core.ResourceIdentifier gatewayResourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings HybridComputeTargetResourceSettings(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, class Azure.Core.ResourceIdentifier gatewayResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeTargetResourceSettings(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Guid},Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeTargetResourceSettings (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional gatewayResourceId As ResourceIdentifier = Nothing) As HybridComputeTargetResourceSettings" />
      <MemberSignature Language="F#" Value="static member HybridComputeTargetResourceSettings : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Guid&gt; * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeTargetResourceSettings (id, name, resourceType, systemData, tenantId, gatewayResourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="gatewayResourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tenantId"> Azure resource tenant Id. </param>
        <param name="gatewayResourceId"> Associated Gateway Resource Id. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeTargetResourceSettings" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeWindowsConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration HybridComputeWindowsConfiguration (Azure.ResourceManager.HybridCompute.Models.AssessmentModeType? assessmentMode = default, Azure.ResourceManager.HybridCompute.Models.PatchModeType? patchMode = default, bool? isHotpatchingEnabled = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration HybridComputeWindowsConfiguration(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt; assessmentMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt; patchMode, valuetype System.Nullable`1&lt;bool&gt; isHotpatchingEnabled, class Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeWindowsConfiguration(System.Nullable{Azure.ResourceManager.HybridCompute.Models.AssessmentModeType},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchModeType},System.Nullable{System.Boolean},Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeWindowsConfiguration (Optional assessmentMode As Nullable(Of AssessmentModeType) = Nothing, Optional patchMode As Nullable(Of PatchModeType) = Nothing, Optional isHotpatchingEnabled As Nullable(Of Boolean) = Nothing, Optional status As HybridComputePatchSettingsStatus = Nothing) As HybridComputeWindowsConfiguration" />
      <MemberSignature Language="F#" Value="static member HybridComputeWindowsConfiguration : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeWindowsConfiguration (assessmentMode, patchMode, isHotpatchingEnabled, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AssessmentModeType&gt;" />
        <Parameter Name="patchMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchModeType&gt;" />
        <Parameter Name="isHotpatchingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePatchSettingsStatus" />
      </Parameters>
      <Docs>
        <param name="assessmentMode"> Specifies the assessment mode. </param>
        <param name="patchMode"> Specifies the patch mode. </param>
        <param name="isHotpatchingEnabled"> Captures the hotpatch capability enrollment intent of the customers, which enables customers to patch their Windows machines without requiring a reboot. </param>
        <param name="status"> Status of the hotpatch capability enrollment or disenrollment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseProfileArmEsuPropertiesWithoutAssignedLicense">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense LicenseProfileArmEsuPropertiesWithoutAssignedLicense (Guid? assignedLicenseImmutableId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys = default, Azure.ResourceManager.HybridCompute.Models.EsuServerType? serverType = default, Azure.ResourceManager.HybridCompute.Models.EsuEligibility? esuEligibility = default, Azure.ResourceManager.HybridCompute.Models.EsuKeyState? esuKeyState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense LicenseProfileArmEsuPropertiesWithoutAssignedLicense(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; assignedLicenseImmutableId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt; serverType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt; esuEligibility, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt; esuKeyState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileArmEsuPropertiesWithoutAssignedLicense(System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.EsuKey},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuServerType},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuEligibility},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuKeyState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LicenseProfileArmEsuPropertiesWithoutAssignedLicense (Optional assignedLicenseImmutableId As Nullable(Of Guid) = Nothing, Optional esuKeys As IEnumerable(Of EsuKey) = Nothing, Optional serverType As Nullable(Of EsuServerType) = Nothing, Optional esuEligibility As Nullable(Of EsuEligibility) = Nothing, Optional esuKeyState As Nullable(Of EsuKeyState) = Nothing) As LicenseProfileArmEsuPropertiesWithoutAssignedLicense" />
      <MemberSignature Language="F#" Value="static member LicenseProfileArmEsuPropertiesWithoutAssignedLicense : Nullable&lt;Guid&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileArmEsuPropertiesWithoutAssignedLicense (assignedLicenseImmutableId, esuKeys, serverType, esuEligibility, esuKeyState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignedLicenseImmutableId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="esuKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt;" />
        <Parameter Name="serverType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt;" />
        <Parameter Name="esuEligibility" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt;" />
        <Parameter Name="esuKeyState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt;" />
      </Parameters>
      <Docs>
        <param name="assignedLicenseImmutableId"> The guid id of the license. </param>
        <param name="esuKeys"> The list of ESU keys. </param>
        <param name="serverType"> The type of the Esu servers. </param>
        <param name="esuEligibility"> Indicates the eligibility state of Esu. </param>
        <param name="esuKeyState"> Indicates whether there is an ESU Key currently active for the machine. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseProfileMachineInstanceView">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView LicenseProfileMachineInstanceView (Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus? licenseStatus = default, string licenseChannel = default, Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties esuProfile = default, Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus? subscriptionStatus = default, Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType? productType = default, DateTimeOffset? enrollmentOn = default, DateTimeOffset? billingStartOn = default, DateTimeOffset? disenrollmentOn = default, DateTimeOffset? billingEndOn = default, Azure.ResponseError error = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt; productFeatures = default, bool? isSoftwareAssuranceCustomer = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView LicenseProfileMachineInstanceView(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt; licenseStatus, string licenseChannel, class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties esuProfile, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; subscriptionStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt; productType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; enrollmentOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; billingStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; disenrollmentOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; billingEndOn, class Azure.ResponseError error, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt; productFeatures, valuetype System.Nullable`1&lt;bool&gt; isSoftwareAssuranceCustomer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileMachineInstanceView(System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus},System.String,Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties,System.Nullable{Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus},System.Nullable{Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResponseError,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LicenseProfileMachineInstanceView (Optional licenseStatus As Nullable(Of HybridComputeLicenseStatus) = Nothing, Optional licenseChannel As String = Nothing, Optional esuProfile As LicenseProfileMachineInstanceViewEsuProperties = Nothing, Optional subscriptionStatus As Nullable(Of LicenseProfileSubscriptionStatus) = Nothing, Optional productType As Nullable(Of LicenseProfileProductType) = Nothing, Optional enrollmentOn As Nullable(Of DateTimeOffset) = Nothing, Optional billingStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional disenrollmentOn As Nullable(Of DateTimeOffset) = Nothing, Optional billingEndOn As Nullable(Of DateTimeOffset) = Nothing, Optional error As ResponseError = Nothing, Optional productFeatures As IEnumerable(Of HybridComputeProductFeature) = Nothing, Optional isSoftwareAssuranceCustomer As Nullable(Of Boolean) = Nothing) As LicenseProfileMachineInstanceView" />
      <MemberSignature Language="F#" Value="static member LicenseProfileMachineInstanceView : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt; * string * Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResponseError * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileMachineInstanceView (licenseStatus, licenseChannel, esuProfile, subscriptionStatus, productType, enrollmentOn, billingStartOn, disenrollmentOn, billingEndOn, error, productFeatures, isSoftwareAssuranceCustomer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="licenseStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeLicenseStatus&gt;" />
        <Parameter Name="licenseChannel" Type="System.String" />
        <Parameter Name="esuProfile" Type="Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties" />
        <Parameter Name="subscriptionStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileSubscriptionStatus&gt;" />
        <Parameter Name="productType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseProfileProductType&gt;" />
        <Parameter Name="enrollmentOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="billingStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="disenrollmentOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="billingEndOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="error" Type="Azure.ResponseError" />
        <Parameter Name="productFeatures" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProductFeature&gt;" />
        <Parameter Name="isSoftwareAssuranceCustomer" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="licenseStatus"> Indicates the license status of the OS. </param>
        <param name="licenseChannel"> Indicates the license channel. </param>
        <param name="esuProfile"> Properties for the Machine ESU profile. </param>
        <param name="subscriptionStatus"> Indicates the subscription status of the product. </param>
        <param name="productType"> Indicates the product type of the license. </param>
        <param name="enrollmentOn"> The timestamp in UTC when the user enrolls the feature. </param>
        <param name="billingStartOn"> The timestamp in UTC when the billing starts. </param>
        <param name="disenrollmentOn"> The timestamp in UTC when the user disenrolled the feature. </param>
        <param name="billingEndOn"> The timestamp in UTC when the billing ends. </param>
        <param name="error"> The errors that were encountered during the feature enrollment or disenrollment. </param>
        <param name="productFeatures"> The list of product features. </param>
        <param name="isSoftwareAssuranceCustomer"> Specifies if this machine is licensed as part of a Software Assurance agreement. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceView" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseProfileMachineInstanceViewEsuProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties LicenseProfileMachineInstanceViewEsuProperties (Guid? assignedLicenseImmutableId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys = default, Azure.ResourceManager.HybridCompute.Models.EsuServerType? serverType = default, Azure.ResourceManager.HybridCompute.Models.EsuEligibility? esuEligibility = default, Azure.ResourceManager.HybridCompute.Models.EsuKeyState? esuKeyState = default, Azure.ResourceManager.HybridCompute.HybridComputeLicenseData assignedLicense = default, Azure.ResourceManager.HybridCompute.Models.LicenseAssignmentState? licenseAssignmentState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties LicenseProfileMachineInstanceViewEsuProperties(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; assignedLicenseImmutableId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt; serverType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt; esuEligibility, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt; esuKeyState, class Azure.ResourceManager.HybridCompute.HybridComputeLicenseData assignedLicense, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LicenseAssignmentState&gt; licenseAssignmentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileMachineInstanceViewEsuProperties(System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.EsuKey},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuServerType},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuEligibility},System.Nullable{Azure.ResourceManager.HybridCompute.Models.EsuKeyState},Azure.ResourceManager.HybridCompute.HybridComputeLicenseData,System.Nullable{Azure.ResourceManager.HybridCompute.Models.LicenseAssignmentState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LicenseProfileMachineInstanceViewEsuProperties (Optional assignedLicenseImmutableId As Nullable(Of Guid) = Nothing, Optional esuKeys As IEnumerable(Of EsuKey) = Nothing, Optional serverType As Nullable(Of EsuServerType) = Nothing, Optional esuEligibility As Nullable(Of EsuEligibility) = Nothing, Optional esuKeyState As Nullable(Of EsuKeyState) = Nothing, Optional assignedLicense As HybridComputeLicenseData = Nothing, Optional licenseAssignmentState As Nullable(Of LicenseAssignmentState) = Nothing) As LicenseProfileMachineInstanceViewEsuProperties" />
      <MemberSignature Language="F#" Value="static member LicenseProfileMachineInstanceViewEsuProperties : Nullable&lt;Guid&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt; * Azure.ResourceManager.HybridCompute.HybridComputeLicenseData * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseAssignmentState&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileMachineInstanceViewEsuProperties (assignedLicenseImmutableId, esuKeys, serverType, esuEligibility, esuKeyState, assignedLicense, licenseAssignmentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignedLicenseImmutableId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="esuKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt;" />
        <Parameter Name="serverType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuServerType&gt;" />
        <Parameter Name="esuEligibility" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuEligibility&gt;" />
        <Parameter Name="esuKeyState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKeyState&gt;" />
        <Parameter Name="assignedLicense" Type="Azure.ResourceManager.HybridCompute.HybridComputeLicenseData" />
        <Parameter Name="licenseAssignmentState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LicenseAssignmentState&gt;" />
      </Parameters>
      <Docs>
        <param name="assignedLicenseImmutableId"> The guid id of the license. </param>
        <param name="esuKeys"> The list of ESU keys. </param>
        <param name="serverType"> The type of the Esu servers. </param>
        <param name="esuEligibility"> Indicates the eligibility state of Esu. </param>
        <param name="esuKeyState"> Indicates whether there is an ESU Key currently active for the machine. </param>
        <param name="assignedLicense"> The assigned license resource. </param>
        <param name="licenseAssignmentState"> Describes the license assignment state (Assigned or NotAssigned). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileMachineInstanceViewEsuProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseProfileStorageModelEsuProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties LicenseProfileStorageModelEsuProperties (Guid? assignedLicenseImmutableId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties LicenseProfileStorageModelEsuProperties(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; assignedLicenseImmutableId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; esuKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileStorageModelEsuProperties(System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.EsuKey})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LicenseProfileStorageModelEsuProperties (Optional assignedLicenseImmutableId As Nullable(Of Guid) = Nothing, Optional esuKeys As IEnumerable(Of EsuKey) = Nothing) As LicenseProfileStorageModelEsuProperties" />
      <MemberSignature Language="F#" Value="static member LicenseProfileStorageModelEsuProperties : Nullable&lt;Guid&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.LicenseProfileStorageModelEsuProperties (assignedLicenseImmutableId, esuKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignedLicenseImmutableId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="esuKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.EsuKey&gt;" />
      </Parameters>
      <Docs>
        <param name="assignedLicenseImmutableId"> The guid id of the license. </param>
        <param name="esuKeys"> The list of ESU keys. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.LicenseProfileStorageModelEsuProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineAssessPatchesResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult MachineAssessPatchesResult (Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus? status = default, Guid? assessmentActivityId = default, bool? isRebootPending = default, Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification availablePatchCountByClassification = default, DateTimeOffset? startOn = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy? startedBy = default, Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed? patchServiceUsed = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType? osType = default, Azure.ResponseError errorDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult MachineAssessPatchesResult(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; assessmentActivityId, valuetype System.Nullable`1&lt;bool&gt; isRebootPending, class Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification availablePatchCountByClassification, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; startedBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; patchServiceUsed, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt; osType, class Azure.ResponseError errorDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineAssessPatchesResult(System.Nullable{Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus},System.Nullable{System.Guid},System.Nullable{System.Boolean},Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineAssessPatchesResult (Optional status As Nullable(Of MachineOperationStatus) = Nothing, Optional assessmentActivityId As Nullable(Of Guid) = Nothing, Optional isRebootPending As Nullable(Of Boolean) = Nothing, Optional availablePatchCountByClassification As AvailablePatchCountByClassification = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional startedBy As Nullable(Of PatchOperationStartedBy) = Nothing, Optional patchServiceUsed As Nullable(Of PatchServiceUsed) = Nothing, Optional osType As Nullable(Of HybridComputeOSType) = Nothing, Optional errorDetails As ResponseError = Nothing) As MachineAssessPatchesResult" />
      <MemberSignature Language="F#" Value="static member MachineAssessPatchesResult : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineAssessPatchesResult (status, assessmentActivityId, isRebootPending, availablePatchCountByClassification, startOn, lastModifiedOn, startedBy, patchServiceUsed, osType, errorDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt;" />
        <Parameter Name="assessmentActivityId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="isRebootPending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="availablePatchCountByClassification" Type="Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startedBy" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt;" />
        <Parameter Name="patchServiceUsed" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt;" />
        <Parameter Name="errorDetails" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="status"> The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings.". </param>
        <param name="assessmentActivityId"> The activity ID of the operation that produced this result. </param>
        <param name="isRebootPending"> The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred. </param>
        <param name="availablePatchCountByClassification"> Summarization of patches available for installation on the machine by classification. </param>
        <param name="startOn"> The UTC timestamp when the operation began. </param>
        <param name="lastModifiedOn"> The UTC timestamp when the operation finished. </param>
        <param name="startedBy"> Indicates if operation was triggered by user or by platform. </param>
        <param name="patchServiceUsed"> Specifies the patch service used for the operation. </param>
        <param name="osType"> The operating system type of the machine. </param>
        <param name="errorDetails"> The errors that were encountered during execution of the operation. The details array contains the list of them. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineExtensionProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties MachineExtensionProperties (string forceUpdateTag = default, string publisher = default, string machineExtensionPropertiesType = default, string typeHandlerVersion = default, bool? enableAutomaticUpgrade = default, bool? autoUpgradeMinorVersion = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; settings = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; protectedSettings = default, string provisioningState = default, Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView instanceView = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties MachineExtensionProperties(string forceUpdateTag, string publisher, string machineExtensionPropertiesType, string typeHandlerVersion, valuetype System.Nullable`1&lt;bool&gt; enableAutomaticUpgrade, valuetype System.Nullable`1&lt;bool&gt; autoUpgradeMinorVersion, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; settings, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; protectedSettings, string provisioningState, class Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView instanceView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineExtensionProperties(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.String,Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineExtensionProperties (Optional forceUpdateTag As String = Nothing, Optional publisher As String = Nothing, Optional machineExtensionPropertiesType As String = Nothing, Optional typeHandlerVersion As String = Nothing, Optional enableAutomaticUpgrade As Nullable(Of Boolean) = Nothing, Optional autoUpgradeMinorVersion As Nullable(Of Boolean) = Nothing, Optional settings As IDictionary(Of String, BinaryData) = Nothing, Optional protectedSettings As IDictionary(Of String, BinaryData) = Nothing, Optional provisioningState As String = Nothing, Optional instanceView As MachineExtensionInstanceView = Nothing) As MachineExtensionProperties" />
      <MemberSignature Language="F#" Value="static member MachineExtensionProperties : string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * string * Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView -&gt; Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineExtensionProperties (forceUpdateTag, publisher, machineExtensionPropertiesType, typeHandlerVersion, enableAutomaticUpgrade, autoUpgradeMinorVersion, settings, protectedSettings, provisioningState, instanceView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceUpdateTag" Type="System.String" />
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="machineExtensionPropertiesType" Type="System.String" />
        <Parameter Name="typeHandlerVersion" Type="System.String" />
        <Parameter Name="enableAutomaticUpgrade" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="autoUpgradeMinorVersion" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="settings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="protectedSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView" />
      </Parameters>
      <Docs>
        <param name="forceUpdateTag"> How the extension handler should be forced to update even if the extension configuration has not changed. </param>
        <param name="publisher"> The name of the extension handler publisher. </param>
        <param name="machineExtensionPropertiesType"> Specifies the type of the extension; an example is "CustomScriptExtension". </param>
        <param name="typeHandlerVersion"> Specifies the version of the script handler. </param>
        <param name="enableAutomaticUpgrade"> Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. </param>
        <param name="autoUpgradeMinorVersion"> Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. </param>
        <param name="settings"> Json formatted public settings for the extension. </param>
        <param name="protectedSettings"> The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="instanceView"> The machine extension instance view. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineExtensionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallPatchesContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent MachineInstallPatchesContent (TimeSpan maximumDuration = default, Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootSetting rebootSetting = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsParameters windowsParameters = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxParameters linuxParameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent MachineInstallPatchesContent(valuetype System.TimeSpan maximumDuration, valuetype Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootSetting rebootSetting, class Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsParameters windowsParameters, class Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxParameters linuxParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesContent(System.TimeSpan,Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootSetting,Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsParameters,Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineInstallPatchesContent (Optional maximumDuration As TimeSpan = Nothing, Optional rebootSetting As VmGuestPatchRebootSetting = Nothing, Optional windowsParameters As HybridComputeWindowsParameters = Nothing, Optional linuxParameters As HybridComputeLinuxParameters = Nothing) As MachineInstallPatchesContent" />
      <MemberSignature Language="F#" Value="static member MachineInstallPatchesContent : TimeSpan * Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootSetting * Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsParameters * Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxParameters -&gt; Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesContent (maximumDuration, rebootSetting, windowsParameters, linuxParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maximumDuration" Type="System.TimeSpan" />
        <Parameter Name="rebootSetting" Type="Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootSetting" />
        <Parameter Name="windowsParameters" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeWindowsParameters" />
        <Parameter Name="linuxParameters" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeLinuxParameters" />
      </Parameters>
      <Docs>
        <param name="maximumDuration"> Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours). </param>
        <param name="rebootSetting"> Defines when it is acceptable to reboot a VM during a software update operation. </param>
        <param name="windowsParameters"> Input for InstallPatches on a Windows VM, as directly received by the API. </param>
        <param name="linuxParameters"> Input for InstallPatches on a Linux VM, as directly received by the API. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallPatchesResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult MachineInstallPatchesResult (Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus? status = default, string installationActivityId = default, Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus? rebootStatus = default, bool? maintenanceWindowExceeded = default, int? excludedPatchCount = default, int? notSelectedPatchCount = default, int? pendingPatchCount = default, int? installedPatchCount = default, int? failedPatchCount = default, DateTimeOffset? startOn = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy? startedBy = default, Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed? patchServiceUsed = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType? osType = default, Azure.ResponseError errorDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult MachineInstallPatchesResult(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt; status, string installationActivityId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt; rebootStatus, valuetype System.Nullable`1&lt;bool&gt; maintenanceWindowExceeded, valuetype System.Nullable`1&lt;int32&gt; excludedPatchCount, valuetype System.Nullable`1&lt;int32&gt; notSelectedPatchCount, valuetype System.Nullable`1&lt;int32&gt; pendingPatchCount, valuetype System.Nullable`1&lt;int32&gt; installedPatchCount, valuetype System.Nullable`1&lt;int32&gt; failedPatchCount, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; startedBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; patchServiceUsed, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt; osType, class Azure.ResponseError errorDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesResult(System.Nullable{Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus},System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed},System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineInstallPatchesResult (Optional status As Nullable(Of MachineOperationStatus) = Nothing, Optional installationActivityId As String = Nothing, Optional rebootStatus As Nullable(Of VmGuestPatchRebootStatus) = Nothing, Optional maintenanceWindowExceeded As Nullable(Of Boolean) = Nothing, Optional excludedPatchCount As Nullable(Of Integer) = Nothing, Optional notSelectedPatchCount As Nullable(Of Integer) = Nothing, Optional pendingPatchCount As Nullable(Of Integer) = Nothing, Optional installedPatchCount As Nullable(Of Integer) = Nothing, Optional failedPatchCount As Nullable(Of Integer) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional startedBy As Nullable(Of PatchOperationStartedBy) = Nothing, Optional patchServiceUsed As Nullable(Of PatchServiceUsed) = Nothing, Optional osType As Nullable(Of HybridComputeOSType) = Nothing, Optional errorDetails As ResponseError = Nothing) As MachineInstallPatchesResult" />
      <MemberSignature Language="F#" Value="static member MachineInstallPatchesResult : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt; * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesResult (status, installationActivityId, rebootStatus, maintenanceWindowExceeded, excludedPatchCount, notSelectedPatchCount, pendingPatchCount, installedPatchCount, failedPatchCount, startOn, lastModifiedOn, startedBy, patchServiceUsed, osType, errorDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.MachineOperationStatus&gt;" />
        <Parameter Name="installationActivityId" Type="System.String" />
        <Parameter Name="rebootStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt;" />
        <Parameter Name="maintenanceWindowExceeded" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="notSelectedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="pendingPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="installedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="failedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startedBy" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt;" />
        <Parameter Name="patchServiceUsed" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeOSType&gt;" />
        <Parameter Name="errorDetails" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="status"> The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or "CompletedWithWarnings.". </param>
        <param name="installationActivityId"> The activity ID of the operation that produced this result. </param>
        <param name="rebootStatus"> The reboot state of the VM following completion of the operation. </param>
        <param name="maintenanceWindowExceeded"> Whether the operation ran out of time before it completed all its intended actions. </param>
        <param name="excludedPatchCount"> The number of patches that were not installed due to the user blocking their installation. </param>
        <param name="notSelectedPatchCount"> The number of patches that were detected as available for install, but did not meet the operation's criteria. </param>
        <param name="pendingPatchCount"> The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true. </param>
        <param name="installedPatchCount"> The number of patches successfully installed. </param>
        <param name="failedPatchCount"> The number of patches that could not be installed due to some issue. See errors for details. </param>
        <param name="startOn"> The UTC timestamp when the operation began. </param>
        <param name="lastModifiedOn"> The UTC timestamp when the operation finished. </param>
        <param name="startedBy"> Indicates if operation was triggered by user or by platform. </param>
        <param name="patchServiceUsed"> Specifies the patch service used for the operation. </param>
        <param name="osType"> The operating system type of the machine. </param>
        <param name="errorDetails"> The errors that were encountered during execution of the operation. The details array contains the list of them. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineRunCommandData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.MachineRunCommandData MachineRunCommandData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.MachineRunCommandScriptSource source = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; parameters = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; protectedParameters = default, bool? asyncExecution = default, string runAsUser = default, string runAsPassword = default, int? timeoutInSeconds = default, Uri outputBlobUri = default, Uri errorBlobUri = default, Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity outputBlobManagedIdentity = default, Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity errorBlobManagedIdentity = default, string provisioningState = default, Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView instanceView = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.MachineRunCommandData MachineRunCommandData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.HybridCompute.Models.MachineRunCommandScriptSource source, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; parameters, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; protectedParameters, valuetype System.Nullable`1&lt;bool&gt; asyncExecution, string runAsUser, string runAsPassword, valuetype System.Nullable`1&lt;int32&gt; timeoutInSeconds, class System.Uri outputBlobUri, class System.Uri errorBlobUri, class Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity outputBlobManagedIdentity, class Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity errorBlobManagedIdentity, string provisioningState, class Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView instanceView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineRunCommandData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.HybridCompute.Models.MachineRunCommandScriptSource,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Uri,System.Uri,Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity,Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity,System.String,Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineRunCommandData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional source As MachineRunCommandScriptSource = Nothing, Optional parameters As IEnumerable(Of RunCommandInputParameter) = Nothing, Optional protectedParameters As IEnumerable(Of RunCommandInputParameter) = Nothing, Optional asyncExecution As Nullable(Of Boolean) = Nothing, Optional runAsUser As String = Nothing, Optional runAsPassword As String = Nothing, Optional timeoutInSeconds As Nullable(Of Integer) = Nothing, Optional outputBlobUri As Uri = Nothing, Optional errorBlobUri As Uri = Nothing, Optional outputBlobManagedIdentity As RunCommandManagedIdentity = Nothing, Optional errorBlobManagedIdentity As RunCommandManagedIdentity = Nothing, Optional provisioningState As String = Nothing, Optional instanceView As MachineRunCommandInstanceView = Nothing) As MachineRunCommandData" />
      <MemberSignature Language="F#" Value="static member MachineRunCommandData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.HybridCompute.Models.MachineRunCommandScriptSource * seq&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt; * Nullable&lt;bool&gt; * string * string * Nullable&lt;int&gt; * Uri * Uri * Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity * Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity * string * Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView -&gt; Azure.ResourceManager.HybridCompute.MachineRunCommandData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineRunCommandData (id, name, resourceType, systemData, tags, location, source, parameters, protectedParameters, asyncExecution, runAsUser, runAsPassword, timeoutInSeconds, outputBlobUri, errorBlobUri, outputBlobManagedIdentity, errorBlobManagedIdentity, provisioningState, instanceView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.MachineRunCommandData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="source" Type="Azure.ResourceManager.HybridCompute.Models.MachineRunCommandScriptSource" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="protectedParameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="asyncExecution" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="runAsUser" Type="System.String" />
        <Parameter Name="runAsPassword" Type="System.String" />
        <Parameter Name="timeoutInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="outputBlobUri" Type="System.Uri" />
        <Parameter Name="errorBlobUri" Type="System.Uri" />
        <Parameter Name="outputBlobManagedIdentity" Type="Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity" />
        <Parameter Name="errorBlobManagedIdentity" Type="Azure.ResourceManager.HybridCompute.Models.RunCommandManagedIdentity" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="source"> The source of the run command script. </param>
        <param name="parameters"> The parameters used by the script. </param>
        <param name="protectedParameters"> The parameters used by the script. </param>
        <param name="asyncExecution"> Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete. </param>
        <param name="runAsUser"> Specifies the user account on the machine when executing the run command. </param>
        <param name="runAsPassword"> Specifies the user account password on the machine when executing the run command. </param>
        <param name="timeoutInSeconds"> The timeout in seconds to execute the run command. </param>
        <param name="outputBlobUri"> Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. </param>
        <param name="errorBlobUri"> Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter. </param>
        <param name="outputBlobManagedIdentity"> User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged. </param>
        <param name="errorBlobManagedIdentity"> User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="instanceView"> The machine run command instance view. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.MachineRunCommandData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.MachineRunCommandData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineRunCommandInstanceView">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView MachineRunCommandInstanceView (Azure.ResourceManager.HybridCompute.Models.HybridComputeExecutionState? executionState = default, string executionMessage = default, int? exitCode = default, string output = default, string error = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus&gt; statuses = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView MachineRunCommandInstanceView(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeExecutionState&gt; executionState, string executionMessage, valuetype System.Nullable`1&lt;int32&gt; exitCode, string output, string error, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus&gt; statuses) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineRunCommandInstanceView(System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeExecutionState},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineRunCommandInstanceView (Optional executionState As Nullable(Of HybridComputeExecutionState) = Nothing, Optional executionMessage As String = Nothing, Optional exitCode As Nullable(Of Integer) = Nothing, Optional output As String = Nothing, Optional error As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional statuses As IEnumerable(Of ExtensionsResourceStatus) = Nothing) As MachineRunCommandInstanceView" />
      <MemberSignature Language="F#" Value="static member MachineRunCommandInstanceView : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeExecutionState&gt; * string * Nullable&lt;int&gt; * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineRunCommandInstanceView (executionState, executionMessage, exitCode, output, error, startOn, endOn, statuses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionState" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeExecutionState&gt;" />
        <Parameter Name="executionMessage" Type="System.String" />
        <Parameter Name="exitCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="output" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ExtensionsResourceStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="executionState"> Script execution status. </param>
        <param name="executionMessage"> Communicate script configuration errors or execution messages. </param>
        <param name="exitCode"> Exit code returned from script execution. </param>
        <param name="output"> Script output stream. </param>
        <param name="error"> Script error stream. </param>
        <param name="startOn"> Script start time. </param>
        <param name="endOn"> Script end time. </param>
        <param name="statuses"> The  status information. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineRunCommandInstanceView" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeter">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter NetworkSecurityPerimeter (string id = default, string perimeterGuid = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter NetworkSecurityPerimeter(string id, string perimeterGuid, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeter(System.String,System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeter (Optional id As String = Nothing, Optional perimeterGuid As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As NetworkSecurityPerimeter" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeter : string * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeter (id, perimeterGuid, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="perimeterGuid" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Azure resource Id. </param>
        <param name="perimeterGuid"> Guid of the Network Security Perimeter. </param>
        <param name="location"> Regional location of the perimeter. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData NetworkSecurityPerimeterConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue&gt; provisioningIssues = default, Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter networkSecurityPerimeter = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation resourceAssociation = default, Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile profile = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData NetworkSecurityPerimeterConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue&gt; provisioningIssues, class Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter networkSecurityPerimeter, class Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation resourceAssociation, class Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeterConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue},Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter,Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation,Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As String = Nothing, Optional provisioningIssues As IEnumerable(Of HybridComputeProvisioningIssue) = Nothing, Optional networkSecurityPerimeter As NetworkSecurityPerimeter = Nothing, Optional resourceAssociation As HybridComputeResourceAssociation = Nothing, Optional profile As NetworkSecurityPerimeterProfile = Nothing) As NetworkSecurityPerimeterConfigurationData" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue&gt; * Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter * Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation * Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile -&gt; Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeterConfigurationData (id, name, resourceType, systemData, provisioningState, provisioningIssues, networkSecurityPerimeter, resourceAssociation, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="provisioningIssues" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeProvisioningIssue&gt;" />
        <Parameter Name="networkSecurityPerimeter" Type="Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeter" />
        <Parameter Name="resourceAssociation" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeResourceAssociation" />
        <Parameter Name="profile" Type="Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed. </param>
        <param name="provisioningIssues"> Provisioning issues. </param>
        <param name="networkSecurityPerimeter"> The Network Security Perimeter associated with this configuration. </param>
        <param name="resourceAssociation"> The Resource Association. </param>
        <param name="profile"> Network Security Perimeter profile. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.NetworkSecurityPerimeterConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile NetworkSecurityPerimeterProfile (string name = default, int? accessRulesVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; accessRules = default, int? diagnosticSettingsVersion = default, System.Collections.Generic.IEnumerable&lt;string&gt; enabledLogCategories = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile NetworkSecurityPerimeterProfile(string name, valuetype System.Nullable`1&lt;int32&gt; accessRulesVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; accessRules, valuetype System.Nullable`1&lt;int32&gt; diagnosticSettingsVersion, class System.Collections.Generic.IEnumerable`1&lt;string&gt; enabledLogCategories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeterProfile(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterProfile (Optional name As String = Nothing, Optional accessRulesVersion As Nullable(Of Integer) = Nothing, Optional accessRules As IEnumerable(Of HybridComputeAccessRule) = Nothing, Optional diagnosticSettingsVersion As Nullable(Of Integer) = Nothing, Optional enabledLogCategories As IEnumerable(Of String) = Nothing) As NetworkSecurityPerimeterProfile" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterProfile : string * Nullable&lt;int&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt; * Nullable&lt;int&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkSecurityPerimeterProfile (name, accessRulesVersion, accessRules, diagnosticSettingsVersion, enabledLogCategories)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="accessRulesVersion" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeAccessRule&gt;" />
        <Parameter Name="diagnosticSettingsVersion" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enabledLogCategories" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource. </param>
        <param name="accessRulesVersion"> Access rules version number. </param>
        <param name="accessRules"> Collection of access rules for the profile. </param>
        <param name="diagnosticSettingsVersion"> Diagnostic settings version number. </param>
        <param name="enabledLogCategories"> Collection of enabled log categories for the profile. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkSecurityPerimeterProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnectionDataModel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel PrivateEndpointConnectionDataModel (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel PrivateEndpointConnectionDataModel(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionDataModel(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateEndpointConnectionDataModel (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As HybridComputePrivateEndpointConnectionProperties = Nothing) As PrivateEndpointConnectionDataModel" />
      <MemberSignature Language="F#" Value="static member PrivateEndpointConnectionDataModel : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionDataModel (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> The Private Endpoint Connection properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateLinkScopeValidationDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails PrivateLinkScopeValidationDetails (Azure.Core.ResourceIdentifier id = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType? publicNetworkAccess = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail&gt; connectionDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails PrivateLinkScopeValidationDetails(class Azure.Core.ResourceIdentifier id, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt; publicNetworkAccess, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail&gt; connectionDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateLinkScopeValidationDetails(Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateLinkScopeValidationDetails (Optional id As ResourceIdentifier = Nothing, Optional publicNetworkAccess As Nullable(Of HybridComputePublicNetworkAccessType) = Nothing, Optional connectionDetails As IEnumerable(Of HybridComputeConnectionDetail) = Nothing) As PrivateLinkScopeValidationDetails" />
      <MemberSignature Language="F#" Value="static member PrivateLinkScopeValidationDetails : Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateLinkScopeValidationDetails (id, publicNetworkAccess, connectionDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputePublicNetworkAccessType&gt;" />
        <Parameter Name="connectionDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeConnectionDetail&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Azure resource Id. </param>
        <param name="publicNetworkAccess"> Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints. </param>
        <param name="connectionDetails"> List of Private Endpoint Connection details. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
