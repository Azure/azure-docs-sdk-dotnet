<Type Name="FaceAdministrationClient" FullName="Azure.AI.Vision.Face.FaceAdministrationClient">
  <TypeSignature Language="C#" Value="public class FaceAdministrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FaceAdministrationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Face.FaceAdministrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FaceAdministrationClient" />
  <TypeSignature Language="F#" Value="type FaceAdministrationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The FaceAdministration service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FaceAdministrationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of FaceAdministrationClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaceAdministrationClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Face.FaceAdministrationClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.Vision.Face.FaceAdministrationClient" Usage="new Azure.AI.Vision.Face.FaceAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://{resource-name}.cognitiveservices.azure.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of FaceAdministrationClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaceAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Face.FaceAdministrationClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.Vision.Face.FaceAdministrationClient" Usage="new Azure.AI.Vision.Face.FaceAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://{resource-name}.cognitiveservices.azure.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of FaceAdministrationClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaceAdministrationClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As AzureAIVisionFaceClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Face.FaceAdministrationClient : Uri * Azure.AzureKeyCredential * Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions -&gt; Azure.AI.Vision.Face.FaceAdministrationClient" Usage="new Azure.AI.Vision.Face.FaceAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://{resource-name}.cognitiveservices.azure.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of FaceAdministrationClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaceAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As AzureAIVisionFaceClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Face.FaceAdministrationClient : Uri * Azure.Core.TokenCredential * Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions -&gt; Azure.AI.Vision.Face.FaceAdministrationClient" Usage="new Azure.AI.Vision.Face.FaceAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.Vision.Face.AzureAIVisionFaceClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://{resource-name}.cognitiveservices.azure.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of FaceAdministrationClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeFaceListClient">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.Vision.Face.LargeFaceListClient GetLargeFaceListClient (string largeFaceListId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.Vision.Face.LargeFaceListClient GetLargeFaceListClient(string largeFaceListId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.GetLargeFaceListClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeFaceListClient (largeFaceListId As String) As LargeFaceListClient" />
      <MemberSignature Language="F#" Value="abstract member GetLargeFaceListClient : string -&gt; Azure.AI.Vision.Face.LargeFaceListClient&#xA;override this.GetLargeFaceListClient : string -&gt; Azure.AI.Vision.Face.LargeFaceListClient" Usage="faceAdministrationClient.GetLargeFaceListClient largeFaceListId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LargeFaceListClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="largeFaceListId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="largeFaceListId"> Valid character is letter in lower case or digit or '-' or '_', maximum length is 64. </param>
        <summary> Initializes a new instance of LargeFaceListClient. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="largeFaceListId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="largeFaceListId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargePersonGroupClient">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.Vision.Face.LargePersonGroupClient GetLargePersonGroupClient (string largePersonGroupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.Vision.Face.LargePersonGroupClient GetLargePersonGroupClient(string largePersonGroupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceAdministrationClient.GetLargePersonGroupClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargePersonGroupClient (largePersonGroupId As String) As LargePersonGroupClient" />
      <MemberSignature Language="F#" Value="abstract member GetLargePersonGroupClient : string -&gt; Azure.AI.Vision.Face.LargePersonGroupClient&#xA;override this.GetLargePersonGroupClient : string -&gt; Azure.AI.Vision.Face.LargePersonGroupClient" Usage="faceAdministrationClient.GetLargePersonGroupClient largePersonGroupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LargePersonGroupClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="largePersonGroupId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="largePersonGroupId"> ID of the container. </param>
        <summary> Initializes a new instance of LargePersonGroupClient. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="largePersonGroupId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="largePersonGroupId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.FaceAdministrationClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.AI.Vision.Face.FaceAdministrationClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
