<Type Name="CreateLivenessWithVerifySessionContent" FullName="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent">
  <TypeSignature Language="C#" Value="public class CreateLivenessWithVerifySessionContent : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CreateLivenessWithVerifySessionContent extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent" />
  <TypeSignature Language="VB.NET" Value="Public Class CreateLivenessWithVerifySessionContent&#xA;Implements IJsonModel(Of CreateLivenessWithVerifySessionContent), IPersistableModel(Of CreateLivenessWithVerifySessionContent)" />
  <TypeSignature Language="F#" Value="type CreateLivenessWithVerifySessionContent = class&#xA;    interface IJsonModel&lt;CreateLivenessWithVerifySessionContent&gt;&#xA;    interface IPersistableModel&lt;CreateLivenessWithVerifySessionContent&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Request for creating liveness with verify session. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateLivenessWithVerifySessionContent (Azure.AI.Vision.Face.LivenessOperationMode livenessOperationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.AI.Vision.Face.LivenessOperationMode livenessOperationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.#ctor(Azure.AI.Vision.Face.LivenessOperationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (livenessOperationMode As LivenessOperationMode)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent : Azure.AI.Vision.Face.LivenessOperationMode -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent" Usage="new Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent livenessOperationMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="livenessOperationMode" Type="Azure.AI.Vision.Face.LivenessOperationMode" />
      </Parameters>
      <Docs>
        <param name="livenessOperationMode"> Type of liveness mode the client should follow. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthTokenTimeToLiveInSeconds">
      <MemberSignature Language="C#" Value="public int? AuthTokenTimeToLiveInSeconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; AuthTokenTimeToLiveInSeconds" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.AuthTokenTimeToLiveInSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthTokenTimeToLiveInSeconds As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.AuthTokenTimeToLiveInSeconds : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.AuthTokenTimeToLiveInSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceCorrelationId">
      <MemberSignature Language="C#" Value="public string DeviceCorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceCorrelationId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.DeviceCorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceCorrelationId As String" />
      <MemberSignature Language="F#" Value="member this.DeviceCorrelationId : string with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.DeviceCorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceCorrelationIdSetInClient">
      <MemberSignature Language="C#" Value="public bool? DeviceCorrelationIdSetInClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DeviceCorrelationIdSetInClient" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.DeviceCorrelationIdSetInClient" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceCorrelationIdSetInClient As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DeviceCorrelationIdSetInClient : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.DeviceCorrelationIdSetInClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether or not to allow client to set their own 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request body. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSessionImage">
      <MemberSignature Language="C#" Value="public bool? EnableSessionImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableSessionImage" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.EnableSessionImage" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSessionImage As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableSessionImage : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.EnableSessionImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether or not store the session image. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessOperationMode">
      <MemberSignature Language="C#" Value="public Azure.AI.Vision.Face.LivenessOperationMode LivenessOperationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.Vision.Face.LivenessOperationMode LivenessOperationMode" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.LivenessOperationMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LivenessOperationMode As LivenessOperationMode" />
      <MemberSignature Language="F#" Value="member this.LivenessOperationMode : Azure.AI.Vision.Face.LivenessOperationMode" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.LivenessOperationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessOperationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Type of liveness mode the client should follow. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessSingleModalModel">
      <MemberSignature Language="C#" Value="public Azure.AI.Vision.Face.LivenessModel? LivenessSingleModalModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.LivenessModel&gt; LivenessSingleModalModel" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.LivenessSingleModalModel" />
      <MemberSignature Language="VB.NET" Value="Public Property LivenessSingleModalModel As Nullable(Of LivenessModel)" />
      <MemberSignature Language="F#" Value="member this.LivenessSingleModalModel : Nullable&lt;Azure.AI.Vision.Face.LivenessModel&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.LivenessSingleModalModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.Vision.Face.LivenessModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The model version used for liveness classification. This is an optional parameter, and if this is not specified, then the latest supported model version will be chosen. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnVerifyImageHash">
      <MemberSignature Language="C#" Value="public bool? ReturnVerifyImageHash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ReturnVerifyImageHash" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.ReturnVerifyImageHash" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnVerifyImageHash As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ReturnVerifyImageHash : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.ReturnVerifyImageHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether or not return the verify image hash. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResultsToClient">
      <MemberSignature Language="C#" Value="public bool? SendResultsToClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; SendResultsToClient" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.SendResultsToClient" />
      <MemberSignature Language="VB.NET" Value="Public Property SendResultsToClient As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.SendResultsToClient : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.SendResultsToClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether or not to allow a '200 - Success' response body to be sent to the client, which may be undesirable for security reasons. Default is false, clients will receive a '204 - NoContent' empty body response. Regardless of selection, calling Session GetResult will always contain a response body enabling business logic to be implemented. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent IJsonModel&lt;CreateLivenessWithVerifySessionContent&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#CreateLivenessWithVerifySessionContent&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As CreateLivenessWithVerifySessionContent Implements IJsonModel(Of CreateLivenessWithVerifySessionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent" Usage="createLivenessWithVerifySessionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;CreateLivenessWithVerifySessionContent&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#CreateLivenessWithVerifySessionContent&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of CreateLivenessWithVerifySessionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="createLivenessWithVerifySessionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent IPersistableModel&lt;CreateLivenessWithVerifySessionContent&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#CreateLivenessWithVerifySessionContent&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As CreateLivenessWithVerifySessionContent Implements IPersistableModel(Of CreateLivenessWithVerifySessionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent" Usage="createLivenessWithVerifySessionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#CreateLivenessWithVerifySessionContent&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of CreateLivenessWithVerifySessionContent).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="createLivenessWithVerifySessionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;CreateLivenessWithVerifySessionContent&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#CreateLivenessWithVerifySessionContent&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of CreateLivenessWithVerifySessionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="createLivenessWithVerifySessionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyConfidenceThreshold">
      <MemberSignature Language="C#" Value="public float? VerifyConfidenceThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; VerifyConfidenceThreshold" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.VerifyConfidenceThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property VerifyConfidenceThreshold As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.VerifyConfidenceThreshold : Nullable&lt;single&gt; with get, set" Usage="Azure.AI.Vision.Face.CreateLivenessWithVerifySessionContent.VerifyConfidenceThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Threshold for confidence of the face verification. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
