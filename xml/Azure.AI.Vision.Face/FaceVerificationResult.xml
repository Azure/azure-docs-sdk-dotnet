<Type Name="FaceVerificationResult" FullName="Azure.AI.Vision.Face.FaceVerificationResult">
  <TypeSignature Language="C#" Value="public class FaceVerificationResult : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FaceVerificationResult extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Vision.Face.FaceVerificationResult&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Vision.Face.FaceVerificationResult&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Face.FaceVerificationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class FaceVerificationResult&#xA;Implements IJsonModel(Of FaceVerificationResult), IPersistableModel(Of FaceVerificationResult)" />
  <TypeSignature Language="F#" Value="type FaceVerificationResult = class&#xA;    interface IJsonModel&lt;FaceVerificationResult&gt;&#xA;    interface IPersistableModel&lt;FaceVerificationResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Verify result. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.FaceVerificationResult.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="Azure.AI.Vision.Face.FaceVerificationResult.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and fine-tune the result on their own data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentical">
      <MemberSignature Language="C#" Value="public bool IsIdentical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentical" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.FaceVerificationResult.IsIdentical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentical As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIdentical : bool" Usage="Azure.AI.Vision.Face.FaceVerificationResult.IsIdentical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> True if the two faces belong to the same person or the face belongs to the person, otherwise false. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.FaceVerificationResult IJsonModel&lt;FaceVerificationResult&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.FaceVerificationResult System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceVerificationResult.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#FaceVerificationResult&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As FaceVerificationResult Implements IJsonModel(Of FaceVerificationResult).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.FaceVerificationResult&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.FaceVerificationResult" Usage="faceVerificationResult.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceVerificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;FaceVerificationResult&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceVerificationResult.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#FaceVerificationResult&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of FaceVerificationResult).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="faceVerificationResult.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.FaceVerificationResult IPersistableModel&lt;FaceVerificationResult&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.FaceVerificationResult System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceVerificationResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#FaceVerificationResult&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As FaceVerificationResult Implements IPersistableModel(Of FaceVerificationResult).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.FaceVerificationResult&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.FaceVerificationResult" Usage="faceVerificationResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceVerificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;FaceVerificationResult&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceVerificationResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#FaceVerificationResult&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of FaceVerificationResult).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="faceVerificationResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;FaceVerificationResult&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.FaceVerificationResult.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#FaceVerificationResult&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of FaceVerificationResult).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="faceVerificationResult.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.FaceVerificationResult&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
