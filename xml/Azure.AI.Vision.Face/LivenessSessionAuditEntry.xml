<Type Name="LivenessSessionAuditEntry" FullName="Azure.AI.Vision.Face.LivenessSessionAuditEntry">
  <TypeSignature Language="C#" Value="public class LivenessSessionAuditEntry : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LivenessSessionAuditEntry extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Face.LivenessSessionAuditEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class LivenessSessionAuditEntry&#xA;Implements IJsonModel(Of LivenessSessionAuditEntry), IPersistableModel(Of LivenessSessionAuditEntry)" />
  <TypeSignature Language="F#" Value="type LivenessSessionAuditEntry = class&#xA;    interface IJsonModel&lt;LivenessSessionAuditEntry&gt;&#xA;    interface IPersistableModel&lt;LivenessSessionAuditEntry&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Audit entry for a request in session. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientRequestId">
      <MemberSignature Language="C#" Value="public string ClientRequestId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientRequestId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.ClientRequestId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRequestId As String" />
      <MemberSignature Language="F#" Value="member this.ClientRequestId : string" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.ClientRequestId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The unique clientRequestId that is sent by the client in the 'client-request-id' header. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="C#" Value="public string Digest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Digest" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.Digest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Digest As String" />
      <MemberSignature Language="F#" Value="member this.Digest : string" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.Digest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The server calculated digest for this request. If the client reported digest differs from the server calculated digest, then the message integrity between the client and service has been compromised and the result should not be trusted. For more information, see how to guides on how to leverage this value to secure your end-to-end solution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public long Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Id" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Long" />
      <MemberSignature Language="F#" Value="member this.Id : int64" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The unique id to refer to this audit request. Use this id with the 'start' query parameter to continue on to the next page of audit results. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedDateTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ReceivedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ReceivedDateTime" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.ReceivedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceivedDateTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.ReceivedDateTime : DateTimeOffset" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.ReceivedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The UTC DateTime that the request was received. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public Azure.AI.Vision.Face.AuditRequestInfo Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Vision.Face.AuditRequestInfo Request" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As AuditRequestInfo" />
      <MemberSignature Language="F#" Value="member this.Request : Azure.AI.Vision.Face.AuditRequestInfo" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.AuditRequestInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The request of this entry. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestId">
      <MemberSignature Language="C#" Value="public string RequestId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.RequestId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestId As String" />
      <MemberSignature Language="F#" Value="member this.RequestId : string" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.RequestId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The unique requestId that is returned by the service to the client in the 'apim-request-id' header. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public Azure.AI.Vision.Face.AuditLivenessResponseInfo Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Vision.Face.AuditLivenessResponseInfo Response" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As AuditLivenessResponseInfo" />
      <MemberSignature Language="F#" Value="member this.Response : Azure.AI.Vision.Face.AuditLivenessResponseInfo" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.AuditLivenessResponseInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The response of this entry. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Face.LivenessSessionAuditEntry.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="Azure.AI.Vision.Face.LivenessSessionAuditEntry.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The unique sessionId of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding session DELETE operation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.LivenessSessionAuditEntry IJsonModel&lt;LivenessSessionAuditEntry&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.LivenessSessionAuditEntry System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.LivenessSessionAuditEntry.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#LivenessSessionAuditEntry&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As LivenessSessionAuditEntry Implements IJsonModel(Of LivenessSessionAuditEntry).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.LivenessSessionAuditEntry&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.LivenessSessionAuditEntry" Usage="livenessSessionAuditEntry.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessSessionAuditEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;LivenessSessionAuditEntry&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.LivenessSessionAuditEntry.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Vision#Face#LivenessSessionAuditEntry&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of LivenessSessionAuditEntry).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="livenessSessionAuditEntry.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Vision.Face.LivenessSessionAuditEntry IPersistableModel&lt;LivenessSessionAuditEntry&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Vision.Face.LivenessSessionAuditEntry System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.LivenessSessionAuditEntry.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#LivenessSessionAuditEntry&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As LivenessSessionAuditEntry Implements IPersistableModel(Of LivenessSessionAuditEntry).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.LivenessSessionAuditEntry&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Vision.Face.LivenessSessionAuditEntry" Usage="livenessSessionAuditEntry.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessSessionAuditEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;LivenessSessionAuditEntry&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.LivenessSessionAuditEntry.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#LivenessSessionAuditEntry&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of LivenessSessionAuditEntry).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="livenessSessionAuditEntry.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;LivenessSessionAuditEntry&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.LivenessSessionAuditEntry.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Vision#Face#LivenessSessionAuditEntry&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of LivenessSessionAuditEntry).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="livenessSessionAuditEntry.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Vision.Face.LivenessSessionAuditEntry&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
