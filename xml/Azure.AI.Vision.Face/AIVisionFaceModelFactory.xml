<Type Name="AIVisionFaceModelFactory" FullName="Azure.AI.Vision.Face.AIVisionFaceModelFactory">
  <TypeSignature Language="C#" Value="public static class AIVisionFaceModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AIVisionFaceModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Face.AIVisionFaceModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AIVisionFaceModelFactory" />
  <TypeSignature Language="F#" Value="type AIVisionFaceModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessoryItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.AccessoryItem AccessoryItem (Azure.AI.Vision.Face.AccessoryType type = default, float confidence = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.AccessoryItem AccessoryItem(valuetype Azure.AI.Vision.Face.AccessoryType type, float32 confidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.AccessoryItem(Azure.AI.Vision.Face.AccessoryType,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessoryItem (Optional type As AccessoryType = Nothing, Optional confidence As Single = 0) As AccessoryItem" />
      <MemberSignature Language="F#" Value="static member AccessoryItem : Azure.AI.Vision.Face.AccessoryType * single -&gt; Azure.AI.Vision.Face.AccessoryItem" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.AccessoryItem (type, confidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.AccessoryItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Azure.AI.Vision.Face.AccessoryType" />
        <Parameter Name="confidence" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="type"> Type of the accessory. </param>
        <param name="confidence"> Confidence level of the accessory type. Range between [0,1]. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.AccessoryItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.AccessoryItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditLivenessResponseInfo">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.AuditLivenessResponseInfo AuditLivenessResponseInfo (Azure.AI.Vision.Face.LivenessResponseBody body = default, int statusCode = 0, long latencyInMilliseconds = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.AuditLivenessResponseInfo AuditLivenessResponseInfo(class Azure.AI.Vision.Face.LivenessResponseBody body, int32 statusCode, int64 latencyInMilliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.AuditLivenessResponseInfo(Azure.AI.Vision.Face.LivenessResponseBody,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuditLivenessResponseInfo (Optional body As LivenessResponseBody = Nothing, Optional statusCode As Integer = 0, Optional latencyInMilliseconds As Long = 0) As AuditLivenessResponseInfo" />
      <MemberSignature Language="F#" Value="static member AuditLivenessResponseInfo : Azure.AI.Vision.Face.LivenessResponseBody * int * int64 -&gt; Azure.AI.Vision.Face.AuditLivenessResponseInfo" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.AuditLivenessResponseInfo (body, statusCode, latencyInMilliseconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.AuditLivenessResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.Vision.Face.LivenessResponseBody" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="latencyInMilliseconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="body"> The response body. The schema of this field will depend on the request.url and request.method used by the client. </param>
        <param name="statusCode"> The HTTP status code returned to the client. </param>
        <param name="latencyInMilliseconds"> The server measured latency for this request in milliseconds. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.AuditLivenessResponseInfo" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.AuditLivenessResponseInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRequestInfo">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.AuditRequestInfo AuditRequestInfo (string url = default, string method = default, long? contentLength = default, string contentType = default, string userAgent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.AuditRequestInfo AuditRequestInfo(string url, string method, valuetype System.Nullable`1&lt;int64&gt; contentLength, string contentType, string userAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.AuditRequestInfo(System.String,System.String,System.Nullable{System.Int64},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuditRequestInfo (Optional url As String = Nothing, Optional method As String = Nothing, Optional contentLength As Nullable(Of Long) = Nothing, Optional contentType As String = Nothing, Optional userAgent As String = Nothing) As AuditRequestInfo" />
      <MemberSignature Language="F#" Value="static member AuditRequestInfo : string * string * Nullable&lt;int64&gt; * string * string -&gt; Azure.AI.Vision.Face.AuditRequestInfo" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.AuditRequestInfo (url, method, contentLength, contentType, userAgent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.AuditRequestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="contentLength" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="userAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"> The relative URL and query of the liveness request. </param>
        <param name="method"> The HTTP method of the request (i.e., GET, POST, DELETE). </param>
        <param name="contentLength"> The length of the request body in bytes. </param>
        <param name="contentType"> The content type of the request. </param>
        <param name="userAgent"> The user agent used to submit the request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.AuditRequestInfo" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.AuditRequestInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlurProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.BlurProperties BlurProperties (Azure.AI.Vision.Face.BlurLevel blurLevel = default, float value = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.BlurProperties BlurProperties(valuetype Azure.AI.Vision.Face.BlurLevel blurLevel, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.BlurProperties(Azure.AI.Vision.Face.BlurLevel,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlurProperties (Optional blurLevel As BlurLevel = Nothing, Optional value As Single = 0) As BlurProperties" />
      <MemberSignature Language="F#" Value="static member BlurProperties : Azure.AI.Vision.Face.BlurLevel * single -&gt; Azure.AI.Vision.Face.BlurProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.BlurProperties (blurLevel, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.BlurProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blurLevel" Type="Azure.AI.Vision.Face.BlurLevel" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="blurLevel"> An enum value indicating level of blurriness. </param>
        <param name="value"> A number indicating level of blurriness ranging from 0 to 1. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.BlurProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.BlurProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLivenessSessionContent">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.CreateLivenessSessionContent CreateLivenessSessionContent (Azure.AI.Vision.Face.LivenessOperationMode livenessOperationMode = default, bool? sendResultsToClient = default, bool? deviceCorrelationIdSetInClient = default, string deviceCorrelationId = default, int? authTokenTimeToLiveInSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.CreateLivenessSessionContent CreateLivenessSessionContent(valuetype Azure.AI.Vision.Face.LivenessOperationMode livenessOperationMode, valuetype System.Nullable`1&lt;bool&gt; sendResultsToClient, valuetype System.Nullable`1&lt;bool&gt; deviceCorrelationIdSetInClient, string deviceCorrelationId, valuetype System.Nullable`1&lt;int32&gt; authTokenTimeToLiveInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessSessionContent(Azure.AI.Vision.Face.LivenessOperationMode,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLivenessSessionContent (Optional livenessOperationMode As LivenessOperationMode = Nothing, Optional sendResultsToClient As Nullable(Of Boolean) = Nothing, Optional deviceCorrelationIdSetInClient As Nullable(Of Boolean) = Nothing, Optional deviceCorrelationId As String = Nothing, Optional authTokenTimeToLiveInSeconds As Nullable(Of Integer) = Nothing) As CreateLivenessSessionContent" />
      <MemberSignature Language="F#" Value="static member CreateLivenessSessionContent : Azure.AI.Vision.Face.LivenessOperationMode * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; -&gt; Azure.AI.Vision.Face.CreateLivenessSessionContent" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessSessionContent (livenessOperationMode, sendResultsToClient, deviceCorrelationIdSetInClient, deviceCorrelationId, authTokenTimeToLiveInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.CreateLivenessSessionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="livenessOperationMode" Type="Azure.AI.Vision.Face.LivenessOperationMode" />
        <Parameter Name="sendResultsToClient" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="deviceCorrelationIdSetInClient" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="deviceCorrelationId" Type="System.String" />
        <Parameter Name="authTokenTimeToLiveInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="livenessOperationMode"> Type of liveness mode the client should follow. </param>
        <param name="sendResultsToClient"> Whether or not to allow a '200 - Success' response body to be sent to the client, which may be undesirable for security reasons. Default is false, clients will receive a '204 - NoContent' empty body response. Regardless of selection, calling Session GetResult will always contain a response body enabling business logic to be implemented. </param>
        <param name="deviceCorrelationIdSetInClient"> Whether or not to allow client to set their own 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request body. </param>
        <param name="deviceCorrelationId"> Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null. </param>
        <param name="authTokenTimeToLiveInSeconds"> Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.CreateLivenessSessionContent" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.CreateLivenessSessionContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLivenessSessionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.CreateLivenessSessionResult CreateLivenessSessionResult (string sessionId = default, string authToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.CreateLivenessSessionResult CreateLivenessSessionResult(string sessionId, string authToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessSessionResult(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLivenessSessionResult (Optional sessionId As String = Nothing, Optional authToken As String = Nothing) As CreateLivenessSessionResult" />
      <MemberSignature Language="F#" Value="static member CreateLivenessSessionResult : string * string -&gt; Azure.AI.Vision.Face.CreateLivenessSessionResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessSessionResult (sessionId, authToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.CreateLivenessSessionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.String" />
        <Parameter Name="authToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sessionId"> The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation. </param>
        <param name="authToken"> Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.CreateLivenessSessionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.CreateLivenessSessionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLivenessWithVerifySessionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult CreateLivenessWithVerifySessionResult (string sessionId = default, string authToken = default, Azure.AI.Vision.Face.LivenessWithVerifyImage verifyImage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult CreateLivenessWithVerifySessionResult(string sessionId, string authToken, class Azure.AI.Vision.Face.LivenessWithVerifyImage verifyImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessWithVerifySessionResult(System.String,System.String,Azure.AI.Vision.Face.LivenessWithVerifyImage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLivenessWithVerifySessionResult (Optional sessionId As String = Nothing, Optional authToken As String = Nothing, Optional verifyImage As LivenessWithVerifyImage = Nothing) As CreateLivenessWithVerifySessionResult" />
      <MemberSignature Language="F#" Value="static member CreateLivenessWithVerifySessionResult : string * string * Azure.AI.Vision.Face.LivenessWithVerifyImage -&gt; Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.CreateLivenessWithVerifySessionResult (sessionId, authToken, verifyImage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.String" />
        <Parameter Name="authToken" Type="System.String" />
        <Parameter Name="verifyImage" Type="Azure.AI.Vision.Face.LivenessWithVerifyImage" />
      </Parameters>
      <Docs>
        <param name="sessionId"> The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation. </param>
        <param name="authToken"> Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable. </param>
        <param name="verifyImage"> The detail of face for verification. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.CreateLivenessWithVerifySessionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.ExposureProperties ExposureProperties (Azure.AI.Vision.Face.ExposureLevel exposureLevel = default, float value = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.ExposureProperties ExposureProperties(valuetype Azure.AI.Vision.Face.ExposureLevel exposureLevel, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.ExposureProperties(Azure.AI.Vision.Face.ExposureLevel,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExposureProperties (Optional exposureLevel As ExposureLevel = Nothing, Optional value As Single = 0) As ExposureProperties" />
      <MemberSignature Language="F#" Value="static member ExposureProperties : Azure.AI.Vision.Face.ExposureLevel * single -&gt; Azure.AI.Vision.Face.ExposureProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.ExposureProperties (exposureLevel, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.ExposureProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exposureLevel" Type="Azure.AI.Vision.Face.ExposureLevel" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="exposureLevel"> An enum value indicating level of exposure. </param>
        <param name="value"> A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.ExposureProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.ExposureProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceAttributes">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceAttributes FaceAttributes (float? age = default, float? smile = default, Azure.AI.Vision.Face.FacialHair facialHair = default, Azure.AI.Vision.Face.GlassesType? glasses = default, Azure.AI.Vision.Face.HeadPose headPose = default, Azure.AI.Vision.Face.HairProperties hair = default, Azure.AI.Vision.Face.OcclusionProperties occlusion = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Vision.Face.AccessoryItem&gt; accessories = default, Azure.AI.Vision.Face.BlurProperties blur = default, Azure.AI.Vision.Face.ExposureProperties exposure = default, Azure.AI.Vision.Face.NoiseProperties noise = default, Azure.AI.Vision.Face.MaskProperties mask = default, Azure.AI.Vision.Face.QualityForRecognition? qualityForRecognition = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceAttributes FaceAttributes(valuetype System.Nullable`1&lt;float32&gt; age, valuetype System.Nullable`1&lt;float32&gt; smile, class Azure.AI.Vision.Face.FacialHair facialHair, valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.GlassesType&gt; glasses, class Azure.AI.Vision.Face.HeadPose headPose, class Azure.AI.Vision.Face.HairProperties hair, class Azure.AI.Vision.Face.OcclusionProperties occlusion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Vision.Face.AccessoryItem&gt; accessories, class Azure.AI.Vision.Face.BlurProperties blur, class Azure.AI.Vision.Face.ExposureProperties exposure, class Azure.AI.Vision.Face.NoiseProperties noise, class Azure.AI.Vision.Face.MaskProperties mask, valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.QualityForRecognition&gt; qualityForRecognition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceAttributes(System.Nullable{System.Single},System.Nullable{System.Single},Azure.AI.Vision.Face.FacialHair,System.Nullable{Azure.AI.Vision.Face.GlassesType},Azure.AI.Vision.Face.HeadPose,Azure.AI.Vision.Face.HairProperties,Azure.AI.Vision.Face.OcclusionProperties,System.Collections.Generic.IEnumerable{Azure.AI.Vision.Face.AccessoryItem},Azure.AI.Vision.Face.BlurProperties,Azure.AI.Vision.Face.ExposureProperties,Azure.AI.Vision.Face.NoiseProperties,Azure.AI.Vision.Face.MaskProperties,System.Nullable{Azure.AI.Vision.Face.QualityForRecognition})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceAttributes (Optional age As Nullable(Of Single) = Nothing, Optional smile As Nullable(Of Single) = Nothing, Optional facialHair As FacialHair = Nothing, Optional glasses As Nullable(Of GlassesType) = Nothing, Optional headPose As HeadPose = Nothing, Optional hair As HairProperties = Nothing, Optional occlusion As OcclusionProperties = Nothing, Optional accessories As IEnumerable(Of AccessoryItem) = Nothing, Optional blur As BlurProperties = Nothing, Optional exposure As ExposureProperties = Nothing, Optional noise As NoiseProperties = Nothing, Optional mask As MaskProperties = Nothing, Optional qualityForRecognition As Nullable(Of QualityForRecognition) = Nothing) As FaceAttributes" />
      <MemberSignature Language="F#" Value="static member FaceAttributes : Nullable&lt;single&gt; * Nullable&lt;single&gt; * Azure.AI.Vision.Face.FacialHair * Nullable&lt;Azure.AI.Vision.Face.GlassesType&gt; * Azure.AI.Vision.Face.HeadPose * Azure.AI.Vision.Face.HairProperties * Azure.AI.Vision.Face.OcclusionProperties * seq&lt;Azure.AI.Vision.Face.AccessoryItem&gt; * Azure.AI.Vision.Face.BlurProperties * Azure.AI.Vision.Face.ExposureProperties * Azure.AI.Vision.Face.NoiseProperties * Azure.AI.Vision.Face.MaskProperties * Nullable&lt;Azure.AI.Vision.Face.QualityForRecognition&gt; -&gt; Azure.AI.Vision.Face.FaceAttributes" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceAttributes (age, smile, facialHair, glasses, headPose, hair, occlusion, accessories, blur, exposure, noise, mask, qualityForRecognition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="age" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="smile" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="facialHair" Type="Azure.AI.Vision.Face.FacialHair" />
        <Parameter Name="glasses" Type="System.Nullable&lt;Azure.AI.Vision.Face.GlassesType&gt;" />
        <Parameter Name="headPose" Type="Azure.AI.Vision.Face.HeadPose" />
        <Parameter Name="hair" Type="Azure.AI.Vision.Face.HairProperties" />
        <Parameter Name="occlusion" Type="Azure.AI.Vision.Face.OcclusionProperties" />
        <Parameter Name="accessories" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Vision.Face.AccessoryItem&gt;" />
        <Parameter Name="blur" Type="Azure.AI.Vision.Face.BlurProperties" />
        <Parameter Name="exposure" Type="Azure.AI.Vision.Face.ExposureProperties" />
        <Parameter Name="noise" Type="Azure.AI.Vision.Face.NoiseProperties" />
        <Parameter Name="mask" Type="Azure.AI.Vision.Face.MaskProperties" />
        <Parameter Name="qualityForRecognition" Type="System.Nullable&lt;Azure.AI.Vision.Face.QualityForRecognition&gt;" />
      </Parameters>
      <Docs>
        <param name="age"> Age in years. </param>
        <param name="smile"> Smile intensity, a number between [0,1]. </param>
        <param name="facialHair"> Properties describing facial hair attributes. </param>
        <param name="glasses"> Glasses type if any of the face. </param>
        <param name="headPose"> 3-D roll/yaw/pitch angles for face direction. </param>
        <param name="hair"> Properties describing hair attributes. </param>
        <param name="occlusion"> Properties describing occlusions on a given face. </param>
        <param name="accessories"> Properties describing any accessories on a given face. </param>
        <param name="blur"> Properties describing any presence of blur within the image. </param>
        <param name="exposure"> Properties describing exposure level of the image. </param>
        <param name="noise"> Properties describing noise level of the image. </param>
        <param name="mask"> Properties describing the presence of a mask on a given face. </param>
        <param name="qualityForRecognition"> Properties describing the overall image quality regarding whether the image being used in the detection is of sufficient quality to attempt face recognition on. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceAttributes" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceAttributes" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceDetectionResult FaceDetectionResult (Guid? faceId = default, Azure.AI.Vision.Face.FaceRecognitionModel? recognitionModel = default, Azure.AI.Vision.Face.FaceRectangle faceRectangle = default, Azure.AI.Vision.Face.FaceLandmarks faceLandmarks = default, Azure.AI.Vision.Face.FaceAttributes faceAttributes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceDetectionResult FaceDetectionResult(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; faceId, valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.FaceRecognitionModel&gt; recognitionModel, class Azure.AI.Vision.Face.FaceRectangle faceRectangle, class Azure.AI.Vision.Face.FaceLandmarks faceLandmarks, class Azure.AI.Vision.Face.FaceAttributes faceAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceDetectionResult(System.Nullable{System.Guid},System.Nullable{Azure.AI.Vision.Face.FaceRecognitionModel},Azure.AI.Vision.Face.FaceRectangle,Azure.AI.Vision.Face.FaceLandmarks,Azure.AI.Vision.Face.FaceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceDetectionResult (Optional faceId As Nullable(Of Guid) = Nothing, Optional recognitionModel As Nullable(Of FaceRecognitionModel) = Nothing, Optional faceRectangle As FaceRectangle = Nothing, Optional faceLandmarks As FaceLandmarks = Nothing, Optional faceAttributes As FaceAttributes = Nothing) As FaceDetectionResult" />
      <MemberSignature Language="F#" Value="static member FaceDetectionResult : Nullable&lt;Guid&gt; * Nullable&lt;Azure.AI.Vision.Face.FaceRecognitionModel&gt; * Azure.AI.Vision.Face.FaceRectangle * Azure.AI.Vision.Face.FaceLandmarks * Azure.AI.Vision.Face.FaceAttributes -&gt; Azure.AI.Vision.Face.FaceDetectionResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceDetectionResult (faceId, recognitionModel, faceRectangle, faceLandmarks, faceAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="recognitionModel" Type="System.Nullable&lt;Azure.AI.Vision.Face.FaceRecognitionModel&gt;" />
        <Parameter Name="faceRectangle" Type="Azure.AI.Vision.Face.FaceRectangle" />
        <Parameter Name="faceLandmarks" Type="Azure.AI.Vision.Face.FaceLandmarks" />
        <Parameter Name="faceAttributes" Type="Azure.AI.Vision.Face.FaceAttributes" />
      </Parameters>
      <Docs>
        <param name="faceId"> Unique faceId of the detected face, created by detection API and it will expire 24 hours after the detection call. To return this, it requires 'returnFaceId' parameter to be true. </param>
        <param name="recognitionModel"> The 'recognitionModel' associated with this faceId. This is only returned when 'returnRecognitionModel' is explicitly set as true. </param>
        <param name="faceRectangle"> A rectangle area for the face location on image. </param>
        <param name="faceLandmarks"> An array of 27-point face landmarks pointing to the important positions of face components. To return this, it requires 'returnFaceLandmarks' parameter to be true. </param>
        <param name="faceAttributes"> Face attributes for detected face. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceDetectionResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceFindSimilarResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceFindSimilarResult FaceFindSimilarResult (float confidence = 0, Guid? faceId = default, Guid? persistedFaceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceFindSimilarResult FaceFindSimilarResult(float32 confidence, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; faceId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; persistedFaceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceFindSimilarResult(System.Single,System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceFindSimilarResult (Optional confidence As Single = 0, Optional faceId As Nullable(Of Guid) = Nothing, Optional persistedFaceId As Nullable(Of Guid) = Nothing) As FaceFindSimilarResult" />
      <MemberSignature Language="F#" Value="static member FaceFindSimilarResult : single * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; -&gt; Azure.AI.Vision.Face.FaceFindSimilarResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceFindSimilarResult (confidence, faceId, persistedFaceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceFindSimilarResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="confidence" Type="System.Single" />
        <Parameter Name="faceId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="persistedFaceId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="confidence"> Confidence value of the candidate. The higher confidence, the more similar. Range between [0,1]. </param>
        <param name="faceId"> faceId of candidate face when find by faceIds. faceId is created by "Detect" and will expire 24 hours after the detection call. </param>
        <param name="persistedFaceId"> persistedFaceId of candidate face when find by faceListId or largeFaceListId. persistedFaceId in face list/large face list is persisted and will not expire. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceFindSimilarResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceFindSimilarResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceGroupingResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceGroupingResult FaceGroupingResult (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.IList&lt;Guid&gt;&gt; groups = default, System.Collections.Generic.IEnumerable&lt;Guid&gt; messyGroup = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceGroupingResult FaceGroupingResult(class System.Collections.Generic.IEnumerable`1&lt;class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt;&gt; groups, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; messyGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceGroupingResult(System.Collections.Generic.IEnumerable{System.Collections.Generic.IList{System.Guid}},System.Collections.Generic.IEnumerable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceGroupingResult (Optional groups As IEnumerable(Of IList(Of Guid)) = Nothing, Optional messyGroup As IEnumerable(Of Guid) = Nothing) As FaceGroupingResult" />
      <MemberSignature Language="F#" Value="static member FaceGroupingResult : seq&lt;System.Collections.Generic.IList&lt;Guid&gt;&gt; * seq&lt;Guid&gt; -&gt; Azure.AI.Vision.Face.FaceGroupingResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceGroupingResult (groups, messyGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceGroupingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.IList&lt;System.Guid&gt;&gt;" />
        <Parameter Name="messyGroup" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="groups"> A partition of the original faces based on face similarity. Groups are ranked by number of faces. </param>
        <param name="messyGroup"> Face ids array of faces that cannot find any similar faces from original faces. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceGroupingResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceGroupingResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceLandmarks">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceLandmarks FaceLandmarks (Azure.AI.Vision.Face.LandmarkCoordinate pupilLeft = default, Azure.AI.Vision.Face.LandmarkCoordinate pupilRight = default, Azure.AI.Vision.Face.LandmarkCoordinate noseTip = default, Azure.AI.Vision.Face.LandmarkCoordinate mouthLeft = default, Azure.AI.Vision.Face.LandmarkCoordinate mouthRight = default, Azure.AI.Vision.Face.LandmarkCoordinate eyebrowLeftOuter = default, Azure.AI.Vision.Face.LandmarkCoordinate eyebrowLeftInner = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftOuter = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftTop = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftBottom = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftInner = default, Azure.AI.Vision.Face.LandmarkCoordinate eyebrowRightInner = default, Azure.AI.Vision.Face.LandmarkCoordinate eyebrowRightOuter = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeRightInner = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeRightTop = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeRightBottom = default, Azure.AI.Vision.Face.LandmarkCoordinate eyeRightOuter = default, Azure.AI.Vision.Face.LandmarkCoordinate noseRootLeft = default, Azure.AI.Vision.Face.LandmarkCoordinate noseRootRight = default, Azure.AI.Vision.Face.LandmarkCoordinate noseLeftAlarTop = default, Azure.AI.Vision.Face.LandmarkCoordinate noseRightAlarTop = default, Azure.AI.Vision.Face.LandmarkCoordinate noseLeftAlarOutTip = default, Azure.AI.Vision.Face.LandmarkCoordinate noseRightAlarOutTip = default, Azure.AI.Vision.Face.LandmarkCoordinate upperLipTop = default, Azure.AI.Vision.Face.LandmarkCoordinate upperLipBottom = default, Azure.AI.Vision.Face.LandmarkCoordinate underLipTop = default, Azure.AI.Vision.Face.LandmarkCoordinate underLipBottom = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceLandmarks FaceLandmarks(class Azure.AI.Vision.Face.LandmarkCoordinate pupilLeft, class Azure.AI.Vision.Face.LandmarkCoordinate pupilRight, class Azure.AI.Vision.Face.LandmarkCoordinate noseTip, class Azure.AI.Vision.Face.LandmarkCoordinate mouthLeft, class Azure.AI.Vision.Face.LandmarkCoordinate mouthRight, class Azure.AI.Vision.Face.LandmarkCoordinate eyebrowLeftOuter, class Azure.AI.Vision.Face.LandmarkCoordinate eyebrowLeftInner, class Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftOuter, class Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftTop, class Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftBottom, class Azure.AI.Vision.Face.LandmarkCoordinate eyeLeftInner, class Azure.AI.Vision.Face.LandmarkCoordinate eyebrowRightInner, class Azure.AI.Vision.Face.LandmarkCoordinate eyebrowRightOuter, class Azure.AI.Vision.Face.LandmarkCoordinate eyeRightInner, class Azure.AI.Vision.Face.LandmarkCoordinate eyeRightTop, class Azure.AI.Vision.Face.LandmarkCoordinate eyeRightBottom, class Azure.AI.Vision.Face.LandmarkCoordinate eyeRightOuter, class Azure.AI.Vision.Face.LandmarkCoordinate noseRootLeft, class Azure.AI.Vision.Face.LandmarkCoordinate noseRootRight, class Azure.AI.Vision.Face.LandmarkCoordinate noseLeftAlarTop, class Azure.AI.Vision.Face.LandmarkCoordinate noseRightAlarTop, class Azure.AI.Vision.Face.LandmarkCoordinate noseLeftAlarOutTip, class Azure.AI.Vision.Face.LandmarkCoordinate noseRightAlarOutTip, class Azure.AI.Vision.Face.LandmarkCoordinate upperLipTop, class Azure.AI.Vision.Face.LandmarkCoordinate upperLipBottom, class Azure.AI.Vision.Face.LandmarkCoordinate underLipTop, class Azure.AI.Vision.Face.LandmarkCoordinate underLipBottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceLandmarks(Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate,Azure.AI.Vision.Face.LandmarkCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceLandmarks (Optional pupilLeft As LandmarkCoordinate = Nothing, Optional pupilRight As LandmarkCoordinate = Nothing, Optional noseTip As LandmarkCoordinate = Nothing, Optional mouthLeft As LandmarkCoordinate = Nothing, Optional mouthRight As LandmarkCoordinate = Nothing, Optional eyebrowLeftOuter As LandmarkCoordinate = Nothing, Optional eyebrowLeftInner As LandmarkCoordinate = Nothing, Optional eyeLeftOuter As LandmarkCoordinate = Nothing, Optional eyeLeftTop As LandmarkCoordinate = Nothing, Optional eyeLeftBottom As LandmarkCoordinate = Nothing, Optional eyeLeftInner As LandmarkCoordinate = Nothing, Optional eyebrowRightInner As LandmarkCoordinate = Nothing, Optional eyebrowRightOuter As LandmarkCoordinate = Nothing, Optional eyeRightInner As LandmarkCoordinate = Nothing, Optional eyeRightTop As LandmarkCoordinate = Nothing, Optional eyeRightBottom As LandmarkCoordinate = Nothing, Optional eyeRightOuter As LandmarkCoordinate = Nothing, Optional noseRootLeft As LandmarkCoordinate = Nothing, Optional noseRootRight As LandmarkCoordinate = Nothing, Optional noseLeftAlarTop As LandmarkCoordinate = Nothing, Optional noseRightAlarTop As LandmarkCoordinate = Nothing, Optional noseLeftAlarOutTip As LandmarkCoordinate = Nothing, Optional noseRightAlarOutTip As LandmarkCoordinate = Nothing, Optional upperLipTop As LandmarkCoordinate = Nothing, Optional upperLipBottom As LandmarkCoordinate = Nothing, Optional underLipTop As LandmarkCoordinate = Nothing, Optional underLipBottom As LandmarkCoordinate = Nothing) As FaceLandmarks" />
      <MemberSignature Language="F#" Value="static member FaceLandmarks : Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate * Azure.AI.Vision.Face.LandmarkCoordinate -&gt; Azure.AI.Vision.Face.FaceLandmarks" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceLandmarks (pupilLeft, pupilRight, noseTip, mouthLeft, mouthRight, eyebrowLeftOuter, eyebrowLeftInner, eyeLeftOuter, eyeLeftTop, eyeLeftBottom, eyeLeftInner, eyebrowRightInner, eyebrowRightOuter, eyeRightInner, eyeRightTop, eyeRightBottom, eyeRightOuter, noseRootLeft, noseRootRight, noseLeftAlarTop, noseRightAlarTop, noseLeftAlarOutTip, noseRightAlarOutTip, upperLipTop, upperLipBottom, underLipTop, underLipBottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceLandmarks</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pupilLeft" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="pupilRight" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseTip" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="mouthLeft" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="mouthRight" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyebrowLeftOuter" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyebrowLeftInner" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeLeftOuter" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeLeftTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeLeftBottom" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeLeftInner" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyebrowRightInner" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyebrowRightOuter" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeRightInner" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeRightTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeRightBottom" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="eyeRightOuter" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseRootLeft" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseRootRight" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseLeftAlarTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseRightAlarTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseLeftAlarOutTip" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="noseRightAlarOutTip" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="upperLipTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="upperLipBottom" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="underLipTop" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
        <Parameter Name="underLipBottom" Type="Azure.AI.Vision.Face.LandmarkCoordinate" />
      </Parameters>
      <Docs>
        <param name="pupilLeft"> The coordinates of the left eye pupil. </param>
        <param name="pupilRight"> The coordinates of the right eye pupil. </param>
        <param name="noseTip"> The coordinates of the nose tip. </param>
        <param name="mouthLeft"> The coordinates of the mouth left. </param>
        <param name="mouthRight"> The coordinates of the mouth right. </param>
        <param name="eyebrowLeftOuter"> The coordinates of the left eyebrow outer. </param>
        <param name="eyebrowLeftInner"> The coordinates of the left eyebrow inner. </param>
        <param name="eyeLeftOuter"> The coordinates of the left eye outer. </param>
        <param name="eyeLeftTop"> The coordinates of the left eye top. </param>
        <param name="eyeLeftBottom"> The coordinates of the left eye bottom. </param>
        <param name="eyeLeftInner"> The coordinates of the left eye inner. </param>
        <param name="eyebrowRightInner"> The coordinates of the right eyebrow inner. </param>
        <param name="eyebrowRightOuter"> The coordinates of the right eyebrow outer. </param>
        <param name="eyeRightInner"> The coordinates of the right eye inner. </param>
        <param name="eyeRightTop"> The coordinates of the right eye top. </param>
        <param name="eyeRightBottom"> The coordinates of the right eye bottom. </param>
        <param name="eyeRightOuter"> The coordinates of the right eye outer. </param>
        <param name="noseRootLeft"> The coordinates of the nose root left. </param>
        <param name="noseRootRight"> The coordinates of the nose root right. </param>
        <param name="noseLeftAlarTop"> The coordinates of the nose left alar top. </param>
        <param name="noseRightAlarTop"> The coordinates of the nose right alar top. </param>
        <param name="noseLeftAlarOutTip"> The coordinates of the nose left alar out tip. </param>
        <param name="noseRightAlarOutTip"> The coordinates of the nose right alar out tip. </param>
        <param name="upperLipTop"> The coordinates of the upper lip top. </param>
        <param name="upperLipBottom"> The coordinates of the upper lip bottom. </param>
        <param name="underLipTop"> The coordinates of the under lip top. </param>
        <param name="underLipBottom"> The coordinates of the under lip bottom. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceLandmarks" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceLandmarks" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceRectangle">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceRectangle FaceRectangle (int top = 0, int left = 0, int width = 0, int height = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceRectangle FaceRectangle(int32 top, int32 left, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceRectangle(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceRectangle (Optional top As Integer = 0, Optional left As Integer = 0, Optional width As Integer = 0, Optional height As Integer = 0) As FaceRectangle" />
      <MemberSignature Language="F#" Value="static member FaceRectangle : int * int * int * int -&gt; Azure.AI.Vision.Face.FaceRectangle" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceRectangle (top, left, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceRectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="top"> The distance from the top edge if the image to the top edge of the rectangle, in pixels. </param>
        <param name="left"> The distance from the left edge if the image to the left edge of the rectangle, in pixels. </param>
        <param name="width"> The width of the rectangle, in pixels. </param>
        <param name="height"> The height of the rectangle, in pixels. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceRectangle" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceRectangle" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceVerificationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FaceVerificationResult FaceVerificationResult (bool isIdentical = false, float confidence = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FaceVerificationResult FaceVerificationResult(bool isIdentical, float32 confidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceVerificationResult(System.Boolean,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FaceVerificationResult (Optional isIdentical As Boolean = false, Optional confidence As Single = 0) As FaceVerificationResult" />
      <MemberSignature Language="F#" Value="static member FaceVerificationResult : bool * single -&gt; Azure.AI.Vision.Face.FaceVerificationResult" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FaceVerificationResult (isIdentical, confidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FaceVerificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIdentical" Type="System.Boolean" />
        <Parameter Name="confidence" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="isIdentical"> True if the two faces belong to the same person or the face belongs to the person, otherwise false. </param>
        <param name="confidence"> A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and fine-tune the result on their own data. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FaceVerificationResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FaceVerificationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FacialHair">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.FacialHair FacialHair (float moustache = 0, float beard = 0, float sideburns = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.FacialHair FacialHair(float32 moustache, float32 beard, float32 sideburns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.FacialHair(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FacialHair (Optional moustache As Single = 0, Optional beard As Single = 0, Optional sideburns As Single = 0) As FacialHair" />
      <MemberSignature Language="F#" Value="static member FacialHair : single * single * single -&gt; Azure.AI.Vision.Face.FacialHair" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.FacialHair (moustache, beard, sideburns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.FacialHair</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moustache" Type="System.Single" />
        <Parameter Name="beard" Type="System.Single" />
        <Parameter Name="sideburns" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="moustache"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        <param name="beard"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        <param name="sideburns"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.FacialHair" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.FacialHair" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HairColor">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.HairColor HairColor (Azure.AI.Vision.Face.HairColorType color = default, float confidence = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.HairColor HairColor(valuetype Azure.AI.Vision.Face.HairColorType color, float32 confidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.HairColor(Azure.AI.Vision.Face.HairColorType,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HairColor (Optional color As HairColorType = Nothing, Optional confidence As Single = 0) As HairColor" />
      <MemberSignature Language="F#" Value="static member HairColor : Azure.AI.Vision.Face.HairColorType * single -&gt; Azure.AI.Vision.Face.HairColor" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.HairColor (color, confidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.HairColor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Azure.AI.Vision.Face.HairColorType" />
        <Parameter Name="confidence" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color"> Name of the hair color. </param>
        <param name="confidence"> Confidence level of the color. Range between [0,1]. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.HairColor" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.HairColor" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HairProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.HairProperties HairProperties (float bald = 0, bool invisible = false, System.Collections.Generic.IEnumerable&lt;Azure.AI.Vision.Face.HairColor&gt; hairColor = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.HairProperties HairProperties(float32 bald, bool invisible, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Vision.Face.HairColor&gt; hairColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.HairProperties(System.Single,System.Boolean,System.Collections.Generic.IEnumerable{Azure.AI.Vision.Face.HairColor})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HairProperties (Optional bald As Single = 0, Optional invisible As Boolean = false, Optional hairColor As IEnumerable(Of HairColor) = Nothing) As HairProperties" />
      <MemberSignature Language="F#" Value="static member HairProperties : single * bool * seq&lt;Azure.AI.Vision.Face.HairColor&gt; -&gt; Azure.AI.Vision.Face.HairProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.HairProperties (bald, invisible, hairColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.HairProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bald" Type="System.Single" />
        <Parameter Name="invisible" Type="System.Boolean" />
        <Parameter Name="hairColor" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Vision.Face.HairColor&gt;" />
      </Parameters>
      <Docs>
        <param name="bald"> A number describing confidence level of whether the person is bald. </param>
        <param name="invisible"> A boolean value describing whether the hair is visible in the image. </param>
        <param name="hairColor"> An array of candidate colors and confidence level in the presence of each. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.HairProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.HairProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadPose">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.HeadPose HeadPose (float pitch = 0, float roll = 0, float yaw = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.HeadPose HeadPose(float32 pitch, float32 roll, float32 yaw) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.HeadPose(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HeadPose (Optional pitch As Single = 0, Optional roll As Single = 0, Optional yaw As Single = 0) As HeadPose" />
      <MemberSignature Language="F#" Value="static member HeadPose : single * single * single -&gt; Azure.AI.Vision.Face.HeadPose" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.HeadPose (pitch, roll, yaw)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.HeadPose</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pitch" Type="System.Single" />
        <Parameter Name="roll" Type="System.Single" />
        <Parameter Name="yaw" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pitch"> Value of angles. </param>
        <param name="roll"> Value of angles. </param>
        <param name="yaw"> Value of angles. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.HeadPose" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.HeadPose" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LandmarkCoordinate">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LandmarkCoordinate LandmarkCoordinate (float x = 0, float y = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LandmarkCoordinate LandmarkCoordinate(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LandmarkCoordinate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LandmarkCoordinate (Optional x As Single = 0, Optional y As Single = 0) As LandmarkCoordinate" />
      <MemberSignature Language="F#" Value="static member LandmarkCoordinate : single * single -&gt; Azure.AI.Vision.Face.LandmarkCoordinate" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LandmarkCoordinate (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LandmarkCoordinate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"> The horizontal component, in pixels. </param>
        <param name="y"> The vertical component, in pixels. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LandmarkCoordinate" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LandmarkCoordinate" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessOutputsTarget">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessOutputsTarget LivenessOutputsTarget (Azure.AI.Vision.Face.FaceRectangle faceRectangle = default, string fileName = default, int timeOffsetWithinFile = 0, Azure.AI.Vision.Face.FaceImageType imageType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessOutputsTarget LivenessOutputsTarget(class Azure.AI.Vision.Face.FaceRectangle faceRectangle, string fileName, int32 timeOffsetWithinFile, valuetype Azure.AI.Vision.Face.FaceImageType imageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessOutputsTarget(Azure.AI.Vision.Face.FaceRectangle,System.String,System.Int32,Azure.AI.Vision.Face.FaceImageType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessOutputsTarget (Optional faceRectangle As FaceRectangle = Nothing, Optional fileName As String = Nothing, Optional timeOffsetWithinFile As Integer = 0, Optional imageType As FaceImageType = Nothing) As LivenessOutputsTarget" />
      <MemberSignature Language="F#" Value="static member LivenessOutputsTarget : Azure.AI.Vision.Face.FaceRectangle * string * int * Azure.AI.Vision.Face.FaceImageType -&gt; Azure.AI.Vision.Face.LivenessOutputsTarget" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessOutputsTarget (faceRectangle, fileName, timeOffsetWithinFile, imageType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessOutputsTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceRectangle" Type="Azure.AI.Vision.Face.FaceRectangle" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="timeOffsetWithinFile" Type="System.Int32" />
        <Parameter Name="imageType" Type="Azure.AI.Vision.Face.FaceImageType" />
      </Parameters>
      <Docs>
        <param name="faceRectangle"> The face region where the liveness classification was made on. </param>
        <param name="fileName"> The file name which contains the face rectangle where the liveness classification was made on. </param>
        <param name="timeOffsetWithinFile"> The time offset within the file of the frame which contains the face rectangle where the liveness classification was made on. </param>
        <param name="imageType"> The image type which contains the face rectangle where the liveness classification was made on. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessOutputsTarget" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessOutputsTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessResponseBody">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessResponseBody LivenessResponseBody (Azure.AI.Vision.Face.FaceLivenessDecision? livenessDecision = default, Azure.AI.Vision.Face.LivenessOutputsTarget target = default, Azure.AI.Vision.Face.LivenessModel? modelVersionUsed = default, Azure.AI.Vision.Face.LivenessWithVerifyOutputs verifyResult = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessResponseBody LivenessResponseBody(valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.FaceLivenessDecision&gt; livenessDecision, class Azure.AI.Vision.Face.LivenessOutputsTarget target, valuetype System.Nullable`1&lt;valuetype Azure.AI.Vision.Face.LivenessModel&gt; modelVersionUsed, class Azure.AI.Vision.Face.LivenessWithVerifyOutputs verifyResult, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessResponseBody(System.Nullable{Azure.AI.Vision.Face.FaceLivenessDecision},Azure.AI.Vision.Face.LivenessOutputsTarget,System.Nullable{Azure.AI.Vision.Face.LivenessModel},Azure.AI.Vision.Face.LivenessWithVerifyOutputs,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessResponseBody (Optional livenessDecision As Nullable(Of FaceLivenessDecision) = Nothing, Optional target As LivenessOutputsTarget = Nothing, Optional modelVersionUsed As Nullable(Of LivenessModel) = Nothing, Optional verifyResult As LivenessWithVerifyOutputs = Nothing, Optional additionalProperties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As LivenessResponseBody" />
      <MemberSignature Language="F#" Value="static member LivenessResponseBody : Nullable&lt;Azure.AI.Vision.Face.FaceLivenessDecision&gt; * Azure.AI.Vision.Face.LivenessOutputsTarget * Nullable&lt;Azure.AI.Vision.Face.LivenessModel&gt; * Azure.AI.Vision.Face.LivenessWithVerifyOutputs * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.AI.Vision.Face.LivenessResponseBody" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessResponseBody (livenessDecision, target, modelVersionUsed, verifyResult, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessResponseBody</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="livenessDecision" Type="System.Nullable&lt;Azure.AI.Vision.Face.FaceLivenessDecision&gt;" />
        <Parameter Name="target" Type="Azure.AI.Vision.Face.LivenessOutputsTarget" />
        <Parameter Name="modelVersionUsed" Type="System.Nullable&lt;Azure.AI.Vision.Face.LivenessModel&gt;" />
        <Parameter Name="verifyResult" Type="Azure.AI.Vision.Face.LivenessWithVerifyOutputs" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="livenessDecision"> The liveness classification for the target face. </param>
        <param name="target"> Specific targets used for liveness classification. </param>
        <param name="modelVersionUsed"> The model version used for liveness classification. </param>
        <param name="verifyResult"> The face verification output. Only available when the request is liveness with verify. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessResponseBody" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessResponseBody" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessSession">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessSession LivenessSession (string id = default, DateTimeOffset createdDateTime = default, DateTimeOffset? sessionStartDateTime = default, bool sessionExpired = false, string deviceCorrelationId = default, int? authTokenTimeToLiveInSeconds = default, Azure.AI.Vision.Face.FaceSessionStatus status = default, Azure.AI.Vision.Face.LivenessSessionAuditEntry result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessSession LivenessSession(string id, valuetype System.DateTimeOffset createdDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sessionStartDateTime, bool sessionExpired, string deviceCorrelationId, valuetype System.Nullable`1&lt;int32&gt; authTokenTimeToLiveInSeconds, valuetype Azure.AI.Vision.Face.FaceSessionStatus status, class Azure.AI.Vision.Face.LivenessSessionAuditEntry result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSession(System.String,System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Boolean,System.String,System.Nullable{System.Int32},Azure.AI.Vision.Face.FaceSessionStatus,Azure.AI.Vision.Face.LivenessSessionAuditEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessSession (Optional id As String = Nothing, Optional createdDateTime As DateTimeOffset = Nothing, Optional sessionStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional sessionExpired As Boolean = false, Optional deviceCorrelationId As String = Nothing, Optional authTokenTimeToLiveInSeconds As Nullable(Of Integer) = Nothing, Optional status As FaceSessionStatus = Nothing, Optional result As LivenessSessionAuditEntry = Nothing) As LivenessSession" />
      <MemberSignature Language="F#" Value="static member LivenessSession : string * DateTimeOffset * Nullable&lt;DateTimeOffset&gt; * bool * string * Nullable&lt;int&gt; * Azure.AI.Vision.Face.FaceSessionStatus * Azure.AI.Vision.Face.LivenessSessionAuditEntry -&gt; Azure.AI.Vision.Face.LivenessSession" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSession (id, createdDateTime, sessionStartDateTime, sessionExpired, deviceCorrelationId, authTokenTimeToLiveInSeconds, status, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="createdDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="sessionStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="sessionExpired" Type="System.Boolean" />
        <Parameter Name="deviceCorrelationId" Type="System.String" />
        <Parameter Name="authTokenTimeToLiveInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="status" Type="Azure.AI.Vision.Face.FaceSessionStatus" />
        <Parameter Name="result" Type="Azure.AI.Vision.Face.LivenessSessionAuditEntry" />
      </Parameters>
      <Docs>
        <param name="id"> The unique ID to reference this session. </param>
        <param name="createdDateTime"> DateTime when this session was created. </param>
        <param name="sessionStartDateTime"> DateTime when this session was started by the client. </param>
        <param name="sessionExpired"> Whether or not the session is expired. </param>
        <param name="deviceCorrelationId"> Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null. </param>
        <param name="authTokenTimeToLiveInSeconds"> Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600. </param>
        <param name="status"> The current status of the session. </param>
        <param name="result"> The latest session audit result only populated if status == 'ResultAvailable'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessSession" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessSession" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessSessionAuditEntry">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessSessionAuditEntry LivenessSessionAuditEntry (long id = 0, string sessionId = default, string requestId = default, string clientRequestId = default, DateTimeOffset receivedDateTime = default, Azure.AI.Vision.Face.AuditRequestInfo request = default, Azure.AI.Vision.Face.AuditLivenessResponseInfo response = default, string digest = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessSessionAuditEntry LivenessSessionAuditEntry(int64 id, string sessionId, string requestId, string clientRequestId, valuetype System.DateTimeOffset receivedDateTime, class Azure.AI.Vision.Face.AuditRequestInfo request, class Azure.AI.Vision.Face.AuditLivenessResponseInfo response, string digest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSessionAuditEntry(System.Int64,System.String,System.String,System.String,System.DateTimeOffset,Azure.AI.Vision.Face.AuditRequestInfo,Azure.AI.Vision.Face.AuditLivenessResponseInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessSessionAuditEntry (Optional id As Long = 0, Optional sessionId As String = Nothing, Optional requestId As String = Nothing, Optional clientRequestId As String = Nothing, Optional receivedDateTime As DateTimeOffset = Nothing, Optional request As AuditRequestInfo = Nothing, Optional response As AuditLivenessResponseInfo = Nothing, Optional digest As String = Nothing) As LivenessSessionAuditEntry" />
      <MemberSignature Language="F#" Value="static member LivenessSessionAuditEntry : int64 * string * string * string * DateTimeOffset * Azure.AI.Vision.Face.AuditRequestInfo * Azure.AI.Vision.Face.AuditLivenessResponseInfo * string -&gt; Azure.AI.Vision.Face.LivenessSessionAuditEntry" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSessionAuditEntry (id, sessionId, requestId, clientRequestId, receivedDateTime, request, response, digest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessSessionAuditEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int64" />
        <Parameter Name="sessionId" Type="System.String" />
        <Parameter Name="requestId" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="receivedDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="request" Type="Azure.AI.Vision.Face.AuditRequestInfo" />
        <Parameter Name="response" Type="Azure.AI.Vision.Face.AuditLivenessResponseInfo" />
        <Parameter Name="digest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The unique id to refer to this audit request. Use this id with the 'start' query parameter to continue on to the next page of audit results. </param>
        <param name="sessionId"> The unique sessionId of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding session DELETE operation. </param>
        <param name="requestId"> The unique requestId that is returned by the service to the client in the 'apim-request-id' header. </param>
        <param name="clientRequestId"> The unique clientRequestId that is sent by the client in the 'client-request-id' header. </param>
        <param name="receivedDateTime"> The UTC DateTime that the request was received. </param>
        <param name="request"> The request of this entry. </param>
        <param name="response"> The response of this entry. </param>
        <param name="digest"> The server calculated digest for this request. If the client reported digest differs from the server calculated digest, then the message integrity between the client and service has been compromised and the result should not be trusted. For more information, see how to guides on how to leverage this value to secure your end-to-end solution. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessSessionAuditEntry" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessSessionAuditEntry" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessSessionItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessSessionItem LivenessSessionItem (string id = default, DateTimeOffset createdDateTime = default, DateTimeOffset? sessionStartDateTime = default, bool sessionExpired = false, string deviceCorrelationId = default, int? authTokenTimeToLiveInSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessSessionItem LivenessSessionItem(string id, valuetype System.DateTimeOffset createdDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sessionStartDateTime, bool sessionExpired, string deviceCorrelationId, valuetype System.Nullable`1&lt;int32&gt; authTokenTimeToLiveInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSessionItem(System.String,System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Boolean,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessSessionItem (Optional id As String = Nothing, Optional createdDateTime As DateTimeOffset = Nothing, Optional sessionStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional sessionExpired As Boolean = false, Optional deviceCorrelationId As String = Nothing, Optional authTokenTimeToLiveInSeconds As Nullable(Of Integer) = Nothing) As LivenessSessionItem" />
      <MemberSignature Language="F#" Value="static member LivenessSessionItem : string * DateTimeOffset * Nullable&lt;DateTimeOffset&gt; * bool * string * Nullable&lt;int&gt; -&gt; Azure.AI.Vision.Face.LivenessSessionItem" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessSessionItem (id, createdDateTime, sessionStartDateTime, sessionExpired, deviceCorrelationId, authTokenTimeToLiveInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessSessionItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="createdDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="sessionStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="sessionExpired" Type="System.Boolean" />
        <Parameter Name="deviceCorrelationId" Type="System.String" />
        <Parameter Name="authTokenTimeToLiveInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The unique ID to reference this session. </param>
        <param name="createdDateTime"> DateTime when this session was created. </param>
        <param name="sessionStartDateTime"> DateTime when this session was started by the client. </param>
        <param name="sessionExpired"> Whether or not the session is expired. </param>
        <param name="deviceCorrelationId"> Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null. </param>
        <param name="authTokenTimeToLiveInSeconds"> Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessSessionItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessSessionItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessWithVerifyImage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessWithVerifyImage LivenessWithVerifyImage (Azure.AI.Vision.Face.FaceRectangle faceRectangle = default, Azure.AI.Vision.Face.QualityForRecognition qualityForRecognition = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessWithVerifyImage LivenessWithVerifyImage(class Azure.AI.Vision.Face.FaceRectangle faceRectangle, valuetype Azure.AI.Vision.Face.QualityForRecognition qualityForRecognition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifyImage(Azure.AI.Vision.Face.FaceRectangle,Azure.AI.Vision.Face.QualityForRecognition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessWithVerifyImage (Optional faceRectangle As FaceRectangle = Nothing, Optional qualityForRecognition As QualityForRecognition = Nothing) As LivenessWithVerifyImage" />
      <MemberSignature Language="F#" Value="static member LivenessWithVerifyImage : Azure.AI.Vision.Face.FaceRectangle * Azure.AI.Vision.Face.QualityForRecognition -&gt; Azure.AI.Vision.Face.LivenessWithVerifyImage" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifyImage (faceRectangle, qualityForRecognition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessWithVerifyImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceRectangle" Type="Azure.AI.Vision.Face.FaceRectangle" />
        <Parameter Name="qualityForRecognition" Type="Azure.AI.Vision.Face.QualityForRecognition" />
      </Parameters>
      <Docs>
        <param name="faceRectangle"> The face region where the comparison image's classification was made. </param>
        <param name="qualityForRecognition"> Quality of face image for recognition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifyImage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifyImage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessWithVerifyOutputs">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessWithVerifyOutputs LivenessWithVerifyOutputs (Azure.AI.Vision.Face.LivenessWithVerifyImage verifyImage = default, float matchConfidence = 0, bool isIdentical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessWithVerifyOutputs LivenessWithVerifyOutputs(class Azure.AI.Vision.Face.LivenessWithVerifyImage verifyImage, float32 matchConfidence, bool isIdentical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifyOutputs(Azure.AI.Vision.Face.LivenessWithVerifyImage,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessWithVerifyOutputs (Optional verifyImage As LivenessWithVerifyImage = Nothing, Optional matchConfidence As Single = 0, Optional isIdentical As Boolean = false) As LivenessWithVerifyOutputs" />
      <MemberSignature Language="F#" Value="static member LivenessWithVerifyOutputs : Azure.AI.Vision.Face.LivenessWithVerifyImage * single * bool -&gt; Azure.AI.Vision.Face.LivenessWithVerifyOutputs" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifyOutputs (verifyImage, matchConfidence, isIdentical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessWithVerifyOutputs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifyImage" Type="Azure.AI.Vision.Face.LivenessWithVerifyImage" />
        <Parameter Name="matchConfidence" Type="System.Single" />
        <Parameter Name="isIdentical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifyImage"> The detail of face for verification. </param>
        <param name="matchConfidence"> The target face liveness face and comparison image face verification confidence. </param>
        <param name="isIdentical"> Whether the target liveness face and comparison image face match. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifyOutputs" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifyOutputs" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LivenessWithVerifySession">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.LivenessWithVerifySession LivenessWithVerifySession (string id = default, DateTimeOffset createdDateTime = default, DateTimeOffset? sessionStartDateTime = default, bool sessionExpired = false, string deviceCorrelationId = default, int? authTokenTimeToLiveInSeconds = default, Azure.AI.Vision.Face.FaceSessionStatus status = default, Azure.AI.Vision.Face.LivenessSessionAuditEntry result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.LivenessWithVerifySession LivenessWithVerifySession(string id, valuetype System.DateTimeOffset createdDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sessionStartDateTime, bool sessionExpired, string deviceCorrelationId, valuetype System.Nullable`1&lt;int32&gt; authTokenTimeToLiveInSeconds, valuetype Azure.AI.Vision.Face.FaceSessionStatus status, class Azure.AI.Vision.Face.LivenessSessionAuditEntry result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifySession(System.String,System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Boolean,System.String,System.Nullable{System.Int32},Azure.AI.Vision.Face.FaceSessionStatus,Azure.AI.Vision.Face.LivenessSessionAuditEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LivenessWithVerifySession (Optional id As String = Nothing, Optional createdDateTime As DateTimeOffset = Nothing, Optional sessionStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional sessionExpired As Boolean = false, Optional deviceCorrelationId As String = Nothing, Optional authTokenTimeToLiveInSeconds As Nullable(Of Integer) = Nothing, Optional status As FaceSessionStatus = Nothing, Optional result As LivenessSessionAuditEntry = Nothing) As LivenessWithVerifySession" />
      <MemberSignature Language="F#" Value="static member LivenessWithVerifySession : string * DateTimeOffset * Nullable&lt;DateTimeOffset&gt; * bool * string * Nullable&lt;int&gt; * Azure.AI.Vision.Face.FaceSessionStatus * Azure.AI.Vision.Face.LivenessSessionAuditEntry -&gt; Azure.AI.Vision.Face.LivenessWithVerifySession" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.LivenessWithVerifySession (id, createdDateTime, sessionStartDateTime, sessionExpired, deviceCorrelationId, authTokenTimeToLiveInSeconds, status, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.LivenessWithVerifySession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="createdDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="sessionStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="sessionExpired" Type="System.Boolean" />
        <Parameter Name="deviceCorrelationId" Type="System.String" />
        <Parameter Name="authTokenTimeToLiveInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="status" Type="Azure.AI.Vision.Face.FaceSessionStatus" />
        <Parameter Name="result" Type="Azure.AI.Vision.Face.LivenessSessionAuditEntry" />
      </Parameters>
      <Docs>
        <param name="id"> The unique ID to reference this session. </param>
        <param name="createdDateTime"> DateTime when this session was created. </param>
        <param name="sessionStartDateTime"> DateTime when this session was started by the client. </param>
        <param name="sessionExpired"> Whether or not the session is expired. </param>
        <param name="deviceCorrelationId"> Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null. </param>
        <param name="authTokenTimeToLiveInSeconds"> Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600. </param>
        <param name="status"> The current status of the session. </param>
        <param name="result"> The latest session audit result only populated if status == 'ResultAvailable'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifySession" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.LivenessWithVerifySession" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.MaskProperties MaskProperties (bool noseAndMouthCovered = false, Azure.AI.Vision.Face.MaskType type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.MaskProperties MaskProperties(bool noseAndMouthCovered, valuetype Azure.AI.Vision.Face.MaskType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.MaskProperties(System.Boolean,Azure.AI.Vision.Face.MaskType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaskProperties (Optional noseAndMouthCovered As Boolean = false, Optional type As MaskType = Nothing) As MaskProperties" />
      <MemberSignature Language="F#" Value="static member MaskProperties : bool * Azure.AI.Vision.Face.MaskType -&gt; Azure.AI.Vision.Face.MaskProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.MaskProperties (noseAndMouthCovered, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.MaskProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noseAndMouthCovered" Type="System.Boolean" />
        <Parameter Name="type" Type="Azure.AI.Vision.Face.MaskType" />
      </Parameters>
      <Docs>
        <param name="noseAndMouthCovered"> A boolean value indicating whether nose and mouth are covered. </param>
        <param name="type"> Type of the mask. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.MaskProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.MaskProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoiseProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.NoiseProperties NoiseProperties (Azure.AI.Vision.Face.NoiseLevel noiseLevel = default, float value = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.NoiseProperties NoiseProperties(valuetype Azure.AI.Vision.Face.NoiseLevel noiseLevel, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.NoiseProperties(Azure.AI.Vision.Face.NoiseLevel,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoiseProperties (Optional noiseLevel As NoiseLevel = Nothing, Optional value As Single = 0) As NoiseProperties" />
      <MemberSignature Language="F#" Value="static member NoiseProperties : Azure.AI.Vision.Face.NoiseLevel * single -&gt; Azure.AI.Vision.Face.NoiseProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.NoiseProperties (noiseLevel, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.NoiseProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noiseLevel" Type="Azure.AI.Vision.Face.NoiseLevel" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="noiseLevel"> An enum value indicating level of noise. </param>
        <param name="value"> A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.NoiseProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.NoiseProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OcclusionProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Vision.Face.OcclusionProperties OcclusionProperties (bool foreheadOccluded = false, bool eyeOccluded = false, bool mouthOccluded = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Vision.Face.OcclusionProperties OcclusionProperties(bool foreheadOccluded, bool eyeOccluded, bool mouthOccluded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Face.AIVisionFaceModelFactory.OcclusionProperties(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OcclusionProperties (Optional foreheadOccluded As Boolean = false, Optional eyeOccluded As Boolean = false, Optional mouthOccluded As Boolean = false) As OcclusionProperties" />
      <MemberSignature Language="F#" Value="static member OcclusionProperties : bool * bool * bool -&gt; Azure.AI.Vision.Face.OcclusionProperties" Usage="Azure.AI.Vision.Face.AIVisionFaceModelFactory.OcclusionProperties (foreheadOccluded, eyeOccluded, mouthOccluded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Vision.Face</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Face.OcclusionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreheadOccluded" Type="System.Boolean" />
        <Parameter Name="eyeOccluded" Type="System.Boolean" />
        <Parameter Name="mouthOccluded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="foreheadOccluded"> A boolean value indicating whether forehead is occluded. </param>
        <param name="eyeOccluded"> A boolean value indicating whether eyes are occluded. </param>
        <param name="mouthOccluded"> A boolean value indicating whether the mouth is occluded. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Vision.Face.OcclusionProperties" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Vision.Face.OcclusionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
