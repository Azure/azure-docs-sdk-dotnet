<Type Name="RedisEnterpriseRegenerateKeyContent" FullName="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent">
  <TypeSignature Language="C#" Value="public class RedisEnterpriseRegenerateKeyContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RedisEnterpriseRegenerateKeyContent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent" />
  <TypeSignature Language="VB.NET" Value="Public Class RedisEnterpriseRegenerateKeyContent" />
  <TypeSignature Language="F#" Value="type RedisEnterpriseRegenerateKeyContent = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Specifies which access keys to reset to a new random value. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RedisEnterpriseRegenerateKeyContent (Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent.#ctor(Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyType As RedisEnterpriseAccessKeyType)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent : Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent" Usage="new Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent keyType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyType" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType" />
      </Parameters>
      <Docs>
        <param name="keyType"> Which access key to regenerate. </param>
        <summary> Initializes a new instance of RedisEnterpriseRegenerateKeyContent. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType KeyType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As RedisEnterpriseAccessKeyType" />
      <MemberSignature Language="F#" Value="member this.KeyType : Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType" Usage="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseRegenerateKeyContent.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseAccessKeyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Which access key to regenerate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
