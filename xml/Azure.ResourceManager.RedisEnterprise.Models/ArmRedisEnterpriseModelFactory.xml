<Type Name="ArmRedisEnterpriseModelFactory" FullName="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmRedisEnterpriseModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmRedisEnterpriseModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmRedisEnterpriseModelFactory" />
  <TypeSignature Language="F#" Value="type ArmRedisEnterpriseModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="RedisEnterpriseClusterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData RedisEnterpriseClusterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku sku = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption customerManagedKeyEncryption = default, string hostName = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus? provisioningState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState? resourceState = default, string redisVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData RedisEnterpriseClusterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku sku, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt; minimumTlsVersion, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption customerManagedKeyEncryption, string hostName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; resourceState, string redisVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseClusterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion},Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption,System.String,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseClusterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As RedisEnterpriseSku = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional minimumTlsVersion As Nullable(Of RedisEnterpriseTlsVersion) = Nothing, Optional customerManagedKeyEncryption As RedisEnterpriseCustomerManagedKeyEncryption = Nothing, Optional hostName As String = Nothing, Optional provisioningState As Nullable(Of RedisEnterpriseProvisioningStatus) = Nothing, Optional resourceState As Nullable(Of RedisEnterpriseClusterResourceState) = Nothing, Optional redisVersion As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of RedisEnterprisePrivateEndpointConnectionData) = Nothing) As RedisEnterpriseClusterData" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseClusterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku * seq&lt;string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption * string * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; * string * seq&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseClusterData (id, name, resourceType, systemData, tags, location, sku, zones, identity, minimumTlsVersion, customerManagedKeyEncryption, hostName, provisioningState, resourceState, redisVersion, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt;" />
        <Parameter Name="customerManagedKeyEncryption" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt;" />
        <Parameter Name="resourceState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt;" />
        <Parameter Name="redisVersion" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The SKU to create, which affects price, performance, and features. </param>
        <param name="zones"> The Availability Zones where this cluster will be deployed. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="minimumTlsVersion"> The minimum TLS version for the cluster to support, e.g. '1.2'. </param>
        <param name="customerManagedKeyEncryption"> Encryption-at-rest configuration for the cluster. </param>
        <param name="hostName"> DNS name of the cluster endpoint. </param>
        <param name="provisioningState"> Current provisioning status of the cluster. </param>
        <param name="resourceState"> Current resource status of the cluster. </param>
        <param name="redisVersion"> Version of redis the cluster supports, e.g. '6'. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections associated with the specified RedisEnterprise cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseClusterPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch RedisEnterpriseClusterPatch (Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku sku = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption customerManagedKeyEncryption = default, string hostName = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus? provisioningState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState? resourceState = default, string redisVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch RedisEnterpriseClusterPatch(class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku sku, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt; minimumTlsVersion, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption customerManagedKeyEncryption, string hostName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; resourceState, string redisVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseClusterPatch(Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion},Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption,System.String,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseClusterPatch (Optional sku As RedisEnterpriseSku = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional minimumTlsVersion As Nullable(Of RedisEnterpriseTlsVersion) = Nothing, Optional customerManagedKeyEncryption As RedisEnterpriseCustomerManagedKeyEncryption = Nothing, Optional hostName As String = Nothing, Optional provisioningState As Nullable(Of RedisEnterpriseProvisioningStatus) = Nothing, Optional resourceState As Nullable(Of RedisEnterpriseClusterResourceState) = Nothing, Optional redisVersion As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of RedisEnterprisePrivateEndpointConnectionData) = Nothing) As RedisEnterpriseClusterPatch" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseClusterPatch : Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku * Azure.ResourceManager.Models.ManagedServiceIdentity * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption * string * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; * string * seq&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt; -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseClusterPatch (sku, identity, tags, minimumTlsVersion, customerManagedKeyEncryption, hostName, provisioningState, resourceState, redisVersion, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseSku" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseTlsVersion&gt;" />
        <Parameter Name="customerManagedKeyEncryption" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseCustomerManagedKeyEncryption" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt;" />
        <Parameter Name="resourceState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt;" />
        <Parameter Name="redisVersion" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData&gt;" />
      </Parameters>
      <Docs>
        <param name="sku"> The SKU to create, which affects price, performance, and features. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="tags"> Resource tags. </param>
        <param name="minimumTlsVersion"> The minimum TLS version for the cluster to support, e.g. '1.2'. </param>
        <param name="customerManagedKeyEncryption"> Encryption-at-rest configuration for the cluster. </param>
        <param name="hostName"> DNS name of the cluster endpoint. </param>
        <param name="provisioningState"> Current provisioning status of the cluster. </param>
        <param name="resourceState"> Current resource status of the cluster. </param>
        <param name="redisVersion"> Version of redis the cluster supports, e.g. '6'. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections associated with the specified RedisEnterprise cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseDataAccessKeys">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys RedisEnterpriseDataAccessKeys (string primaryKey = default, string secondaryKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys RedisEnterpriseDataAccessKeys(string primaryKey, string secondaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDataAccessKeys(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseDataAccessKeys (Optional primaryKey As String = Nothing, Optional secondaryKey As String = Nothing) As RedisEnterpriseDataAccessKeys" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseDataAccessKeys : string * string -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDataAccessKeys (primaryKey, secondaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKey" Type="System.String" />
        <Parameter Name="secondaryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primaryKey"> The current primary key that clients can use to authenticate. </param>
        <param name="secondaryKey"> The current secondary key that clients can use to authenticate. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDataAccessKeys" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseDatabaseData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData RedisEnterpriseDatabaseData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol? clientProtocol = default, int? port = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus? provisioningState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState? resourceState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy? clusteringPolicy = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy? evictionPolicy = default, Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings persistence = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; modules = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication geoReplication = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData RedisEnterpriseDatabaseData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt; clientProtocol, valuetype System.Nullable`1&lt;int32&gt; port, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; resourceState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt; clusteringPolicy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt; evictionPolicy, class Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings persistence, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; modules, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication geoReplication) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDatabaseData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy},Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings,System.Collections.Generic.IEnumerable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule},Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseDatabaseData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional clientProtocol As Nullable(Of RedisEnterpriseClientProtocol) = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional provisioningState As Nullable(Of RedisEnterpriseProvisioningStatus) = Nothing, Optional resourceState As Nullable(Of RedisEnterpriseClusterResourceState) = Nothing, Optional clusteringPolicy As Nullable(Of RedisEnterpriseClusteringPolicy) = Nothing, Optional evictionPolicy As Nullable(Of RedisEnterpriseEvictionPolicy) = Nothing, Optional persistence As RedisPersistenceSettings = Nothing, Optional modules As IEnumerable(Of RedisEnterpriseModule) = Nothing, Optional geoReplication As RedisEnterpriseDatabaseGeoReplication = Nothing) As RedisEnterpriseDatabaseData" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseDatabaseData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings * seq&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDatabaseData (id, name, resourceType, systemData, clientProtocol, port, provisioningState, resourceState, clusteringPolicy, evictionPolicy, persistence, modules, geoReplication)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="clientProtocol" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt;" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt;" />
        <Parameter Name="resourceState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt;" />
        <Parameter Name="clusteringPolicy" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt;" />
        <Parameter Name="evictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt;" />
        <Parameter Name="persistence" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings" />
        <Parameter Name="modules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt;" />
        <Parameter Name="geoReplication" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="clientProtocol"> Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted. </param>
        <param name="port"> TCP port of the database endpoint. Specified at create time. Defaults to an available port. </param>
        <param name="provisioningState"> Current provisioning status of the database. </param>
        <param name="resourceState"> Current resource status of the database. </param>
        <param name="clusteringPolicy"> Clustering policy - default is OSSCluster. Specified at create time. </param>
        <param name="evictionPolicy"> Redis eviction policy - default is VolatileLRU. </param>
        <param name="persistence"> Persistence settings. </param>
        <param name="modules"> Optional set of redis modules to enable in this database - modules can only be added at creation time. </param>
        <param name="geoReplication"> Optional set of properties to configure geo replication for this database. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseDatabasePatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch RedisEnterpriseDatabasePatch (Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol? clientProtocol = default, int? port = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus? provisioningState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState? resourceState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy? clusteringPolicy = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy? evictionPolicy = default, Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings persistence = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; modules = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication geoReplication = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch RedisEnterpriseDatabasePatch(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt; clientProtocol, valuetype System.Nullable`1&lt;int32&gt; port, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; resourceState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt; clusteringPolicy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt; evictionPolicy, class Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings persistence, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; modules, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication geoReplication) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDatabasePatch(System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy},System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy},Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings,System.Collections.Generic.IEnumerable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule},Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseDatabasePatch (Optional clientProtocol As Nullable(Of RedisEnterpriseClientProtocol) = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional provisioningState As Nullable(Of RedisEnterpriseProvisioningStatus) = Nothing, Optional resourceState As Nullable(Of RedisEnterpriseClusterResourceState) = Nothing, Optional clusteringPolicy As Nullable(Of RedisEnterpriseClusteringPolicy) = Nothing, Optional evictionPolicy As Nullable(Of RedisEnterpriseEvictionPolicy) = Nothing, Optional persistence As RedisPersistenceSettings = Nothing, Optional modules As IEnumerable(Of RedisEnterpriseModule) = Nothing, Optional geoReplication As RedisEnterpriseDatabaseGeoReplication = Nothing) As RedisEnterpriseDatabasePatch" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseDatabasePatch : Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt; * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings * seq&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt; * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseDatabasePatch (clientProtocol, port, provisioningState, resourceState, clusteringPolicy, evictionPolicy, persistence, modules, geoReplication)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProtocol" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClientProtocol&gt;" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseProvisioningStatus&gt;" />
        <Parameter Name="resourceState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusterResourceState&gt;" />
        <Parameter Name="clusteringPolicy" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseClusteringPolicy&gt;" />
        <Parameter Name="evictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseEvictionPolicy&gt;" />
        <Parameter Name="persistence" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisPersistenceSettings" />
        <Parameter Name="modules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule&gt;" />
        <Parameter Name="geoReplication" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseGeoReplication" />
      </Parameters>
      <Docs>
        <param name="clientProtocol"> Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted. </param>
        <param name="port"> TCP port of the database endpoint. Specified at create time. Defaults to an available port. </param>
        <param name="provisioningState"> Current provisioning status of the database. </param>
        <param name="resourceState"> Current resource status of the database. </param>
        <param name="clusteringPolicy"> Clustering policy - default is OSSCluster. Specified at create time. </param>
        <param name="evictionPolicy"> Redis eviction policy - default is VolatileLRU. </param>
        <param name="persistence"> Persistence settings. </param>
        <param name="modules"> Optional set of redis modules to enable in this database - modules can only be added at creation time. </param>
        <param name="geoReplication"> Optional set of properties to configure geo replication for this database. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabasePatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseLinkedDatabase">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase RedisEnterpriseLinkedDatabase (Azure.Core.ResourceIdentifier id = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseLinkState? state = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase RedisEnterpriseLinkedDatabase(class Azure.Core.ResourceIdentifier id, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseLinkState&gt; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseLinkedDatabase(Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseLinkState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseLinkedDatabase (Optional id As ResourceIdentifier = Nothing, Optional state As Nullable(Of RedisEnterpriseDatabaseLinkState) = Nothing) As RedisEnterpriseLinkedDatabase" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseLinkedDatabase : Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseLinkState&gt; -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseLinkedDatabase (id, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseDatabaseLinkState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Resource ID of a database resource to link with this database. </param>
        <param name="state"> State of the link between the database resources. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseLinkedDatabase" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseModule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule RedisEnterpriseModule (string name = default, string args = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule RedisEnterpriseModule(string name, string args, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseModule(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseModule (Optional name As String = Nothing, Optional args As String = Nothing, Optional version As String = Nothing) As RedisEnterpriseModule" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseModule : string * string * string -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseModule (name, args, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'. </param>
        <param name="args"> Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'. </param>
        <param name="version"> The version of the module, e.g. '1.0'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseModule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterpriseOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus RedisEnterpriseOperationStatus (Azure.Core.ResourceIdentifier id = default, string name = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, string status = default, Azure.ResponseError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus RedisEnterpriseOperationStatus(class Azure.Core.ResourceIdentifier id, string name, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, string status, class Azure.ResponseError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseOperationStatus(Azure.Core.ResourceIdentifier,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterpriseOperationStatus (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As String = Nothing, Optional error As ResponseError = Nothing) As RedisEnterpriseOperationStatus" />
      <MemberSignature Language="F#" Value="static member RedisEnterpriseOperationStatus : Azure.Core.ResourceIdentifier * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.ResponseError -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterpriseOperationStatus (id, name, startOn, endOn, status, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="error" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="id"> The operation's unique id. </param>
        <param name="name"> The operation's name. </param>
        <param name="startOn"> The start time of the operation. </param>
        <param name="endOn"> The end time of the operation. </param>
        <param name="status"> The current status of the operation. </param>
        <param name="error"> Error response describing why the operation failed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterprisePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData RedisEnterprisePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateEndpointConnectionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData RedisEnterprisePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateEndpointConnectionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterprisePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateEndpointConnectionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterprisePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As RedisEnterprisePrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of RedisEnterprisePrivateEndpointConnectionProvisioningState) = Nothing) As RedisEnterprisePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member RedisEnterprisePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateEndpointConnectionProvisioningState&gt; -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterprisePrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateEndpointConnectionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisEnterprisePrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource RedisEnterprisePrivateLinkResource (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource RedisEnterprisePrivateLinkResource(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterprisePrivateLinkResource(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisEnterprisePrivateLinkResource (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As RedisEnterprisePrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member RedisEnterprisePrivateLinkResource : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource" Usage="Azure.ResourceManager.RedisEnterprise.Models.ArmRedisEnterpriseModelFactory.RedisEnterprisePrivateLinkResource (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.RedisEnterprise.Models.RedisEnterprisePrivateLinkResource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
