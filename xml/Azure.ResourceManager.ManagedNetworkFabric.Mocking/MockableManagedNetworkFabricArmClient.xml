<Type Name="MockableManagedNetworkFabricArmClient" FullName="Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient">
  <TypeSignature Language="C#" Value="public class MockableManagedNetworkFabricArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableManagedNetworkFabricArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableManagedNetworkFabricArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableManagedNetworkFabricArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableManagedNetworkFabricArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkDeviceInterfaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource GetNetworkDeviceInterfaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource GetNetworkDeviceInterfaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkDeviceInterfaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkDeviceInterfaceResource (id As ResourceIdentifier) As NetworkDeviceInterfaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkDeviceInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource&#xA;override this.GetNetworkDeviceInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkDeviceInterfaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceInterfaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkDeviceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource GetNetworkDeviceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource GetNetworkDeviceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkDeviceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkDeviceResource (id As ResourceIdentifier) As NetworkDeviceResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource&#xA;override this.GetNetworkDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkDeviceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkDeviceSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource GetNetworkDeviceSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource GetNetworkDeviceSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkDeviceSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkDeviceSkuResource (id As ResourceIdentifier) As NetworkDeviceSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkDeviceSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource&#xA;override this.GetNetworkDeviceSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkDeviceSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkDeviceSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricAccessControlListResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource GetNetworkFabricAccessControlListResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource GetNetworkFabricAccessControlListResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricAccessControlListResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricAccessControlListResource (id As ResourceIdentifier) As NetworkFabricAccessControlListResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricAccessControlListResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource&#xA;override this.GetNetworkFabricAccessControlListResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricAccessControlListResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricAccessControlListResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricControllerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource GetNetworkFabricControllerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource GetNetworkFabricControllerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricControllerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricControllerResource (id As ResourceIdentifier) As NetworkFabricControllerResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricControllerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource&#xA;override this.GetNetworkFabricControllerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricControllerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricControllerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricExternalNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource GetNetworkFabricExternalNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource GetNetworkFabricExternalNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricExternalNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricExternalNetworkResource (id As ResourceIdentifier) As NetworkFabricExternalNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricExternalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource&#xA;override this.GetNetworkFabricExternalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricExternalNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricExternalNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricInternalNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource GetNetworkFabricInternalNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource GetNetworkFabricInternalNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricInternalNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricInternalNetworkResource (id As ResourceIdentifier) As NetworkFabricInternalNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricInternalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource&#xA;override this.GetNetworkFabricInternalNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricInternalNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternalNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricInternetGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource GetNetworkFabricInternetGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource GetNetworkFabricInternetGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricInternetGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricInternetGatewayResource (id As ResourceIdentifier) As NetworkFabricInternetGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricInternetGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource&#xA;override this.GetNetworkFabricInternetGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricInternetGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricInternetGatewayRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource GetNetworkFabricInternetGatewayRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource GetNetworkFabricInternetGatewayRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricInternetGatewayRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricInternetGatewayRuleResource (id As ResourceIdentifier) As NetworkFabricInternetGatewayRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricInternetGatewayRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource&#xA;override this.GetNetworkFabricInternetGatewayRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricInternetGatewayRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricInternetGatewayRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricIPCommunityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource GetNetworkFabricIPCommunityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource GetNetworkFabricIPCommunityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricIPCommunityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricIPCommunityResource (id As ResourceIdentifier) As NetworkFabricIPCommunityResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricIPCommunityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource&#xA;override this.GetNetworkFabricIPCommunityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricIPCommunityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPCommunityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricIPExtendedCommunityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource GetNetworkFabricIPExtendedCommunityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource GetNetworkFabricIPExtendedCommunityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricIPExtendedCommunityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricIPExtendedCommunityResource (id As ResourceIdentifier) As NetworkFabricIPExtendedCommunityResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricIPExtendedCommunityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource&#xA;override this.GetNetworkFabricIPExtendedCommunityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricIPExtendedCommunityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPExtendedCommunityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricIPPrefixResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource GetNetworkFabricIPPrefixResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource GetNetworkFabricIPPrefixResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricIPPrefixResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricIPPrefixResource (id As ResourceIdentifier) As NetworkFabricIPPrefixResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource&#xA;override this.GetNetworkFabricIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricIPPrefixResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricIPPrefixResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricL2IsolationDomainResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource GetNetworkFabricL2IsolationDomainResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource GetNetworkFabricL2IsolationDomainResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricL2IsolationDomainResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricL2IsolationDomainResource (id As ResourceIdentifier) As NetworkFabricL2IsolationDomainResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricL2IsolationDomainResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource&#xA;override this.GetNetworkFabricL2IsolationDomainResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricL2IsolationDomainResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL2IsolationDomainResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricL3IsolationDomainResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource GetNetworkFabricL3IsolationDomainResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource GetNetworkFabricL3IsolationDomainResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricL3IsolationDomainResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricL3IsolationDomainResource (id As ResourceIdentifier) As NetworkFabricL3IsolationDomainResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricL3IsolationDomainResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource&#xA;override this.GetNetworkFabricL3IsolationDomainResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricL3IsolationDomainResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricL3IsolationDomainResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricNeighborGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource GetNetworkFabricNeighborGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource GetNetworkFabricNeighborGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricNeighborGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricNeighborGroupResource (id As ResourceIdentifier) As NetworkFabricNeighborGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricNeighborGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource&#xA;override this.GetNetworkFabricNeighborGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricNeighborGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricNeighborGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource GetNetworkFabricResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource GetNetworkFabricResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricResource (id As ResourceIdentifier) As NetworkFabricResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource&#xA;override this.GetNetworkFabricResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricRoutePolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource GetNetworkFabricRoutePolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource GetNetworkFabricRoutePolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricRoutePolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricRoutePolicyResource (id As ResourceIdentifier) As NetworkFabricRoutePolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricRoutePolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource&#xA;override this.GetNetworkFabricRoutePolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricRoutePolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricRoutePolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkFabricSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource GetNetworkFabricSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource GetNetworkFabricSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkFabricSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkFabricSkuResource (id As ResourceIdentifier) As NetworkFabricSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkFabricSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource&#xA;override this.GetNetworkFabricSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkFabricSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkFabricSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkPacketBrokerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource GetNetworkPacketBrokerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource GetNetworkPacketBrokerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkPacketBrokerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkPacketBrokerResource (id As ResourceIdentifier) As NetworkPacketBrokerResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkPacketBrokerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource&#xA;override this.GetNetworkPacketBrokerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkPacketBrokerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkPacketBrokerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkRackResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource GetNetworkRackResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource GetNetworkRackResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkRackResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkRackResource (id As ResourceIdentifier) As NetworkRackResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkRackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource&#xA;override this.GetNetworkRackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkRackResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkRackResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkTapResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource GetNetworkTapResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource GetNetworkTapResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkTapResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkTapResource (id As ResourceIdentifier) As NetworkTapResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkTapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource&#xA;override this.GetNetworkTapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkTapResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkTapRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource GetNetworkTapRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource GetNetworkTapRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkTapRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkTapRuleResource (id As ResourceIdentifier) As NetworkTapRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkTapRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource&#xA;override this.GetNetworkTapRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkTapRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkTapRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkToNetworkInterconnectResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource GetNetworkToNetworkInterconnectResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource GetNetworkToNetworkInterconnectResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetworkFabric.Mocking.MockableManagedNetworkFabricArmClient.GetNetworkToNetworkInterconnectResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkToNetworkInterconnectResource (id As ResourceIdentifier) As NetworkToNetworkInterconnectResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkToNetworkInterconnectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource&#xA;override this.GetNetworkToNetworkInterconnectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource" Usage="mockableManagedNetworkFabricArmClient.GetNetworkToNetworkInterconnectResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetworkFabric</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetworkFabric.NetworkToNetworkInterconnectResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
