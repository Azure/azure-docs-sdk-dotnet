<Type Name="CommunicationIceServer" FullName="Azure.Communication.NetworkTraversal.CommunicationIceServer">
  <TypeSignature Language="C#" Value="public class CommunicationIceServer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommunicationIceServer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.NetworkTraversal.CommunicationIceServer" />
  <TypeSignature Language="VB.NET" Value="Public Class CommunicationIceServer" />
  <TypeSignature Language="F#" Value="type CommunicationIceServer = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Communication.NetworkTraversal.CommunicationIceServer+CommunicationIceServerConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Communication.NetworkTraversal.CommunicationIceServer+CommunicationIceServerConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The user should be able to serialize or deserialize CommunicationIceServer
            for better experience.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommunicationIceServer (System.Collections.Generic.IEnumerable&lt;string&gt; urls, string username, string credential, Azure.Communication.NetworkTraversal.RouteType routeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; urls, string username, string credential, valuetype Azure.Communication.NetworkTraversal.RouteType routeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.NetworkTraversal.CommunicationIceServer.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,Azure.Communication.NetworkTraversal.RouteType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (urls As IEnumerable(Of String), username As String, credential As String, routeType As RouteType)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.NetworkTraversal.CommunicationIceServer : seq&lt;string&gt; * string * string * Azure.Communication.NetworkTraversal.RouteType -&gt; Azure.Communication.NetworkTraversal.CommunicationIceServer" Usage="new Azure.Communication.NetworkTraversal.CommunicationIceServer (urls, username, credential, routeType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="urls" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="credential" Type="System.String" />
        <Parameter Name="routeType" Type="Azure.Communication.NetworkTraversal.RouteType" />
      </Parameters>
      <Docs>
        <param name="urls"> List of STUN/TURN server URLs. </param>
        <param name="username"> User account name which uniquely identifies the credentials. </param>
        <param name="credential"> Credential for the server. </param>
        <param name="routeType"> The routing methodology to where the ICE server will be located from the client. "any" will have higher reliability while "nearest" will have lower latency. It is recommended to default to use the "any" routing method unless there are specific scenarios which minimizing latency is critical. </param>
        <summary> Initializes a new instance of CommunicationIceServer. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="urls" />, <paramref name="username" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public string Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Credential" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.NetworkTraversal.CommunicationIceServer.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As String" />
      <MemberSignature Language="F#" Value="member this.Credential : string with get, set" Usage="Azure.Communication.NetworkTraversal.CommunicationIceServer.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Credential for the server. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteType">
      <MemberSignature Language="C#" Value="public Azure.Communication.NetworkTraversal.RouteType RouteType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Communication.NetworkTraversal.RouteType RouteType" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.NetworkTraversal.CommunicationIceServer.RouteType" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteType As RouteType" />
      <MemberSignature Language="F#" Value="member this.RouteType : Azure.Communication.NetworkTraversal.RouteType with get, set" Usage="Azure.Communication.NetworkTraversal.CommunicationIceServer.RouteType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.NetworkTraversal.RouteType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The routing methodology to where the ICE server will be located from the client. "any" will have higher reliability while "nearest" will have lower latency. It is recommended to default to use the "any" routing method unless there are specific scenarios which minimizing latency is critical. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Urls">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Urls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Urls" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.NetworkTraversal.CommunicationIceServer.Urls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Urls As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Urls : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.Communication.NetworkTraversal.CommunicationIceServer.Urls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of STUN/TURN server URLs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.NetworkTraversal.CommunicationIceServer.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="Azure.Communication.NetworkTraversal.CommunicationIceServer.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.NetworkTraversal</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> User account name which uniquely identifies the credentials. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
