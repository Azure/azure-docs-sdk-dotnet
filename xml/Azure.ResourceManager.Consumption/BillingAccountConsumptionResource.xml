<Type Name="BillingAccountConsumptionResource" FullName="Azure.ResourceManager.Consumption.BillingAccountConsumptionResource">
  <TypeSignature Language="C#" Value="public class BillingAccountConsumptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BillingAccountConsumptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class BillingAccountConsumptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type BillingAccountConsumptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class extending from the BillingAccountResource in Azure.ResourceManager.Consumption along with the instance operations that can be performed on it.
            You can only construct a <see cref="T:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource" /> from a <see cref="T:Azure.Core.ResourceIdentifier" /> with a resource type of Microsoft.Billing/billingAccounts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BillingAccountConsumptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBalance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt; GetBalance (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt; GetBalance(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetBalance(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBalance (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConsumptionBalanceResult)" />
      <MemberSignature Language="F#" Value="abstract member GetBalance : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&#xA;override this.GetBalance : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;" Usage="billingAccountConsumptionResource.GetBalance cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances</description></item><item><term>Operation Id</term><description>Balances_GetByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBalanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&gt; GetBalanceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&gt; GetBalanceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetBalanceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBalanceAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConsumptionBalanceResult))" />
      <MemberSignature Language="F#" Value="abstract member GetBalanceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&gt;&#xA;override this.GetBalanceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&gt;" Usage="billingAccountConsumptionResource.GetBalanceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Consumption.Models.ConsumptionBalanceResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances</description></item><item><term>Operation Id</term><description>Balances_GetByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt; GetEvents (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt; GetEvents(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetEvents(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEvents (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumptionEventSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;&#xA;override this.GetEvents : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;" Usage="billingAccountConsumptionResource.GetEvents (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter the events by lotId, lotSource etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a billing account or a billing profile for a given start and end date.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/events</description></item><item><term>Operation Id</term><description>Events_ListByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt; GetEventsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt; GetEventsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetEventsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumptionEventSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetEventsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;&#xA;override this.GetEventsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;" Usage="billingAccountConsumptionResource.GetEventsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter the events by lotId, lotSource etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a billing account or a billing profile for a given start and end date.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/events</description></item><item><term>Operation Id</term><description>Events_ListByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionEventSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLots">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt; GetLots (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt; GetLots(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetLots(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLots (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumptionLotSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetLots : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;&#xA;override this.GetLots : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;" Usage="billingAccountConsumptionResource.GetLots (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Microsoft Azure consumption commitments for a billing account. The API is only supported for Microsoft Customer Agreements (MCA) and Direct Enterprise Agreement (EA)  billing accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots</description></item><item><term>Operation Id</term><description>Lots_ListByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLotsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt; GetLotsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt; GetLotsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetLotsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLotsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumptionLotSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetLotsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;&#xA;override this.GetLotsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;" Usage="billingAccountConsumptionResource.GetLotsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Microsoft Azure consumption commitments for a billing account. The API is only supported for Microsoft Customer Agreements (MCA) and Direct Enterprise Agreement (EA)  billing accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots</description></item><item><term>Operation Id</term><description>Lots_ListByBillingAccount</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionLotSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationTransactions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt; GetReservationTransactions (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt; GetReservationTransactions(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetReservationTransactions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationTransactions (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConsumptionReservationTransaction)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationTransactions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;&#xA;override this.GetReservationTransactions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;" Usage="billingAccountConsumptionResource.GetReservationTransactions (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge'. Note: API returns data for the entire start date's and end date's billing month. For example, filter properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will include data for the entire December 2020 month (i.e. will contain records for dates December 30 and 31). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of transactions for reserved instances on billing account scope. Note: The refund transactions are posted along with its purchase transaction (i.e. in the purchase billing month). For example, The refund is requested in May 2021. This refund transaction will have event date as May 2021 but the billing month as April 2020 when the reservation purchase was made.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions</description></item><item><term>Operation Id</term><description>ReservationTransactions_List</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationTransactionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt; GetReservationTransactionsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt; GetReservationTransactionsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.GetReservationTransactionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationTransactionsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConsumptionReservationTransaction)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationTransactionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;&#xA;override this.GetReservationTransactionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;" Usage="billingAccountConsumptionResource.GetReservationTransactionsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge'. Note: API returns data for the entire start date's and end date's billing month. For example, filter properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will include data for the entire December 2020 month (i.e. will contain records for dates December 30 and 31). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of transactions for reserved instances on billing account scope. Note: The refund transactions are posted along with its purchase transaction (i.e. in the purchase billing month). For example, The refund is requested in May 2021. This refund transaction will have event date as May 2021 but the billing month as April 2020 when the reservation purchase was made.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions</description></item><item><term>Operation Id</term><description>ReservationTransactions_List</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Consumption.Models.ConsumptionReservationTransaction" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Consumption.BillingAccountConsumptionResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Consumption</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
