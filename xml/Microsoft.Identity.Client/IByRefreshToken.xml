<Type Name="IByRefreshToken" FullName="Microsoft.Identity.Client.IByRefreshToken">
  <TypeSignature Language="C#" Value="public interface IByRefreshToken" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IByRefreshToken" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.IByRefreshToken" />
  <TypeSignature Language="VB.NET" Value="Public Interface IByRefreshToken" />
  <TypeSignature Language="F#" Value="type IByRefreshToken = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
    <AssemblyVersion>4.13.0.0</AssemblyVersion>
    <AssemblyVersion>4.14.0.0</AssemblyVersion>
    <AssemblyVersion>4.15.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireTokenByRefreshToken">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenByRefreshTokenParameterBuilder AcquireTokenByRefreshToken (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, string refreshToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Client.AcquireTokenByRefreshTokenParameterBuilder AcquireTokenByRefreshToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string refreshToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.IByRefreshToken.AcquireTokenByRefreshToken(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireTokenByRefreshToken (scopes As IEnumerable(Of String), refreshToken As String) As AcquireTokenByRefreshTokenParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member AcquireTokenByRefreshToken : seq&lt;string&gt; * string -&gt; Microsoft.Identity.Client.AcquireTokenByRefreshTokenParameterBuilder" Usage="iByRefreshToken.AcquireTokenByRefreshToken (scopes, refreshToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenByRefreshTokenParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="refreshToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">Scope to request from the token endpoint.
            Setting this to null or empty will request an access token, refresh token and ID token with default scopes</param>
        <param name="refreshToken">The refresh token from ADAL 2.x</param>
        <summary>
            Acquires an access token from an existing refresh token and stores it, and the refresh token, in
            the user token cache, where it will be available for further AcquireTokenSilent calls.
            This method can be used in migration to MSAL from ADAL v2, and in various integration
            scenarios where you have a RefreshToken available.
            See https://aka.ms/msal-net-migration-adal2-msal2.
            </summary>
        <returns>A builder enabling you to add optional parameters before executing the token request</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireTokenByRefreshTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.AuthenticationResult&gt; AcquireTokenByRefreshTokenAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, string refreshToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Identity.Client.AuthenticationResult&gt; AcquireTokenByRefreshTokenAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string refreshToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.IByRefreshToken.AcquireTokenByRefreshTokenAsync(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireTokenByRefreshTokenAsync (scopes As IEnumerable(Of String), refreshToken As String) As Task(Of AuthenticationResult)" />
      <MemberSignature Language="F#" Value="abstract member AcquireTokenByRefreshTokenAsync : seq&lt;string&gt; * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.AuthenticationResult&gt;" Usage="iByRefreshToken.AcquireTokenByRefreshTokenAsync (scopes, refreshToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AcquireTokenByRefreshToken instead. See https://aka.ms/msal-net-3-breaking-changes", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.AuthenticationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="refreshToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">Scope to request from the token endpoint.
            Setting this to null or empty will request an access token, refresh token and ID token with default scopes</param>
        <param name="refreshToken">The refresh token from ADAL 2.x</param>
        <summary>
            Acquires an access token from an existing refresh token and stores it and the refresh token into
            the user token cache, where it will be available for further AcquireTokenSilentAsync calls.
            This method can be used in migration to MSAL from ADAL v2 and in various integration
            scenarios where you have a RefreshToken available.
            (see https://aka.ms/msal-net-migration-adal2-msal2)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
