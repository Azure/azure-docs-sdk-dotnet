<Type Name="Telemetry+Receiver" FullName="Microsoft.Identity.Client.Telemetry+Receiver">
  <TypeSignature Language="C#" Value="public delegate void Telemetry.Receiver(List&lt;Dictionary&lt;string,string&gt;&gt; events);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Telemetry/Receiver extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.Telemetry.Receiver" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Telemetry.Receiver(events As List(Of Dictionary(Of String, String)))" />
  <TypeSignature Language="F#" Value="type Telemetry.Receiver = delegate of List&lt;Dictionary&lt;string, string&gt;&gt; -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>1.1.4.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="events" Type="System.Collections.Generic.List&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="events">Dictionary of key/values pair</param>
    <summary>
            Delegate telling the signature of your callbacks that will send telemetry information to your telemetry service
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>