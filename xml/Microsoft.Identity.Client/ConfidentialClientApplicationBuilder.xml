<Type Name="ConfidentialClientApplicationBuilder" FullName="Microsoft.Identity.Client.ConfidentialClientApplicationBuilder">
  <TypeSignature Language="C#" Value="public class ConfidentialClientApplicationBuilder : Microsoft.Identity.Client.AbstractApplicationBuilder&lt;Microsoft.Identity.Client.ConfidentialClientApplicationBuilder&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfidentialClientApplicationBuilder extends Microsoft.Identity.Client.AbstractApplicationBuilder`1&lt;class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfidentialClientApplicationBuilder&#xA;Inherits AbstractApplicationBuilder(Of ConfidentialClientApplicationBuilder)" />
  <TypeSignature Language="F#" Value="type ConfidentialClientApplicationBuilder = class&#xA;    inherit AbstractApplicationBuilder&lt;ConfidentialClientApplicationBuilder&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.30.0.0</AssemblyVersion>
    <AssemblyVersion>4.30.1.0</AssemblyVersion>
    <AssemblyVersion>4.31.0.0</AssemblyVersion>
    <AssemblyVersion>4.32.0.0</AssemblyVersion>
    <AssemblyVersion>4.32.1.0</AssemblyVersion>
    <AssemblyVersion>4.33.0.0</AssemblyVersion>
    <AssemblyVersion>4.34.0.0</AssemblyVersion>
    <AssemblyVersion>4.35.0.0</AssemblyVersion>
    <AssemblyVersion>4.35.1.0</AssemblyVersion>
    <AssemblyVersion>4.36.0.0</AssemblyVersion>
    <AssemblyVersion>4.36.1.0</AssemblyVersion>
    <AssemblyVersion>4.36.2.0</AssemblyVersion>
    <AssemblyVersion>4.37.0.0</AssemblyVersion>
    <AssemblyVersion>4.38.0.0</AssemblyVersion>
    <AssemblyVersion>4.39.0.0</AssemblyVersion>
    <AssemblyVersion>4.40.0.0</AssemblyVersion>
    <AssemblyVersion>4.41.0.0</AssemblyVersion>
    <AssemblyVersion>4.42.0.0</AssemblyVersion>
    <AssemblyVersion>4.42.1.0</AssemblyVersion>
    <AssemblyVersion>4.43.0.0</AssemblyVersion>
    <AssemblyVersion>4.43.1.0</AssemblyVersion>
    <AssemblyVersion>4.43.2.0</AssemblyVersion>
    <AssemblyVersion>4.44.0.0</AssemblyVersion>
    <AssemblyVersion>4.45.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Identity.Client.AbstractApplicationBuilder&lt;Microsoft.Identity.Client.ConfidentialClientApplicationBuilder&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.IConfidentialClientApplication Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.IConfidentialClientApplication Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As IConfidentialClientApplication" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; Microsoft.Identity.Client.IConfidentialClientApplication" Usage="confidentialClientApplicationBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.IConfidentialClientApplication</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the ConfidentialClientApplication from the parameters set
            in the builder
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Identity.Client.ConfidentialClientApplicationBuilder Create (string clientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder Create(string clientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (clientId As String) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.Create clientId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientId">Client ID (also known as App ID) of the application as registered in the
            application registration portal (https://aka.ms/msal-net-register-app)/.</param>
        <summary>
            Creates a ConfidentialClientApplicationBuilder from a clientID.
            See https://aka.ms/msal-net-application-configuration
            </summary>
        <returns>A <see cref="T:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" /> from which to set more
            parameters, and to create a confidential client application instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithApplicationOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Identity.Client.ConfidentialClientApplicationBuilder CreateWithApplicationOptions (Microsoft.Identity.Client.ConfidentialClientApplicationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder CreateWithApplicationOptions(class Microsoft.Identity.Client.ConfidentialClientApplicationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.CreateWithApplicationOptions(Microsoft.Identity.Client.ConfidentialClientApplicationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWithApplicationOptions (options As ConfidentialClientApplicationOptions) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="static member CreateWithApplicationOptions : Microsoft.Identity.Client.ConfidentialClientApplicationOptions -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.CreateWithApplicationOptions options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Identity.Client.ConfidentialClientApplicationOptions" />
      </Parameters>
      <Docs>
        <param name="options">Confidential client applications configuration options</param>
        <summary>
            Constructor of a ConfidentialClientApplicationBuilder from application configuration options.
            See https://aka.ms/msal-net-application-configuration
            </summary>
        <returns>A <see cref="T:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" /> from which to set more
            parameters, and to create a confidential client application instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAppTokenProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithAppTokenProvider (Func&lt;Microsoft.Identity.Client.AppTokenProviderParameters,System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.TokenProviderResult&gt;&gt; appTokenProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithAppTokenProvider(class System.Func`2&lt;class Microsoft.Identity.Client.AppTokenProviderParameters, class System.Threading.Tasks.Task`1&lt;class Microsoft.Identity.Client.TokenProviderResult&gt;&gt; appTokenProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithAppTokenProvider(System.Func{Microsoft.Identity.Client.AppTokenProviderParameters,System.Threading.Tasks.Task{Microsoft.Identity.Client.TokenProviderResult}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAppTokenProvider (appTokenProvider As Func(Of AppTokenProviderParameters, Task(Of TokenProviderResult))) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithAppTokenProvider : Func&lt;Microsoft.Identity.Client.AppTokenProviderParameters, System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.TokenProviderResult&gt;&gt; -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithAppTokenProvider appTokenProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appTokenProvider" Type="System.Func&lt;Microsoft.Identity.Client.AppTokenProviderParameters,System.Threading.Tasks.Task&lt;Microsoft.Identity.Client.TokenProviderResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="appTokenProvider">Authentication callback which returns an access token.</param>
        <summary>
            Allows setting a callback which returns an access token, based on the passed-in parameters.
            MSAL will pass in its authentication parameters to the callback and it is expected that the callback
            will construct a <see cref="T:Microsoft.Identity.Client.TokenProviderResult" /> and return it to MSAL.
            MSAL will cache the token response the same way it does for other authentication results.
            Note: This is only for client credential flows.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAzureRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithAzureRegion (string azureRegion = &quot;TryAutoDetect&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithAzureRegion(string azureRegion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithAzureRegion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAzureRegion (Optional azureRegion As String = &quot;TryAutoDetect&quot;) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithAzureRegion : string -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithAzureRegion azureRegion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureRegion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="azureRegion">Either the string with the region (preferred) or        
            use <see cref="F:Microsoft.Identity.Client.ConfidentialClientApplication.AttemptRegionDiscovery" /> and MSAL.NET will attempt to auto-detect the region.                
            </param>
        <summary>
            Instructs MSAL.NET to use an Azure regional token service.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>
            Region names as per https://azure.microsoft.com/en-ca/global-infrastructure/geographies/.
            See https://aka.ms/region-map for more details on region names.
            The region value should be short region name for the region where the service is deployed. 
            For example "centralus" is short name for region Central US.
            Not all auth flows can use the regional token service. 
            Service To Service (client credential flow) tokens can be obtained from the regional service.
            Requires configuration at the tenant level.
            Auto-detection works on a limited number of Azure artifacts (VMs, Azure functions). 
            If auto-detection fails, the non-regional endpoint will be used.
            If an invalid region name is provided, the non-regional endpoint MIGHT be used or the token request MIGHT fail.
            See https://aka.ms/msal-net-region-discovery for more details.        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCacheSynchronization">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCacheSynchronization (bool enableCacheSynchronization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCacheSynchronization(bool enableCacheSynchronization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithCacheSynchronization(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCacheSynchronization (enableCacheSynchronization As Boolean) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithCacheSynchronization : bool -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithCacheSynchronization enableCacheSynchronization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableCacheSynchronization" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableCacheSynchronization">To be added.</param>
        <summary>
            When set to <c>true</c>, MSAL will lock cache access at the <see cref="T:Microsoft.Identity.Client.ConfidentialClientApplication" /> level, i.e.
            the block of code between BeforeAccessAsync and AfterAccessAsync callbacks will be synchronized. 
            Apps can set this flag to <c>false</c> to enable an optimistic cache locking strategy, which may result in better performance, especially 
            when ConfidentialClientApplication objects are reused.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            False by default.
            Not recommended for apps that call RemoveAsync
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCertificate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCertificate (certificate As X509Certificate2) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">The X509 certificate used as credentials to prove the identity of the application to Azure AD.</param>
        <summary>
            Sets the certificate associated with the application.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You should use certificates with a private key size of at least 2048 bytes. Future versions of this library might reject certificates with smaller keys.
            Does not send the certificate (as x5c parameter) with the request by default.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCertificate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool sendX5C);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool sendX5C) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCertificate (certificate As X509Certificate2, sendX5C As Boolean) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 * bool -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithCertificate (certificate, sendX5C)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="sendX5C" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">The X509 certificate used as credentials to prove the identity of the application to Azure AD.</param>
        <param name="sendX5C">To send X5C with every request or not. The default is <c>false</c></param>
        <summary>
            Sets the certificate associated with the application.
            Applicable to first-party applications only, this method also allows to specify 
            if the <see href="https://datatracker.ietf.org/doc/html/rfc7517#section-4.7">x5c claim</see> should be sent to Azure AD.
            Sending the x5c enables application developers to achieve easy certificate roll-over in Azure AD:
            this method will send the certificate chain to Azure AD along with the token request,
            so that Azure AD can use it to validate the subject name based on a trusted issuer policy.
            This saves the application admin from the need to explicitly manage the certificate rollover
            (either via portal or PowerShell/CLI operation). For details see https://aka.ms/msal-net-sni
            </summary>
        <returns>To be added.</returns>
        <remarks>You should use certificates with a private key size of at least 2048 bytes. Future versions of this library might reject certificates with smaller keys. </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientAssertion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion (Func&lt;Microsoft.Identity.Client.AssertionRequestOptions,System.Threading.Tasks.Task&lt;string&gt;&gt; clientAssertionAsyncDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion(class System.Func`2&lt;class Microsoft.Identity.Client.AssertionRequestOptions, class System.Threading.Tasks.Task`1&lt;string&gt;&gt; clientAssertionAsyncDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.Func{Microsoft.Identity.Client.AssertionRequestOptions,System.Threading.Tasks.Task{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientAssertion (clientAssertionAsyncDelegate As Func(Of AssertionRequestOptions, Task(Of String))) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientAssertion : Func&lt;Microsoft.Identity.Client.AssertionRequestOptions, System.Threading.Tasks.Task&lt;string&gt;&gt; -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientAssertion clientAssertionAsyncDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientAssertionAsyncDelegate" Type="System.Func&lt;Microsoft.Identity.Client.AssertionRequestOptions,System.Threading.Tasks.Task&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="clientAssertionAsyncDelegate">An async delegate computing the client assertion used to prove the identity of the application to Azure AD.
            This is a delegate that computes a Base-64 encoded JWT for each authentication call.</param>
        <summary>
            Configures an async delegate that creates a client assertion. See https://aka.ms/msal-net-client-assertion
            </summary>
        <returns>The ConfidentialClientApplicationBuilder to chain more .With methods</returns>
        <remarks> Callers can use this mechanism to cache their assertions </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientAssertion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion (Func&lt;string&gt; clientAssertionDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion(class System.Func`1&lt;string&gt; clientAssertionDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.Func{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientAssertion (clientAssertionDelegate As Func(Of String)) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientAssertion : Func&lt;string&gt; -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientAssertion clientAssertionDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientAssertionDelegate" Type="System.Func&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="clientAssertionDelegate">delegate computing the client assertion used to prove the identity of the application to Azure AD.
            This is a delegate that computes a Base-64 encoded JWT for each authentication call.</param>
        <summary>
            Configures a delegate that creates a client assertion. See https://aka.ms/msal-net-client-assertion
            </summary>
        <returns>The ConfidentialClientApplicationBuilder to chain more .With methods</returns>
        <remarks> Callers can use this mechanism to cache their assertions </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientAssertion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;string&gt;&gt; clientAssertionAsyncDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;string&gt;&gt; clientAssertionAsyncDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientAssertion (clientAssertionAsyncDelegate As Func(Of CancellationToken, Task(Of String))) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientAssertion : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;string&gt;&gt; -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientAssertion clientAssertionAsyncDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientAssertionAsyncDelegate" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="clientAssertionAsyncDelegate">An async delegate computing the client assertion used to prove the identity of the application to Azure AD.
            This is a delegate that computes a Base-64 encoded JWT for each authentication call.</param>
        <summary>
            Configures an async delegate that creates a client assertion. See https://aka.ms/msal-net-client-assertion
            </summary>
        <returns>The ConfidentialClientApplicationBuilder to chain more .With methods</returns>
        <remarks> Callers can use this mechanism to cache their assertions </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientAssertion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion (string signedClientAssertion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientAssertion(string signedClientAssertion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientAssertion (signedClientAssertion As String) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientAssertion : string -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientAssertion signedClientAssertion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedClientAssertion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedClientAssertion">The client assertion used to prove the identity of the application to Azure AD. This is a Base-64 encoded JWT.</param>
        <summary>
            Sets the application client assertion. See https://aka.ms/msal-net-client-assertion.
            This will create an assertion that will be held within the client application's memory for the duration of the client.
            You can use <see cref="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.Func{System.String})" /> to set a delegate that will be executed for each authentication request. 
            This will allow you to update the client assertion used by the client application once the assertion expires.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientClaims">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientClaims (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.Generic.IDictionary&lt;string,string&gt; claimsToSign, bool mergeWithDefaultClaims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientClaims(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; claimsToSign, bool mergeWithDefaultClaims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientClaims(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientClaims (certificate As X509Certificate2, claimsToSign As IDictionary(Of String, String), mergeWithDefaultClaims As Boolean) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientClaims : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientClaims (certificate, claimsToSign, mergeWithDefaultClaims)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsToSign" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="mergeWithDefaultClaims" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">The X509 certificate used as credentials to prove the identity of the application to Azure AD.</param>
        <param name="claimsToSign">The claims to be signed by the provided certificate.</param>
        <param name="mergeWithDefaultClaims">Determines whether or not to merge <paramref name="claimsToSign" /> with the default claims required for authentication.</param>
        <summary>
            Sets the certificate associated with the application along with the specific claims to sign.
            By default, this will merge the <paramref name="claimsToSign" /> with the default required set of claims needed for authentication.
            If <paramref name="mergeWithDefaultClaims" /> is set to false, you will need to provide the required default claims. See https://aka.ms/msal-net-client-assertion
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You should use certificates with a private key size of at least 2048 bytes. Future versions of this library might reject certificates with smaller keys.
            Does not send the certificate (as x5c parameter) with the request by default.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientClaims">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientClaims (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.Generic.IDictionary&lt;string,string&gt; claimsToSign, bool mergeWithDefaultClaims = true, bool sendX5C = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientClaims(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; claimsToSign, bool mergeWithDefaultClaims, bool sendX5C) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientClaims(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientClaims (certificate As X509Certificate2, claimsToSign As IDictionary(Of String, String), Optional mergeWithDefaultClaims As Boolean = true, Optional sendX5C As Boolean = false) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientClaims : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool * bool -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientClaims (certificate, claimsToSign, mergeWithDefaultClaims, sendX5C)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsToSign" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="mergeWithDefaultClaims" Type="System.Boolean" />
        <Parameter Name="sendX5C" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">The X509 certificate used as credentials to prove the identity of the application to Azure AD.</param>
        <param name="claimsToSign">The claims to be signed by the provided certificate.</param>
        <param name="mergeWithDefaultClaims">Determines whether or not to merge <paramref name="claimsToSign" /> with the default claims required for authentication.</param>
        <param name="sendX5C">To send X5C with every request or not.</param>
        <summary>
            Sets the certificate associated with the application along with the specific claims to sign.
            By default, this will merge the <paramref name="claimsToSign" /> with the default required set of claims needed for authentication.
            If <paramref name="mergeWithDefaultClaims" /> is set to false, you will need to provide the required default claims. See https://aka.ms/msal-net-client-assertion
            </summary>
        <returns>To be added.</returns>
        <remarks>You should use certificates with a private key size of at least 2048 bytes. Future versions of this library might reject certificates with smaller keys.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientSecret">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientSecret (string clientSecret);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithClientSecret(string clientSecret) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientSecret(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientSecret (clientSecret As String) As ConfidentialClientApplicationBuilder" />
      <MemberSignature Language="F#" Value="member this.WithClientSecret : string -&gt; Microsoft.Identity.Client.ConfidentialClientApplicationBuilder" Usage="confidentialClientApplicationBuilder.WithClientSecret clientSecret" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ConfidentialClientApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSecret" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientSecret">Secret string previously shared with AAD at application registration to prove the identity
            of the application (the client) requesting the tokens</param>
        <summary>
            Sets the application secret
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
