<Type Name="IMsalHttpClientFactory" FullName="Microsoft.Identity.Client.IMsalHttpClientFactory">
  <TypeSignature Language="C#" Value="public interface IMsalHttpClientFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMsalHttpClientFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.IMsalHttpClientFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMsalHttpClientFactory" />
  <TypeSignature Language="F#" Value="type IMsalHttpClientFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
    <AssemblyVersion>4.13.0.0</AssemblyVersion>
    <AssemblyVersion>4.14.0.0</AssemblyVersion>
    <AssemblyVersion>4.15.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Factory responsible for creating HttpClient
            .Net recommends to use a single instance of HttpClient
            </summary>
    <remarks>
            Implementations must be thread safe. Consider creating and configuring an HttpClient in the constructor
            of the factory, and returning the same object in <see cref="M:Microsoft.Identity.Client.IMsalHttpClientFactory.GetHttpClient" /></remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHttpClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient GetHttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.HttpClient GetHttpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.IMsalHttpClientFactory.GetHttpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpClient () As HttpClient" />
      <MemberSignature Language="F#" Value="abstract member GetHttpClient : unit -&gt; System.Net.Http.HttpClient" Usage="iMsalHttpClientFactory.GetHttpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method returning an Http client that will be used to
            communicate with Azure AD. This enables advanced scenarios.
            See https://aka.ms/msal-net-application-configuration
            </summary>
        <returns>An Http client</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
