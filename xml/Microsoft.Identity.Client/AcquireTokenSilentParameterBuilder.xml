<Type Name="AcquireTokenSilentParameterBuilder" FullName="Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder">
  <TypeSignature Language="C#" Value="public sealed class AcquireTokenSilentParameterBuilder : Microsoft.Identity.Client.AbstractClientAppBaseAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AcquireTokenSilentParameterBuilder extends Microsoft.Identity.Client.AbstractClientAppBaseAcquireTokenParameterBuilder`1&lt;class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AcquireTokenSilentParameterBuilder&#xA;Inherits AbstractClientAppBaseAcquireTokenParameterBuilder(Of AcquireTokenSilentParameterBuilder)" />
  <TypeSignature Language="F#" Value="type AcquireTokenSilentParameterBuilder = class&#xA;    inherit AbstractClientAppBaseAcquireTokenParameterBuilder&lt;AcquireTokenSilentParameterBuilder&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.30.0.0</AssemblyVersion>
    <AssemblyVersion>4.30.1.0</AssemblyVersion>
    <AssemblyVersion>4.31.0.0</AssemblyVersion>
    <AssemblyVersion>4.32.0.0</AssemblyVersion>
    <AssemblyVersion>4.32.1.0</AssemblyVersion>
    <AssemblyVersion>4.33.0.0</AssemblyVersion>
    <AssemblyVersion>4.34.0.0</AssemblyVersion>
    <AssemblyVersion>4.35.0.0</AssemblyVersion>
    <AssemblyVersion>4.35.1.0</AssemblyVersion>
    <AssemblyVersion>4.36.0.0</AssemblyVersion>
    <AssemblyVersion>4.36.1.0</AssemblyVersion>
    <AssemblyVersion>4.36.2.0</AssemblyVersion>
    <AssemblyVersion>4.37.0.0</AssemblyVersion>
    <AssemblyVersion>4.38.0.0</AssemblyVersion>
    <AssemblyVersion>4.39.0.0</AssemblyVersion>
    <AssemblyVersion>4.40.0.0</AssemblyVersion>
    <AssemblyVersion>4.41.0.0</AssemblyVersion>
    <AssemblyVersion>4.42.0.0</AssemblyVersion>
    <AssemblyVersion>4.42.1.0</AssemblyVersion>
    <AssemblyVersion>4.43.0.0</AssemblyVersion>
    <AssemblyVersion>4.43.1.0</AssemblyVersion>
    <AssemblyVersion>4.43.2.0</AssemblyVersion>
    <AssemblyVersion>4.44.0.0</AssemblyVersion>
    <AssemblyVersion>4.45.0.0</AssemblyVersion>
    <AssemblyVersion>4.46.0.0</AssemblyVersion>
    <AssemblyVersion>4.46.1.0</AssemblyVersion>
    <AssemblyVersion>4.46.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Identity.Client.AbstractClientAppBaseAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Parameter builder for the <see cref="M:Microsoft.Identity.Client.IClientApplicationBase.AcquireTokenSilent(System.Collections.Generic.IEnumerable{System.String},Microsoft.Identity.Client.IAccount)" />
            operation. See https://aka.ms/msal-net-acquiretokensilent
            </summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="acquireTokenSilentParameterBuilder.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.1.0</AssemblyVersion>
        <AssemblyVersion>4.46.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithForceRefresh">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithForceRefresh (bool forceRefresh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithForceRefresh(bool forceRefresh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder.WithForceRefresh(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithForceRefresh (forceRefresh As Boolean) As AcquireTokenSilentParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithForceRefresh : bool -&gt; Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" Usage="acquireTokenSilentParameterBuilder.WithForceRefresh forceRefresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.1.0</AssemblyVersion>
        <AssemblyVersion>4.46.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceRefresh" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceRefresh">If <c>true</c>, ignore any access token in the user token cache
            and attempt to acquire new access token using the refresh token for the account
            if one is available. This can be useful in the case when the application developer wants to make
            sure that conditional access policies are applied immediately, rather than after the expiration of the access token.
            The default is <c>false</c></param>
        <summary>
            Specifies if the client application should force refreshing the
            token from the user token cache. By default the token is taken from the
            the user token cache (forceRefresh=false)
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>Avoid unnecessarily setting <paramref name="forceRefresh" /> to <c>true</c> true in order to
            avoid negatively affecting the performance of your application</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProofOfPossession">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithProofOfPossession (Microsoft.Identity.Client.AppConfig.PoPAuthenticationConfiguration popAuthenticationConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithProofOfPossession(class Microsoft.Identity.Client.AppConfig.PoPAuthenticationConfiguration popAuthenticationConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder.WithProofOfPossession(Microsoft.Identity.Client.AppConfig.PoPAuthenticationConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithProofOfPossession (popAuthenticationConfiguration As PoPAuthenticationConfiguration) As AcquireTokenSilentParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithProofOfPossession : Microsoft.Identity.Client.AppConfig.PoPAuthenticationConfiguration -&gt; Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" Usage="acquireTokenSilentParameterBuilder.WithProofOfPossession popAuthenticationConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.1.0</AssemblyVersion>
        <AssemblyVersion>4.46.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="popAuthenticationConfiguration" Type="Microsoft.Identity.Client.AppConfig.PoPAuthenticationConfiguration" />
      </Parameters>
      <Docs>
        <param name="popAuthenticationConfiguration">Configuration properties used to construct a proof of possession request.</param>
        <summary>
             Modifies the token acquisition request so that the acquired token is a Proof of Possession token (PoP), rather than a Bearer token. 
             PoP tokens are similar to Bearer tokens, but are bound to the HTTP request and to a cryptographic key, which MSAL can manage on Windows.
             See https://aka.ms/msal-net-pop
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="bullet">
            <item>
              <description>An Authentication header is automatically added to the request.</description>
            </item>
            <item>
              <description>The PoP token is bound to the HTTP request, more specifically to the HTTP method (GET, POST, etc.) and to the Uri (path and query, but not query parameters).</description>
            </item>
            <item>
              <description>MSAL creates, reads and stores a key in memory that will be cycled every 8 hours.</description>
            </item>
            <item>
              <description>This is an experimental API. The method signature may change in the future without involving a major version upgrade.</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProofOfPossession">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithProofOfPossession (string nonce, System.Net.Http.HttpMethod httpMethod, Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithProofOfPossession(string nonce, class System.Net.Http.HttpMethod httpMethod, class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder.WithProofOfPossession(System.String,System.Net.Http.HttpMethod,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithProofOfPossession (nonce As String, httpMethod As HttpMethod, requestUri As Uri) As AcquireTokenSilentParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithProofOfPossession : string * System.Net.Http.HttpMethod * Uri -&gt; Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" Usage="acquireTokenSilentParameterBuilder.WithProofOfPossession (nonce, httpMethod, requestUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.1.0</AssemblyVersion>
        <AssemblyVersion>4.46.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.String" />
        <Parameter Name="httpMethod" Type="System.Net.Http.HttpMethod" />
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="httpMethod">The HTTP method ("GET", "POST" etc.) method that will be bound to the token. Leave null and the POP token will not be bound to the method.
            Corresponds to the "m" part of the a signed HTTP request.</param>
        <param name="requestUri">The URI to bind the signed HTTP request to.</param>
        <param name="nonce">Nonce of the protected resource (RP) which will be published as part of the WWWAuthenticate header associated with a 401 HTTP response
            or as part of the AuthorityInfo header associated with 200 response. Set it here to make it part of the Signed HTTP Request part of the POP token.</param>
        <summary>
             Modifies the token acquisition request so that the acquired token is a Proof of Possession token (PoP), rather than a Bearer token. 
             PoP tokens are similar to Bearer tokens, but are bound to the HTTP request and to a cryptographic key, which MSAL can manage on Windows.
             Note that only the host and path parts of the request URI will be bound.
             See https://aka.ms/msal-net-pop
            </summary>
        <returns>The builder.</returns>
        <remarks>
          <list type="bullet">
            <item>
              <description>An Authentication header is automatically added to the request</description>
            </item>
            <item>
              <description>The PoP token is bound to the HTTP request, more specifically to the HTTP method (GET, POST, etc.) and to the Uri (path and query, but not query parameters).</description>
            </item>
            <item>
              <description>MSAL creates, reads and stores a key in memory that will be cycled every 8 hours.</description>
            </item>
            <item>
              <description>This is an experimental API. The method signature may change in the future without involving a major version upgrade.</description>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSendX5C">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithSendX5C (bool withSendX5C);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithSendX5C(bool withSendX5C) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder.WithSendX5C(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSendX5C (withSendX5C As Boolean) As AcquireTokenSilentParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithSendX5C : bool -&gt; Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" Usage="acquireTokenSilentParameterBuilder.WithSendX5C withSendX5C" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.30.0.0</AssemblyVersion>
        <AssemblyVersion>4.30.1.0</AssemblyVersion>
        <AssemblyVersion>4.31.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.0.0</AssemblyVersion>
        <AssemblyVersion>4.32.1.0</AssemblyVersion>
        <AssemblyVersion>4.33.0.0</AssemblyVersion>
        <AssemblyVersion>4.34.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.0.0</AssemblyVersion>
        <AssemblyVersion>4.35.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.0.0</AssemblyVersion>
        <AssemblyVersion>4.36.1.0</AssemblyVersion>
        <AssemblyVersion>4.36.2.0</AssemblyVersion>
        <AssemblyVersion>4.37.0.0</AssemblyVersion>
        <AssemblyVersion>4.38.0.0</AssemblyVersion>
        <AssemblyVersion>4.39.0.0</AssemblyVersion>
        <AssemblyVersion>4.40.0.0</AssemblyVersion>
        <AssemblyVersion>4.41.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.0.0</AssemblyVersion>
        <AssemblyVersion>4.42.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.0.0</AssemblyVersion>
        <AssemblyVersion>4.43.1.0</AssemblyVersion>
        <AssemblyVersion>4.43.2.0</AssemblyVersion>
        <AssemblyVersion>4.44.0.0</AssemblyVersion>
        <AssemblyVersion>4.45.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.0.0</AssemblyVersion>
        <AssemblyVersion>4.46.1.0</AssemblyVersion>
        <AssemblyVersion>4.46.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="withSendX5C" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="withSendX5C">
          <c>true</c> if the x5c should be sent. Otherwise <c>false</c>.
            The default is <c>false</c></param>
        <summary>
            Applicable to first-party applications only, this method also allows to specify 
            if the <see href="https://datatracker.ietf.org/doc/html/rfc7517#section-4.7">x5c claim</see> should be sent to Azure AD.
            Sending the x5c enables application developers to achieve easy certificate roll-over in Azure AD:
            this method will send the certificate chain to Azure AD along with the token request,
            so that Azure AD can use it to validate the subject name based on a trusted issuer policy.
            This saves the application admin from the need to explicitly manage the certificate rollover
            (either via portal or PowerShell/CLI operation). For details see https://aka.ms/msal-net-sni
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
