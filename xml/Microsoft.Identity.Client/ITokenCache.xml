<Type Name="ITokenCache" FullName="Microsoft.Identity.Client.ITokenCache">
  <TypeSignature Language="C#" Value="public interface ITokenCache" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITokenCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.ITokenCache" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITokenCache" />
  <TypeSignature Language="F#" Value="type ITokenCache = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            This is the interface that implements the public access to cache operations.
            With CacheV2, this should only be necessary if the caller is persisting
            the cache in their own store, since this will provide the serialize/deserialize
            and before/after notifications used in that scenario.
            See https://aka.ms/aka.ms/msal-net-token-cache-serialization
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public void Deserialize (byte[] msalV2State);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deserialize(unsigned int8[] msalV2State) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.Deserialize(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deserialize (msalV2State As Byte())" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : byte[] -&gt; unit" Usage="iTokenCache.Deserialize msalV2State" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeMsalV3/DeserializeMsalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msalV2State" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="msalV2State"></param>
        <summary>
            Functionality replaced by <see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />.  See https://aka.ms/msal-net-3x-cache-breaking-change
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAdalV3">
      <MemberSignature Language="C#" Value="public void DeserializeAdalV3 (byte[] adalV3State);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeAdalV3(unsigned int8[] adalV3State) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeAdalV3 (adalV3State As Byte())" />
      <MemberSignature Language="F#" Value="abstract member DeserializeAdalV3 : byte[] -&gt; unit" Usage="iTokenCache.DeserializeAdalV3 adalV3State" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adalV3State" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="adalV3State">Byte stream representation of the cache</param>
        <summary>
            Deserializes the token cache to the ADAL.NET 3.x cache format.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <remarks>
          <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeMsalV2">
      <MemberSignature Language="C#" Value="public void DeserializeMsalV2 (byte[] msalV2State);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeMsalV2(unsigned int8[] msalV2State) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeMsalV2 (msalV2State As Byte())" />
      <MemberSignature Language="F#" Value="abstract member DeserializeMsalV2 : byte[] -&gt; unit" Usage="iTokenCache.DeserializeMsalV2 msalV2State" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msalV2State" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="msalV2State">Byte stream representation of the cache</param>
        <summary>
            Deserializes the token cache to the MSAL.NET 2.x cache format, which is compatible with ADAL.NET v4 and other MSAL.NET v2 applications.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <remarks>
          <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeMsalV3">
      <MemberSignature Language="C#" Value="public void DeserializeMsalV3 (byte[] msalV3State);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeMsalV3(unsigned int8[] msalV3State) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeMsalV3 (msalV3State As Byte())" />
      <MemberSignature Language="F#" Value="abstract member DeserializeMsalV3 : byte[] -&gt; unit" Usage="iTokenCache.DeserializeMsalV3 msalV3State" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msalV3State" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="msalV3State">Byte stream representation of the cache</param>
        <summary>
            Deserializes the token cache to the MSAL.NET 3.x cache format, which is compatible with other MSAL desktop libraries, e.g. MSAL for Python and MSAL for Java.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <remarks>
            This is the recommended format for maintaining SSO state between applications.
            <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeUnifiedAndAdalCache">
      <MemberSignature Language="C#" Value="public void DeserializeUnifiedAndAdalCache (Microsoft.Identity.Client.Cache.CacheData cacheData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeUnifiedAndAdalCache(class Microsoft.Identity.Client.Cache.CacheData cacheData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.DeserializeUnifiedAndAdalCache(Microsoft.Identity.Client.Cache.CacheData)" />
      <MemberSignature Language="F#" Value="abstract member DeserializeUnifiedAndAdalCache : Microsoft.Identity.Client.Cache.CacheData -&gt; unit" Usage="iTokenCache.DeserializeUnifiedAndAdalCache cacheData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeMsalV3/DeserializeMsalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheData" Type="Microsoft.Identity.Client.Cache.CacheData" />
      </Parameters>
      <Docs>
        <param name="cacheData"></param>
        <summary>
            Functionality replaced by <see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" /> and <see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" />
            See https://aka.ms/msal-net-3x-cache-breaking-change
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public byte[] Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.Serialize" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize () As Byte()" />
      <MemberSignature Language="F#" Value="abstract member Serialize : unit -&gt; byte[]" Usage="iTokenCache.Serialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeMsalV3/DeserializeMsalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Functionality replaced by <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />. See https://aka.ms/msal-net-3x-cache-breaking-change
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAdalV3">
      <MemberSignature Language="C#" Value="public byte[] SerializeAdalV3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SerializeAdalV3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeAdalV3 () As Byte()" />
      <MemberSignature Language="F#" Value="abstract member SerializeAdalV3 : unit -&gt; byte[]" Usage="iTokenCache.SerializeAdalV3 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes the token cache to the ADAL.NET 3.x cache format.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <returns>Byte stream representation of the cache</returns>
        <remarks>
          <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeMsalV2">
      <MemberSignature Language="C#" Value="public byte[] SerializeMsalV2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SerializeMsalV2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeMsalV2 () As Byte()" />
      <MemberSignature Language="F#" Value="abstract member SerializeMsalV2 : unit -&gt; byte[]" Usage="iTokenCache.SerializeMsalV2 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes the token cache to the MSAL.NET 2.x unified cache format, which is compatible with ADAL.NET v4 and other MSAL.NET v2 applications.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <returns>Byte stream representation of the cache</returns>
        <remarks>
          <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeMsalV3">
      <MemberSignature Language="C#" Value="public byte[] SerializeMsalV3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SerializeMsalV3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeMsalV3 () As Byte()" />
      <MemberSignature Language="F#" Value="abstract member SerializeMsalV3 : unit -&gt; byte[]" Usage="iTokenCache.SerializeMsalV3 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serializes the token cache to the MSAL.NET 3.x cache format, which is compatible with other MSAL desktop libraries, e.g. MSAL for Python and MSAL for Java.
            If you need to maintain SSO between an application using ADAL 3.x or MSAL 2.x and this application using MSAL 3.x,
            you might also want to serialize and deserialize with <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeAdalV3(System.Byte[])" /> or <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV2(System.Byte[])" />, 
            otherwise just use <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" />.
            </summary>
        <returns>Byte stream representation of the cache</returns>
        <remarks>
            This is the recommended format for maintaining SSO state between applications.
            <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV3" />/<see cref="M:Microsoft.Identity.Client.ITokenCache.DeserializeMsalV3(System.Byte[])" /> is compatible with other MSAL libraries such as MSAL for Python and MSAL for Java.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeUnifiedAndAdalCache">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.Cache.CacheData SerializeUnifiedAndAdalCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Client.Cache.CacheData SerializeUnifiedAndAdalCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SerializeUnifiedAndAdalCache" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeUnifiedAndAdalCache () As CacheData" />
      <MemberSignature Language="F#" Value="abstract member SerializeUnifiedAndAdalCache : unit -&gt; Microsoft.Identity.Client.Cache.CacheData" Usage="iTokenCache.SerializeUnifiedAndAdalCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>System.Obsolete("This is expected to be removed in MSAL.NET v3 and ADAL.NET v5. We recommend using SerializeMsalV3/DeserializeMsalV3. Read more: https://aka.ms/msal-net-3x-cache-breaking-change", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.Cache.CacheData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Functionality replaced by <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeMsalV2" /> and <see cref="M:Microsoft.Identity.Client.ITokenCache.SerializeAdalV3" />
            See https://aka.ms/msal-net-3x-cache-breaking-change
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAfterAccess">
      <MemberSignature Language="C#" Value="public void SetAfterAccess (Microsoft.Identity.Client.TokenCacheCallback afterAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAfterAccess(class Microsoft.Identity.Client.TokenCacheCallback afterAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAfterAccess (afterAccess As TokenCacheCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetAfterAccess : Microsoft.Identity.Client.TokenCacheCallback -&gt; unit" Usage="iTokenCache.SetAfterAccess afterAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afterAccess" Type="Microsoft.Identity.Client.TokenCacheCallback" />
      </Parameters>
      <Docs>
        <param name="afterAccess"></param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBeforeAccess">
      <MemberSignature Language="C#" Value="public void SetBeforeAccess (Microsoft.Identity.Client.TokenCacheCallback beforeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBeforeAccess(class Microsoft.Identity.Client.TokenCacheCallback beforeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SetBeforeAccess(Microsoft.Identity.Client.TokenCacheCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBeforeAccess (beforeAccess As TokenCacheCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetBeforeAccess : Microsoft.Identity.Client.TokenCacheCallback -&gt; unit" Usage="iTokenCache.SetBeforeAccess beforeAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeAccess" Type="Microsoft.Identity.Client.TokenCacheCallback" />
      </Parameters>
      <Docs>
        <param name="beforeAccess"></param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBeforeWrite">
      <MemberSignature Language="C#" Value="public void SetBeforeWrite (Microsoft.Identity.Client.TokenCacheCallback beforeWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBeforeWrite(class Microsoft.Identity.Client.TokenCacheCallback beforeWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ITokenCache.SetBeforeWrite(Microsoft.Identity.Client.TokenCacheCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBeforeWrite (beforeWrite As TokenCacheCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetBeforeWrite : Microsoft.Identity.Client.TokenCacheCallback -&gt; unit" Usage="iTokenCache.SetBeforeWrite beforeWrite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeWrite" Type="Microsoft.Identity.Client.TokenCacheCallback" />
      </Parameters>
      <Docs>
        <param name="beforeWrite"></param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>