<Type Name="AbstractApplicationBuilder&lt;T&gt;" FullName="Microsoft.Identity.Client.AbstractApplicationBuilder&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class AbstractApplicationBuilder&lt;T&gt; where T : AbstractApplicationBuilder&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractApplicationBuilder`1&lt;(class Microsoft.Identity.Client.AbstractApplicationBuilder`1&lt;!T&gt;) T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.AbstractApplicationBuilder`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AbstractApplicationBuilder(Of T)" />
  <TypeSignature Language="F#" Value="type AbstractApplicationBuilder&lt;'T (requires 'T :&gt; AbstractApplicationBuilder&lt;'T&gt;)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
    <AssemblyVersion>4.13.0.0</AssemblyVersion>
    <AssemblyVersion>4.14.0.0</AssemblyVersion>
    <AssemblyVersion>4.15.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Microsoft.Identity.Client.AbstractApplicationBuilder&lt;T&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T" />
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithAdfsAuthority">
      <MemberSignature Language="C#" Value="public T WithAdfsAuthority (string authorityUri, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAdfsAuthority(string authorityUri, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAdfsAuthority(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAdfsAuthority (authorityUri As String, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAdfsAuthority : string * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAdfsAuthority (authorityUri, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorityUri" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="authorityUri">Authority URL for an ADFS server</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Authority corresponding to an ADFS server. See https://aka.ms/msal-net-adfs
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>MSAL.NET will only support ADFS 2019 or later.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (Microsoft.Identity.Client.AadAuthorityAudience authorityAudience, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(valuetype Microsoft.Identity.Client.AadAuthorityAudience authorityAudience, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AadAuthorityAudience,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (authorityAudience As AadAuthorityAudience, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : Microsoft.Identity.Client.AadAuthorityAudience * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (authorityAudience, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorityAudience" Type="Microsoft.Identity.Client.AadAuthorityAudience" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="authorityAudience">Sign-in audience (one AAD organization,
            any work and school accounts, or any work and school accounts and Microsoft personal
            accounts</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users specifying
            the sign-in audience (the cloud being the Azure public cloud). See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (string authorityUri, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(string authorityUri, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (authorityUri As String, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : string * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (authorityUri, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorityUri" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="authorityUri">URL of the security token service (STS) from which MSAL.NET will acquire the tokens.
             Usual authorities endpoints for the Azure public Cloud are:
             <list type="bullet"><item><description><c>https://login.microsoftonline.com/tenant/</c> where <c>tenant</c> is the tenant ID of the Azure AD tenant
             or a domain associated with this Azure AD tenant, in order to sign-in users of a specific organization only</description></item><item><description><c>https://login.microsoftonline.com/common/</c> to sign-in users with any work and school accounts or Microsoft personal account</description></item><item><description><c>https://login.microsoftonline.com/organizations/</c> to sign-in users with any work and school accounts</description></item><item><description><c>https://login.microsoftonline.com/consumers/</c> to sign-in users with only personal Microsoft accounts (live)</description></item></list>
             Note that this setting needs to be consistent with what is declared in the application registration portal</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users specifying
            the full authority Uri. See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (Uri authorityUri, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(class System.Uri authorityUri, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (authorityUri As Uri, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : Uri * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (authorityUri, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorityUri" Type="System.Uri" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="authorityUri">Uri of the authority</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known authority to the application from its Uri. See https://aka.ms/msal-net-application-configuration.
            This constructor is mainly used for scenarios where the authority is not a standard Azure AD authority,
            nor an ADFS authority, nor an Azure AD B2C authority. For Azure AD, even in national and sovereign clouds, prefer
            using other overrides such as <see cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,Microsoft.Identity.Client.AadAuthorityAudience,System.Boolean)" /></summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, Microsoft.Identity.Client.AadAuthorityAudience authorityAudience, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(valuetype Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, valuetype Microsoft.Identity.Client.AadAuthorityAudience authorityAudience, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,Microsoft.Identity.Client.AadAuthorityAudience,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (azureCloudInstance As AzureCloudInstance, authorityAudience As AadAuthorityAudience, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : Microsoft.Identity.Client.AzureCloudInstance * Microsoft.Identity.Client.AadAuthorityAudience * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (azureCloudInstance, authorityAudience, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureCloudInstance" Type="Microsoft.Identity.Client.AzureCloudInstance" />
        <Parameter Name="authorityAudience" Type="Microsoft.Identity.Client.AadAuthorityAudience" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="azureCloudInstance">Instance of Azure Cloud (for instance Azure
            worldwide cloud, Azure German Cloud, US government ...)</param>
        <param name="authorityAudience">Sign-in audience (one AAD organization,
            any work and school accounts, or any work and school accounts and Microsoft personal
            accounts</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users specifying
            the cloud instance and the sign-in audience. See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, Guid tenantId, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(valuetype Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, valuetype System.Guid tenantId, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,System.Guid,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (azureCloudInstance As AzureCloudInstance, tenantId As Guid, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : Microsoft.Identity.Client.AzureCloudInstance * Guid * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (azureCloudInstance, tenantId, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureCloudInstance" Type="Microsoft.Identity.Client.AzureCloudInstance" />
        <Parameter Name="tenantId" Type="System.Guid" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="azureCloudInstance">Instance of Azure Cloud (for instance Azure
            worldwide cloud, Azure German Cloud, US government ...)</param>
        <param name="tenantId">Tenant Id of the tenant from which to sign-in users</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users from a single
            organization (single tenant application) described by its cloud instance and its tenant ID.
            See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, string tenant, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(valuetype Microsoft.Identity.Client.AzureCloudInstance azureCloudInstance, string tenant, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (azureCloudInstance As AzureCloudInstance, tenant As String, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : Microsoft.Identity.Client.AzureCloudInstance * string * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (azureCloudInstance, tenant, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureCloudInstance" Type="Microsoft.Identity.Client.AzureCloudInstance" />
        <Parameter Name="tenant" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validateAuthority">To be added.</param>
        <param name="azureCloudInstance">Instance of Azure Cloud (for instance Azure
            worldwide cloud, Azure German Cloud, US government ...)</param>
        <param name="tenant">Domain name associated with the Azure AD tenant from which
            <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
            to sign-in users. This can also be a guid</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users from a single
            organization (single tenant application) described by its cloud instance and its domain
            name or tenant ID. See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (string cloudInstanceUri, Guid tenantId, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(string cloudInstanceUri, valuetype System.Guid tenantId, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(System.String,System.Guid,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (cloudInstanceUri As String, tenantId As Guid, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : string * Guid * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (cloudInstanceUri, tenantId, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudInstanceUri" Type="System.String" />
        <Parameter Name="tenantId" Type="System.Guid" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloudInstanceUri">Azure Cloud instance</param>
        <param name="tenantId">Guid of the tenant from which to sign-in users</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users from a single
            organization (single tenant application) specified by its tenant ID. See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAuthority">
      <MemberSignature Language="C#" Value="public T WithAuthority (string cloudInstanceUri, string tenant, bool validateAuthority = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithAuthority(string cloudInstanceUri, string tenant, bool validateAuthority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAuthority (cloudInstanceUri As String, tenant As String, Optional validateAuthority As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithAuthority : string * string * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithAuthority (cloudInstanceUri, tenant, validateAuthority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudInstanceUri" Type="System.String" />
        <Parameter Name="tenant" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloudInstanceUri">Uri to the Azure Cloud instance (for instance
            <c>https://login.microsoftonline.com)</c></param>
        <param name="tenant">domain name associated with the tenant from which to sign-in users</param>
        <param name="validateAuthority">Whether the authority should be validated against the server metadata.</param>
        <summary>
            Adds a known Azure AD authority to the application to sign-in users from a single
            organization (single tenant application) described by its domain name. See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>
          <paramref name="tenant" /> can also contain the string representation of a GUID (tenantId),
            or even <c>common</c>, <c>organizations</c> or <c>consumers</c> but in this case
            it's recommended to use another override (<see cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,System.Guid,System.Boolean)" />
            and <see cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,Microsoft.Identity.Client.AadAuthorityAudience,System.Boolean)" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="WithB2CAuthority">
      <MemberSignature Language="C#" Value="public T WithB2CAuthority (string authorityUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithB2CAuthority(string authorityUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithB2CAuthority(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithB2CAuthority (authorityUri As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithB2CAuthority : string -&gt; 'T" Usage="abstractApplicationBuilder.WithB2CAuthority authorityUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorityUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authorityUri">Azure AD B2C authority, including the B2C policy (for instance
            <c>"https://fabrikamb2c.b2clogin.com/tfp/{Tenant}/{policy}</c></param>
        <summary>
            Adds a known authority corresponding to an Azure AD B2C policy.
            See https://aka.ms/msal-net-b2c-specificities
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientCapabilities">
      <MemberSignature Language="C#" Value="public T WithClientCapabilities (System.Collections.Generic.IEnumerable&lt;string&gt; clientCapabilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithClientCapabilities(class System.Collections.Generic.IEnumerable`1&lt;string&gt; clientCapabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithClientCapabilities(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientCapabilities (clientCapabilities As IEnumerable(Of String)) As T" />
      <MemberSignature Language="F#" Value="member this.WithClientCapabilities : seq&lt;string&gt; -&gt; 'T" Usage="abstractApplicationBuilder.WithClientCapabilities clientCapabilities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientCapabilities" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="clientCapabilities">To be added.</param>
        <summary>
            Microsoft Identity specific OIDC extension that allows resource challenges to be resolved without interaction. 
            Allows configuration of one or more client capabilities, e.g. "llt"
            </summary>
        <returns>To be added.</returns>
        <remarks>
            MSAL will transform these into special claims request. See https://openid.net/specs/openid-connect-core-1_0-final.html#ClaimsParameter for
            details on claim requests.
            For more details see https://aka.ms/msal-net-claims-request
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientId">
      <MemberSignature Language="C#" Value="public T WithClientId (string clientId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithClientId(string clientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithClientId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientId (clientId As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithClientId : string -&gt; 'T" Usage="abstractApplicationBuilder.WithClientId clientId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientId">Client ID (also known as <i>Application ID</i>) of the application as registered in the
             application registration portal (https://aka.ms/msal-net-register-app)</param>
        <summary>
            Sets the Client ID of the application
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientName">
      <MemberSignature Language="C#" Value="public T WithClientName (string clientName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithClientName(string clientName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithClientName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientName (clientName As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithClientName : string -&gt; 'T" Usage="abstractApplicationBuilder.WithClientName clientName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientName">The name of the application for telemetry purposes.</param>
        <summary>
            Sets the name of the calling application for telemetry purposes.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientVersion">
      <MemberSignature Language="C#" Value="public T WithClientVersion (string clientVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithClientVersion(string clientVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithClientVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithClientVersion (clientVersion As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithClientVersion : string -&gt; 'T" Usage="abstractApplicationBuilder.WithClientVersion clientVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientVersion">The version of the calling application for telemetry purposes.</param>
        <summary>
            Sets the version of the calling application for telemetry purposes.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDebugLoggingCallback">
      <MemberSignature Language="C#" Value="public T WithDebugLoggingCallback (Microsoft.Identity.Client.LogLevel logLevel = Microsoft.Identity.Client.LogLevel.Info, bool enablePiiLogging = false, bool withDefaultPlatformLoggingEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithDebugLoggingCallback(valuetype Microsoft.Identity.Client.LogLevel logLevel, bool enablePiiLogging, bool withDefaultPlatformLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithDebugLoggingCallback(Microsoft.Identity.Client.LogLevel,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDebugLoggingCallback (Optional logLevel As LogLevel = Microsoft.Identity.Client.LogLevel.Info, Optional enablePiiLogging As Boolean = false, Optional withDefaultPlatformLoggingEnabled As Boolean = false) As T" />
      <MemberSignature Language="F#" Value="member this.WithDebugLoggingCallback : Microsoft.Identity.Client.LogLevel * bool * bool -&gt; 'T" Usage="abstractApplicationBuilder.WithDebugLoggingCallback (logLevel, enablePiiLogging, withDefaultPlatformLoggingEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Identity.Client.LogLevel" />
        <Parameter Name="enablePiiLogging" Type="System.Boolean" />
        <Parameter Name="withDefaultPlatformLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="logLevel">Desired level of logging.  The default is LogLevel.Info</param>
        <param name="enablePiiLogging">Boolean used to enable/disable logging of
            Personally Identifiable Information (PII).
            PII logs are never written to default outputs like Console, Logcat or NSLog
            Default is set to <c>false</c>, which ensures that your application is compliant with GDPR.
            You can set it to <c>true</c> for advanced debugging requiring PII
            </param>
        <param name="withDefaultPlatformLoggingEnabled">Flag to enable/disable logging to platform defaults.
            In Desktop/UWP, Event Tracing is used. In iOS, NSLog is used.
            In android, logcat is used. The default value is <c>false</c></param>
        <summary>
            Sets the Debug logging callback to a default debug method which displays
            the level of the message and the message itself. For details see https://aka.ms/msal-net-logging
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
        <exception cref="T:System.InvalidOperationException" />
        <see cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      </Docs>
    </Member>
    <Member MemberName="WithExperimentalFeatures">
      <MemberSignature Language="C#" Value="public T WithExperimentalFeatures (bool enableExperimentalFeatures = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithExperimentalFeatures(bool enableExperimentalFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithExperimentalFeatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExperimentalFeatures (Optional enableExperimentalFeatures As Boolean = true) As T" />
      <MemberSignature Language="F#" Value="member this.WithExperimentalFeatures : bool -&gt; 'T" Usage="abstractApplicationBuilder.WithExperimentalFeatures enableExperimentalFeatures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableExperimentalFeatures" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableExperimentalFeatures">To be added.</param>
        <summary>
            Allows usage of experimental features and APIs. If this flag is not set, experimental features 
            will throw an exception. For details see https://aka.ms/msal-net-experimental-features
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Changes in the public API of experimental features will not result in an increment of the major version of this library.
            For these reason we advise against using these features in production.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExtraQueryParameters">
      <MemberSignature Language="C#" Value="public T WithExtraQueryParameters (System.Collections.Generic.IDictionary&lt;string,string&gt; extraQueryParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithExtraQueryParameters(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; extraQueryParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithExtraQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExtraQueryParameters (extraQueryParameters As IDictionary(Of String, String)) As T" />
      <MemberSignature Language="F#" Value="member this.WithExtraQueryParameters : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; 'T" Usage="abstractApplicationBuilder.WithExtraQueryParameters extraQueryParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="extraQueryParameters">This parameter will be appended as is to the query string in the HTTP authentication request to the authority
            as a string of segments of the form <c>key=value</c> separated by an ampersand character.
            The parameter can be null.</param>
        <summary>
            Sets Extra Query Parameters for the query string in the HTTP authentication request
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExtraQueryParameters">
      <MemberSignature Language="C#" Value="public T WithExtraQueryParameters (string extraQueryParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithExtraQueryParameters(string extraQueryParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithExtraQueryParameters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExtraQueryParameters (extraQueryParameters As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithExtraQueryParameters : string -&gt; 'T" Usage="abstractApplicationBuilder.WithExtraQueryParameters extraQueryParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryParameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extraQueryParameters">This parameter will be appended as is to the query string in the HTTP authentication request to the authority.
            The string needs to be properly URL-encdoded and ready to send as a string of segments of the form <c>key=value</c> separated by an ampersand character.
            </param>
        <summary>
            Sets Extra Query Parameters for the query string in the HTTP authentication request
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithHttpClientFactory">
      <MemberSignature Language="C#" Value="public T WithHttpClientFactory (Microsoft.Identity.Client.IMsalHttpClientFactory httpClientFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithHttpClientFactory(class Microsoft.Identity.Client.IMsalHttpClientFactory httpClientFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithHttpClientFactory(Microsoft.Identity.Client.IMsalHttpClientFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithHttpClientFactory (httpClientFactory As IMsalHttpClientFactory) As T" />
      <MemberSignature Language="F#" Value="member this.WithHttpClientFactory : Microsoft.Identity.Client.IMsalHttpClientFactory -&gt; 'T" Usage="abstractApplicationBuilder.WithHttpClientFactory httpClientFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpClientFactory" Type="Microsoft.Identity.Client.IMsalHttpClientFactory" />
      </Parameters>
      <Docs>
        <param name="httpClientFactory">HTTP client factory</param>
        <summary>
            Uses a specific <see cref="T:Microsoft.Identity.Client.IMsalHttpClientFactory" /> to communicate
            with the IdP. This enables advanced scenarios such as setting a proxy,
            or setting the Agent.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>MSAL does not guarantee that it will not modify the HttpClient, for example by adding new headers.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInstanceDicoveryMetadata">
      <MemberSignature Language="C#" Value="public T WithInstanceDicoveryMetadata (string instanceDiscoveryJson);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithInstanceDicoveryMetadata(string instanceDiscoveryJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithInstanceDicoveryMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInstanceDicoveryMetadata (instanceDiscoveryJson As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithInstanceDicoveryMetadata : string -&gt; 'T" Usage="abstractApplicationBuilder.WithInstanceDicoveryMetadata instanceDiscoveryJson" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method name has a typo, please use WithInstanceDiscoveryMetadata instead", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDiscoveryJson" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceDiscoveryJson" />
        <summary>
            Allows developers to configure their own valid authorities. A json string similar to https://aka.ms/aad-instance-discovery should be provided.
            MSAL uses this information to: 
            <list type="bullet"><item>Call REST APIs on the environment specified in the preferred_network</item><item>Identify an environment under which to save tokens and accounts in the cache</item><item>Use the environment aliases to match tokens issued to other authorities</item></list>
            For more details see https://aka.ms/msal-net-custom-instance-metadata
            </summary>
        <returns />
        <remarks>
            Developers take responsibility for authority validation if they use this method. Should not be used when the authority is not know in advance. 
            Has no effect on ADFS or B2C authorities, only for AAD authorities</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInstanceDicoveryMetadata">
      <MemberSignature Language="C#" Value="public T WithInstanceDicoveryMetadata (Uri instanceDiscoveryUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithInstanceDicoveryMetadata(class System.Uri instanceDiscoveryUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithInstanceDicoveryMetadata(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInstanceDicoveryMetadata (instanceDiscoveryUri As Uri) As T" />
      <MemberSignature Language="F#" Value="member this.WithInstanceDicoveryMetadata : Uri -&gt; 'T" Usage="abstractApplicationBuilder.WithInstanceDicoveryMetadata instanceDiscoveryUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method name has a typo, please use WithInstanceDiscoveryMetadata instead", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDiscoveryUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="instanceDiscoveryUri" />
        <summary>
            Lets an organization setup their own service to handle instance discovery, which enables better caching for microservice/service environments.
            A Uri that returns a response similar to https://aka.ms/aad-instance-discovery should be provided. MSAL uses this information to: 
            <list type="bullet"><item>Call REST APIs on the environment specified in the preferred_network</item><item>Identify an environment under which to save tokens and accounts in the cache</item><item>Use the environment aliases to match tokens issued to other authorities</item></list>
            For more details see https://aka.ms/msal-net-custom-instance-metadata
            </summary>
        <returns />
        <remarks>
            Developers take responsibility for authority validation if they use this method. Should not be used when the authority is not know in advance. 
            Has no effect on ADFS or B2C authorities, only for AAD authorities</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInstanceDiscoveryMetadata">
      <MemberSignature Language="C#" Value="public T WithInstanceDiscoveryMetadata (string instanceDiscoveryJson);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithInstanceDiscoveryMetadata(string instanceDiscoveryJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithInstanceDiscoveryMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInstanceDiscoveryMetadata (instanceDiscoveryJson As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithInstanceDiscoveryMetadata : string -&gt; 'T" Usage="abstractApplicationBuilder.WithInstanceDiscoveryMetadata instanceDiscoveryJson" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDiscoveryJson" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceDiscoveryJson" />
        <summary>
            Allows developers to configure their own valid authorities. A json string similar to https://aka.ms/aad-instance-discovery should be provided.
            MSAL uses this information to: 
            <list type="bullet"><item>Call REST APIs on the environment specified in the preferred_network</item><item>Identify an environment under which to save tokens and accounts in the cache</item><item>Use the environment aliases to match tokens issued to other authorities</item></list>
            For more details see https://aka.ms/msal-net-custom-instance-metadata
            </summary>
        <returns />
        <remarks>
            Developers take responsibility for authority validation if they use this method. Should not be used when the authority is not known in advance. 
            Has no effect on ADFS or B2C authorities, only for AAD authorities</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInstanceDiscoveryMetadata">
      <MemberSignature Language="C#" Value="public T WithInstanceDiscoveryMetadata (Uri instanceDiscoveryUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithInstanceDiscoveryMetadata(class System.Uri instanceDiscoveryUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithInstanceDiscoveryMetadata(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInstanceDiscoveryMetadata (instanceDiscoveryUri As Uri) As T" />
      <MemberSignature Language="F#" Value="member this.WithInstanceDiscoveryMetadata : Uri -&gt; 'T" Usage="abstractApplicationBuilder.WithInstanceDiscoveryMetadata instanceDiscoveryUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDiscoveryUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="instanceDiscoveryUri" />
        <summary>
            Lets an organization setup their own service to handle instance discovery, which enables better caching for microservice/service environments.
            A Uri that returns a response similar to https://aka.ms/aad-instance-discovery should be provided. MSAL uses this information to: 
            <list type="bullet"><item>Call REST APIs on the environment specified in the preferred_network</item><item>Identify an environment under which to save tokens and accounts in the cache</item><item>Use the environment aliases to match tokens issued to other authorities</item></list>
            For more details see https://aka.ms/msal-net-custom-instance-metadata
            </summary>
        <returns />
        <remarks>
            Developers take responsibility for authority validation if they use this method. Should not be used when the authority is not known in advance. 
            Has no effect on ADFS or B2C authorities, only for AAD authorities</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithLogging">
      <MemberSignature Language="C#" Value="public T WithLogging (Microsoft.Identity.Client.LogCallback loggingCallback, Microsoft.Identity.Client.LogLevel? logLevel = default, bool? enablePiiLogging = default, bool? enableDefaultPlatformLogging = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithLogging(class Microsoft.Identity.Client.LogCallback loggingCallback, valuetype System.Nullable`1&lt;valuetype Microsoft.Identity.Client.LogLevel&gt; logLevel, valuetype System.Nullable`1&lt;bool&gt; enablePiiLogging, valuetype System.Nullable`1&lt;bool&gt; enableDefaultPlatformLogging) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithLogging (loggingCallback As LogCallback, Optional logLevel As Nullable(Of LogLevel) = null, Optional enablePiiLogging As Nullable(Of Boolean) = null, Optional enableDefaultPlatformLogging As Nullable(Of Boolean) = null) As T" />
      <MemberSignature Language="F#" Value="member this.WithLogging : Microsoft.Identity.Client.LogCallback * Nullable&lt;Microsoft.Identity.Client.LogLevel&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; 'T" Usage="abstractApplicationBuilder.WithLogging (loggingCallback, logLevel, enablePiiLogging, enableDefaultPlatformLogging)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingCallback" Type="Microsoft.Identity.Client.LogCallback" />
        <Parameter Name="logLevel" Type="System.Nullable&lt;Microsoft.Identity.Client.LogLevel&gt;" />
        <Parameter Name="enablePiiLogging" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableDefaultPlatformLogging" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="loggingCallback" />
        <param name="logLevel">Desired level of logging.  The default is LogLevel.Info</param>
        <param name="enablePiiLogging">Boolean used to enable/disable logging of
            Personally Identifiable Information (PII).
            PII logs are never written to default outputs like Console, Logcat or NSLog
            Default is set to <c>false</c>, which ensures that your application is compliant with GDPR.
            You can set it to <c>true</c> for advanced debugging requiring PII
            </param>
        <param name="enableDefaultPlatformLogging">Flag to enable/disable logging to platform defaults.
            In Desktop/UWP, Event Tracing is used. In iOS, NSLog is used.
            In android, logcat is used. The default value is <c>false</c></param>
        <summary>
            Sets the logging callback. For details see https://aka.ms/msal-net-logging
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="WithOptions">
      <MemberSignature Language="C#" Value="protected T WithOptions (Microsoft.Identity.Client.ApplicationOptions applicationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !T WithOptions(class Microsoft.Identity.Client.ApplicationOptions applicationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithOptions(Microsoft.Identity.Client.ApplicationOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WithOptions (applicationOptions As ApplicationOptions) As T" />
      <MemberSignature Language="F#" Value="member this.WithOptions : Microsoft.Identity.Client.ApplicationOptions -&gt; 'T" Usage="abstractApplicationBuilder.WithOptions applicationOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationOptions" Type="Microsoft.Identity.Client.ApplicationOptions" />
      </Parameters>
      <Docs>
        <param name="applicationOptions">Application options</param>
        <summary>
            Sets application options, which can, for instance have been read from configuration files.
            See https://aka.ms/msal-net-application-configuration.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRedirectUri">
      <MemberSignature Language="C#" Value="public T WithRedirectUri (string redirectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithRedirectUri(string redirectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithRedirectUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRedirectUri (redirectUri As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithRedirectUri : string -&gt; 'T" Usage="abstractApplicationBuilder.WithRedirectUri redirectUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUri">URL where the STS will call back the application with the security token.
            This parameter is not required for desktop or UWP applications (as a default is used).
            It's not required for mobile applications that don't use a broker
            It is required for Web Apps</param>
        <summary>
            Sets the redirect URI of the application. See https://aka.ms/msal-net-application-configuration
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTelemetry">
      <MemberSignature Language="C#" Value="public T WithTelemetry (Microsoft.Identity.Client.ITelemetryConfig telemetryConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithTelemetry(class Microsoft.Identity.Client.ITelemetryConfig telemetryConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithTelemetry(Microsoft.Identity.Client.ITelemetryConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTelemetry (telemetryConfig As ITelemetryConfig) As T" />
      <MemberSignature Language="F#" Value="member this.WithTelemetry : Microsoft.Identity.Client.ITelemetryConfig -&gt; 'T" Usage="abstractApplicationBuilder.WithTelemetry telemetryConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="telemetryConfig" Type="Microsoft.Identity.Client.ITelemetryConfig" />
      </Parameters>
      <Docs>
        <param name="telemetryConfig" />
        <summary>
            Generate telemetry aggregation events.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTenantId">
      <MemberSignature Language="C#" Value="public T WithTenantId (string tenantId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithTenantId(string tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithTenantId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTenantId (tenantId As String) As T" />
      <MemberSignature Language="F#" Value="member this.WithTenantId : string -&gt; 'T" Usage="abstractApplicationBuilder.WithTenantId tenantId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tenantId">tenant ID of the Azure AD tenant
            or a domain associated with this Azure AD tenant, in order to sign-in a user of a specific organization only</param>
        <summary>
            Sets the Tenant Id of the organization from which the application will let
            users sign-in. This is classically a GUID or a domain name. See https://aka.ms/msal-net-application-configuration.
            Although it is also possible to set <paramref name="tenantId" /> to <c>common</c>,
            <c>organizations</c>, and <c>consumers</c>, it's recommended to use one of the
            overrides of <see cref="M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithAuthority(Microsoft.Identity.Client.AzureCloudInstance,Microsoft.Identity.Client.AadAuthorityAudience,System.Boolean)" /></summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
