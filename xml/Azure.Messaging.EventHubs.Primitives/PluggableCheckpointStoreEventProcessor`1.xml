<Type Name="PluggableCheckpointStoreEventProcessor&lt;TPartition&gt;" FullName="Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;TPartition&gt;">
  <TypeSignature Language="C#" Value="public abstract class PluggableCheckpointStoreEventProcessor&lt;TPartition&gt; : Azure.Messaging.EventHubs.Primitives.EventProcessor&lt;TPartition&gt; where TPartition : EventProcessorPartition, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PluggableCheckpointStoreEventProcessor`1&lt;.ctor (class Azure.Messaging.EventHubs.Primitives.EventProcessorPartition) TPartition&gt; extends Azure.Messaging.EventHubs.Primitives.EventProcessor`1&lt;!TPartition&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PluggableCheckpointStoreEventProcessor(Of TPartition)&#xA;Inherits EventProcessor(Of TPartition)" />
  <TypeSignature Language="F#" Value="type PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; = class&#xA;    inherit EventProcessor&lt;'Partition (requires 'Partition :&gt; EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPartition">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Azure.Messaging.EventHubs.Primitives.EventProcessorPartition</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Azure.Messaging.EventHubs.Primitives.EventProcessor&lt;TPartition&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TPartition">TPartition</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TPartition">The context of the partition for which an operation is being performed.</typeparam>
    <summary>
               Provides a base for creating an event processor with custom processing logic which consumes events across all partitions
               of a given Event Hub for a specific consumer group.  The processor is capable of collaborating with other instances for
               the same Event Hub and consumer group pairing to share work by using a common storage platform to communicate.  Fault tolerance
               is also built-in, allowing the processor to be resilient in the face of errors.
             </summary>
    <remarks>
               The <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> is safe to cache and use for the lifetime of an application, and that is best practice when the application
               processes events regularly or semi-regularly.  The processor holds responsibility for efficient resource management, working to keep resource usage low during
               periods of inactivity and manage health during periods of higher use.  Calling either the <see cref="M:Azure.Messaging.EventHubs.Primitives.EventProcessor`1.StopProcessingAsync(System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Primitives.EventProcessor`1.StopProcessing(System.Threading.CancellationToken)" />
               method when processing is complete or as the application is shutting down will ensure that network resources and other unmanaged objects are properly cleaned up.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor (Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int eventBatchMaximumCount, string consumerGroup, string connectionString, Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int32 eventBatchMaximumCount, string consumerGroup, string connectionString, class Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor(Azure.Messaging.EventHubs.Primitives.CheckpointStore,System.Int32,System.String,System.String,Azure.Messaging.EventHubs.Primitives.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (checkpointStore As CheckpointStore, eventBatchMaximumCount As Integer, consumerGroup As String, connectionString As String, Optional options As EventProcessorOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; : Azure.Messaging.EventHubs.Primitives.CheckpointStore * int * string * string * Azure.Messaging.EventHubs.Primitives.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" Usage="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; (checkpointStore, eventBatchMaximumCount, consumerGroup, connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Messaging.EventHubs.Primitives.CheckpointStore" />
        <Parameter Name="eventBatchMaximumCount" Type="System.Int32" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Primitives.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The provider of checkpoint and ownership data for the processor.</param>
        <param name="eventBatchMaximumCount">The desired number of events to include in a batch to be processed.  This size is the maximum count in a batch; the actual count may be smaller, depending on whether events are available in the Event Hub.</param>
        <param name="consumerGroup">The name of the consumer group the processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="options">The set of options to use for the processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when the requested <paramref name="eventBatchMaximumCount" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor (Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int eventBatchMaximumCount, string consumerGroup, string connectionString, string eventHubName, Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int32 eventBatchMaximumCount, string consumerGroup, string connectionString, string eventHubName, class Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor(Azure.Messaging.EventHubs.Primitives.CheckpointStore,System.Int32,System.String,System.String,System.String,Azure.Messaging.EventHubs.Primitives.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (checkpointStore As CheckpointStore, eventBatchMaximumCount As Integer, consumerGroup As String, connectionString As String, eventHubName As String, Optional options As EventProcessorOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; : Azure.Messaging.EventHubs.Primitives.CheckpointStore * int * string * string * string * Azure.Messaging.EventHubs.Primitives.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" Usage="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; (checkpointStore, eventBatchMaximumCount, consumerGroup, connectionString, eventHubName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Messaging.EventHubs.Primitives.CheckpointStore" />
        <Parameter Name="eventBatchMaximumCount" Type="System.Int32" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Primitives.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The provider of checkpoint and ownership data for the processor.</param>
        <param name="eventBatchMaximumCount">The desired number of events to include in a batch to be processed.  This size is the maximum count in a batch; the actual count may be smaller, depending on whether events are available in the Event Hub.</param>
        <param name="consumerGroup">The name of the consumer group the processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="options">The set of options to use for the processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when the requested <paramref name="eventBatchMaximumCount" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor (Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.AzureNamedKeyCredential credential, Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int32 eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, class Azure.AzureNamedKeyCredential credential, class Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor(Azure.Messaging.EventHubs.Primitives.CheckpointStore,System.Int32,System.String,System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Primitives.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (checkpointStore As CheckpointStore, eventBatchMaximumCount As Integer, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As AzureNamedKeyCredential, Optional options As EventProcessorOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; : Azure.Messaging.EventHubs.Primitives.CheckpointStore * int * string * string * string * Azure.AzureNamedKeyCredential * Azure.Messaging.EventHubs.Primitives.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" Usage="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; (checkpointStore, eventBatchMaximumCount, consumerGroup, fullyQualifiedNamespace, eventHubName, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Messaging.EventHubs.Primitives.CheckpointStore" />
        <Parameter Name="eventBatchMaximumCount" Type="System.Int32" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureNamedKeyCredential" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Primitives.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The provider of checkpoint and ownership data for the processor.</param>
        <param name="eventBatchMaximumCount">The desired number of events to include in a batch to be processed.  This size is the maximum count in a batch; the actual count may be smaller, depending on whether events are available in the Event Hub.</param>
        <param name="consumerGroup">The name of the consumer group the processor is associated with.  Events are read in the context of this group.</param>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="credential">The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="options">The set of options to use for the processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when the requested <paramref name="eventBatchMaximumCount" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor (Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.AzureSasCredential credential, Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int32 eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, class Azure.AzureSasCredential credential, class Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor(Azure.Messaging.EventHubs.Primitives.CheckpointStore,System.Int32,System.String,System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Primitives.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (checkpointStore As CheckpointStore, eventBatchMaximumCount As Integer, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As AzureSasCredential, Optional options As EventProcessorOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; : Azure.Messaging.EventHubs.Primitives.CheckpointStore * int * string * string * string * Azure.AzureSasCredential * Azure.Messaging.EventHubs.Primitives.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" Usage="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; (checkpointStore, eventBatchMaximumCount, consumerGroup, fullyQualifiedNamespace, eventHubName, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Messaging.EventHubs.Primitives.CheckpointStore" />
        <Parameter Name="eventBatchMaximumCount" Type="System.Int32" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Primitives.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The provider of checkpoint and ownership data for the processor.</param>
        <param name="eventBatchMaximumCount">The desired number of events to include in a batch to be processed.  This size is the maximum count in a batch; the actual count may be smaller, depending on whether events are available in the Event Hub.</param>
        <param name="consumerGroup">The name of the consumer group the processor is associated with.  Events are read in the context of this group.</param>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="credential">The shared signature credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="options">The set of options to use for the processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when the requested <paramref name="eventBatchMaximumCount" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluggableCheckpointStoreEventProcessor (Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.Primitives.CheckpointStore checkpointStore, int32 eventBatchMaximumCount, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, class Azure.Core.TokenCredential credential, class Azure.Messaging.EventHubs.Primitives.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.#ctor(Azure.Messaging.EventHubs.Primitives.CheckpointStore,System.Int32,System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Primitives.EventProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (checkpointStore As CheckpointStore, eventBatchMaximumCount As Integer, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional options As EventProcessorOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; : Azure.Messaging.EventHubs.Primitives.CheckpointStore * int * string * string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.Primitives.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt;" Usage="new Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor&lt;'Partition (requires 'Partition :&gt; Azure.Messaging.EventHubs.Primitives.EventProcessorPartition and 'Partition : (new : unit -&gt; 'Partition))&gt; (checkpointStore, eventBatchMaximumCount, consumerGroup, fullyQualifiedNamespace, eventHubName, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Messaging.EventHubs.Primitives.CheckpointStore" />
        <Parameter Name="eventBatchMaximumCount" Type="System.Int32" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Primitives.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The provider of checkpoint and ownership data for the processor.</param>
        <param name="eventBatchMaximumCount">The desired number of events to include in a batch to be processed.  This size is the maximum count in a batch; the actual count may be smaller, depending on whether events are available in the Event Hub.</param>
        <param name="consumerGroup">The name of the consumer group the processor is associated with.  Events are read in the context of this group.</param>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="options">The set of options to use for the processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1" /> class.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when the requested <paramref name="eventBatchMaximumCount" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimOwnershipAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt; ClaimOwnershipAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt; desiredOwnership, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt; ClaimOwnershipAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt; desiredOwnership, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.ClaimOwnershipAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ClaimOwnershipAsync (desiredOwnership As IEnumerable(Of EventProcessorPartitionOwnership), cancellationToken As CancellationToken) As Task(Of IEnumerable(Of EventProcessorPartitionOwnership))" />
      <MemberSignature Language="F#" Value="override this.ClaimOwnershipAsync : seq&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt;" Usage="pluggableCheckpointStoreEventProcessor.ClaimOwnershipAsync (desiredOwnership, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredOwnership" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="desiredOwnership">The set of partition ownership desired by the event processor instance; this is the set of partitions that it will attempt to request responsibility for processing.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the processing.  This is most likely to occur when the processor is shutting down.</param>
        <summary>
               Attempts to claim ownership of the specified partitions for processing.  This operation is used by
               load balancing to enable distributing the responsibility for processing partitions for an
               Event Hub and consumer group pairing amongst the active event processors.
             </summary>
        <returns>The set of ownership records for the partitions that were successfully claimed; this is expected to be the <paramref name="desiredOwnership" /> or a subset of those partitions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCheckpointAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorCheckpoint&gt; GetCheckpointAsync (string partitionId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.Primitives.EventProcessorCheckpoint&gt; GetCheckpointAsync(string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.GetCheckpointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCheckpointAsync (partitionId As String, cancellationToken As CancellationToken) As Task(Of EventProcessorCheckpoint)" />
      <MemberSignature Language="F#" Value="override this.GetCheckpointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorCheckpoint&gt;" Usage="pluggableCheckpointStoreEventProcessor.GetCheckpointAsync (partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorCheckpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The identifier of the partition for which to retrieve the checkpoint.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the processing.  This is most likely to occur when the processor is shutting down.</param>
        <summary>
               Returns a checkpoint for the Event Hub, consumer group, and identifier of the partition associated with the
               event processor instance, so that processing for a given partition can be properly initialized.
             </summary>
        <returns>The checkpoint for the processor to take into account when initializing partition.</returns>
        <remarks>
               Should a partition not have a corresponding checkpoint, the <see cref="P:Azure.Messaging.EventHubs.Primitives.EventProcessorOptions.DefaultStartingPosition" /> will
               be used to initialize the partition for processing.
            
               In the event that a custom starting point is desired for a single partition, or each partition should start at a unique place,
               it is recommended that this method express that intent by returning checkpoints for those partitions with the desired custom
               starting location set.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListOwnershipAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt; ListOwnershipAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt; ListOwnershipAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.ListOwnershipAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ListOwnershipAsync (cancellationToken As CancellationToken) As Task(Of IEnumerable(Of EventProcessorPartitionOwnership))" />
      <MemberSignature Language="F#" Value="override this.ListOwnershipAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt;" Usage="pluggableCheckpointStoreEventProcessor.ListOwnershipAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.Primitives.EventProcessorPartitionOwnership&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the processing.  This is most likely to occur when the processor is shutting down.</param>
        <summary>
               Requests a list of the ownership assignments for partitions between each of the cooperating event processor
               instances for a given Event Hub and consumer group pairing.  This method is used during load balancing to allow
               the processor to discover other active collaborators and to make decisions about how to best balance work
               between them.
             </summary>
        <returns>The set of ownership data to take into account when making load balancing decisions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheckpointAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task UpdateCheckpointAsync (string partitionId, long offset, long? sequenceNumber, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task UpdateCheckpointAsync(string partitionId, int64 offset, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Primitives.PluggableCheckpointStoreEventProcessor`1.UpdateCheckpointAsync(System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function UpdateCheckpointAsync (partitionId As String, offset As Long, sequenceNumber As Nullable(Of Long), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="override this.UpdateCheckpointAsync : string * int64 * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pluggableCheckpointStoreEventProcessor.UpdateCheckpointAsync (partitionId, offset, sequenceNumber, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The identifier of the partition the checkpoint is for.</param>
        <param name="offset">The offset to associate with the checkpoint, indicating that a processor should begin reading form the next event in the stream.</param>
        <param name="sequenceNumber">An optional sequence number to associate with the checkpoint, intended as informational metadata.  The <paramref name="offset" /> will be used for positioning when events are read.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal a request to cancel the operation.</param>
        <summary>
               Creates or updates a checkpoint for a specific partition, identifying a position in the partition's event stream
               that an event processor should begin reading from.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
