<Type Name="QuantumJobsModelFactory" FullName="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory">
  <TypeSignature Language="C#" Value="public static class QuantumJobsModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit QuantumJobsModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class QuantumJobsModelFactory" />
  <TypeSignature Language="F#" Value="type QuantumJobsModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CostEstimate">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.CostEstimate CostEstimate (string currencyCode = default, System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.UsageEvent&gt; events = default, float? estimatedTotal = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.CostEstimate CostEstimate(string currencyCode, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Quantum.Jobs.Models.UsageEvent&gt; events, valuetype System.Nullable`1&lt;float32&gt; estimatedTotal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.CostEstimate(System.String,System.Collections.Generic.IEnumerable{Azure.Quantum.Jobs.Models.UsageEvent},System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CostEstimate (Optional currencyCode As String = Nothing, Optional events As IEnumerable(Of UsageEvent) = Nothing, Optional estimatedTotal As Nullable(Of Single) = Nothing) As CostEstimate" />
      <MemberSignature Language="F#" Value="static member CostEstimate : string * seq&lt;Azure.Quantum.Jobs.Models.UsageEvent&gt; * Nullable&lt;single&gt; -&gt; Azure.Quantum.Jobs.Models.CostEstimate" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.CostEstimate (currencyCode, events, estimatedTotal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.CostEstimate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currencyCode" Type="System.String" />
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.UsageEvent&gt;" />
        <Parameter Name="estimatedTotal" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="currencyCode"> The currency code. </param>
        <param name="events"> List of usage events. </param>
        <param name="estimatedTotal"> The estimated total. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.CostEstimate" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.CostEstimate" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorData">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.ErrorData ErrorData (string code = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.ErrorData ErrorData(string code, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.ErrorData(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorData (Optional code As String = Nothing, Optional message As String = Nothing) As ErrorData" />
      <MemberSignature Language="F#" Value="static member ErrorData : string * string -&gt; Azure.Quantum.Jobs.Models.ErrorData" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.ErrorData (code, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.ErrorData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> An identifier for the error. Codes are invariant and are intended to be consumed programmatically. </param>
        <param name="message"> A message describing the error, intended to be suitable for displaying in a user interface. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.ErrorData" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.ErrorData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobDetails">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.JobDetails JobDetails (string id = default, string name = default, string containerUri = default, string inputDataUri = default, string inputDataFormat = default, object inputParams = default, string providerId = default, string target = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, string outputDataUri = default, string outputDataFormat = default, Azure.Quantum.Jobs.Models.JobStatus? status = default, DateTimeOffset? creationTime = default, DateTimeOffset? beginExecutionTime = default, DateTimeOffset? endExecutionTime = default, DateTimeOffset? cancellationTime = default, Azure.Quantum.Jobs.Models.CostEstimate costEstimate = default, Azure.Quantum.Jobs.Models.ErrorData errorData = default, System.Collections.Generic.IEnumerable&lt;string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.JobDetails JobDetails(string id, string name, string containerUri, string inputDataUri, string inputDataFormat, object inputParams, string providerId, string target, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string outputDataUri, string outputDataFormat, valuetype System.Nullable`1&lt;valuetype Azure.Quantum.Jobs.Models.JobStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; creationTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; beginExecutionTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endExecutionTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; cancellationTime, class Azure.Quantum.Jobs.Models.CostEstimate costEstimate, class Azure.Quantum.Jobs.Models.ErrorData errorData, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.JobDetails(System.String,System.String,System.String,System.String,System.String,System.Object,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Azure.Quantum.Jobs.Models.JobStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.Quantum.Jobs.Models.CostEstimate,Azure.Quantum.Jobs.Models.ErrorData,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JobDetails (Optional id As String = Nothing, Optional name As String = Nothing, Optional containerUri As String = Nothing, Optional inputDataUri As String = Nothing, Optional inputDataFormat As String = Nothing, Optional inputParams As Object = Nothing, Optional providerId As String = Nothing, Optional target As String = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional outputDataUri As String = Nothing, Optional outputDataFormat As String = Nothing, Optional status As Nullable(Of JobStatus) = Nothing, Optional creationTime As Nullable(Of DateTimeOffset) = Nothing, Optional beginExecutionTime As Nullable(Of DateTimeOffset) = Nothing, Optional endExecutionTime As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationTime As Nullable(Of DateTimeOffset) = Nothing, Optional costEstimate As CostEstimate = Nothing, Optional errorData As ErrorData = Nothing, Optional tags As IEnumerable(Of String) = Nothing) As JobDetails" />
      <MemberSignature Language="F#" Value="static member JobDetails : string * string * string * string * string * obj * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Nullable&lt;Azure.Quantum.Jobs.Models.JobStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.Quantum.Jobs.Models.CostEstimate * Azure.Quantum.Jobs.Models.ErrorData * seq&lt;string&gt; -&gt; Azure.Quantum.Jobs.Models.JobDetails" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.JobDetails (id, name, containerUri, inputDataUri, inputDataFormat, inputParams, providerId, target, metadata, outputDataUri, outputDataFormat, status, creationTime, beginExecutionTime, endExecutionTime, cancellationTime, costEstimate, errorData, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.JobDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="containerUri" Type="System.String" />
        <Parameter Name="inputDataUri" Type="System.String" />
        <Parameter Name="inputDataFormat" Type="System.String" />
        <Parameter Name="inputParams" Type="System.Object" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="outputDataUri" Type="System.String" />
        <Parameter Name="outputDataFormat" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.Quantum.Jobs.Models.JobStatus&gt;" />
        <Parameter Name="creationTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="beginExecutionTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endExecutionTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="costEstimate" Type="Azure.Quantum.Jobs.Models.CostEstimate" />
        <Parameter Name="errorData" Type="Azure.Quantum.Jobs.Models.ErrorData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The job id. </param>
        <param name="name"> The job name. Is not required for the name to be unique and it's only used for display purposes. </param>
        <param name="containerUri"> The blob container SAS uri, the container is used to host job data. </param>
        <param name="inputDataUri"> The input blob SAS uri, if specified, it will override the default input blob in the container. </param>
        <param name="inputDataFormat"> The format of the input data. </param>
        <param name="inputParams"> The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data. </param>
        <param name="providerId"> The unique identifier for the provider. </param>
        <param name="target"> The target identifier to run the job. </param>
        <param name="metadata"> The job metadata. Metadata provides client the ability to store client-specific information. </param>
        <param name="outputDataUri"> The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob. </param>
        <param name="outputDataFormat"> The format of the output data. </param>
        <param name="status"> The job status. </param>
        <param name="creationTime"> The creation time of the job. </param>
        <param name="beginExecutionTime"> The time when the job began execution. </param>
        <param name="endExecutionTime"> The time when the job finished execution. </param>
        <param name="cancellationTime"> The time when a job was successfully cancelled. </param>
        <param name="costEstimate"> The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates. </param>
        <param name="errorData"> The error data for the job. This is expected only when Status 'Failed'. </param>
        <param name="tags"> List of user-supplied tags associated with the job. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.JobDetails" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.JobDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderStatus">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.ProviderStatus ProviderStatus (string id = default, Azure.Quantum.Jobs.Models.ProviderAvailability? currentAvailability = default, System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.TargetStatus&gt; targets = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.ProviderStatus ProviderStatus(string id, valuetype System.Nullable`1&lt;valuetype Azure.Quantum.Jobs.Models.ProviderAvailability&gt; currentAvailability, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Quantum.Jobs.Models.TargetStatus&gt; targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.ProviderStatus(System.String,System.Nullable{Azure.Quantum.Jobs.Models.ProviderAvailability},System.Collections.Generic.IEnumerable{Azure.Quantum.Jobs.Models.TargetStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProviderStatus (Optional id As String = Nothing, Optional currentAvailability As Nullable(Of ProviderAvailability) = Nothing, Optional targets As IEnumerable(Of TargetStatus) = Nothing) As ProviderStatus" />
      <MemberSignature Language="F#" Value="static member ProviderStatus : string * Nullable&lt;Azure.Quantum.Jobs.Models.ProviderAvailability&gt; * seq&lt;Azure.Quantum.Jobs.Models.TargetStatus&gt; -&gt; Azure.Quantum.Jobs.Models.ProviderStatus" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.ProviderStatus (id, currentAvailability, targets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.ProviderStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="currentAvailability" Type="System.Nullable&lt;Azure.Quantum.Jobs.Models.ProviderAvailability&gt;" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.TargetStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Provider id. </param>
        <param name="currentAvailability"> Provider availability. </param>
        <param name="targets" />
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.ProviderStatus" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.ProviderStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuantumJobQuota">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.QuantumJobQuota QuantumJobQuota (string dimension = default, Azure.Quantum.Jobs.Models.DimensionScope? scope = default, string providerId = default, float? utilization = default, float? holds = default, float? limit = default, Azure.Quantum.Jobs.Models.MeterPeriod? period = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.QuantumJobQuota QuantumJobQuota(string dimension, valuetype System.Nullable`1&lt;valuetype Azure.Quantum.Jobs.Models.DimensionScope&gt; scope, string providerId, valuetype System.Nullable`1&lt;float32&gt; utilization, valuetype System.Nullable`1&lt;float32&gt; holds, valuetype System.Nullable`1&lt;float32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.Quantum.Jobs.Models.MeterPeriod&gt; period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.QuantumJobQuota(System.String,System.Nullable{Azure.Quantum.Jobs.Models.DimensionScope},System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{Azure.Quantum.Jobs.Models.MeterPeriod})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuantumJobQuota (Optional dimension As String = Nothing, Optional scope As Nullable(Of DimensionScope) = Nothing, Optional providerId As String = Nothing, Optional utilization As Nullable(Of Single) = Nothing, Optional holds As Nullable(Of Single) = Nothing, Optional limit As Nullable(Of Single) = Nothing, Optional period As Nullable(Of MeterPeriod) = Nothing) As QuantumJobQuota" />
      <MemberSignature Language="F#" Value="static member QuantumJobQuota : string * Nullable&lt;Azure.Quantum.Jobs.Models.DimensionScope&gt; * string * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;Azure.Quantum.Jobs.Models.MeterPeriod&gt; -&gt; Azure.Quantum.Jobs.Models.QuantumJobQuota" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.QuantumJobQuota (dimension, scope, providerId, utilization, holds, limit, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.QuantumJobQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.String" />
        <Parameter Name="scope" Type="System.Nullable&lt;Azure.Quantum.Jobs.Models.DimensionScope&gt;" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="utilization" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="holds" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="period" Type="System.Nullable&lt;Azure.Quantum.Jobs.Models.MeterPeriod&gt;" />
      </Parameters>
      <Docs>
        <param name="dimension"> The name of the dimension associated with the quota. </param>
        <param name="scope"> The scope at which the quota is applied. </param>
        <param name="providerId"> The unique identifier for the provider. </param>
        <param name="utilization"> The amount of the usage that has been applied for the current period. </param>
        <param name="holds"> The amount of the usage that has been reserved but not applied for the current period. </param>
        <param name="limit"> The maximum amount of usage allowed for the current period. </param>
        <param name="period"> The time period in which the quota's underlying meter is accumulated. Based on calendar year. 'None' is used for concurrent quotas. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.QuantumJobQuota" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.QuantumJobQuota" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuantumJobQuotaList">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.QuantumJobQuotaList QuantumJobQuotaList (System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; value = default, string nextLink = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.QuantumJobQuotaList QuantumJobQuotaList(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; value, string nextLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.QuantumJobQuotaList(System.Collections.Generic.IEnumerable{Azure.Quantum.Jobs.Models.QuantumJobQuota},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuantumJobQuotaList (Optional value As IEnumerable(Of QuantumJobQuota) = Nothing, Optional nextLink As String = Nothing) As QuantumJobQuotaList" />
      <MemberSignature Language="F#" Value="static member QuantumJobQuotaList : seq&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; * string -&gt; Azure.Quantum.Jobs.Models.QuantumJobQuotaList" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.QuantumJobQuotaList (value, nextLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.QuantumJobQuotaList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;" />
        <Parameter Name="nextLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value" />
        <param name="nextLink"> Link to the next page of results. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.QuantumJobQuotaList" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.QuantumJobQuotaList" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SasUriResponse">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.SasUriResponse SasUriResponse (string sasUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.SasUriResponse SasUriResponse(string sasUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.SasUriResponse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SasUriResponse (Optional sasUri As String = Nothing) As SasUriResponse" />
      <MemberSignature Language="F#" Value="static member SasUriResponse : string -&gt; Azure.Quantum.Jobs.Models.SasUriResponse" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.SasUriResponse sasUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.SasUriResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sasUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sasUri"> A URL with a SAS token to upload a blob for execution in the given workspace. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.SasUriResponse" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.SasUriResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetStatus">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.TargetStatus TargetStatus (string id = default, Azure.Quantum.Jobs.Models.TargetAvailability? currentAvailability = default, long? averageQueueTime = default, string statusPage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.TargetStatus TargetStatus(string id, valuetype System.Nullable`1&lt;valuetype Azure.Quantum.Jobs.Models.TargetAvailability&gt; currentAvailability, valuetype System.Nullable`1&lt;int64&gt; averageQueueTime, string statusPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.TargetStatus(System.String,System.Nullable{Azure.Quantum.Jobs.Models.TargetAvailability},System.Nullable{System.Int64},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetStatus (Optional id As String = Nothing, Optional currentAvailability As Nullable(Of TargetAvailability) = Nothing, Optional averageQueueTime As Nullable(Of Long) = Nothing, Optional statusPage As String = Nothing) As TargetStatus" />
      <MemberSignature Language="F#" Value="static member TargetStatus : string * Nullable&lt;Azure.Quantum.Jobs.Models.TargetAvailability&gt; * Nullable&lt;int64&gt; * string -&gt; Azure.Quantum.Jobs.Models.TargetStatus" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.TargetStatus (id, currentAvailability, averageQueueTime, statusPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.TargetStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="currentAvailability" Type="System.Nullable&lt;Azure.Quantum.Jobs.Models.TargetAvailability&gt;" />
        <Parameter Name="averageQueueTime" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="statusPage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Target id. </param>
        <param name="currentAvailability"> Target availability. </param>
        <param name="averageQueueTime"> Average queue time in seconds. </param>
        <param name="statusPage"> A page with detailed status of the provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.TargetStatus" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.TargetStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsageEvent">
      <MemberSignature Language="C#" Value="public static Azure.Quantum.Jobs.Models.UsageEvent UsageEvent (string dimensionId = default, string dimensionName = default, string measureUnit = default, float? amountBilled = default, float? amountConsumed = default, float? unitPrice = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Quantum.Jobs.Models.UsageEvent UsageEvent(string dimensionId, string dimensionName, string measureUnit, valuetype System.Nullable`1&lt;float32&gt; amountBilled, valuetype System.Nullable`1&lt;float32&gt; amountConsumed, valuetype System.Nullable`1&lt;float32&gt; unitPrice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.UsageEvent(System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UsageEvent (Optional dimensionId As String = Nothing, Optional dimensionName As String = Nothing, Optional measureUnit As String = Nothing, Optional amountBilled As Nullable(Of Single) = Nothing, Optional amountConsumed As Nullable(Of Single) = Nothing, Optional unitPrice As Nullable(Of Single) = Nothing) As UsageEvent" />
      <MemberSignature Language="F#" Value="static member UsageEvent : string * string * string * Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; -&gt; Azure.Quantum.Jobs.Models.UsageEvent" Usage="Azure.Quantum.Jobs.Models.QuantumJobsModelFactory.UsageEvent (dimensionId, dimensionName, measureUnit, amountBilled, amountConsumed, unitPrice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Quantum.Jobs.Models.UsageEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimensionId" Type="System.String" />
        <Parameter Name="dimensionName" Type="System.String" />
        <Parameter Name="measureUnit" Type="System.String" />
        <Parameter Name="amountBilled" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="amountConsumed" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="unitPrice" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="dimensionId"> The dimension id. </param>
        <param name="dimensionName"> The dimension name. </param>
        <param name="measureUnit"> The unit of measure. </param>
        <param name="amountBilled"> The amount billed. </param>
        <param name="amountConsumed"> The amount consumed. </param>
        <param name="unitPrice"> The unit price. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Quantum.Jobs.Models.UsageEvent" />. </summary>
        <returns> A new <see cref="T:Azure.Quantum.Jobs.Models.UsageEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
