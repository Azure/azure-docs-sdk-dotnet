<Type Name="MockableLabServicesArmClient" FullName="Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient">
  <TypeSignature Language="C#" Value="public class MockableLabServicesArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableLabServicesArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableLabServicesArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableLabServicesArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableLabServicesArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabPlanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabPlanResource GetLabPlanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabPlanResource GetLabPlanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabPlanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabPlanResource (id As ResourceIdentifier) As LabPlanResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabPlanResource&#xA;override this.GetLabPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabPlanResource" Usage="mockableLabServicesArmClient.GetLabPlanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabPlanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabResource GetLabResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabResource GetLabResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabResource (id As ResourceIdentifier) As LabResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabResource&#xA;override this.GetLabResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabResource" Usage="mockableLabServicesArmClient.GetLabResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabServicesScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabServicesScheduleResource GetLabServicesScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabServicesScheduleResource GetLabServicesScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabServicesScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabServicesScheduleResource (id As ResourceIdentifier) As LabServicesScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabServicesScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabServicesScheduleResource&#xA;override this.GetLabServicesScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabServicesScheduleResource" Usage="mockableLabServicesArmClient.GetLabServicesScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabServicesScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabServicesScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabServicesScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabServicesScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabServicesScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabUserResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabUserResource GetLabUserResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabUserResource GetLabUserResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabUserResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabUserResource (id As ResourceIdentifier) As LabUserResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabUserResource&#xA;override this.GetLabUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabUserResource" Usage="mockableLabServicesArmClient.GetLabUserResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabUserResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabUserResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabUserResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabVirtualMachineImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabVirtualMachineImageResource GetLabVirtualMachineImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabVirtualMachineImageResource GetLabVirtualMachineImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabVirtualMachineImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabVirtualMachineImageResource (id As ResourceIdentifier) As LabVirtualMachineImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabVirtualMachineImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabVirtualMachineImageResource&#xA;override this.GetLabVirtualMachineImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabVirtualMachineImageResource" Usage="mockableLabServicesArmClient.GetLabVirtualMachineImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabVirtualMachineImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabVirtualMachineImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabVirtualMachineResource GetLabVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabVirtualMachineResource GetLabVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesArmClient.GetLabVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabVirtualMachineResource (id As ResourceIdentifier) As LabVirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetLabVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabVirtualMachineResource&#xA;override this.GetLabVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LabServices.LabVirtualMachineResource" Usage="mockableLabServicesArmClient.GetLabVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LabServices.LabVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LabServices.LabVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
