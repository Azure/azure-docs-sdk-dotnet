<Type Name="MockableLabServicesResourceGroupResource" FullName="Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableLabServicesResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableLabServicesResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableLabServicesResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableLabServicesResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableLabServicesResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLab">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt; GetLab (string labName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.LabServices.LabResource&gt; GetLab(string labName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLab(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLab (labName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LabResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLab : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;&#xA;override this.GetLab : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;" Usage="mockableLabServicesResourceGroupResource.GetLab (labName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labName"> The name of the lab that uniquely identifies it within containing lab plan. Used in resource URIs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the properties of a lab resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LabServices.LabResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="labName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;&gt; GetLabAsync (string labName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LabServices.LabResource&gt;&gt; GetLabAsync(string labName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLabAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabAsync (labName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LabResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLabAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;&gt;&#xA;override this.GetLabAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;&gt;" Usage="mockableLabServicesResourceGroupResource.GetLabAsync (labName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labName"> The name of the lab that uniquely identifies it within containing lab plan. Used in resource URIs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the properties of a lab resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LabServices.LabResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="labName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabPlan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt; GetLabPlan (string labPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.LabServices.LabPlanResource&gt; GetLabPlan(string labPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLabPlan(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabPlan (labPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LabPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLabPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;&#xA;override this.GetLabPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;" Usage="mockableLabServicesResourceGroupResource.GetLabPlan (labPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labPlanName"> The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of a Lab Plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}</description></item><item><term>Operation Id</term><description>LabPlans_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LabServices.LabPlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labPlanName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="labPlanName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabPlanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;&gt; GetLabPlanAsync (string labPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LabServices.LabPlanResource&gt;&gt; GetLabPlanAsync(string labPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLabPlanAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabPlanAsync (labPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LabPlanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLabPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;&gt;&#xA;override this.GetLabPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;&gt;" Usage="mockableLabServicesResourceGroupResource.GetLabPlanAsync (labPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LabServices.LabPlanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labPlanName"> The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of a Lab Plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}</description></item><item><term>Operation Id</term><description>LabPlans_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LabServices.LabPlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labPlanName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="labPlanName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabPlanCollection GetLabPlans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabPlanCollection GetLabPlans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLabPlans" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabPlans () As LabPlanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLabPlans : unit -&gt; Azure.ResourceManager.LabServices.LabPlanCollection&#xA;override this.GetLabPlans : unit -&gt; Azure.ResourceManager.LabServices.LabPlanCollection" Usage="mockableLabServicesResourceGroupResource.GetLabPlans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LabPlanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LabPlanResources and their operations over a LabPlanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LabServices.LabCollection GetLabs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LabServices.LabCollection GetLabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LabServices.Mocking.MockableLabServicesResourceGroupResource.GetLabs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabs () As LabCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLabs : unit -&gt; Azure.ResourceManager.LabServices.LabCollection&#xA;override this.GetLabs : unit -&gt; Azure.ResourceManager.LabServices.LabCollection" Usage="mockableLabServicesResourceGroupResource.GetLabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LabServices</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LabServices.LabCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LabResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LabResources and their operations over a LabResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
