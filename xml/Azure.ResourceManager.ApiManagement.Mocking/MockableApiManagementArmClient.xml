<Type Name="MockableApiManagementArmClient" FullName="Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient">
  <TypeSignature Language="C#" Value="public class MockableApiManagementArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableApiManagementArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableApiManagementArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableApiManagementArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableApiManagementArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiDiagnosticResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiDiagnosticResource GetApiDiagnosticResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiDiagnosticResource GetApiDiagnosticResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiDiagnosticResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiDiagnosticResource (id As ResourceIdentifier) As ApiDiagnosticResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&#xA;override this.GetApiDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" Usage="mockableApiManagementArmClient.GetApiDiagnosticResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiDiagnosticResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssueAttachmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource GetApiIssueAttachmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource GetApiIssueAttachmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiIssueAttachmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssueAttachmentResource (id As ResourceIdentifier) As ApiIssueAttachmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssueAttachmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource&#xA;override this.GetApiIssueAttachmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource" Usage="mockableApiManagementArmClient.GetApiIssueAttachmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueAttachmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssueCommentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiIssueCommentResource GetApiIssueCommentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiIssueCommentResource GetApiIssueCommentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiIssueCommentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssueCommentResource (id As ResourceIdentifier) As ApiIssueCommentResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssueCommentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueCommentResource&#xA;override this.GetApiIssueCommentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueCommentResource" Usage="mockableApiManagementArmClient.GetApiIssueCommentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiIssueCommentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueCommentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiIssueCommentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueCommentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueCommentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssueResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiIssueResource GetApiIssueResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiIssueResource GetApiIssueResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiIssueResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssueResource (id As ResourceIdentifier) As ApiIssueResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueResource&#xA;override this.GetApiIssueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiIssueResource" Usage="mockableApiManagementArmClient.GetApiIssueResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiIssueResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiIssueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementAuthorizationServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource GetApiManagementAuthorizationServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource GetApiManagementAuthorizationServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementAuthorizationServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementAuthorizationServerResource (id As ResourceIdentifier) As ApiManagementAuthorizationServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementAuthorizationServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&#xA;override this.GetApiManagementAuthorizationServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource" Usage="mockableApiManagementArmClient.GetApiManagementAuthorizationServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementBackendResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementBackendResource GetApiManagementBackendResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementBackendResource GetApiManagementBackendResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementBackendResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementBackendResource (id As ResourceIdentifier) As ApiManagementBackendResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementBackendResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&#xA;override this.GetApiManagementBackendResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementBackendResource" Usage="mockableApiManagementArmClient.GetApiManagementBackendResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementBackendResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementBackendResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementBackendResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementBackendResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementBackendResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCacheResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementCacheResource GetApiManagementCacheResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementCacheResource GetApiManagementCacheResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementCacheResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCacheResource (id As ResourceIdentifier) As ApiManagementCacheResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCacheResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&#xA;override this.GetApiManagementCacheResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCacheResource" Usage="mockableApiManagementArmClient.GetApiManagementCacheResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementCacheResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCacheResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementCacheResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCacheResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCacheResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource GetApiManagementCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource GetApiManagementCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCertificateResource (id As ResourceIdentifier) As ApiManagementCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&#xA;override this.GetApiManagementCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource" Usage="mockableApiManagementArmClient.GetApiManagementCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementDeletedServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource GetApiManagementDeletedServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource GetApiManagementDeletedServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementDeletedServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementDeletedServiceResource (id As ResourceIdentifier) As ApiManagementDeletedServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementDeletedServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource&#xA;override this.GetApiManagementDeletedServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource" Usage="mockableApiManagementArmClient.GetApiManagementDeletedServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDeletedServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementDiagnosticResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource GetApiManagementDiagnosticResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource GetApiManagementDiagnosticResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementDiagnosticResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementDiagnosticResource (id As ResourceIdentifier) As ApiManagementDiagnosticResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&#xA;override this.GetApiManagementDiagnosticResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource" Usage="mockableApiManagementArmClient.GetApiManagementDiagnosticResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementEmailTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource GetApiManagementEmailTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource GetApiManagementEmailTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementEmailTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementEmailTemplateResource (id As ResourceIdentifier) As ApiManagementEmailTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementEmailTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&#xA;override this.GetApiManagementEmailTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource" Usage="mockableApiManagementArmClient.GetApiManagementEmailTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.TemplateName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayCertificateAuthorityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource GetApiManagementGatewayCertificateAuthorityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource GetApiManagementGatewayCertificateAuthorityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementGatewayCertificateAuthorityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayCertificateAuthorityResource (id As ResourceIdentifier) As ApiManagementGatewayCertificateAuthorityResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayCertificateAuthorityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&#xA;override this.GetApiManagementGatewayCertificateAuthorityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource" Usage="mockableApiManagementArmClient.GetApiManagementGatewayCertificateAuthorityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayHostnameConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource GetApiManagementGatewayHostnameConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource GetApiManagementGatewayHostnameConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementGatewayHostnameConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayHostnameConfigurationResource (id As ResourceIdentifier) As ApiManagementGatewayHostnameConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayHostnameConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&#xA;override this.GetApiManagementGatewayHostnameConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource" Usage="mockableApiManagementArmClient.GetApiManagementGatewayHostnameConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource GetApiManagementGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource GetApiManagementGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayResource (id As ResourceIdentifier) As ApiManagementGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&#xA;override this.GetApiManagementGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" Usage="mockableApiManagementArmClient.GetApiManagementGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGlobalSchemaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource GetApiManagementGlobalSchemaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource GetApiManagementGlobalSchemaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementGlobalSchemaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGlobalSchemaResource (id As ResourceIdentifier) As ApiManagementGlobalSchemaResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGlobalSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&#xA;override this.GetApiManagementGlobalSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource" Usage="mockableApiManagementArmClient.GetApiManagementGlobalSchemaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGroupResource GetApiManagementGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGroupResource GetApiManagementGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGroupResource (id As ResourceIdentifier) As ApiManagementGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&#xA;override this.GetApiManagementGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGroupResource" Usage="mockableApiManagementArmClient.GetApiManagementGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIdentityProviderResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource GetApiManagementIdentityProviderResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource GetApiManagementIdentityProviderResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementIdentityProviderResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIdentityProviderResource (id As ResourceIdentifier) As ApiManagementIdentityProviderResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIdentityProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&#xA;override this.GetApiManagementIdentityProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource" Usage="mockableApiManagementArmClient.GetApiManagementIdentityProviderResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.IdentityProviderType)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIssueResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementIssueResource GetApiManagementIssueResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementIssueResource GetApiManagementIssueResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementIssueResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIssueResource (id As ResourceIdentifier) As ApiManagementIssueResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIssueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&#xA;override this.GetApiManagementIssueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIssueResource" Usage="mockableApiManagementArmClient.GetApiManagementIssueResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementIssueResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIssueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementIssueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIssueResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementIssueResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementLoggerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource GetApiManagementLoggerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource GetApiManagementLoggerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementLoggerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementLoggerResource (id As ResourceIdentifier) As ApiManagementLoggerResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementLoggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&#xA;override this.GetApiManagementLoggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource" Usage="mockableApiManagementArmClient.GetApiManagementLoggerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNamedValueResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource GetApiManagementNamedValueResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource GetApiManagementNamedValueResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementNamedValueResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNamedValueResource (id As ResourceIdentifier) As ApiManagementNamedValueResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNamedValueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&#xA;override this.GetApiManagementNamedValueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource" Usage="mockableApiManagementArmClient.GetApiManagementNamedValueResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNotificationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource GetApiManagementNotificationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource GetApiManagementNotificationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementNotificationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNotificationResource (id As ResourceIdentifier) As ApiManagementNotificationResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNotificationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&#xA;override this.GetApiManagementNotificationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource" Usage="mockableApiManagementArmClient.GetApiManagementNotificationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.NotificationName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementOpenIdConnectProviderResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource GetApiManagementOpenIdConnectProviderResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource GetApiManagementOpenIdConnectProviderResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementOpenIdConnectProviderResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementOpenIdConnectProviderResource (id As ResourceIdentifier) As ApiManagementOpenIdConnectProviderResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementOpenIdConnectProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&#xA;override this.GetApiManagementOpenIdConnectProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource" Usage="mockableApiManagementArmClient.GetApiManagementOpenIdConnectProviderResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource GetApiManagementPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource GetApiManagementPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPolicyResource (id As ResourceIdentifier) As ApiManagementPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&#xA;override this.GetApiManagementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource" Usage="mockableApiManagementArmClient.GetApiManagementPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.PolicyName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalDelegationSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource GetApiManagementPortalDelegationSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource GetApiManagementPortalDelegationSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPortalDelegationSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalDelegationSettingResource (id As ResourceIdentifier) As ApiManagementPortalDelegationSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalDelegationSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource&#xA;override this.GetApiManagementPortalDelegationSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" Usage="mockableApiManagementArmClient.GetApiManagementPortalDelegationSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalRevisionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource GetApiManagementPortalRevisionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource GetApiManagementPortalRevisionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPortalRevisionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalRevisionResource (id As ResourceIdentifier) As ApiManagementPortalRevisionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&#xA;override this.GetApiManagementPortalRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource" Usage="mockableApiManagementArmClient.GetApiManagementPortalRevisionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalSignInSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource GetApiManagementPortalSignInSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource GetApiManagementPortalSignInSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPortalSignInSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalSignInSettingResource (id As ResourceIdentifier) As ApiManagementPortalSignInSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalSignInSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource&#xA;override this.GetApiManagementPortalSignInSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" Usage="mockableApiManagementArmClient.GetApiManagementPortalSignInSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalSignUpSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource GetApiManagementPortalSignUpSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource GetApiManagementPortalSignUpSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPortalSignUpSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalSignUpSettingResource (id As ResourceIdentifier) As ApiManagementPortalSignUpSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalSignUpSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource&#xA;override this.GetApiManagementPortalSignUpSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" Usage="mockableApiManagementArmClient.GetApiManagementPortalSignUpSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource GetApiManagementPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource GetApiManagementPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateEndpointConnectionResource (id As ResourceIdentifier) As ApiManagementPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&#xA;override this.GetApiManagementPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource" Usage="mockableApiManagementArmClient.GetApiManagementPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource GetApiManagementPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource GetApiManagementPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateLinkResource (id As ResourceIdentifier) As ApiManagementPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&#xA;override this.GetApiManagementPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource" Usage="mockableApiManagementArmClient.GetApiManagementPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProductPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource GetApiManagementProductPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource GetApiManagementProductPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementProductPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProductPolicyResource (id As ResourceIdentifier) As ApiManagementProductPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProductPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource&#xA;override this.GetApiManagementProductPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource" Usage="mockableApiManagementArmClient.GetApiManagementProductPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.PolicyName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProductResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementProductResource GetApiManagementProductResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementProductResource GetApiManagementProductResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementProductResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProductResource (id As ResourceIdentifier) As ApiManagementProductResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProductResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductResource&#xA;override this.GetApiManagementProductResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductResource" Usage="mockableApiManagementArmClient.GetApiManagementProductResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementProductResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementProductResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProductTagResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource GetApiManagementProductTagResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource GetApiManagementProductTagResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementProductTagResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProductTagResource (id As ResourceIdentifier) As ApiManagementProductTagResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProductTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource&#xA;override this.GetApiManagementProductTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource" Usage="mockableApiManagementArmClient.GetApiManagementProductTagResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductTagResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementServiceResource GetApiManagementServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource GetApiManagementServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementServiceResource (id As ResourceIdentifier) As ApiManagementServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&#xA;override this.GetApiManagementServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" Usage="mockableApiManagementArmClient.GetApiManagementServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementSubscriptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource GetApiManagementSubscriptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource GetApiManagementSubscriptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementSubscriptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementSubscriptionResource (id As ResourceIdentifier) As ApiManagementSubscriptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&#xA;override this.GetApiManagementSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource" Usage="mockableApiManagementArmClient.GetApiManagementSubscriptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTagResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementTagResource GetApiManagementTagResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementTagResource GetApiManagementTagResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementTagResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTagResource (id As ResourceIdentifier) As ApiManagementTagResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTagResource&#xA;override this.GetApiManagementTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTagResource" Usage="mockableApiManagementArmClient.GetApiManagementTagResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementTagResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTagResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementTagResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTagResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTagResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTenantSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource GetApiManagementTenantSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource GetApiManagementTenantSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementTenantSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTenantSettingResource (id As ResourceIdentifier) As ApiManagementTenantSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTenantSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&#xA;override this.GetApiManagementTenantSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource" Usage="mockableApiManagementArmClient.GetApiManagementTenantSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.SettingsType)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementUserResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementUserResource GetApiManagementUserResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementUserResource GetApiManagementUserResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementUserResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementUserResource (id As ResourceIdentifier) As ApiManagementUserResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserResource&#xA;override this.GetApiManagementUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserResource" Usage="mockableApiManagementArmClient.GetApiManagementUserResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementUserResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementUserSubscriptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource GetApiManagementUserSubscriptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource GetApiManagementUserSubscriptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiManagementUserSubscriptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementUserSubscriptionResource (id As ResourceIdentifier) As ApiManagementUserSubscriptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementUserSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource&#xA;override this.GetApiManagementUserSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource" Usage="mockableApiManagementArmClient.GetApiManagementUserSubscriptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementUserSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperationPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource GetApiOperationPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource GetApiOperationPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiOperationPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperationPolicyResource (id As ResourceIdentifier) As ApiOperationPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperationPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource&#xA;override this.GetApiOperationPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource" Usage="mockableApiManagementArmClient.GetApiOperationPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.PolicyName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiOperationResource GetApiOperationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiOperationResource GetApiOperationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiOperationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperationResource (id As ResourceIdentifier) As ApiOperationResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationResource&#xA;override this.GetApiOperationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationResource" Usage="mockableApiManagementArmClient.GetApiOperationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiOperationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiOperationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperationTagResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiOperationTagResource GetApiOperationTagResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiOperationTagResource GetApiOperationTagResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiOperationTagResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperationTagResource (id As ResourceIdentifier) As ApiOperationTagResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperationTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationTagResource&#xA;override this.GetApiOperationTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiOperationTagResource" Usage="mockableApiManagementArmClient.GetApiOperationTagResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiOperationTagResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationTagResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiOperationTagResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationTagResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationTagResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiPolicyResource GetApiPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiPolicyResource GetApiPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiPolicyResource (id As ResourceIdentifier) As ApiPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiPolicyResource&#xA;override this.GetApiPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiPolicyResource" Usage="mockableApiManagementArmClient.GetApiPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.PolicyName)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiReleaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiReleaseResource GetApiReleaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiReleaseResource GetApiReleaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiReleaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiReleaseResource (id As ResourceIdentifier) As ApiReleaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiReleaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiReleaseResource&#xA;override this.GetApiReleaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiReleaseResource" Usage="mockableApiManagementArmClient.GetApiReleaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiReleaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiReleaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiReleaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiReleaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiReleaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiResource GetApiResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiResource GetApiResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiResource (id As ResourceIdentifier) As ApiResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiResource&#xA;override this.GetApiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiResource" Usage="mockableApiManagementArmClient.GetApiResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiSchemaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiSchemaResource GetApiSchemaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiSchemaResource GetApiSchemaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiSchemaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiSchemaResource (id As ResourceIdentifier) As ApiSchemaResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiSchemaResource&#xA;override this.GetApiSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiSchemaResource" Usage="mockableApiManagementArmClient.GetApiSchemaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagDescriptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource GetApiTagDescriptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource GetApiTagDescriptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiTagDescriptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagDescriptionResource (id As ResourceIdentifier) As ApiTagDescriptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagDescriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&#xA;override this.GetApiTagDescriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" Usage="mockableApiManagementArmClient.GetApiTagDescriptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiTagResource GetApiTagResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiTagResource GetApiTagResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiTagResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagResource (id As ResourceIdentifier) As ApiTagResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiTagResource&#xA;override this.GetApiTagResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiTagResource" Usage="mockableApiManagementArmClient.GetApiTagResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiTagResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiTagResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiTagResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiVersionSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiVersionSetResource GetApiVersionSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiVersionSetResource GetApiVersionSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetApiVersionSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiVersionSetResource (id As ResourceIdentifier) As ApiVersionSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiVersionSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiVersionSetResource&#xA;override this.GetApiVersionSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ApiVersionSetResource" Usage="mockableApiManagementArmClient.GetApiVersionSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiVersionSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.ApiVersionSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ApiVersionSetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.ApiVersionSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiVersionSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationAccessPolicyContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource GetAuthorizationAccessPolicyContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource GetAuthorizationAccessPolicyContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetAuthorizationAccessPolicyContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationAccessPolicyContractResource (id As ResourceIdentifier) As AuthorizationAccessPolicyContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationAccessPolicyContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource&#xA;override this.GetAuthorizationAccessPolicyContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource" Usage="mockableApiManagementArmClient.GetAuthorizationAccessPolicyContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationAccessPolicyContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.AuthorizationContractResource GetAuthorizationContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.AuthorizationContractResource GetAuthorizationContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetAuthorizationContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationContractResource (id As ResourceIdentifier) As AuthorizationContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationContractResource&#xA;override this.GetAuthorizationContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationContractResource" Usage="mockableApiManagementArmClient.GetAuthorizationContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.AuthorizationContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.AuthorizationContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationProviderContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource GetAuthorizationProviderContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource GetAuthorizationProviderContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetAuthorizationProviderContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAuthorizationProviderContractResource (id As ResourceIdentifier) As AuthorizationProviderContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationProviderContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource&#xA;override this.GetAuthorizationProviderContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource" Usage="mockableApiManagementArmClient.GetAuthorizationProviderContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.AuthorizationProviderContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentationContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.DocumentationContractResource GetDocumentationContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.DocumentationContractResource GetDocumentationContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetDocumentationContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentationContractResource (id As ResourceIdentifier) As DocumentationContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentationContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.DocumentationContractResource&#xA;override this.GetDocumentationContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.DocumentationContractResource" Usage="mockableApiManagementArmClient.GetDocumentationContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.DocumentationContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.DocumentationContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.DocumentationContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.DocumentationContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.DocumentationContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyFragmentContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource GetPolicyFragmentContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource GetPolicyFragmentContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetPolicyFragmentContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyFragmentContractResource (id As ResourceIdentifier) As PolicyFragmentContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyFragmentContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource&#xA;override this.GetPolicyFragmentContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource" Usage="mockableApiManagementArmClient.GetPolicyFragmentContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.PolicyFragmentContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortalConfigContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.PortalConfigContractResource GetPortalConfigContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.PortalConfigContractResource GetPortalConfigContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetPortalConfigContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPortalConfigContractResource (id As ResourceIdentifier) As PortalConfigContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetPortalConfigContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.PortalConfigContractResource&#xA;override this.GetPortalConfigContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.PortalConfigContractResource" Usage="mockableApiManagementArmClient.GetPortalConfigContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.PortalConfigContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.PortalConfigContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.PortalConfigContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.PortalConfigContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.PortalConfigContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResolverContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ResolverContractResource GetResolverContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ResolverContractResource GetResolverContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetResolverContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResolverContractResource (id As ResourceIdentifier) As ResolverContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetResolverContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ResolverContractResource&#xA;override this.GetResolverContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ResolverContractResource" Usage="mockableApiManagementArmClient.GetResolverContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ResolverContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.ResolverContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ResolverContractResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.ResolverContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ResolverContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceApiResolverPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource GetServiceApiResolverPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource GetServiceApiResolverPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetServiceApiResolverPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceApiResolverPolicyResource (id As ResourceIdentifier) As ServiceApiResolverPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceApiResolverPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource&#xA;override this.GetServiceApiResolverPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource" Usage="mockableApiManagementArmClient.GetServiceApiResolverPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.PolicyName)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiResolverPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceApiWikiResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ServiceApiWikiResource GetServiceApiWikiResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ServiceApiWikiResource GetServiceApiWikiResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetServiceApiWikiResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceApiWikiResource (id As ResourceIdentifier) As ServiceApiWikiResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceApiWikiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceApiWikiResource&#xA;override this.GetServiceApiWikiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" Usage="mockableApiManagementArmClient.GetServiceApiWikiResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ServiceApiWikiResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ServiceApiWikiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceProductWikiResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ServiceProductWikiResource GetServiceProductWikiResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ServiceProductWikiResource GetServiceProductWikiResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetServiceProductWikiResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceProductWikiResource (id As ResourceIdentifier) As ServiceProductWikiResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceProductWikiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceProductWikiResource&#xA;override this.GetServiceProductWikiResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.ServiceProductWikiResource" Usage="mockableApiManagementArmClient.GetServiceProductWikiResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ServiceProductWikiResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceProductWikiResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.ServiceProductWikiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceProductWikiResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceProductWikiResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAccessInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.TenantAccessInfoResource GetTenantAccessInfoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.TenantAccessInfoResource GetTenantAccessInfoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Mocking.MockableApiManagementArmClient.GetTenantAccessInfoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAccessInfoResource (id As ResourceIdentifier) As TenantAccessInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAccessInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&#xA;override this.GetTenantAccessInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiManagement.TenantAccessInfoResource" Usage="mockableApiManagementArmClient.GetTenantAccessInfoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.TenantAccessInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApiManagement.TenantAccessInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiManagement.TenantAccessInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.AccessName)" /> to create a <see cref="T:Azure.ResourceManager.ApiManagement.TenantAccessInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.TenantAccessInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
