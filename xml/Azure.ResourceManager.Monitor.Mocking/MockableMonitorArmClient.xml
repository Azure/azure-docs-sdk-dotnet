<Type Name="MockableMonitorArmClient" FullName="Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient">
  <TypeSignature Language="C#" Value="public class MockableMonitorArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMonitorArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMonitorArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMonitorArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMonitorArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.ActionGroupResource GetActionGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.ActionGroupResource GetActionGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetActionGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActionGroupResource (id As ResourceIdentifier) As ActionGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetActionGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActionGroupResource&#xA;override this.GetActionGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActionGroupResource" Usage="mockableMonitorArmClient.GetActionGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActionGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ActionGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.ActivityLogAlertResource GetActivityLogAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.ActivityLogAlertResource GetActivityLogAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetActivityLogAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityLogAlertResource (id As ResourceIdentifier) As ActivityLogAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetActivityLogAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActivityLogAlertResource&#xA;override this.GetActivityLogAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActivityLogAlertResource" Usage="mockableMonitorArmClient.GetActivityLogAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActivityLogAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ActivityLogAlertResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.AlertRuleResource GetAlertRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.AlertRuleResource GetAlertRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetAlertRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertRuleResource (id As ResourceIdentifier) As AlertRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetAlertRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AlertRuleResource&#xA;override this.GetAlertRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AlertRuleResource" Usage="mockableMonitorArmClient.GetAlertRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AlertRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.AlertRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.AutoscaleSettingResource GetAutoscaleSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.AutoscaleSettingResource GetAutoscaleSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetAutoscaleSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoscaleSettingResource (id As ResourceIdentifier) As AutoscaleSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutoscaleSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AutoscaleSettingResource&#xA;override this.GetAutoscaleSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AutoscaleSettingResource" Usage="mockableMonitorArmClient.GetAutoscaleSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AutoscaleSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.AutoscaleSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DataCollectionEndpointResource GetDataCollectionEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DataCollectionEndpointResource GetDataCollectionEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionEndpointResource (id As ResourceIdentifier) As DataCollectionEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionEndpointResource&#xA;override this.GetDataCollectionEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionEndpointResource" Usage="mockableMonitorArmClient.GetDataCollectionEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt; GetDataCollectionRuleAssociation (Azure.Core.ResourceIdentifier scope, string associationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt; GetDataCollectionRuleAssociation(class Azure.Core.ResourceIdentifier scope, string associationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociation(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRuleAssociation (scope As ResourceIdentifier, associationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataCollectionRuleAssociationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRuleAssociation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&#xA;override this.GetDataCollectionRuleAssociation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;" Usage="mockableMonitorArmClient.GetDataCollectionRuleAssociation (scope, associationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="associationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="associationName"> The name of the association. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified association.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}</description></item><item><term>Operation Id</term><description>DataCollectionRuleAssociations_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="associationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="associationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt; GetDataCollectionRuleAssociationAsync (Azure.Core.ResourceIdentifier scope, string associationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt; GetDataCollectionRuleAssociationAsync(class Azure.Core.ResourceIdentifier scope, string associationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRuleAssociationAsync (scope As ResourceIdentifier, associationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataCollectionRuleAssociationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRuleAssociationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt;&#xA;override this.GetDataCollectionRuleAssociationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt;" Usage="mockableMonitorArmClient.GetDataCollectionRuleAssociationAsync (scope, associationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="associationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="associationName"> The name of the association. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified association.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}</description></item><item><term>Operation Id</term><description>DataCollectionRuleAssociations_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="associationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="associationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource GetDataCollectionRuleAssociationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource GetDataCollectionRuleAssociationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRuleAssociationResource (id As ResourceIdentifier) As DataCollectionRuleAssociationResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRuleAssociationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&#xA;override this.GetDataCollectionRuleAssociationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" Usage="mockableMonitorArmClient.GetDataCollectionRuleAssociationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection GetDataCollectionRuleAssociations (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection GetDataCollectionRuleAssociations(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociations(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRuleAssociations (scope As ResourceIdentifier) As DataCollectionRuleAssociationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRuleAssociations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection&#xA;override this.GetDataCollectionRuleAssociations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection" Usage="mockableMonitorArmClient.GetDataCollectionRuleAssociations scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of DataCollectionRuleAssociationResources in the ArmClient. </summary>
        <returns> An object representing collection of DataCollectionRuleAssociationResources and their operations over a DataCollectionRuleAssociationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DataCollectionRuleResource GetDataCollectionRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DataCollectionRuleResource GetDataCollectionRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRuleResource (id As ResourceIdentifier) As DataCollectionRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleResource&#xA;override this.GetDataCollectionRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleResource" Usage="mockableMonitorArmClient.GetDataCollectionRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt; GetDiagnosticSetting (Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt; GetDiagnosticSetting(class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSetting(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSetting (scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DiagnosticSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSetting : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&#xA;override this.GetDiagnosticSetting : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;" Usage="mockableMonitorArmClient.GetDiagnosticSetting (scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the active diagnostic settings for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettings_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt; GetDiagnosticSettingAsync (Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt; GetDiagnosticSettingAsync(class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingAsync (scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DiagnosticSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt;&#xA;override this.GetDiagnosticSettingAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt;" Usage="mockableMonitorArmClient.GetDiagnosticSettingAsync (scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the active diagnostic settings for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettings_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DiagnosticSettingResource GetDiagnosticSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DiagnosticSettingResource GetDiagnosticSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingResource (id As ResourceIdentifier) As DiagnosticSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingResource&#xA;override this.GetDiagnosticSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingResource" Usage="mockableMonitorArmClient.GetDiagnosticSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DiagnosticSettingResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DiagnosticSettingCollection GetDiagnosticSettings (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DiagnosticSettingCollection GetDiagnosticSettings(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettings(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettings (scope As ResourceIdentifier) As DiagnosticSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettings : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingCollection&#xA;override this.GetDiagnosticSettings : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingCollection" Usage="mockableMonitorArmClient.GetDiagnosticSettings scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of DiagnosticSettingResources in the ArmClient. </summary>
        <returns> An object representing collection of DiagnosticSettingResources and their operations over a DiagnosticSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategories">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection GetDiagnosticSettingsCategories (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection GetDiagnosticSettingsCategories(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategories(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingsCategories (scope As ResourceIdentifier) As DiagnosticSettingsCategoryCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingsCategories : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection&#xA;override this.GetDiagnosticSettingsCategories : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection" Usage="mockableMonitorArmClient.GetDiagnosticSettingsCategories scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of DiagnosticSettingsCategoryResources in the ArmClient. </summary>
        <returns> An object representing collection of DiagnosticSettingsCategoryResources and their operations over a DiagnosticSettingsCategoryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt; GetDiagnosticSettingsCategory (Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt; GetDiagnosticSettingsCategory(class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategory(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingsCategory (scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DiagnosticSettingsCategoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingsCategory : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&#xA;override this.GetDiagnosticSettingsCategory : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;" Usage="mockableMonitorArmClient.GetDiagnosticSettingsCategory (scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the diagnostic settings category for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettingsCategory_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt; GetDiagnosticSettingsCategoryAsync (Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt; GetDiagnosticSettingsCategoryAsync(class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategoryAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingsCategoryAsync (scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DiagnosticSettingsCategoryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingsCategoryAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt;&#xA;override this.GetDiagnosticSettingsCategoryAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt;" Usage="mockableMonitorArmClient.GetDiagnosticSettingsCategoryAsync (scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the diagnostic settings category for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettingsCategory_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategoryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource GetDiagnosticSettingsCategoryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource GetDiagnosticSettingsCategoryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategoryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticSettingsCategoryResource (id As ResourceIdentifier) As DiagnosticSettingsCategoryResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticSettingsCategoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&#xA;override this.GetDiagnosticSettingsCategoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" Usage="mockableMonitorArmClient.GetDiagnosticSettingsCategoryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.LogProfileResource GetLogProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.LogProfileResource GetLogProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetLogProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogProfileResource (id As ResourceIdentifier) As LogProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetLogProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.LogProfileResource&#xA;override this.GetLogProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.LogProfileResource" Usage="mockableMonitorArmClient.GetLogProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.LogProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.LogProfileResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MetricAlertResource GetMetricAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MetricAlertResource GetMetricAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMetricAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetricAlertResource (id As ResourceIdentifier) As MetricAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetMetricAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MetricAlertResource&#xA;override this.GetMetricAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MetricAlertResource" Usage="mockableMonitorArmClient.GetMetricAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MetricAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MetricAlertResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricBaselines">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselines (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselines(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricBaselines(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricBaselines (scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricBaselinesOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorSingleMetricBaseline)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricBaselines : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;&#xA;override this.GetMonitorMetricBaselines : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricBaselines (scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric baseline values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricBaselines</description></item><item><term>Operation Id</term><description>Baselines_List</description></item><item><term>Default Api Version</term><description>2019-03-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricBaselinesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselinesAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselinesAsync(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricBaselinesAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricBaselinesAsync (scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricBaselinesOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorSingleMetricBaseline)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricBaselinesAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;&#xA;override this.GetMonitorMetricBaselinesAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricBaselinesAsync (scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric baseline values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricBaselines</description></item><item><term>Operation Id</term><description>Baselines_List</description></item><item><term>Default Api Version</term><description>2019-03-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitions (Azure.Core.ResourceIdentifier scope, string metricnamespace = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitions(class Azure.Core.ResourceIdentifier scope, string metricnamespace, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricDefinitions(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricDefinitions (scope As ResourceIdentifier, Optional metricnamespace As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricDefinitions : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;&#xA;override this.GetMonitorMetricDefinitions : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricDefinitions (scope, metricnamespace, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="metricnamespace" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="metricnamespace"> Metric namespace to query metric definitions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric definitions for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricDefinitions</description></item><item><term>Operation Id</term><description>MetricDefinitions_List</description></item><item><term>Default Api Version</term><description>2018-01-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitionsAsync (Azure.Core.ResourceIdentifier scope, string metricnamespace = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitionsAsync(class Azure.Core.ResourceIdentifier scope, string metricnamespace, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricDefinitionsAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricDefinitionsAsync (scope As ResourceIdentifier, Optional metricnamespace As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricDefinitionsAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;&#xA;override this.GetMonitorMetricDefinitionsAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricDefinitionsAsync (scope, metricnamespace, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="metricnamespace" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="metricnamespace"> Metric namespace to query metric definitions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric definitions for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricDefinitions</description></item><item><term>Operation Id</term><description>MetricDefinitions_List</description></item><item><term>Default Api Version</term><description>2018-01-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespaces (Azure.Core.ResourceIdentifier scope, string startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespaces(class Azure.Core.ResourceIdentifier scope, string startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricNamespaces(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricNamespaces (scope As ResourceIdentifier, Optional startTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetricNamespace)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricNamespaces : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;&#xA;override this.GetMonitorMetricNamespaces : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricNamespaces (scope, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="startTime"> The ISO 8601 conform Date start time from which to query for metric namespaces. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric namespaces for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/microsoft.insights/metricNamespaces</description></item><item><term>Operation Id</term><description>MetricNamespaces_List</description></item><item><term>Default Api Version</term><description>2017-12-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricNamespacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespacesAsync (Azure.Core.ResourceIdentifier scope, string startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespacesAsync(class Azure.Core.ResourceIdentifier scope, string startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricNamespacesAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricNamespacesAsync (scope As ResourceIdentifier, Optional startTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetricNamespace)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricNamespacesAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;&#xA;override this.GetMonitorMetricNamespacesAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricNamespacesAsync (scope, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="startTime"> The ISO 8601 conform Date start time from which to query for metric namespaces. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric namespaces for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/microsoft.insights/metricNamespaces</description></item><item><term>Operation Id</term><description>MetricNamespaces_List</description></item><item><term>Default Api Version</term><description>2017-12-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetrics (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetrics(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetrics(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetrics (scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetrics : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;&#xA;override this.GetMonitorMetrics : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;" Usage="mockableMonitorArmClient.GetMonitorMetrics (scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_List</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetricsAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetricsAsync(class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricsAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricsAsync (scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;&#xA;override this.GetMonitorMetricsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;" Usage="mockableMonitorArmClient.GetMonitorMetricsAsync (scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_List</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource GetMonitorPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource GetMonitorPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateEndpointConnectionResource (id As ResourceIdentifier) As MonitorPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource&#xA;override this.GetMonitorPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" Usage="mockableMonitorArmClient.GetMonitorPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MonitorPrivateLinkResource GetMonitorPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MonitorPrivateLinkResource GetMonitorPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateLinkResource (id As ResourceIdentifier) As MonitorPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkResource&#xA;override this.GetMonitorPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" Usage="mockableMonitorArmClient.GetMonitorPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopedResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource GetMonitorPrivateLinkScopedResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource GetMonitorPrivateLinkScopedResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkScopedResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateLinkScopedResource (id As ResourceIdentifier) As MonitorPrivateLinkScopedResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateLinkScopedResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource&#xA;override this.GetMonitorPrivateLinkScopedResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" Usage="mockableMonitorArmClient.GetMonitorPrivateLinkScopedResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource GetMonitorPrivateLinkScopeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource GetMonitorPrivateLinkScopeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkScopeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateLinkScopeResource (id As ResourceIdentifier) As MonitorPrivateLinkScopeResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateLinkScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&#xA;override this.GetMonitorPrivateLinkScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" Usage="mockableMonitorArmClient.GetMonitorPrivateLinkScopeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.MonitorWorkspaceResource GetMonitorWorkspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.MonitorWorkspaceResource GetMonitorWorkspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorWorkspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorWorkspaceResource (id As ResourceIdentifier) As MonitorWorkspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorWorkspaceResource&#xA;override this.GetMonitorWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorWorkspaceResource" Usage="mockableMonitorArmClient.GetMonitorWorkspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.ScheduledQueryRuleResource GetScheduledQueryRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource GetScheduledQueryRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetScheduledQueryRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScheduledQueryRuleResource (id As ResourceIdentifier) As ScheduledQueryRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetScheduledQueryRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&#xA;override this.GetScheduledQueryRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" Usage="mockableMonitorArmClient.GetScheduledQueryRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ScheduledQueryRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVmInsightsOnboardingStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatus (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatus(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetVmInsightsOnboardingStatus(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVmInsightsOnboardingStatus (scope As ResourceIdentifier) As VmInsightsOnboardingStatusResource" />
      <MemberSignature Language="F#" Value="abstract member GetVmInsightsOnboardingStatus : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource&#xA;override this.GetVmInsightsOnboardingStatus : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" Usage="mockableMonitorArmClient.GetVmInsightsOnboardingStatus scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a VmInsightsOnboardingStatusResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVmInsightsOnboardingStatusResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatusResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatusResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetVmInsightsOnboardingStatusResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVmInsightsOnboardingStatusResource (id As ResourceIdentifier) As VmInsightsOnboardingStatusResource" />
      <MemberSignature Language="F#" Value="abstract member GetVmInsightsOnboardingStatusResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource&#xA;override this.GetVmInsightsOnboardingStatusResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" Usage="mockableMonitorArmClient.GetVmInsightsOnboardingStatusResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
