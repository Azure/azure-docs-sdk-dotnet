<Type Name="MockableMonitorSubscriptionResource" FullName="Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMonitorSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMonitorSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMonitorSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMonitorSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMonitorSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNotifications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications (Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.CreateNotifications(Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNotifications (waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="abstract member CreateNotifications : Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&#xA;override this.CreateNotifications : Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="mockableMonitorSubscriptionResource.CreateNotifications (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_PostTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNotificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.CreateNotificationsAsync(Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNotificationsAsync (waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="abstract member CreateNotificationsAsync : Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;&#xA;override this.CreateNotificationsAsync : Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="mockableMonitorSubscriptionResource.CreateNotificationsAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_PostTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActionGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActionGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ActionGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetActionGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;&#xA;override this.GetActionGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;" Usage="mockableMonitorSubscriptionResource.GetActionGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all action groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups</description></item><item><term>Operation Id</term><description>ActionGroups_ListBySubscriptionId</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActionGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActionGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ActionGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetActionGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;&#xA;override this.GetActionGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;" Usage="mockableMonitorSubscriptionResource.GetActionGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all action groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups</description></item><item><term>Operation Id</term><description>ActionGroups_ListBySubscriptionId</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlerts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlerts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogAlerts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityLogAlerts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ActivityLogAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityLogAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&#xA;override this.GetActivityLogAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;" Usage="mockableMonitorSubscriptionResource.GetActivityLogAlerts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Activity Log Alert rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/activityLogAlerts</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_ListBySubscriptionId</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlertsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlertsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlertsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogAlertsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityLogAlertsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ActivityLogAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityLogAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&#xA;override this.GetActivityLogAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;" Usage="mockableMonitorSubscriptionResource.GetActivityLogAlertsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Activity Log Alert rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/activityLogAlerts</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_ListBySubscriptionId</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogs (string filter, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogs(string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogs(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityLogs (filter As String, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityLogs : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;&#xA;override this.GetActivityLogs : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="mockableMonitorSubscriptionResource.GetActivityLogs (filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Reduces the set of data collected.&lt;br&gt;This argument is required and it also requires at least the start date/time.&lt;br&gt;The **$filter** argument is very restricted and allows only the following patterns.&lt;br&gt;- *List events for a resource group*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceGroupName eq 'resourceGroupName'.&lt;br&gt;- *List events for resource*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri eq 'resourceURI'.&lt;br&gt;- *List events for a subscription in a time range*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.&lt;br&gt;- *List events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq 'resourceProviderName'.&lt;br&gt;- *List events for a correlation Id*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and correlationId eq 'correlationID'.&lt;br&gt;&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the list of records from the activity logs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>ActivityLogs_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogsAsync (string filter, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogsAsync(string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetActivityLogsAsync (filter As String, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityLogsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;&#xA;override this.GetActivityLogsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="mockableMonitorSubscriptionResource.GetActivityLogsAsync (filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Reduces the set of data collected.&lt;br&gt;This argument is required and it also requires at least the start date/time.&lt;br&gt;The **$filter** argument is very restricted and allows only the following patterns.&lt;br&gt;- *List events for a resource group*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceGroupName eq 'resourceGroupName'.&lt;br&gt;- *List events for resource*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri eq 'resourceURI'.&lt;br&gt;- *List events for a subscription in a time range*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.&lt;br&gt;- *List events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq 'resourceProviderName'.&lt;br&gt;- *List events for a correlation Id*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and correlationId eq 'correlationID'.&lt;br&gt;&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the list of records from the activity logs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>ActivityLogs_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRules (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRules(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAlertRules(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertRules (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AlertRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;&#xA;override this.GetAlertRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetAlertRules cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the classic metric alert rules within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules</description></item><item><term>Operation Id</term><description>AlertRules_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRulesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRulesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAlertRulesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertRulesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AlertRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;&#xA;override this.GetAlertRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetAlertRulesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the classic metric alert rules within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules</description></item><item><term>Operation Id</term><description>AlertRules_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAutoscaleSettings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoscaleSettings (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutoscaleSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoscaleSettings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&#xA;override this.GetAutoscaleSettings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;" Usage="mockableMonitorSubscriptionResource.GetAutoscaleSettings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the autoscale settings for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings</description></item><item><term>Operation Id</term><description>AutoscaleSettings_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettingsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettingsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAutoscaleSettingsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoscaleSettingsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutoscaleSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoscaleSettingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&#xA;override this.GetAutoscaleSettingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;" Usage="mockableMonitorSubscriptionResource.GetAutoscaleSettingsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the autoscale settings for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings</description></item><item><term>Operation Id</term><description>AutoscaleSettings_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoints (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoints(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionEndpoints(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionEndpoints (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataCollectionEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&#xA;override this.GetDataCollectionEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;" Usage="mockableMonitorSubscriptionResource.GetDataCollectionEndpoints cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection endpoints in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpointsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpointsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionEndpointsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionEndpointsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataCollectionEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&#xA;override this.GetDataCollectionEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;" Usage="mockableMonitorSubscriptionResource.GetDataCollectionEndpointsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection endpoints in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRules (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRules(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionRules(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRules (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataCollectionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&#xA;override this.GetDataCollectionRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetDataCollectionRules cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection rules in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionRules</description></item><item><term>Operation Id</term><description>DataCollectionRules_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRulesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRulesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionRulesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataCollectionRulesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataCollectionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataCollectionRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&#xA;override this.GetDataCollectionRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetDataCollectionRulesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection rules in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionRules</description></item><item><term>Operation Id</term><description>DataCollectionRules_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt; GetLogProfile (string logProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.LogProfileResource&gt; GetLogProfile(string logProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogProfile (logProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LogProfileResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLogProfile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&#xA;override this.GetLogProfile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;" Usage="mockableMonitorSubscriptionResource.GetLogProfile (logProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="logProfileName"> The name of the log profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the log profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}</description></item><item><term>Operation Id</term><description>LogProfiles_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="logProfileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="logProfileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt; GetLogProfileAsync (string logProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt; GetLogProfileAsync(string logProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogProfileAsync (logProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LogProfileResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLogProfileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt;&#xA;override this.GetLogProfileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt;" Usage="mockableMonitorSubscriptionResource.GetLogProfileAsync (logProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="logProfileName"> The name of the log profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the log profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}</description></item><item><term>Operation Id</term><description>LogProfiles_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="logProfileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="logProfileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Monitor.LogProfileCollection GetLogProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Monitor.LogProfileCollection GetLogProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogProfiles () As LogProfileCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLogProfiles : unit -&gt; Azure.ResourceManager.Monitor.LogProfileCollection&#xA;override this.GetLogProfiles : unit -&gt; Azure.ResourceManager.Monitor.LogProfileCollection" Usage="mockableMonitorSubscriptionResource.GetLogProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.LogProfileCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LogProfileResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of LogProfileResources and their operations over a LogProfileResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlerts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlerts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMetricAlerts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetricAlerts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MetricAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMetricAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;&#xA;override this.GetMetricAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMetricAlerts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve alert rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts</description></item><item><term>Operation Id</term><description>MetricAlerts_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlertsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlertsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlertsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMetricAlertsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetricAlertsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MetricAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMetricAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;&#xA;override this.GetMetricAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMetricAlertsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve alert rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts</description></item><item><term>Operation Id</term><description>MetricAlerts_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetrics (Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetrics(class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetrics(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetrics (options As SubscriptionResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetrics : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;&#xA;override this.GetMonitorMetrics : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorMetrics (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScope</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsAsync (Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsAsync(class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetricsAsync(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricsAsync (options As SubscriptionResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricsAsync : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;&#xA;override this.GetMonitorMetricsAsync : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorMetricsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScope</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsWithPost">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPost (Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPost(class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetricsWithPost(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricsWithPost (options As SubscriptionResourceGetMonitorMetricsWithPostOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricsWithPost : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;&#xA;override this.GetMonitorMetricsWithPost : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorMetricsWithPost (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**. Parameters can be specified on either query params or the body.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScopePost</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsWithPostAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPostAsync (Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPostAsync(class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetricsWithPostAsync(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorMetricsWithPostAsync (options As SubscriptionResourceGetMonitorMetricsWithPostOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorMetricsWithPostAsync : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;&#xA;override this.GetMonitorMetricsWithPostAsync : Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorMetricsWithPostAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**. Parameters can be specified on either query params or the body.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScopePost</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateLinkScopes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorPrivateLinkScopeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateLinkScopes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&#xA;override this.GetMonitorPrivateLinkScopes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorPrivateLinkScopesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorPrivateLinkScopeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorPrivateLinkScopesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&#xA;override this.GetMonitorPrivateLinkScopesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResources (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResources(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorWorkspaceResources(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorWorkspaceResources (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorWorkspaceResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&#xA;override this.GetMonitorWorkspaceResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorWorkspaceResources cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all workspaces in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Monitor/accounts</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResourcesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResourcesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorWorkspaceResourcesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitorWorkspaceResourcesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitorWorkspaceResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&#xA;override this.GetMonitorWorkspaceResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;" Usage="mockableMonitorSubscriptionResource.GetMonitorWorkspaceResourcesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all workspaces in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Monitor/accounts</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus (string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus(string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetNotificationStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationStatus (notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&#xA;override this.GetNotificationStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="mockableMonitorSubscriptionResource.GetNotificationStatus (notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync (string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync(string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetNotificationStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationStatusAsync (notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;&#xA;override this.GetNotificationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="mockableMonitorSubscriptionResource.GetNotificationStatusAsync (notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRules (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRules(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetScheduledQueryRules(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScheduledQueryRules (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScheduledQueryRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScheduledQueryRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&#xA;override this.GetScheduledQueryRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetScheduledQueryRules cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a scheduled query rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRulesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRulesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetScheduledQueryRulesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScheduledQueryRulesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScheduledQueryRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScheduledQueryRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&#xA;override this.GetScheduledQueryRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;" Usage="mockableMonitorSubscriptionResource.GetScheduledQueryRulesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a scheduled query rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
