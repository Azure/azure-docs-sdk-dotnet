<Type Name="LoadBalancingStrategy" FullName="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy">
  <TypeSignature Language="C#" Value="public enum LoadBalancingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LoadBalancingStrategy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LoadBalancingStrategy" />
  <TypeSignature Language="F#" Value="type LoadBalancingStrategy = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.4.0.0</AssemblyVersion>
    <AssemblyVersion>5.4.1.0</AssemblyVersion>
    <AssemblyVersion>5.5.0.0</AssemblyVersion>
    <AssemblyVersion>5.6.0.0</AssemblyVersion>
    <AssemblyVersion>5.6.1.0</AssemblyVersion>
    <AssemblyVersion>5.6.2.0</AssemblyVersion>
    <AssemblyVersion>5.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.7.1.0</AssemblyVersion>
    <AssemblyVersion>5.7.2.0</AssemblyVersion>
    <AssemblyVersion>5.7.3.0</AssemblyVersion>
    <AssemblyVersion>5.7.4.0</AssemblyVersion>
    <AssemblyVersion>5.7.5.0</AssemblyVersion>
    <AssemblyVersion>5.8.0.0</AssemblyVersion>
    <AssemblyVersion>5.8.1.0</AssemblyVersion>
    <AssemblyVersion>5.9.0.0</AssemblyVersion>
    <AssemblyVersion>5.9.1.0</AssemblyVersion>
    <AssemblyVersion>5.9.2.0</AssemblyVersion>
    <AssemblyVersion>5.9.3.0</AssemblyVersion>
    <AssemblyVersion>5.10.0.0</AssemblyVersion>
    <AssemblyVersion>5.11.0.0</AssemblyVersion>
    <AssemblyVersion>5.11.1.0</AssemblyVersion>
    <AssemblyVersion>5.11.2.0</AssemblyVersion>
    <AssemblyVersion>5.11.3.0</AssemblyVersion>
    <AssemblyVersion>5.11.4.0</AssemblyVersion>
    <AssemblyVersion>5.11.5.0</AssemblyVersion>
    <AssemblyVersion>5.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
               The strategy that an event processor will use to make decisions about
               partition ownership when performing load balancing to share work with
               other event processors.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Balanced">
      <MemberSignature Language="C#" Value="Balanced" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy Balanced = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Balanced" />
      <MemberSignature Language="VB.NET" Value="Balanced" />
      <MemberSignature Language="F#" Value="Balanced = 0" Usage="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Balanced" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
               An event processor will take a slow approach to requesting
               partition ownership when balancing work with other processors, waiting
               until a load balancing cycle is schedule to run, claiming 1 partition
               per cycle until a stabilized distribution is achieved.
            
               <para>When using this strategy, it will be considerably longer for all partitions of
               an Event Hub to be owned by a processor when processing first starts, the
               number of active processors changes, or when partitions are scaled.</para><para>The Balanced strategy is generally not recommended, as it does not provide
               any tangible benefits unless the load balancing interval is set below 10 seconds,
               which is strongly discouraged.  The Balanced strategy mainly exists to ensure backwards
               compatibility with earlier library versions.</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Greedy">
      <MemberSignature Language="C#" Value="Greedy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy Greedy = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Greedy" />
      <MemberSignature Language="VB.NET" Value="Greedy" />
      <MemberSignature Language="F#" Value="Greedy = 1" Usage="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Greedy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
               An event processor will attempt to claim ownership of its fair share of
               partitions consistently, claiming 1 partition at a time until work is balanced
               between all active processors.
            
               <para>When using this strategy, load balancing cycles run without delay until
               ownership is evenly distributed, ensuring that partitions are processed more quickly
               when processing first starts, the number of active processors changes, or
               when partitions are scaled.</para><para>The Greedy strategy will not cause additional competition for township of a given
               when compared to other strategies, as it allows claims from other processors to safely
               interleave.  Greedy is the recommended default strategy for processors.</para></summary>
      </Docs>
    </Member>
  </Members>
</Type>
