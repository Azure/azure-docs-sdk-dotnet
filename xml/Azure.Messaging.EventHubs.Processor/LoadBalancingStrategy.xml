<Type Name="LoadBalancingStrategy" FullName="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy">
  <TypeSignature Language="C#" Value="public enum LoadBalancingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LoadBalancingStrategy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LoadBalancingStrategy" />
  <TypeSignature Language="F#" Value="type LoadBalancingStrategy = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
               The strategy that an event processor will use to make decisions about
               partition ownership when performing load balancing to share work with
               other event processors.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Balanced">
      <MemberSignature Language="C#" Value="Balanced" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy Balanced = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Balanced" />
      <MemberSignature Language="VB.NET" Value="Balanced" />
      <MemberSignature Language="F#" Value="Balanced = 0" Usage="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Balanced" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
               An event processor will take a measured approach to requesting
               partition ownership when balancing work with other processors, slowly
               claiming partitions until a stabilized distribution is achieved.
            
               <para>When using this strategy, it may take longer for all partitions of
               an Event Hub to be owned by a processor when processing first starts, the
               number of active processors changes, or when partitions are scaled.  The
               Balanced strategy will reduce contention for a partition, ensuring that once
               it is claimed, processing will be more likely to be steady and consistent.</para></summary>
      </Docs>
    </Member>
    <Member MemberName="Greedy">
      <MemberSignature Language="C#" Value="Greedy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy Greedy = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Greedy" />
      <MemberSignature Language="VB.NET" Value="Greedy" />
      <MemberSignature Language="F#" Value="Greedy = 1" Usage="Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy.Greedy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.Processor.LoadBalancingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
               An event processor will attempt to claim ownership of its fair share of
               partitions aggressively when balancing work with other processors.
            
               <para>When using this strategy, all partitions of an Event Hub will be claimed
               quickly when processing first starts, the number of active processors changes, or
               when partitions are scaled.  The Greedy strategy is likely to cause competition for
               ownership of a given partition, causing it to see sporadic processing and some amount of
               duplicate events until balance has been reached and work is distributed equally among the
               active processors.</para></summary>
      </Docs>
    </Member>
  </Members>
</Type>
