<Type Name="ClusterUpdateParameters" FullName="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters">
  <TypeSignature Language="C#" Value="public class ClusterUpdateParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClusterUpdateParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class ClusterUpdateParameters" />
  <TypeSignature Language="F#" Value="type ClusterUpdateParameters = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClusterUpdateParameters" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ClusterUpdateParameters" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Rest.Serialization.JsonTransformation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Cluster update request
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClusterUpdateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClusterUpdateParameters();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ClusterUpdateParameters();" />
      <MemberSignature Language="C++ WINRT" Value=" ClusterUpdateParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ClusterUpdateParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClusterUpdateParameters (string reliabilityLevel = null, string upgradeMode = null, string clusterCodeVersion = null, Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription certificate = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; clientCertificateThumbprints = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; clientCertificateCommonNames = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings = null, Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription reverseProxyCertificate = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; nodeTypes = null, Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string reliabilityLevel, string upgradeMode, string clusterCodeVersion, class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription certificate, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; clientCertificateThumbprints, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; clientCertificateCommonNames, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings, class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription reverseProxyCertificate, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; nodeTypes, class Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription},Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription},Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional reliabilityLevel As String = null, Optional upgradeMode As String = null, Optional clusterCodeVersion As String = null, Optional certificate As CertificateDescription = null, Optional clientCertificateThumbprints As IList(Of ClientCertificateThumbprint) = null, Optional clientCertificateCommonNames As IList(Of ClientCertificateCommonName) = null, Optional fabricSettings As IList(Of SettingsSectionDescription) = null, Optional reverseProxyCertificate As CertificateDescription = null, Optional nodeTypes As IList(Of NodeTypeDescription) = null, Optional upgradeDescription As ClusterUpgradePolicy = null, Optional tags As IDictionary(Of String, String) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters : string * string * string * Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; * Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; * Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters" Usage="new Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters (reliabilityLevel, upgradeMode, clusterCodeVersion, certificate, clientCertificateThumbprints, clientCertificateCommonNames, fabricSettings, reverseProxyCertificate, nodeTypes, upgradeDescription, tags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliabilityLevel" Type="System.String" />
        <Parameter Name="upgradeMode" Type="System.String" />
        <Parameter Name="clusterCodeVersion" Type="System.String" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription" />
        <Parameter Name="clientCertificateThumbprints" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt;" />
        <Parameter Name="clientCertificateCommonNames" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt;" />
        <Parameter Name="fabricSettings" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt;" />
        <Parameter Name="reverseProxyCertificate" Type="Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription" />
        <Parameter Name="nodeTypes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt;" />
        <Parameter Name="upgradeDescription" Type="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="reliabilityLevel">This level is used to set the number
            of replicas of the system services. Possible values include:
            'Bronze', 'Silver', 'Gold'</param>
        <param name="upgradeMode">Cluster upgrade mode indicates if fabric
            upgrade is initiated automatically by the system or not. Possible
            values include: 'Automatic', 'Manual'</param>
        <param name="clusterCodeVersion">The ServiceFabric code version, if
            set it, please make sure you have set upgradeMode to Manual,
            otherwise ,it will fail, if you are using PUT new cluster, you can
            get the version by using ClusterVersions_List, if you are updating
            existing cluster, you can get the availableClusterVersions from
            Clusters_Get</param>
        <param name="certificate">This primay certificate will be used as
            cluster node to node security, SSL certificate for cluster
            management endpoint and default admin client, the certificate
            should exist in the virtual machine scale sets or Azure key vault,
            before you add it. It will override original value</param>
        <param name="clientCertificateThumbprints">The client thumbprint
            details, it is used for client access for cluster operation, it
            will override existing collection</param>
        <param name="clientCertificateCommonNames">List of client
            certificates to whitelist based on common names.</param>
        <param name="fabricSettings">List of custom fabric settings to
            configure the cluster, Note, it will overwrite existing
            collection</param>
        <param name="reverseProxyCertificate">Certificate for the reverse
            proxy</param>
        <param name="nodeTypes">The list of nodetypes that make up the
            cluster, it will override</param>
        <param name="upgradeDescription">The policy to use when upgrading
            the cluster.</param>
        <param name="tags">Cluster update parameters</param>
        <summary>
            Initializes a new instance of the ClusterUpdateParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As CertificateDescription" />
      <MemberSignature Language="F#" Value="member this.Certificate : Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ Certificate { Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.certificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this primay certificate will be used as cluster node
            to node security, SSL certificate for cluster management endpoint
            and default admin client, the certificate should exist in the
            virtual machine scale sets or Azure key vault, before you add it.
            It will override original value
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateCommonNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; ClientCertificateCommonNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; ClientCertificateCommonNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClientCertificateCommonNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateCommonNames As IList(Of ClientCertificateCommonName)" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateCommonNames : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClientCertificateCommonNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ ClientCertificateCommonNames { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clientCertificateCommonNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of client certificates to whitelist based on
            common names.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateThumbprints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; ClientCertificateThumbprints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; ClientCertificateThumbprints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClientCertificateThumbprints" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateThumbprints As IList(Of ClientCertificateThumbprint)" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateThumbprints : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClientCertificateThumbprints" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ ClientCertificateThumbprints { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clientCertificateThumbprints")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the client thumbprint details, it is used for client
            access for cluster operation, it will override existing collection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterCodeVersion">
      <MemberSignature Language="C#" Value="public string ClusterCodeVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterCodeVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClusterCodeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterCodeVersion As String" />
      <MemberSignature Language="F#" Value="member this.ClusterCodeVersion : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ClusterCodeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterCodeVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ClusterCodeVersion { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clusterCodeVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ServiceFabric code version, if set it, please make
            sure you have set upgradeMode to Manual, otherwise ,it will fail,
            if you are using PUT new cluster, you can get the version by using
            ClusterVersions_List, if you are updating existing cluster, you can
            get the availableClusterVersions from Clusters_Get
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FabricSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; FabricSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; FabricSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.FabricSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property FabricSettings As IList(Of SettingsSectionDescription)" />
      <MemberSignature Language="F#" Value="member this.FabricSettings : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.FabricSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ FabricSettings { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.fabricSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of custom fabric settings to configure the
            cluster, Note, it will overwrite existing collection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; NodeTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; NodeTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.NodeTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeTypes As IList(Of NodeTypeDescription)" />
      <MemberSignature Language="F#" Value="member this.NodeTypes : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.NodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ NodeTypes { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of nodetypes that make up the cluster, it
            will override
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliabilityLevel">
      <MemberSignature Language="C#" Value="public string ReliabilityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReliabilityLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ReliabilityLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliabilityLevel As String" />
      <MemberSignature Language="F#" Value="member this.ReliabilityLevel : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ReliabilityLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReliabilityLevel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReliabilityLevel { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.reliabilityLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this level is used to set the number of replicas of
            the system services. Possible values include: 'Bronze', 'Silver',
            'Gold'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseProxyCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription ReverseProxyCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription ReverseProxyCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ReverseProxyCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseProxyCertificate As CertificateDescription" />
      <MemberSignature Language="F#" Value="member this.ReverseProxyCertificate : Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.ReverseProxyCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ ReverseProxyCertificate { Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.reverseProxyCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets certificate for the reverse proxy
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.Tags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Tags { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="tags")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets cluster update parameters
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy UpgradeDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy UpgradeDescription" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.UpgradeDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeDescription As ClusterUpgradePolicy" />
      <MemberSignature Language="F#" Value="member this.UpgradeDescription : Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.UpgradeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ UpgradeDescription { Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the policy to use when upgrading the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeMode">
      <MemberSignature Language="C#" Value="public string UpgradeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpgradeMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.UpgradeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeMode As String" />
      <MemberSignature Language="F#" Value="member this.UpgradeMode : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.UpgradeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpgradeMode { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ UpgradeMode { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets cluster upgrade mode indicates if fabric upgrade is
            initiated automatically by the system or not. Possible values
            include: 'Automatic', 'Manual'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpdateParameters.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="clusterUpdateParameters.Validate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>