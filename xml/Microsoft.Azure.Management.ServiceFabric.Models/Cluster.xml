<Type Name="Cluster" FullName="Microsoft.Azure.Management.ServiceFabric.Models.Cluster">
  <TypeSignature Language="C#" Value="public class Cluster : Microsoft.Azure.Management.ServiceFabric.Models.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cluster extends Microsoft.Azure.Management.ServiceFabric.Models.Resource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabric.Models.Cluster" />
  <TypeSignature Language="VB.NET" Value="Public Class Cluster&#xA;Inherits Resource" />
  <TypeSignature Language="F#" Value="type Cluster = class&#xA;    inherit Resource" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cluster : Microsoft::Azure::Management::ServiceFabric::Models::Resource" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class Cluster : Microsoft::Azure::Management::ServiceFabric::Models::Resource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ServiceFabric.Models.Resource</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Rest.Serialization.JsonTransformation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             The cluster resource
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cluster ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cluster();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Cluster();" />
      <MemberSignature Language="C++ WINRT" Value=" Cluster();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
            Initializes a new instance of the Cluster class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cluster (string location, string managementEndpoint, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; nodeTypes, string id = null, string name = null, string type = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Collections.Generic.IList&lt;string&gt; addOnFeatures = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt; availableClusterVersions = null, Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory azureActiveDirectory = null, Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription certificate = null, Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames certificateCommonNames = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; clientCertificateCommonNames = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; clientCertificateThumbprints = null, string clusterCodeVersion = null, string clusterEndpoint = null, string clusterId = null, string clusterState = null, Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig diagnosticsStorageAccountConfig = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings = null, string provisioningState = null, string reliabilityLevel = null, Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription reverseProxyCertificate = null, Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames reverseProxyCertificateCommonNames = null, Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription = null, string upgradeMode = null, string vmImage = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, string managementEndpoint, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; nodeTypes, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IList`1&lt;string&gt; addOnFeatures, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt; availableClusterVersions, class Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory azureActiveDirectory, class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription certificate, class Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames certificateCommonNames, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; clientCertificateCommonNames, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; clientCertificateThumbprints, string clusterCodeVersion, string clusterEndpoint, string clusterId, string clusterState, class Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig diagnosticsStorageAccountConfig, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings, string provisioningState, string reliabilityLevel, class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription reverseProxyCertificate, class Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames reverseProxyCertificateCommonNames, class Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription, string upgradeMode, string vmImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails},Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory,Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription,Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint},System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription},System.String,System.String,Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription,Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames,Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy,System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabric.Models.Cluster : string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt; * Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory * Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription * Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; * string * string * string * string * Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; * string * string * Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription * Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames * Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy * string * string -&gt; Microsoft.Azure.Management.ServiceFabric.Models.Cluster" Usage="new Microsoft.Azure.Management.ServiceFabric.Models.Cluster (location, managementEndpoint, nodeTypes, id, name, type, tags, addOnFeatures, availableClusterVersions, azureActiveDirectory, certificate, certificateCommonNames, clientCertificateCommonNames, clientCertificateThumbprints, clusterCodeVersion, clusterEndpoint, clusterId, clusterState, diagnosticsStorageAccountConfig, fabricSettings, provisioningState, reliabilityLevel, reverseProxyCertificate, reverseProxyCertificateCommonNames, upgradeDescription, upgradeMode, vmImage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="managementEndpoint" Type="System.String" />
        <Parameter Name="nodeTypes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt;" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="addOnFeatures" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="availableClusterVersions" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt;" />
        <Parameter Name="azureActiveDirectory" Type="Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription" />
        <Parameter Name="certificateCommonNames" Type="Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames" />
        <Parameter Name="clientCertificateCommonNames" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt;" />
        <Parameter Name="clientCertificateThumbprints" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt;" />
        <Parameter Name="clusterCodeVersion" Type="System.String" />
        <Parameter Name="clusterEndpoint" Type="System.String" />
        <Parameter Name="clusterId" Type="System.String" />
        <Parameter Name="clusterState" Type="System.String" />
        <Parameter Name="diagnosticsStorageAccountConfig" Type="Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig" />
        <Parameter Name="fabricSettings" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="reliabilityLevel" Type="System.String" />
        <Parameter Name="reverseProxyCertificate" Type="Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription" />
        <Parameter Name="reverseProxyCertificateCommonNames" Type="Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames" />
        <Parameter Name="upgradeDescription" Type="Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy" />
        <Parameter Name="upgradeMode" Type="System.String" />
        <Parameter Name="vmImage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="location">Azure resource location.</param>
        <param name="managementEndpoint">The http management endpoint of
             the cluster.</param>
        <param name="nodeTypes">The list of node types in the
             cluster.</param>
        <param name="id">Azure resource identifier.</param>
        <param name="name">Azure resource name.</param>
        <param name="type">Azure resource type.</param>
        <param name="tags">Azure resource tags.</param>
        <param name="addOnFeatures">The list of add-on features to enable
             in the cluster.</param>
        <param name="availableClusterVersions">The Service Fabric runtime
             versions available for this cluster.</param>
        <param name="azureActiveDirectory">The AAD authentication settings
             of the cluster.</param>
        <param name="certificate">The certificate to use for securing the
             cluster. The certificate provided will be used for node to node
             security within the cluster, SSL certificate for cluster management
             endpoint and default admin client.</param>
        <param name="certificateCommonNames">Describes a list of server
             certificates referenced by common name that are used to secure the
             cluster.</param>
        <param name="clientCertificateCommonNames">The list of client
             certificates referenced by common name that are allowed to manage
             the cluster.</param>
        <param name="clientCertificateThumbprints">The list of client
             certificates referenced by thumbprint that are allowed to manage
             the cluster.</param>
        <param name="clusterCodeVersion">The Service Fabric runtime version
             of the cluster. This property can only by set the user when
             **upgradeMode** is set to 'Manual'. To get list of available
             Service Fabric versions for new clusters use [ClusterVersion
             API](./ClusterVersion.md). To get the list of available version for
             existing clusters use **availableClusterVersions**.</param>
        <param name="clusterEndpoint">The Azure Resource Provider endpoint.
             A system service in the cluster connects to this  endpoint.</param>
        <param name="clusterId">A service generated unique identifier for
             the cluster resource.</param>
        <param name="clusterState">The current state of the cluster.
            
             - WaitingForNodes - Indicates that the cluster resource is created
             and the resource provider is waiting for Service Fabric VM
             extension to boot up and report to it.
             - Deploying - Indicates that the Service Fabric runtime is being
             installed on the VMs. Cluster resource will be in this state until
             the cluster boots up and system services are up.
             - BaselineUpgrade - Indicates that the cluster is upgrading to
             establishes the cluster version. This upgrade is automatically
             initiated when the cluster boots up for the first time.
             - UpdatingUserConfiguration - Indicates that the cluster is being
             upgraded with the user provided configuration.
             - UpdatingUserCertificate - Indicates that the cluster is being
             upgraded with the user provided certificate.
             - UpdatingInfrastructure - Indicates that the cluster is being
             upgraded with the latest Service Fabric runtime version. This
             happens only when the **upgradeMode** is set to 'Automatic'.
             - EnforcingClusterVersion - Indicates that cluster is on a
             different version than expected and the cluster is being upgraded
             to the expected version.
             - UpgradeServiceUnreachable - Indicates that the system service in
             the cluster is no longer polling the Resource Provider. Clusters in
             this state cannot be managed by the Resource Provider.
             - AutoScale - Indicates that the ReliabilityLevel of the cluster is
             being adjusted.
             - Ready - Indicates that the cluster is in a stable state.
             . Possible values include: 'WaitingForNodes', 'Deploying',
             'BaselineUpgrade', 'UpdatingUserConfiguration',
             'UpdatingUserCertificate', 'UpdatingInfrastructure',
             'EnforcingClusterVersion', 'UpgradeServiceUnreachable',
             'AutoScale', 'Ready'</param>
        <param name="diagnosticsStorageAccountConfig">The storage account
             information for storing Service Fabric diagnostic logs.</param>
        <param name="fabricSettings">The list of custom fabric settings to
             configure the cluster.</param>
        <param name="provisioningState">The provisioning state of the
             cluster resource. Possible values include: 'Updating', 'Succeeded',
             'Failed', 'Canceled'</param>
        <param name="reliabilityLevel">The reliability level sets the
             replica set size of system services. Learn about
             [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).
            
             - None - Run the System services with a target replica set count of
             1. This should only be used for test clusters.
             - Bronze - Run the System services with a target replica set count
             of 3. This should only be used for test clusters.
             - Silver - Run the System services with a target replica set count
             of 5.
             - Gold - Run the System services with a target replica set count of
             7.
             - Platinum - Run the System services with a target replica set
             count of 9.
             . Possible values include: 'None', 'Bronze', 'Silver', 'Gold',
             'Platinum'</param>
        <param name="reverseProxyCertificate">The server certificate used
             by reverse proxy.</param>
        <param name="reverseProxyCertificateCommonNames">Describes a list
             of server certificates referenced by common name that are used to
             secure the cluster.</param>
        <param name="upgradeDescription">The policy to use when upgrading
             the cluster.</param>
        <param name="upgradeMode">The upgrade mode of the cluster when new
             Service Fabric runtime version is available.
            
             - Automatic - The cluster will be automatically upgraded to the
             latest Service Fabric runtime version as soon as it is available.
             - Manual - The cluster will not be automatically upgraded to the
             latest Service Fabric runtime version. The cluster is upgraded by
             setting the **clusterCodeVersion** property in the cluster
             resource.
             . Possible values include: 'Automatic', 'Manual'</param>
        <param name="vmImage">The VM image VMSS has been configured with.
             Generic names such as Windows or Linux can be used.</param>
        <summary>
             Initializes a new instance of the Cluster class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnFeatures">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AddOnFeatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AddOnFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AddOnFeatures" />
      <MemberSignature Language="VB.NET" Value="Public Property AddOnFeatures As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AddOnFeatures : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AddOnFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.addOnFeatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of add-on features to enable in the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableClusterVersions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt; AvailableClusterVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt; AvailableClusterVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AvailableClusterVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableClusterVersions As IList(Of ClusterVersionDetails)" />
      <MemberSignature Language="F#" Value="member this.AvailableClusterVersions : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt;" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AvailableClusterVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClusterVersionDetails ^&gt; ^ AvailableClusterVersions { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClusterVersionDetails ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.availableClusterVersions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClusterVersionDetails&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Service Fabric runtime versions available for this
            cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzureActiveDirectory">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory AzureActiveDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory AzureActiveDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AzureActiveDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property AzureActiveDirectory As AzureActiveDirectory" />
      <MemberSignature Language="F#" Value="member this.AzureActiveDirectory : Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.AzureActiveDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::AzureActiveDirectory ^ AzureActiveDirectory { Microsoft::Azure::Management::ServiceFabric::Models::AzureActiveDirectory ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::AzureActiveDirectory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.azureActiveDirectory")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.AzureActiveDirectory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the AAD authentication settings of the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As CertificateDescription" />
      <MemberSignature Language="F#" Value="member this.Certificate : Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ Certificate { Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.certificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the certificate to use for securing the cluster. The
            certificate provided will be used for node to node security within
            the cluster, SSL certificate for cluster management endpoint and
            default admin client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateCommonNames">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames CertificateCommonNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames CertificateCommonNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.CertificateCommonNames" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateCommonNames As ServerCertificateCommonNames" />
      <MemberSignature Language="F#" Value="member this.CertificateCommonNames : Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.CertificateCommonNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.certificateCommonNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes a list of server certificates referenced by
            common name that are used to secure the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateCommonNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; ClientCertificateCommonNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; ClientCertificateCommonNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClientCertificateCommonNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateCommonNames As IList(Of ClientCertificateCommonName)" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateCommonNames : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClientCertificateCommonNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ ClientCertificateCommonNames { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateCommonName ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clientCertificateCommonNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateCommonName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of client certificates referenced by common
            name that are allowed to manage the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateThumbprints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; ClientCertificateThumbprints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; ClientCertificateThumbprints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClientCertificateThumbprints" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateThumbprints As IList(Of ClientCertificateThumbprint)" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateThumbprints : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClientCertificateThumbprints" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ ClientCertificateThumbprints { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::ClientCertificateThumbprint ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clientCertificateThumbprints")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.ClientCertificateThumbprint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of client certificates referenced by
            thumbprint that are allowed to manage the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterCodeVersion">
      <MemberSignature Language="C#" Value="public string ClusterCodeVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterCodeVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterCodeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterCodeVersion As String" />
      <MemberSignature Language="F#" Value="member this.ClusterCodeVersion : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterCodeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterCodeVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ClusterCodeVersion { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clusterCodeVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Service Fabric runtime version of the cluster.
            This property can only by set the user when **upgradeMode** is set
            to 'Manual'. To get list of available Service Fabric versions for
            new clusters use [ClusterVersion API](./ClusterVersion.md). To get
            the list of available version for existing clusters use
            **availableClusterVersions**.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterEndpoint">
      <MemberSignature Language="C#" Value="public string ClusterEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterEndpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClusterEndpoint As String" />
      <MemberSignature Language="F#" Value="member this.ClusterEndpoint : string" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterEndpoint { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ClusterEndpoint { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clusterEndpoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Azure Resource Provider endpoint. A system service in the
            cluster connects to this  endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterId">
      <MemberSignature Language="C#" Value="public string ClusterId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClusterId As String" />
      <MemberSignature Language="F#" Value="member this.ClusterId : string" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterId { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ClusterId { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clusterId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a service generated unique identifier for the cluster
            resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterState">
      <MemberSignature Language="C#" Value="public string ClusterState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClusterState As String" />
      <MemberSignature Language="F#" Value="member this.ClusterState : string" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ClusterState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterState { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ClusterState { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.clusterState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets the current state of the cluster.
            
             - WaitingForNodes - Indicates that the cluster resource is created
             and the resource provider is waiting for Service Fabric VM
             extension to boot up and report to it.
             - Deploying - Indicates that the Service Fabric runtime is being
             installed on the VMs. Cluster resource will be in this state until
             the cluster boots up and system services are up.
             - BaselineUpgrade - Indicates that the cluster is upgrading to
             establishes the cluster version. This upgrade is automatically
             initiated when the cluster boots up for the first time.
             - UpdatingUserConfiguration - Indicates that the cluster is being
             upgraded with the user provided configuration.
             - UpdatingUserCertificate - Indicates that the cluster is being
             upgraded with the user provided certificate.
             - UpdatingInfrastructure - Indicates that the cluster is being
             upgraded with the latest Service Fabric runtime version. This
             happens only when the **upgradeMode** is set to 'Automatic'.
             - EnforcingClusterVersion - Indicates that cluster is on a
             different version than expected and the cluster is being upgraded
             to the expected version.
             - UpgradeServiceUnreachable - Indicates that the system service in
             the cluster is no longer polling the Resource Provider. Clusters in
             this state cannot be managed by the Resource Provider.
             - AutoScale - Indicates that the ReliabilityLevel of the cluster is
             being adjusted.
             - Ready - Indicates that the cluster is in a stable state.
             . Possible values include: 'WaitingForNodes', 'Deploying',
             'BaselineUpgrade', 'UpdatingUserConfiguration',
             'UpdatingUserCertificate', 'UpdatingInfrastructure',
             'EnforcingClusterVersion', 'UpgradeServiceUnreachable',
             'AutoScale', 'Ready'
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagnosticsStorageAccountConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.DiagnosticsStorageAccountConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property DiagnosticsStorageAccountConfig As DiagnosticsStorageAccountConfig" />
      <MemberSignature Language="F#" Value="member this.DiagnosticsStorageAccountConfig : Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.DiagnosticsStorageAccountConfig" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::DiagnosticsStorageAccountConfig ^ DiagnosticsStorageAccountConfig { Microsoft::Azure::Management::ServiceFabric::Models::DiagnosticsStorageAccountConfig ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::DiagnosticsStorageAccountConfig ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.diagnosticsStorageAccountConfig")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.DiagnosticsStorageAccountConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the storage account information for storing Service
            Fabric diagnostic logs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FabricSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; FabricSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; FabricSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.FabricSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property FabricSettings As IList(Of SettingsSectionDescription)" />
      <MemberSignature Language="F#" Value="member this.FabricSettings : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.FabricSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ FabricSettings { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::SettingsSectionDescription ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.fabricSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.SettingsSectionDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of custom fabric settings to configure the
            cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagementEndpoint">
      <MemberSignature Language="C#" Value="public string ManagementEndpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ManagementEndpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ManagementEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property ManagementEndpoint As String" />
      <MemberSignature Language="F#" Value="member this.ManagementEndpoint : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ManagementEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ManagementEndpoint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ManagementEndpoint { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.managementEndpoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the http management endpoint of the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; NodeTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; NodeTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.NodeTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeTypes As IList(Of NodeTypeDescription)" />
      <MemberSignature Language="F#" Value="member this.NodeTypes : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.NodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ NodeTypes { System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Azure::Management::ServiceFabric::Models::NodeTypeDescription ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.nodeTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of node types in the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ProvisioningState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProvisioningState { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ProvisioningState { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the provisioning state of the cluster resource. Possible
            values include: 'Updating', 'Succeeded', 'Failed', 'Canceled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliabilityLevel">
      <MemberSignature Language="C#" Value="public string ReliabilityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReliabilityLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReliabilityLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliabilityLevel As String" />
      <MemberSignature Language="F#" Value="member this.ReliabilityLevel : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReliabilityLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReliabilityLevel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReliabilityLevel { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.reliabilityLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the reliability level sets the replica set size of
             system services. Learn about
             [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).
            
             - None - Run the System services with a target replica set count of
             1. This should only be used for test clusters.
             - Bronze - Run the System services with a target replica set count
             of 3. This should only be used for test clusters.
             - Silver - Run the System services with a target replica set count
             of 5.
             - Gold - Run the System services with a target replica set count of
             7.
             - Platinum - Run the System services with a target replica set
             count of 9.
             . Possible values include: 'None', 'Bronze', 'Silver', 'Gold',
             'Platinum'
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseProxyCertificate">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription ReverseProxyCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription ReverseProxyCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReverseProxyCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseProxyCertificate As CertificateDescription" />
      <MemberSignature Language="F#" Value="member this.ReverseProxyCertificate : Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReverseProxyCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ ReverseProxyCertificate { Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::CertificateDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.reverseProxyCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.CertificateDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the server certificate used by reverse proxy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseProxyCertificateCommonNames">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames ReverseProxyCertificateCommonNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames ReverseProxyCertificateCommonNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReverseProxyCertificateCommonNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseProxyCertificateCommonNames As ServerCertificateCommonNames" />
      <MemberSignature Language="F#" Value="member this.ReverseProxyCertificateCommonNames : Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.ReverseProxyCertificateCommonNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.reverseProxyCertificateCommonNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ServerCertificateCommonNames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes a list of server certificates referenced by
            common name that are used to secure the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy UpgradeDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy UpgradeDescription" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.UpgradeDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeDescription As ClusterUpgradePolicy" />
      <MemberSignature Language="F#" Value="member this.UpgradeDescription : Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.UpgradeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ UpgradeDescription { Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ get(); void set(Microsoft::Azure::Management::ServiceFabric::Models::ClusterUpgradePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ClusterUpgradePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the policy to use when upgrading the cluster.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeMode">
      <MemberSignature Language="C#" Value="public string UpgradeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpgradeMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.UpgradeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeMode As String" />
      <MemberSignature Language="F#" Value="member this.UpgradeMode : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.UpgradeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpgradeMode { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ UpgradeMode { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.upgradeMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the upgrade mode of the cluster when new Service
             Fabric runtime version is available.
            
             - Automatic - The cluster will be automatically upgraded to the
             latest Service Fabric runtime version as soon as it is available.
             - Manual - The cluster will not be automatically upgraded to the
             latest Service Fabric runtime version. The cluster is upgraded by
             setting the **clusterCodeVersion** property in the cluster
             resource.
             . Possible values include: 'Automatic', 'Manual'
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="cluster.Validate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ WINRT" Value=" override void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VmImage">
      <MemberSignature Language="C#" Value="public string VmImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmImage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.Cluster.VmImage" />
      <MemberSignature Language="VB.NET" Value="Public Property VmImage As String" />
      <MemberSignature Language="F#" Value="member this.VmImage : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.Cluster.VmImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VmImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ VmImage { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the VM image VMSS has been configured with. Generic
            names such as Windows or Linux can be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>