<Type Name="ApplicationUpgradePolicy" FullName="Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy">
  <TypeSignature Language="C#" Value="public class ApplicationUpgradePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationUpgradePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationUpgradePolicy" />
  <TypeSignature Language="F#" Value="type ApplicationUpgradePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes the policy for a monitored application upgrade.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationUpgradePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ApplicationUpgradePolicy class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationUpgradePolicy (string upgradeReplicaSetCheckTimeout = default, bool? forceRestart = default, Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy rollingUpgradeMonitoringPolicy = default, Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy applicationHealthPolicy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string upgradeReplicaSetCheckTimeout, valuetype System.Nullable`1&lt;bool&gt; forceRestart, class Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy rollingUpgradeMonitoringPolicy, class Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy applicationHealthPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.#ctor(System.String,System.Nullable{System.Boolean},Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy,Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional upgradeReplicaSetCheckTimeout As String = Nothing, Optional forceRestart As Nullable(Of Boolean) = Nothing, Optional rollingUpgradeMonitoringPolicy As ArmRollingUpgradeMonitoringPolicy = Nothing, Optional applicationHealthPolicy As ArmApplicationHealthPolicy = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy : string * Nullable&lt;bool&gt; * Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy * Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy -&gt; Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy" Usage="new Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy (upgradeReplicaSetCheckTimeout, forceRestart, rollingUpgradeMonitoringPolicy, applicationHealthPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="upgradeReplicaSetCheckTimeout" Type="System.String" />
        <Parameter Name="forceRestart" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rollingUpgradeMonitoringPolicy" Type="Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy" />
        <Parameter Name="applicationHealthPolicy" Type="Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy" />
      </Parameters>
      <Docs>
        <param name="upgradeReplicaSetCheckTimeout">The maximum amount of
            time to block processing of an upgrade domain and prevent loss of
            availability when there are unexpected issues. When this timeout
            expires, processing of the upgrade domain will proceed regardless
            of availability loss issues. The timeout is reset at the start of
            each upgrade domain. Valid values are between 0 and 42949672925
            inclusive. (unsigned 32-bit integer).</param>
        <param name="forceRestart">If true, then processes are forcefully
            restarted during upgrade even when the code version has not changed
            (the upgrade only changes configuration or data).</param>
        <param name="rollingUpgradeMonitoringPolicy">The policy used for
            monitoring the application upgrade</param>
        <param name="applicationHealthPolicy">Defines a health policy used
            to evaluate the health of an application or one of its children
            entities.
            </param>
        <summary>
            Initializes a new instance of the ApplicationUpgradePolicy class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationHealthPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy ApplicationHealthPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy ApplicationHealthPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.ApplicationHealthPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationHealthPolicy As ArmApplicationHealthPolicy" />
      <MemberSignature Language="F#" Value="member this.ApplicationHealthPolicy : Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.ApplicationHealthPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="applicationHealthPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="applicationHealthPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ArmApplicationHealthPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets defines a health policy used to evaluate the health of
             an application or one of its children entities.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceRestart">
      <MemberSignature Language="C#" Value="public bool? ForceRestart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ForceRestart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.ForceRestart" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceRestart As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ForceRestart : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.ForceRestart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="forceRestart")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="forceRestart")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets if true, then processes are forcefully restarted
            during upgrade even when the code version has not changed (the
            upgrade only changes configuration or data).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollingUpgradeMonitoringPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy RollingUpgradeMonitoringPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy RollingUpgradeMonitoringPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.RollingUpgradeMonitoringPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RollingUpgradeMonitoringPolicy As ArmRollingUpgradeMonitoringPolicy" />
      <MemberSignature Language="F#" Value="member this.RollingUpgradeMonitoringPolicy : Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.RollingUpgradeMonitoringPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="rollingUpgradeMonitoringPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="rollingUpgradeMonitoringPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.ArmRollingUpgradeMonitoringPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the policy used for monitoring the application upgrade
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeReplicaSetCheckTimeout">
      <MemberSignature Language="C#" Value="public string UpgradeReplicaSetCheckTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpgradeReplicaSetCheckTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.UpgradeReplicaSetCheckTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeReplicaSetCheckTimeout As String" />
      <MemberSignature Language="F#" Value="member this.UpgradeReplicaSetCheckTimeout : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.UpgradeReplicaSetCheckTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="upgradeReplicaSetCheckTimeout")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="upgradeReplicaSetCheckTimeout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum amount of time to block processing of an
            upgrade domain and prevent loss of availability when there are
            unexpected issues. When this timeout expires, processing of the
            upgrade domain will proceed regardless of availability loss issues.
            The timeout is reset at the start of each upgrade domain. Valid
            values are between 0 and 42949672925 inclusive. (unsigned 32-bit
            integer).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.ApplicationUpgradePolicy.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="applicationUpgradePolicy.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
