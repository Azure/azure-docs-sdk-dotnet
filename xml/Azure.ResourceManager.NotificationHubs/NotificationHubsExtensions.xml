<Type Name="NotificationHubsExtensions" FullName="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions">
  <TypeSignature Language="C#" Value="public static class NotificationHubsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NotificationHubsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NotificationHubsExtensions" />
  <TypeSignature Language="F#" Value="type NotificationHubsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.NotificationHubs. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNotificationHubNamespaceAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt; CheckNotificationHubNamespaceAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt; CheckNotificationHubNamespaceAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.CheckNotificationHubNamespaceAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNotificationHubNamespaceAvailability (subscriptionResource As SubscriptionResource, content As NotificationHubAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationHubAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckNotificationHubNamespaceAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.CheckNotificationHubNamespaceAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> Request content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckAvailability</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailability(Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNotificationHubNamespaceAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt; CheckNotificationHubNamespaceAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt; CheckNotificationHubNamespaceAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.CheckNotificationHubNamespaceAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNotificationHubNamespaceAvailabilityAsync (subscriptionResource As SubscriptionResource, content As NotificationHubAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationHubAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckNotificationHubNamespaceAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.CheckNotificationHubNamespaceAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> Request content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckAvailability</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailability(Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubAuthorizationRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource GetNotificationHubAuthorizationRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource GetNotificationHubAuthorizationRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubAuthorizationRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubAuthorizationRuleResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubAuthorizationRuleResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubAuthorizationRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubAuthorizationRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubAuthorizationRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubAuthorizationRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespace (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespace(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespace(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespace (resourceGroupResource As ResourceGroupResource, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationHubNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespace : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespace (resourceGroupResource, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="namespaceName"> Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the given namespace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}</description></item><item><term>Operation Id</term><description>Namespaces_Get</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsResourceGroupResource.GetNotificationHubNamespace(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="namespaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&gt; GetNotificationHubNamespaceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&gt; GetNotificationHubNamespaceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaceAsync (resourceGroupResource As ResourceGroupResource, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationHubNamespaceResource))" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceAsync (resourceGroupResource, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="namespaceName"> Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the given namespace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}</description></item><item><term>Operation Id</term><description>Namespaces_Get</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsResourceGroupResource.GetNotificationHubNamespaceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="namespaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaceAuthorizationRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource GetNotificationHubNamespaceAuthorizationRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource GetNotificationHubNamespaceAuthorizationRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceAuthorizationRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaceAuthorizationRuleResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubNamespaceAuthorizationRuleResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaceAuthorizationRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceAuthorizationRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubNamespaceAuthorizationRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceAuthorizationRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource GetNotificationHubNamespaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource GetNotificationHubNamespaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaceResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubNamespaceResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubNamespaceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceCollection GetNotificationHubNamespaces (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceCollection GetNotificationHubNamespaces(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaces (resourceGroupResource As ResourceGroupResource) As NotificationHubNamespaceCollection" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaces : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceCollection" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of NotificationHubNamespaceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsResourceGroupResource.GetNotificationHubNamespaces" /> instead.</description></item></summary>
        <returns> An object representing collection of NotificationHubNamespaceResources and their operations over a NotificationHubNamespaceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaces (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaces : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces (subscriptionResource, cancellationToken)" />
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaces (subscriptionResource As SubscriptionResource, cancellationToken As CancellationToken) As Pageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription irrespective of the resourceGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2017-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespaces (subscriptionResource As SubscriptionResource, Optional skipToken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotificationHubNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespaces : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespaces (subscriptionResource, skipToken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="skipToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="skipToken"> Skip token for subsequent requests. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespacesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespacesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespacesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespacesAsync (subscriptionResource, cancellationToken)" />
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespacesAsync (subscriptionResource As SubscriptionResource, cancellationToken As CancellationToken) As AsyncPageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription irrespective of the resourceGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2017-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string skipToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespacesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubNamespacesAsync (subscriptionResource As SubscriptionResource, Optional skipToken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotificationHubNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubNamespacesAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubNamespacesAsync (subscriptionResource, skipToken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="skipToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="skipToken"> Skip token for subsequent requests. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource GetNotificationHubPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource GetNotificationHubPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubResource GetNotificationHubResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubResource GetNotificationHubResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubsPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource GetNotificationHubsPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource GetNotificationHubsPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubsPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHubsPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As NotificationHubsPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationHubsPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource" Usage="Azure.ResourceManager.NotificationHubs.NotificationHubsExtensions.GetNotificationHubsPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsArmClient.GetNotificationHubsPrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubsPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
