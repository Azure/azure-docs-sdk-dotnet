<Type Name="Boundaries" FullName="Azure.Verticals.AgriFood.Farming.Boundaries">
  <TypeSignature Language="C#" Value="public class Boundaries" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Boundaries extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Verticals.AgriFood.Farming.Boundaries" />
  <TypeSignature Language="VB.NET" Value="Public Class Boundaries" />
  <TypeSignature Language="F#" Value="type Boundaries = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Boundaries sub-client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Boundaries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of Boundaries for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Operation&lt;BinaryData&gt; CreateCascadeDeleteJob (Azure.WaitUntil waitUntil, string jobId, string partyId, string boundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Operation`1&lt;class System.BinaryData&gt; CreateCascadeDeleteJob(valuetype Azure.WaitUntil waitUntil, string jobId, string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.CreateCascadeDeleteJob(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJob (waitUntil As WaitUntil, jobId As String, partyId As String, boundaryId As String, context As RequestContext) As Operation(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;&#xA;override this.CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;" Usage="boundaries.CreateCascadeDeleteJob (waitUntil, jobId, partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="partyId"> ID of the associated party. </param>
        <param name="boundaryId"> ID of the boundary to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Create a cascade delete job for specified boundary.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Operation" /> representing an asynchronous operation on the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CascadeDeleteJob</c>:
<code>{
  partyId: string, # Required. Party Id.
  resourceId: string, # Required. The id of the resource.
  resourceType: string, # Required. The type of the resource.
  id: string, # Optional. Unique job id.
  status: "Waiting" | "Running" | "Succeeded" | "Failed" | "Cancelled", # Optional. Status of the job.
Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
  durationInSeconds: number, # Optional. Duration of the job in seconds.
  message: string, # Optional. Status message to capture more details of the job.
  errorCode: string, # Optional. Error Code when job failed.
  createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call CreateCascadeDeleteJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<boundaryId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJob with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Operation<BinaryData> operation = client.CreateCascadeDeleteJob(WaitUntil.Completed, "<jobId>", "<partyId>", "<boundaryId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt; CreateCascadeDeleteJobAsync (Azure.WaitUntil waitUntil, string jobId, string partyId, string boundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Operation`1&lt;class System.BinaryData&gt;&gt; CreateCascadeDeleteJobAsync(valuetype Azure.WaitUntil waitUntil, string jobId, string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.CreateCascadeDeleteJobAsync(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJobAsync (waitUntil As WaitUntil, jobId As String, partyId As String, boundaryId As String, context As RequestContext) As Task(Of Operation(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;&#xA;override this.CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;" Usage="boundaries.CreateCascadeDeleteJobAsync (waitUntil, jobId, partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Operation&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="partyId"> ID of the associated party. </param>
        <param name="boundaryId"> ID of the boundary to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Create a cascade delete job for specified boundary.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Operation" /> representing an asynchronous operation on the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CascadeDeleteJob</c>:
<code>{
  partyId: string, # Required. Party Id.
  resourceId: string, # Required. The id of the resource.
  resourceType: string, # Required. The type of the resource.
  id: string, # Optional. Unique job id.
  status: "Waiting" | "Running" | "Succeeded" | "Failed" | "Cancelled", # Optional. Status of the job.
Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
  durationInSeconds: number, # Optional. Duration of the job in seconds.
  message: string, # Optional. Status message to capture more details of the job.
  errorCode: string, # Optional. Error Code when job failed.
  createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call CreateCascadeDeleteJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<boundaryId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call CreateCascadeDeleteJobAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Operation<BinaryData> operation = await client.CreateCascadeDeleteJobAsync(WaitUntil.Completed, "<jobId>", "<partyId>", "<boundaryId>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (string partyId, string boundaryId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(string partyId, string boundaryId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.CreateOrUpdate(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (partyId As String, boundaryId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="boundaries.CreateOrUpdate (partyId, boundaryId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party resource. </param>
        <param name="boundaryId"> Id of the boundary resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Creates or updates a boundary resource.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code>

Response Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" />, <paramref name="boundaryId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call CreateOrUpdate and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateOrUpdate("<partyId>", "<boundaryId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    geometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
    type = "<type>",
    parentId = "<parentId>",
    area = new
    {
        unit = "<unit>",
        value = 123.45,
    },
    parentType = "Field",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = client.CreateOrUpdate("<partyId>", "<boundaryId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("geometry").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("crs").ToString());
Console.WriteLine(result.GetProperty("centroid").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("bbox").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("parentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (string partyId, string boundaryId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(string partyId, string boundaryId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.CreateOrUpdateAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (partyId As String, boundaryId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundaries.CreateOrUpdateAsync (partyId, boundaryId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party resource. </param>
        <param name="boundaryId"> Id of the boundary resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Creates or updates a boundary resource.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code>

Response Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" />, <paramref name="boundaryId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call CreateOrUpdateAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateOrUpdateAsync("<partyId>", "<boundaryId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    geometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
    type = "<type>",
    parentId = "<parentId>",
    area = new
    {
        unit = "<unit>",
        value = 123.45,
    },
    parentType = "Field",
    status = "<status>",
    source = "<source>",
    name = "<name>",
    description = "<description>",
    properties = new
    {
        key = new object(),
    },
});
Response response = await client.CreateOrUpdateAsync("<partyId>", "<boundaryId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("geometry").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("crs").ToString());
Console.WriteLine(result.GetProperty("centroid").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("bbox").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("parentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string partyId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.Delete(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (partyId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Delete : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundaries.Delete (partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Deletes a specified boundary resource under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.Delete("<partyId>", "<boundaryId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.Delete("<partyId>", "<boundaryId>");

Console.WriteLine(response.Status);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string partyId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.DeleteAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (partyId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundaries.DeleteAsync (partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Deletes a specified boundary resource under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.DeleteAsync("<partyId>", "<boundaryId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.DeleteAsync("<partyId>", "<boundaryId>");

Console.WriteLine(response.Status);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundaries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetBoundaries (string parentType, string type, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds, double? minArea, double? maxArea, System.Collections.Generic.IEnumerable&lt;string&gt; boundaryIds, System.Collections.Generic.IEnumerable&lt;string&gt; names, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters, System.Collections.Generic.IEnumerable&lt;string&gt; statuses, DateTimeOffset? minCreatedDateTime, DateTimeOffset? maxCreatedDateTime, DateTimeOffset? minLastModifiedDateTime, DateTimeOffset? maxLastModifiedDateTime, int? maxPageSize, string skipToken, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetBoundaries(string parentType, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; boundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundaries(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundaries (parentType As String, type As String, parentIds As IEnumerable(Of String), minArea As Nullable(Of Double), maxArea As Nullable(Of Double), boundaryIds As IEnumerable(Of String), names As IEnumerable(Of String), propertyFilters As IEnumerable(Of String), statuses As IEnumerable(Of String), minCreatedDateTime As Nullable(Of DateTimeOffset), maxCreatedDateTime As Nullable(Of DateTimeOffset), minLastModifiedDateTime As Nullable(Of DateTimeOffset), maxLastModifiedDateTime As Nullable(Of DateTimeOffset), maxPageSize As Nullable(Of Integer), skipToken As String, context As RequestContext) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundaries : string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetBoundaries : string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundaries.GetBoundaries (parentType, type, parentIds, minArea, maxArea, boundaryIds, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="boundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="type"> Type it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minArea"> Minimum area of the boundary (inclusive). </param>
        <param name="maxArea"> Maximum acreage of the boundary (inclusive). </param>
        <param name="boundaryIds"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns a paginated list of boundary resources across all parties.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundaries and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

foreach (BinaryData item in client.GetBoundaries(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetBoundaries with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

foreach (BinaryData item in client.GetBoundaries("<parentType>", "<type>", new string[] { "<parentIds>" }, 123.45, 123.45, new string[] { "<boundaryIds>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetBoundariesAsync (string parentType, string type, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds, double? minArea, double? maxArea, System.Collections.Generic.IEnumerable&lt;string&gt; boundaryIds, System.Collections.Generic.IEnumerable&lt;string&gt; names, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters, System.Collections.Generic.IEnumerable&lt;string&gt; statuses, DateTimeOffset? minCreatedDateTime, DateTimeOffset? maxCreatedDateTime, DateTimeOffset? minLastModifiedDateTime, DateTimeOffset? maxLastModifiedDateTime, int? maxPageSize, string skipToken, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetBoundariesAsync(string parentType, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; boundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundariesAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesAsync (parentType As String, type As String, parentIds As IEnumerable(Of String), minArea As Nullable(Of Double), maxArea As Nullable(Of Double), boundaryIds As IEnumerable(Of String), names As IEnumerable(Of String), propertyFilters As IEnumerable(Of String), statuses As IEnumerable(Of String), minCreatedDateTime As Nullable(Of DateTimeOffset), maxCreatedDateTime As Nullable(Of DateTimeOffset), minLastModifiedDateTime As Nullable(Of DateTimeOffset), maxLastModifiedDateTime As Nullable(Of DateTimeOffset), maxPageSize As Nullable(Of Integer), skipToken As String, context As RequestContext) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesAsync : string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesAsync : string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundaries.GetBoundariesAsync (parentType, type, parentIds, minArea, maxArea, boundaryIds, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="boundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="type"> Type it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minArea"> Minimum area of the boundary (inclusive). </param>
        <param name="maxArea"> Maximum acreage of the boundary (inclusive). </param>
        <param name="boundaryIds"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns a paginated list of boundary resources across all parties.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundariesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

await foreach (BinaryData item in client.GetBoundariesAsync(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetBoundariesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

await foreach (BinaryData item in client.GetBoundariesAsync("<parentType>", "<type>", new string[] { "<parentIds>" }, 123.45, 123.45, new string[] { "<boundaryIds>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesByPartyId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetBoundariesByPartyId (string partyId, string parentType, string type, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds, double? minArea, double? maxArea, System.Collections.Generic.IEnumerable&lt;string&gt; ids, System.Collections.Generic.IEnumerable&lt;string&gt; names, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters, System.Collections.Generic.IEnumerable&lt;string&gt; statuses, DateTimeOffset? minCreatedDateTime, DateTimeOffset? maxCreatedDateTime, DateTimeOffset? minLastModifiedDateTime, DateTimeOffset? maxLastModifiedDateTime, int? maxPageSize, string skipToken, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetBoundariesByPartyId(string partyId, string parentType, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundariesByPartyId(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesByPartyId (partyId As String, parentType As String, type As String, parentIds As IEnumerable(Of String), minArea As Nullable(Of Double), maxArea As Nullable(Of Double), ids As IEnumerable(Of String), names As IEnumerable(Of String), propertyFilters As IEnumerable(Of String), statuses As IEnumerable(Of String), minCreatedDateTime As Nullable(Of DateTimeOffset), maxCreatedDateTime As Nullable(Of DateTimeOffset), minLastModifiedDateTime As Nullable(Of DateTimeOffset), maxLastModifiedDateTime As Nullable(Of DateTimeOffset), maxPageSize As Nullable(Of Integer), skipToken As String, context As RequestContext) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesByPartyId : string * string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesByPartyId : string * string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundaries.GetBoundariesByPartyId (partyId, parentType, type, parentIds, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the associated party. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="type"> Type it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minArea"> Minimum area of the boundary (inclusive). </param>
        <param name="maxArea"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns a paginated list of boundary resources under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundariesByPartyId and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

foreach (BinaryData item in client.GetBoundariesByPartyId("<partyId>", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetBoundariesByPartyId with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

foreach (BinaryData item in client.GetBoundariesByPartyId("<partyId>", "<parentType>", "<type>", new string[] { "<parentIds>" }, 123.45, 123.45, new string[] { "<ids>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesByPartyIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetBoundariesByPartyIdAsync (string partyId, string parentType, string type, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds, double? minArea, double? maxArea, System.Collections.Generic.IEnumerable&lt;string&gt; ids, System.Collections.Generic.IEnumerable&lt;string&gt; names, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters, System.Collections.Generic.IEnumerable&lt;string&gt; statuses, DateTimeOffset? minCreatedDateTime, DateTimeOffset? maxCreatedDateTime, DateTimeOffset? minLastModifiedDateTime, DateTimeOffset? maxLastModifiedDateTime, int? maxPageSize, string skipToken, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetBoundariesByPartyIdAsync(string partyId, string parentType, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundariesByPartyIdAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesByPartyIdAsync (partyId As String, parentType As String, type As String, parentIds As IEnumerable(Of String), minArea As Nullable(Of Double), maxArea As Nullable(Of Double), ids As IEnumerable(Of String), names As IEnumerable(Of String), propertyFilters As IEnumerable(Of String), statuses As IEnumerable(Of String), minCreatedDateTime As Nullable(Of DateTimeOffset), maxCreatedDateTime As Nullable(Of DateTimeOffset), minLastModifiedDateTime As Nullable(Of DateTimeOffset), maxLastModifiedDateTime As Nullable(Of DateTimeOffset), maxPageSize As Nullable(Of Integer), skipToken As String, context As RequestContext) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesByPartyIdAsync : string * string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesByPartyIdAsync : string * string * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundaries.GetBoundariesByPartyIdAsync (partyId, parentType, type, parentIds, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the associated party. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="type"> Type it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minArea"> Minimum area of the boundary (inclusive). </param>
        <param name="maxArea"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns a paginated list of boundary resources under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundariesByPartyIdAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

await foreach (BinaryData item in client.GetBoundariesByPartyIdAsync("<partyId>", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetBoundariesByPartyIdAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

await foreach (BinaryData item in client.GetBoundariesByPartyIdAsync("<partyId>", "<parentType>", "<type>", new string[] { "<parentIds>" }, 123.45, 123.45, new string[] { "<ids>" }, new string[] { "<names>" }, new string[] { "<propertyFilters>" }, new string[] { "<statuses>" }, DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"), 1234, "<skipToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetBoundary (string partyId, string boundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetBoundary(string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundary(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundary (partyId As String, boundaryId As String, context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetBoundary : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetBoundary : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundaries.GetBoundary (partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the associated party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Gets a specified boundary resource under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundary and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetBoundary("<partyId>", "<boundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBoundary with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetBoundary("<partyId>", "<boundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("geometry").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("crs").ToString());
Console.WriteLine(result.GetProperty("centroid").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("bbox").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("parentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetBoundaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetBoundaryAsync (string partyId, string boundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetBoundaryAsync(string partyId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetBoundaryAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundaryAsync (partyId As String, boundaryId As String, context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundaryAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetBoundaryAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundaries.GetBoundaryAsync (partyId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the associated party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Gets a specified boundary resource under a particular party.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Boundary</c>:
<code>{
  geometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  type: string, # Optional. Indicates the type of boundary belonging to a parent.
  crs: string, # Optional. Coordinate  Reference System.
  centroid: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  bbox: GeoJsonObject, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
i.e. Field, SeasonalField, Zone, Prescription, PlantTissueAnalysis, ApplicationData, HarvestData, TillageData, PlantingData.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetBoundaryAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetBoundaryAsync("<partyId>", "<boundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetBoundaryAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetBoundaryAsync("<partyId>", "<boundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("geometry").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("crs").ToString());
Console.WriteLine(result.GetProperty("centroid").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("bbox").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("parentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("eTag").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
Console.WriteLine(result.GetProperty("source").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("modifiedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCascadeDeleteJobDetails (string jobId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCascadeDeleteJobDetails(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetCascadeDeleteJobDetails(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetails (jobId As String, context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response" Usage="boundaries.GetCascadeDeleteJobDetails (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get cascade delete job for specified boundary.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CascadeDeleteJob</c>:
<code>{
  partyId: string, # Required. Party Id.
  resourceId: string, # Required. The id of the resource.
  resourceType: string, # Required. The type of the resource.
  id: string, # Optional. Unique job id.
  status: "Waiting" | "Running" | "Succeeded" | "Failed" | "Cancelled", # Optional. Status of the job.
Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
  durationInSeconds: number, # Optional. Duration of the job in seconds.
  message: string, # Optional. Status message to capture more details of the job.
  errorCode: string, # Optional. Error Code when job failed.
  createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetCascadeDeleteJobDetails and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetails with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetCascadeDeleteJobDetails("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCascadeDeleteJobDetailsAsync (string jobId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCascadeDeleteJobDetailsAsync(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetCascadeDeleteJobDetailsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetailsAsync (jobId As String, context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundaries.GetCascadeDeleteJobDetailsAsync (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get cascade delete job for specified boundary.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>CascadeDeleteJob</c>:
<code>{
  partyId: string, # Required. Party Id.
  resourceId: string, # Required. The id of the resource.
  resourceType: string, # Required. The type of the resource.
  id: string, # Optional. Unique job id.
  status: "Waiting" | "Running" | "Succeeded" | "Failed" | "Cancelled", # Optional. Status of the job.
Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
  durationInSeconds: number, # Optional. Duration of the job in seconds.
  message: string, # Optional. Status message to capture more details of the job.
  errorCode: string, # Optional. Error Code when job failed.
  createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
  endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetCascadeDeleteJobDetailsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
]]></code>
This sample shows how to call GetCascadeDeleteJobDetailsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetCascadeDeleteJobDetailsAsync("<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("partyId").ToString());
Console.WriteLine(result.GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("resourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("durationInSeconds").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errorCode").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetOverlap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetOverlap (string partyId, string boundaryId, string otherPartyId, string otherBoundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetOverlap(string partyId, string boundaryId, string otherPartyId, string otherBoundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetOverlap(System.String,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverlap (partyId As String, boundaryId As String, otherPartyId As String, otherBoundaryId As String, context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetOverlap : string * string * string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetOverlap : string * string * string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundaries.GetOverlap (partyId, boundaryId, otherPartyId, otherBoundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="otherPartyId" Type="System.String" />
        <Parameter Name="otherBoundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="otherPartyId"> PartyId of the other field. </param>
        <param name="otherBoundaryId"> Id of the other boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns overlapping area between two boundary Ids.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>BoundaryOverlapResponse</c>:
<code>{
  boundaryArea: number, # Optional. Acreage of Main boundary.
  otherBoundaryArea: number, # Optional. Acreage of other boundary.
  intersectingArea: number, # Optional. Acreage of intersecting boundary.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" />, <paramref name="boundaryId" />, <paramref name="otherPartyId" /> or <paramref name="otherBoundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetOverlap and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetOverlap("<partyId>", "<boundaryId>", "<otherPartyId>", "<otherBoundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetOverlap with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = client.GetOverlap("<partyId>", "<boundaryId>", "<otherPartyId>", "<otherBoundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("boundaryArea").ToString());
Console.WriteLine(result.GetProperty("otherBoundaryArea").ToString());
Console.WriteLine(result.GetProperty("intersectingArea").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetOverlapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetOverlapAsync (string partyId, string boundaryId, string otherPartyId, string otherBoundaryId, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetOverlapAsync(string partyId, string boundaryId, string otherPartyId, string otherBoundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.GetOverlapAsync(System.String,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverlapAsync (partyId As String, boundaryId As String, otherPartyId As String, otherBoundaryId As String, context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetOverlapAsync : string * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetOverlapAsync : string * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundaries.GetOverlapAsync (partyId, boundaryId, otherPartyId, otherBoundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="otherPartyId" Type="System.String" />
        <Parameter Name="otherBoundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="boundaryId"> Id of the boundary. </param>
        <param name="otherPartyId"> PartyId of the other field. </param>
        <param name="otherBoundaryId"> Id of the other boundary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Returns overlapping area between two boundary Ids.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>BoundaryOverlapResponse</c>:
<code>{
  boundaryArea: number, # Optional. Acreage of Main boundary.
  otherBoundaryArea: number, # Optional. Acreage of other boundary.
  intersectingArea: number, # Optional. Acreage of intersecting boundary.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" />, <paramref name="boundaryId" />, <paramref name="otherPartyId" /> or <paramref name="otherBoundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call GetOverlapAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetOverlapAsync("<partyId>", "<boundaryId>", "<otherPartyId>", "<otherBoundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetOverlapAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

Response response = await client.GetOverlapAsync("<partyId>", "<boundaryId>", "<otherPartyId>", "<otherBoundaryId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("boundaryArea").ToString());
Console.WriteLine(result.GetProperty("otherBoundaryArea").ToString());
Console.WriteLine(result.GetProperty("intersectingArea").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Verticals.AgriFood.Farming.Boundaries.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Verticals.AgriFood.Farming.Boundaries.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; Search (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; Search(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.Search(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Search (content As RequestContent, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member Search : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.Search : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundaries.Search (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Search for boundaries across all parties by fields and intersecting geometry.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for the request payload and one item in the pageable response.

Request Body:

Schema for <c>SearchBoundaryQuery</c>:
<code>{
  ids: [string], # Optional. Ids of the resource.
  names: [string], # Optional. Names of the resource.
  propertyFilters: [string], # Optional. Filters on key-value pairs within the Properties object.
e.g. "{testKey} eq {testValue}".
  statuses: [string], # Optional. Statuses of the resource.
  minCreatedDateTime: string (ISO 8601 Format), # Optional. Minimum creation date of resource (inclusive).
  maxCreatedDateTime: string (ISO 8601 Format), # Optional. Maximum creation date of resource (inclusive).
  minLastModifiedDateTime: string (ISO 8601 Format), # Optional. Minimum last modified date of resource (inclusive).
  maxLastModifiedDateTime: string (ISO 8601 Format), # Optional. Maximum last modified date of resource (inclusive).
  maxPageSize: number, # Optional. Maximum number of items needed (inclusive).
Minimum = 10, Maximum = 1000, Default value = 50.
  skipToken: string, # Optional. Skip token for getting next set of results.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  parentIds: [string], # Optional. Parent Ids of the resource.
  minArea: number, # Optional. Minimum acreage of the boundary (inclusive).
  maxArea: number, # Optional. Maximum acreage of the boundary (inclusive).
  intersectsWithGeometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
}
</code>

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call Search and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
foreach (BinaryData item in client.Search(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call Search with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    ids = new object[]
    {
        "<ids>"
    },
    names = new object[]
    {
        "<names>"
    },
    propertyFilters = new object[]
    {
        "<propertyFilters>"
    },
    statuses = new object[]
    {
        "<statuses>"
    },
    minCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    minLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxPageSize = 1234,
    skipToken = "<skipToken>",
    parentType = "Field",
    type = "<type>",
    parentIds = new object[]
    {
        "<parentIds>"
    },
    minArea = 123.45,
    maxArea = 123.45,
    intersectsWithGeometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
});
foreach (BinaryData item in client.Search(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; SearchAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; SearchAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.SearchAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchAsync (content As RequestContent, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.SearchAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundaries.SearchAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Search for boundaries across all parties by fields and intersecting geometry.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for the request payload and one item in the pageable response.

Request Body:

Schema for <c>SearchBoundaryQuery</c>:
<code>{
  ids: [string], # Optional. Ids of the resource.
  names: [string], # Optional. Names of the resource.
  propertyFilters: [string], # Optional. Filters on key-value pairs within the Properties object.
e.g. "{testKey} eq {testValue}".
  statuses: [string], # Optional. Statuses of the resource.
  minCreatedDateTime: string (ISO 8601 Format), # Optional. Minimum creation date of resource (inclusive).
  maxCreatedDateTime: string (ISO 8601 Format), # Optional. Maximum creation date of resource (inclusive).
  minLastModifiedDateTime: string (ISO 8601 Format), # Optional. Minimum last modified date of resource (inclusive).
  maxLastModifiedDateTime: string (ISO 8601 Format), # Optional. Maximum last modified date of resource (inclusive).
  maxPageSize: number, # Optional. Maximum number of items needed (inclusive).
Minimum = 10, Maximum = 1000, Default value = 50.
  skipToken: string, # Optional. Skip token for getting next set of results.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  parentIds: [string], # Optional. Parent Ids of the resource.
  minArea: number, # Optional. Minimum acreage of the boundary (inclusive).
  maxArea: number, # Optional. Maximum acreage of the boundary (inclusive).
  intersectsWithGeometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
}
</code>

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call SearchAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
await foreach (BinaryData item in client.SearchAsync(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call SearchAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    ids = new object[]
    {
        "<ids>"
    },
    names = new object[]
    {
        "<names>"
    },
    propertyFilters = new object[]
    {
        "<propertyFilters>"
    },
    statuses = new object[]
    {
        "<statuses>"
    },
    minCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    minLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxPageSize = 1234,
    skipToken = "<skipToken>",
    parentType = "Field",
    type = "<type>",
    parentIds = new object[]
    {
        "<parentIds>"
    },
    minArea = 123.45,
    maxArea = 123.45,
    intersectsWithGeometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
});
await foreach (BinaryData item in client.SearchAsync(content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SearchByPartyId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; SearchByPartyId (string partyId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; SearchByPartyId(string partyId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.SearchByPartyId(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchByPartyId (partyId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchByPartyId : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.SearchByPartyId : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundaries.SearchByPartyId (partyId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Search for boundaries by fields and intersecting geometry.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for the request payload and one item in the pageable response.

Request Body:

Schema for <c>SearchBoundaryQuery</c>:
<code>{
  ids: [string], # Optional. Ids of the resource.
  names: [string], # Optional. Names of the resource.
  propertyFilters: [string], # Optional. Filters on key-value pairs within the Properties object.
e.g. "{testKey} eq {testValue}".
  statuses: [string], # Optional. Statuses of the resource.
  minCreatedDateTime: string (ISO 8601 Format), # Optional. Minimum creation date of resource (inclusive).
  maxCreatedDateTime: string (ISO 8601 Format), # Optional. Maximum creation date of resource (inclusive).
  minLastModifiedDateTime: string (ISO 8601 Format), # Optional. Minimum last modified date of resource (inclusive).
  maxLastModifiedDateTime: string (ISO 8601 Format), # Optional. Maximum last modified date of resource (inclusive).
  maxPageSize: number, # Optional. Maximum number of items needed (inclusive).
Minimum = 10, Maximum = 1000, Default value = 50.
  skipToken: string, # Optional. Skip token for getting next set of results.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  parentIds: [string], # Optional. Parent Ids of the resource.
  minArea: number, # Optional. Minimum acreage of the boundary (inclusive).
  maxArea: number, # Optional. Maximum acreage of the boundary (inclusive).
  intersectsWithGeometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
}
</code>

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call SearchByPartyId and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
foreach (BinaryData item in client.SearchByPartyId("<partyId>", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call SearchByPartyId with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    ids = new object[]
    {
        "<ids>"
    },
    names = new object[]
    {
        "<names>"
    },
    propertyFilters = new object[]
    {
        "<propertyFilters>"
    },
    statuses = new object[]
    {
        "<statuses>"
    },
    minCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    minLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxPageSize = 1234,
    skipToken = "<skipToken>",
    parentType = "Field",
    type = "<type>",
    parentIds = new object[]
    {
        "<parentIds>"
    },
    minArea = 123.45,
    maxArea = 123.45,
    intersectsWithGeometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
});
foreach (BinaryData item in client.SearchByPartyId("<partyId>", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SearchByPartyIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; SearchByPartyIdAsync (string partyId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; SearchByPartyIdAsync(string partyId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.Boundaries.SearchByPartyIdAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchByPartyIdAsync (partyId As String, content As RequestContent, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchByPartyIdAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.SearchByPartyIdAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundaries.SearchByPartyIdAsync (partyId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partyId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="partyId"> Id of the party. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Search for boundaries by fields and intersecting geometry.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item></list></summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
Below is the JSON schema for the request payload and one item in the pageable response.

Request Body:

Schema for <c>SearchBoundaryQuery</c>:
<code>{
  ids: [string], # Optional. Ids of the resource.
  names: [string], # Optional. Names of the resource.
  propertyFilters: [string], # Optional. Filters on key-value pairs within the Properties object.
e.g. "{testKey} eq {testValue}".
  statuses: [string], # Optional. Statuses of the resource.
  minCreatedDateTime: string (ISO 8601 Format), # Optional. Minimum creation date of resource (inclusive).
  maxCreatedDateTime: string (ISO 8601 Format), # Optional. Maximum creation date of resource (inclusive).
  minLastModifiedDateTime: string (ISO 8601 Format), # Optional. Minimum last modified date of resource (inclusive).
  maxLastModifiedDateTime: string (ISO 8601 Format), # Optional. Maximum last modified date of resource (inclusive).
  maxPageSize: number, # Optional. Maximum number of items needed (inclusive).
Minimum = 10, Maximum = 1000, Default value = 50.
  skipToken: string, # Optional. Skip token for getting next set of results.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  parentIds: [string], # Optional. Parent Ids of the resource.
  minArea: number, # Optional. Minimum acreage of the boundary (inclusive).
  maxArea: number, # Optional. Maximum acreage of the boundary (inclusive).
  intersectsWithGeometry: {
    type: "Point" | "Polygon" | "MultiPolygon", # Required. GeoJSON object type.
  }, # Optional. GeoJSON (For more details: https://geojson.org/). Note: Coordinates are expected in [Longitude, Latitude] format.
}
</code>

Response Body:

Schema for <c>BoundaryMetadataListResponseValue</c>:
<code>{
  partyId: string, # Optional. Party Id.
  parentId: string, # Optional. Id of the parent it belongs to.
  area: {
    unit: string, # Optional. Data unit.
    value: number, # Optional. Data value.
  }, # Optional. Schema for storing measurement reading and unit.
  parentType: "Field" | "SeasonalField" | "Zone" | "Prescription" | "PlantTissueAnalysis" | "ApplicationData" | "PlantingData" | "TillageData" | "HarvestData", # Optional. Type of the parent it belongs to.
  type: string, # Optional. Type it belongs to.
  id: string, # Optional. Unique resource ID.
  eTag: string, # Optional. The ETag value to implement optimistic concurrency.
  status: string, # Optional. Status of the resource.
  createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
  modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
  source: string, # Optional. Source of the resource.
  name: string, # Optional. Name to identify resource.
  description: string, # Optional. Textual description of the resource.
  createdBy: string, # Optional. Created by user/tenant id.
  modifiedBy: string, # Optional. Modified by user/tenant id.
  properties: Dictionary&lt;string, any&gt;, # Optional. A collection of key value pairs that belongs to the resource.
Each pair must not have a key greater than 50 characters
and must not have a value greater than 150 characters.
Note: A maximum of 25 key value pairs can be provided for a resource and only string,
numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.
}
</code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partyId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partyId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call SearchByPartyIdAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new object());
await foreach (BinaryData item in client.SearchByPartyIdAsync("<partyId>", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call SearchByPartyIdAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
Boundaries client = new FarmBeatsClient(endpoint, credential).GetBoundariesClient();

using RequestContent content = RequestContent.Create(new
{
    ids = new object[]
    {
        "<ids>"
    },
    names = new object[]
    {
        "<names>"
    },
    propertyFilters = new object[]
    {
        "<propertyFilters>"
    },
    statuses = new object[]
    {
        "<statuses>"
    },
    minCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxCreatedDateTime = "2022-05-10T18:57:31.2311892Z",
    minLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxLastModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
    maxPageSize = 1234,
    skipToken = "<skipToken>",
    parentType = "Field",
    type = "<type>",
    parentIds = new object[]
    {
        "<parentIds>"
    },
    minArea = 123.45,
    maxArea = 123.45,
    intersectsWithGeometry = new
    {
        coordinates = new object[]
        {
            new object[]
            {
                new object[]
                {
                    new object[]
                    {
                        123.45
                    }
                }
            }
        },
        type = "MultiPolygon",
    },
});
await foreach (BinaryData item in client.SearchByPartyIdAsync("<partyId>", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("partyId").ToString());
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
    Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("parentType").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("eTag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
    Console.WriteLine(result.GetProperty("source").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("modifiedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("<key>").ToString());
}
]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
