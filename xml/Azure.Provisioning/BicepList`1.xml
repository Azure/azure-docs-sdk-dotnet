<Type Name="BicepList&lt;T&gt;" FullName="Azure.Provisioning.BicepList&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class BicepList&lt;T&gt; : Azure.Provisioning.BicepValue, System.Collections.Generic.ICollection&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IReadOnlyList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BicepList`1&lt;T&gt; extends Azure.Provisioning.BicepValue implements class System.Collections.Generic.ICollection`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IList`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.IEnumerable" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.BicepList`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BicepList(Of T)&#xA;Inherits BicepValue&#xA;Implements ICollection(Of BicepValue(Of T)), IEnumerable(Of BicepValue(Of T)), IList(Of BicepValue(Of T)), IReadOnlyCollection(Of BicepValue(Of T)), IReadOnlyList(Of BicepValue(Of T))" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type BicepList&lt;'T&gt; = class&#xA;    inherit BicepValue&#xA;    interface IList&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface ICollection&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface seq&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyList&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface IReadOnlyCollection&lt;BicepValue&lt;'T&gt;&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class BicepList&lt;T&gt; : Azure.Provisioning.BicepValue, System.Collections.Generic.ICollection&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;, System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BicepList`1&lt;T&gt; extends Azure.Provisioning.BicepValue implements class System.Collections.Generic.ICollection`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.Generic.IList`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt;, class System.Collections.IEnumerable" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class BicepList(Of T)&#xA;Inherits BicepValue&#xA;Implements ICollection(Of BicepValue(Of T)), IEnumerable(Of BicepValue(Of T)), IList(Of BicepValue(Of T))" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type BicepList&lt;'T&gt; = class&#xA;    inherit BicepValue&#xA;    interface IList&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface ICollection&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface seq&lt;BicepValue&lt;'T&gt;&gt;&#xA;    interface IEnumerable" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Azure.Provisioning.BicepValue</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type of element represented by the values.</typeparam>
    <summary>
            Represents a list of Bicep values.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BicepList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new BicepList.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BicepList (System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.#ctor(System.Collections.Generic.IList{Azure.Provisioning.BicepValue{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As IList(Of BicepValue(Of T)))" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.BicepList&lt;'T&gt; : System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;'T&gt;&gt; -&gt; Azure.Provisioning.BicepList&lt;'T&gt;" Usage="new Azure.Provisioning.BicepList&lt;'T&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IList&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>
            Creates a new BicepList with literal values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Azure.Provisioning.BicepValue&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Azure.Provisioning.BicepValue`1&lt;!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Add(Azure.Provisioning.BicepValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As BicepValue(Of T))" />
      <MemberSignature Language="F#" Value="abstract member Add : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; unit&#xA;override this.Add : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; unit" Usage="bicepList.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Azure.Provisioning.BicepValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="public void Assign (Azure.Provisioning.BicepList&lt;T&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Assign(class Azure.Provisioning.BicepList`1&lt;!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Assign(Azure.Provisioning.BicepList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assign (source As BicepList(Of T))" />
      <MemberSignature Language="F#" Value="override this.Assign : Azure.Provisioning.BicepList&lt;'T&gt; -&gt; unit" Usage="bicepList.Assign source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Provisioning.BicepList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bicepList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Azure.Provisioning.BicepValue&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Azure.Provisioning.BicepValue`1&lt;!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Contains(Azure.Provisioning.BicepValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As BicepValue(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; bool&#xA;override this.Contains : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; bool" Usage="bicepList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Azure.Provisioning.BicepValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Azure.Provisioning.BicepValue&lt;T&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Azure.Provisioning.BicepValue`1&lt;!T&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.CopyTo(Azure.Provisioning.BicepValue{`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As BicepValue(Of T)(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Azure.Provisioning.BicepValue&lt;'T&gt;[] * int -&gt; unit&#xA;override this.CopyTo : Azure.Provisioning.BicepValue&lt;'T&gt;[] * int -&gt; unit" Usage="bicepList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Azure.Provisioning.BicepValue&lt;T&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="arrayIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepList`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember FrameworkAlternate="azure-dotnet">P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineProperty">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepList&lt;T&gt; DefineProperty (Azure.Provisioning.Primitives.ProvisioningConstruct construct, string propertyName, string[]? bicepPath, bool isOutput = false, bool isRequired = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepList`1&lt;!T&gt; DefineProperty(class Azure.Provisioning.Primitives.ProvisioningConstruct construct, string propertyName, string[] bicepPath, bool isOutput, bool isRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.DefineProperty(Azure.Provisioning.Primitives.ProvisioningConstruct,System.String,System.String[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineProperty (construct As ProvisioningConstruct, propertyName As String, bicepPath As String(), Optional isOutput As Boolean = false, Optional isRequired As Boolean = false) As BicepList(Of T)" />
      <MemberSignature Language="F#" Value="static member DefineProperty : Azure.Provisioning.Primitives.ProvisioningConstruct * string * string[] * bool * bool -&gt; Azure.Provisioning.BicepList&lt;'T&gt;" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.DefineProperty (construct, propertyName, bicepPath, isOutput, isRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="construct" Type="Azure.Provisioning.Primitives.ProvisioningConstruct" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="bicepPath" Type="System.String[]" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isOutput" Type="System.Boolean" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isRequired" Type="System.Boolean" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="construct">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="bicepPath">To be added.</param>
        <param name="isOutput">To be added.</param>
        <param name="isRequired">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExpression">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepList&lt;T&gt; FromExpression (Func&lt;Azure.Provisioning.Expressions.BicepExpression,T&gt; referenceFactory, Azure.Provisioning.Expressions.BicepExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepList`1&lt;!T&gt; FromExpression(class System.Func`2&lt;class Azure.Provisioning.Expressions.BicepExpression, !T&gt; referenceFactory, class Azure.Provisioning.Expressions.BicepExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.FromExpression(System.Func{Azure.Provisioning.Expressions.BicepExpression,`0},Azure.Provisioning.Expressions.BicepExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExpression (referenceFactory As Func(Of BicepExpression, T), expression As BicepExpression) As BicepList(Of T)" />
      <MemberSignature Language="F#" Value="static member FromExpression : Func&lt;Azure.Provisioning.Expressions.BicepExpression, 'T&gt; * Azure.Provisioning.Expressions.BicepExpression -&gt; Azure.Provisioning.BicepList&lt;'T&gt;" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.FromExpression (referenceFactory, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceFactory" Type="System.Func&lt;Azure.Provisioning.Expressions.BicepExpression,T&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="expression" Type="Azure.Provisioning.Expressions.BicepExpression" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="referenceFactory">
            Factory used to construct new references to models.
            </param>
        <param name="expression">
            A Bicep expression that evaluates to a BicepList.
            </param>
        <summary>
            Creates a new BicepList resource from a Bicep expression that evaluates
            to a BicepList.
            </summary>
        <returns>A BicepList.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExpression">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepList&lt;T&gt; FromExpression (Func&lt;Azure.Provisioning.Expressions.Expression,T&gt; referenceFactory, Azure.Provisioning.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepList`1&lt;!T&gt; FromExpression(class System.Func`2&lt;class Azure.Provisioning.Expressions.Expression, !T&gt; referenceFactory, class Azure.Provisioning.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.FromExpression(System.Func{Azure.Provisioning.Expressions.Expression,`0},Azure.Provisioning.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExpression (referenceFactory As Func(Of Expression, T), expression As Expression) As BicepList(Of T)" />
      <MemberSignature Language="F#" Value="static member FromExpression : Func&lt;Azure.Provisioning.Expressions.Expression, 'T&gt; * Azure.Provisioning.Expressions.Expression -&gt; Azure.Provisioning.BicepList&lt;'T&gt;" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.FromExpression (referenceFactory, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceFactory" Type="System.Func&lt;Azure.Provisioning.Expressions.Expression,T&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="expression" Type="Azure.Provisioning.Expressions.Expression" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="referenceFactory">
            Factory used to construct new references to models.
            </param>
        <param name="expression">
            A Bicep expression that evaluates to a BicepList.
            </param>
        <summary>
            Creates a new BicepList resource from a Bicep expression that evaluates
            to a BicepList.
            </summary>
        <returns>A BicepList.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Azure.Provisioning.BicepValue`1&lt;!T&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of BicepValue(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.Provisioning.BicepValue&lt;'T&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.Provisioning.BicepValue&lt;'T&gt;&gt;" Usage="bicepList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Azure.Provisioning.BicepValue&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (Azure.Provisioning.BicepValue&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class Azure.Provisioning.BicepValue`1&lt;!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.IndexOf(Azure.Provisioning.BicepValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As BicepValue(Of T)) As Integer" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; int&#xA;override this.IndexOf : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; int" Usage="bicepList.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Azure.Provisioning.BicepValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, Azure.Provisioning.BicepValue&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class Azure.Provisioning.BicepValue`1&lt;!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Insert(System.Int32,Azure.Provisioning.BicepValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As BicepValue(Of T))" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; unit&#xA;override this.Insert : int * Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; unit" Usage="bicepList.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="Azure.Provisioning.BicepValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepList`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepList`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;T&gt; this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;!T&gt; Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepList`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As BicepValue(Of T)" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Azure.Provisioning.BicepValue&lt;'T&gt; with get, set" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index of the value.</param>
        <summary>
            Gets or sets a value at a given index.
            </summary>
        <value>The value at the index.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.Provisioning.BicepList&lt;T&gt; (Azure.Provisioning.ProvisioningVariable reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Azure.Provisioning.BicepList`1&lt;!T&gt; op_Implicit(class Azure.Provisioning.ProvisioningVariable reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.op_Implicit(Azure.Provisioning.ProvisioningVariable)~Azure.Provisioning.BicepList{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (reference As ProvisioningVariable) As BicepList(Of T)" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Azure.Provisioning.ProvisioningVariable -&gt; Azure.Provisioning.BicepList&lt;'T&gt;" Usage="Azure.Provisioning.BicepList&lt;'T&gt;.op_Implicit reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Azure.Provisioning.ProvisioningVariable" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Azure.Provisioning.BicepValue&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Azure.Provisioning.BicepValue`1&lt;!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.Remove(Azure.Provisioning.BicepValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As BicepValue(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; bool&#xA;override this.Remove : Azure.Provisioning.BicepValue&lt;'T&gt; -&gt; bool" Usage="bicepList.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Azure.Provisioning.BicepValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bicepList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepList`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bicepList.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
