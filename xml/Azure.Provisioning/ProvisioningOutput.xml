<Type Name="ProvisioningOutput" FullName="Azure.Provisioning.ProvisioningOutput">
  <TypeSignature Language="C#" Value="public class ProvisioningOutput : Azure.Provisioning.ProvisioningVariable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProvisioningOutput extends Azure.Provisioning.ProvisioningVariable" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.ProvisioningOutput" />
  <TypeSignature Language="VB.NET" Value="Public Class ProvisioningOutput&#xA;Inherits ProvisioningVariable" />
  <TypeSignature Language="F#" Value="type ProvisioningOutput = class&#xA;    inherit ProvisioningVariable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.ProvisioningVariable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an output in a Bicep template.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProvisioningOutput (string bicepIdentifier, Azure.Provisioning.Expressions.BicepExpression type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string bicepIdentifier, class Azure.Provisioning.Expressions.BicepExpression type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.ProvisioningOutput.#ctor(System.String,Azure.Provisioning.Expressions.BicepExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bicepIdentifier As String, type As BicepExpression)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.ProvisioningOutput : string * Azure.Provisioning.Expressions.BicepExpression -&gt; Azure.Provisioning.ProvisioningOutput" Usage="new Azure.Provisioning.ProvisioningOutput (bicepIdentifier, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bicepIdentifier" Type="System.String" />
        <Parameter Name="type" Type="Azure.Provisioning.Expressions.BicepExpression" />
      </Parameters>
      <Docs>
        <param name="bicepIdentifier">
            Bicep identifier of the output.  This value can contain letters,
            numbers, and underscores.
            </param>
        <param name="type">Type of the output.</param>
        <summary>
            Creates a new ProvisioningOutput.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProvisioningOutput (string bicepIdentifier, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string bicepIdentifier, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.ProvisioningOutput.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bicepIdentifier As String, type As Type)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.ProvisioningOutput : string * Type -&gt; Azure.Provisioning.ProvisioningOutput" Usage="new Azure.Provisioning.ProvisioningOutput (bicepIdentifier, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bicepIdentifier" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="bicepIdentifier">
            Bicep identifier of the output.  This value can contain letters,
            numbers, and underscores.
            </param>
        <param name="type">Type of the output.</param>
        <summary>
            Creates a new ProvisioningOutput.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Expressions.BicepStatement&gt; Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Expressions.BicepStatement&gt; Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.ProvisioningOutput.Compile" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Iterator Overrides Function Compile () As IEnumerable(Of BicepStatement)" />
      <MemberSignature Language="F#" Value="override this.Compile : unit -&gt; seq&lt;Azure.Provisioning.Expressions.BicepStatement&gt;" Usage="provisioningOutput.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Azure.Provisioning.ProvisioningOutput+&lt;Compile&gt;d__2))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Azure.Provisioning.ProvisioningOutput+&lt;Compile&gt;d__2))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Expressions.BicepStatement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Compile the resource into a set of Bicep statements.
            </summary>
        <returns>Bicep representation of the resource.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
