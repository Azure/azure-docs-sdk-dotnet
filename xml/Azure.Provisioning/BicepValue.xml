<Type Name="BicepValue" FullName="Azure.Provisioning.BicepValue">
  <TypeSignature Language="C#" Value="public abstract class BicepValue : Azure.Provisioning.IBicepValue" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BicepValue extends System.Object implements class Azure.Provisioning.IBicepValue" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.BicepValue" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BicepValue&#xA;Implements IBicepValue" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type BicepValue = class&#xA;    interface IBicepValue" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public abstract class BicepValue" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BicepValue extends System.Object" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BicepValue" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type BicepValue = class" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>Azure.Provisioning.IBicepValue</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents the value of a property that could be a literal .NET value, a
            Bicep expression, or it could be unset.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Azure.Provisioning.IBicepValue.Assign">
      <MemberSignature Language="C#" Value="void IBicepValue.Assign (Azure.Provisioning.IBicepValue source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Azure.Provisioning.IBicepValue.Assign(class Azure.Provisioning.IBicepValue source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#Assign(Azure.Provisioning.IBicepValue)" />
      <MemberSignature Language="VB.NET" Value="Sub Assign (source As IBicepValue) Implements IBicepValue.Assign" />
      <MemberSignature Language="F#" Value="abstract member Azure.Provisioning.IBicepValue.Assign : Azure.Provisioning.IBicepValue -&gt; unit&#xA;override this.Azure.Provisioning.IBicepValue.Assign : Azure.Provisioning.IBicepValue -&gt; unit" Usage="bicepValue.Azure.Provisioning.IBicepValue.Assign source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IBicepValue.Assign(Azure.Provisioning.IBicepValue)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Provisioning.IBicepValue" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="source">Source of the value.</param>
        <summary>
            Assign a value to this property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.Expression">
      <MemberSignature Language="C#" Value="Azure.Provisioning.Expressions.BicepExpression? Azure.Provisioning.IBicepValue.Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Expressions.BicepExpression Azure.Provisioning.IBicepValue.Expression" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#Expression" />
      <MemberSignature Language="VB.NET" Value=" Property Expression As BicepExpression Implements IBicepValue.Expression" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.Expression : Azure.Provisioning.Expressions.BicepExpression with get, set" Usage="Azure.Provisioning.IBicepValue.Expression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BicepExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the expression for this value if it's not a literal.
            </summary>
        <value>The expression for this value if it's not a literal.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.IsOutput">
      <MemberSignature Language="C#" Value="bool Azure.Provisioning.IBicepValue.IsOutput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Azure.Provisioning.IBicepValue.IsOutput" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#IsOutput" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsOutput As Boolean Implements IBicepValue.IsOutput" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.IsOutput : bool" Usage="Azure.Provisioning.IBicepValue.IsOutput" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.IsOutput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tracks whether this is an output only property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.IsRequired">
      <MemberSignature Language="C#" Value="bool Azure.Provisioning.IBicepValue.IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Azure.Provisioning.IBicepValue.IsRequired" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#IsRequired" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsRequired As Boolean Implements IBicepValue.IsRequired" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.IsRequired : bool" Usage="Azure.Provisioning.IBicepValue.IsRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tracks whether this property is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.IsSecure">
      <MemberSignature Language="C#" Value="bool Azure.Provisioning.IBicepValue.IsSecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Azure.Provisioning.IBicepValue.IsSecure" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#IsSecure" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSecure As Boolean Implements IBicepValue.IsSecure" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.IsSecure : bool" Usage="Azure.Provisioning.IBicepValue.IsSecure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.IsSecure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tracks whether this contains a secure value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.Kind">
      <MemberSignature Language="C#" Value="Azure.Provisioning.BicepValueKind Azure.Provisioning.IBicepValue.Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Provisioning.BicepValueKind Azure.Provisioning.IBicepValue.Kind" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#Kind" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Kind As BicepValueKind Implements IBicepValue.Kind" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.Kind : Azure.Provisioning.BicepValueKind" Usage="Azure.Provisioning.IBicepValue.Kind" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.Kind</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValueKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the kind of this value (a literal value, an expression, or it's
            unset).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.LiteralValue">
      <MemberSignature Language="C#" Value="object? Azure.Provisioning.IBicepValue.LiteralValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Azure.Provisioning.IBicepValue.LiteralValue" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#LiteralValue" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property LiteralValue As Object Implements IBicepValue.LiteralValue" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.LiteralValue : obj" Usage="Azure.Provisioning.IBicepValue.LiteralValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.LiteralValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the value of this expression, if it's literal.
            </summary>
        <value>The value of this expression if it's literal.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.Self">
      <MemberSignature Language="C#" Value="Azure.Provisioning.Primitives.BicepValueReference? Azure.Provisioning.IBicepValue.Self { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Primitives.BicepValueReference Azure.Provisioning.IBicepValue.Self" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#Self" />
      <MemberSignature Language="VB.NET" Value=" Property Self As BicepValueReference Implements IBicepValue.Self" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.Self : Azure.Provisioning.Primitives.BicepValueReference with get, set" Usage="Azure.Provisioning.IBicepValue.Self" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.Self</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Primitives.BicepValueReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets information about where this value was defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.SetReadOnly">
      <MemberSignature Language="C#" Value="void IBicepValue.SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Azure.Provisioning.IBicepValue.SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Sub SetReadOnly () Implements IBicepValue.SetReadOnly" />
      <MemberSignature Language="F#" Value="abstract member Azure.Provisioning.IBicepValue.SetReadOnly : unit -&gt; unit&#xA;override this.Azure.Provisioning.IBicepValue.SetReadOnly : unit -&gt; unit" Usage="bicepValue.Azure.Provisioning.IBicepValue.SetReadOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IBicepValue.SetReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Make this value readonly.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Azure.Provisioning.IBicepValue.Source">
      <MemberSignature Language="C#" Value="Azure.Provisioning.Primitives.BicepValueReference? Azure.Provisioning.IBicepValue.Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Primitives.BicepValueReference Azure.Provisioning.IBicepValue.Source" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Azure#Provisioning#IBicepValue#Source" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Source As BicepValueReference Implements IBicepValue.Source" />
      <MemberSignature Language="F#" Value="member this.Azure.Provisioning.IBicepValue.Source : Azure.Provisioning.Primitives.BicepValueReference" Usage="Azure.Provisioning.IBicepValue.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Primitives.BicepValueReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets information about where this value was assigned from.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Expressions.BicepExpression Compile ();" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Provisioning.Expressions.BicepExpression Compile() cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepValue.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As BicepExpression" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; Azure.Provisioning.Expressions.BicepExpression&#xA;override this.Compile : unit -&gt; Azure.Provisioning.Expressions.BicepExpression" Usage="bicepValue.Compile " FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Expressions.Expression Compile ();" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Provisioning.Expressions.Expression Compile() cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Expression" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.Compile : unit -&gt; Azure.Provisioning.Expressions.Expression" Usage="bicepValue.Compile " FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="azure-dotnet">M:Azure.Provisioning.IBicepValue.Compile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Provisioning.Expressions.BicepExpression</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Provisioning.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Compile this value to a Bicep expression.
            </summary>
        <returns>The compiled Bicep expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Expressions.Expression? Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As Expression" />
      <MemberSignature Language="F#" Value="member this.Expression : Azure.Provisioning.Expressions.Expression with get, set" Usage="Azure.Provisioning.BicepValue.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Azure.Provisioning.BicepValue.IsEmpty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IBicepValue.IsEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValueKind Kind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Provisioning.BicepValueKind Kind" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.BicepValue.Kind" />
      <MemberSignature Language="VB.NET" Value="Public Property Kind As BicepValueKind" />
      <MemberSignature Language="F#" Value="member this.Kind : Azure.Provisioning.BicepValueKind with get, set" Usage="Azure.Provisioning.BicepValue.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValueKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the kind of this value (a literal value, an expression, or it's
            unset).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Azure.Provisioning.Expressions.BicepExpression? (Azure.Provisioning.BicepValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Azure.Provisioning.Expressions.BicepExpression op_Explicit(class Azure.Provisioning.BicepValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepValue.op_Explicit(Azure.Provisioning.BicepValue)~Azure.Provisioning.Expressions.BicepExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BicepValue) As BicepExpression" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Azure.Provisioning.BicepValue -&gt; Azure.Provisioning.Expressions.BicepExpression" Usage="Azure.Provisioning.BicepValue.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BicepExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Provisioning.BicepValue" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="value" />
        <summary>
            Gets a bicep expression corresponding to this instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.BicepValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bicepValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current object.</summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
