<Type Name="Infrastructure" FullName="Azure.Provisioning.Infrastructure">
  <TypeSignature Language="C#" Value="public abstract class Infrastructure : Azure.Provisioning.Construct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Infrastructure extends Azure.Provisioning.Construct" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Infrastructure" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Infrastructure&#xA;Inherits Construct" />
  <TypeSignature Language="F#" Value="type Infrastructure = class&#xA;    inherit Construct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Construct</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a set of <see cref="T:Azure.Provisioning.IConstruct" /> that make up the Azure infrastructure.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Infrastructure (Azure.Provisioning.ConstructScope constructScope = Azure.Provisioning.ConstructScope.Subscription, Guid? tenantId = default, Guid? subscriptionId = default, string? envName = default, Azure.Provisioning.Configuration? configuration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.Provisioning.ConstructScope constructScope, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId, string envName, class Azure.Provisioning.Configuration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Infrastructure.#ctor(Azure.Provisioning.ConstructScope,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,Azure.Provisioning.Configuration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional constructScope As ConstructScope = Azure.Provisioning.ConstructScope.Subscription, Optional tenantId As Nullable(Of Guid) = Nothing, Optional subscriptionId As Nullable(Of Guid) = Nothing, Optional envName As String = Nothing, Optional configuration As Configuration = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.Infrastructure : Azure.Provisioning.ConstructScope * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; * string * Azure.Provisioning.Configuration -&gt; Azure.Provisioning.Infrastructure" Usage="new Azure.Provisioning.Infrastructure (constructScope, tenantId, subscriptionId, envName, configuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constructScope" Type="Azure.Provisioning.ConstructScope" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="envName" Type="System.String" />
        <Parameter Name="configuration" Type="Azure.Provisioning.Configuration" />
      </Parameters>
      <Docs>
        <param name="constructScope">The <see cref="T:Azure.Provisioning.ConstructScope" /> to use for the root <see cref="T:Azure.Provisioning.IConstruct" />.</param>
        <param name="tenantId">The tenant id to use.  If not passed in will try to load from AZURE_TENANT_ID environment variable.</param>
        <param name="subscriptionId">The subscription id to use.  If not passed, the subscription will be loaded from the deployment context.</param>
        <param name="envName">The environment name to use.  If not passed in will try to load from AZURE_ENV_NAME environment variable.</param>
        <param name="configuration">The configuration for the infrastructure.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Provisioning.Infrastructure" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public void Build (string? outputPath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Build(string outputPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Infrastructure.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Build (Optional outputPath As String = Nothing)" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; unit" Usage="infrastructure.Build outputPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputPath">Path to put the files.</param>
        <summary>
            Converts the infrastructure to Bicep files.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
