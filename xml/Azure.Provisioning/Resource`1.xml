<Type Name="Resource&lt;T&gt;" FullName="Azure.Provisioning.Resource&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class Resource&lt;T&gt; : Azure.Provisioning.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Resource`1&lt;T&gt; extends Azure.Provisioning.Resource" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Resource`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Resource(Of T)&#xA;Inherits Resource" />
  <TypeSignature Language="F#" Value="type Resource&lt;'T&gt; = class&#xA;    inherit Resource" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Azure.Provisioning.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type from Azure ResourceManager Sdk that represents the properties for the resource.</typeparam>
    <summary>
            Represents a <see cref="T:Azure.Provisioning.Resource" /> with a strongly typed properties object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Resource (Azure.Provisioning.IConstruct scope, Azure.Provisioning.Resource? parent, string resourceName, Azure.Core.ResourceType resourceType, string version, Func&lt;string,T&gt; createProperties, bool isExisting = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Provisioning.IConstruct scope, class Azure.Provisioning.Resource parent, string resourceName, valuetype Azure.Core.ResourceType resourceType, string version, class System.Func`2&lt;string, !T&gt; createProperties, bool isExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.#ctor(Azure.Provisioning.IConstruct,Azure.Provisioning.Resource,System.String,Azure.Core.ResourceType,System.String,System.Func{System.String,`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (scope As IConstruct, parent As Resource, resourceName As String, resourceType As ResourceType, version As String, createProperties As Func(Of String, T), Optional isExisting As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.Resource&lt;'T&gt; : Azure.Provisioning.IConstruct * Azure.Provisioning.Resource * string * Azure.Core.ResourceType * string * Func&lt;string, 'T&gt; * bool -&gt; Azure.Provisioning.Resource&lt;'T&gt;" Usage="new Azure.Provisioning.Resource&lt;'T&gt; (scope, parent, resourceName, resourceType, version, createProperties, isExisting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Provisioning.IConstruct" />
        <Parameter Name="parent" Type="Azure.Provisioning.Resource" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="createProperties" Type="System.Func&lt;System.String,T&gt;" />
        <Parameter Name="isExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope">The scope.</param>
        <param name="parent">The parent.</param>
        <param name="resourceName">The resource name.</param>
        <param name="resourceType">The resourceType.</param>
        <param name="version">The version.</param>
        <param name="createProperties">Lambda to create the ARM properties.</param>
        <param name="isExisting">Whether the resource already exists</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Provisioning.Resource`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutput">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Output AddOutput (string outputName, System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, Azure.Provisioning.BicepType outputType = Azure.Provisioning.BicepType.String, bool isSecure = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Provisioning.Output AddOutput(string outputName, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, valuetype Azure.Provisioning.BicepType outputType, bool isSecure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AddOutput(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Azure.Provisioning.BicepType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOutput (outputName As String, propertySelector As Expression(Of Func(Of T, Object)), Optional outputType As BicepType = Azure.Provisioning.BicepType.String, Optional isSecure As Boolean = false) As Output" />
      <MemberSignature Language="F#" Value="override this.AddOutput : string * System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * Azure.Provisioning.BicepType * bool -&gt; Azure.Provisioning.Output" Usage="resource.AddOutput (outputName, propertySelector, outputType, isSecure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="outputType" Type="Azure.Provisioning.BicepType" />
        <Parameter Name="isSecure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputName">The name of the output.</param>
        <param name="propertySelector">A lambda expression to select the property to use as the source of the output.</param>
        <param name="outputType">The type of the output.</param>
        <param name="isSecure">Is the output secure.</param>
        <summary>
            Adds an output to the resource.
            </summary>
        <returns>The <see cref="T:Azure.Provisioning.Output" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutput">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Output AddOutput (string outputName, System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, bool isLiteral, bool isSecure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Provisioning.Output AddOutput(string outputName, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, bool isLiteral, bool isSecure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AddOutput(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOutput (outputName As String, propertySelector As Expression(Of Func(Of T, Object)), isLiteral As Boolean, isSecure As Boolean) As Output" />
      <MemberSignature Language="F#" Value="override this.AddOutput : string * System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * bool * bool -&gt; Azure.Provisioning.Output" Usage="resource.AddOutput (outputName, propertySelector, isLiteral, isSecure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="isLiteral" Type="System.Boolean" />
        <Parameter Name="isSecure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputName">The name of the output.</param>
        <param name="propertySelector">A lambda expression to select the property to use as the source of the output.</param>
        <param name="isLiteral">Is the output literal.</param>
        <param name="isSecure">Is the output secure.</param>
        <summary>
            Adds an output to the resource.
            </summary>
        <returns>The <see cref="T:Azure.Provisioning.Output" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutput">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Output AddOutput (string outputName, string formattedString, System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, Azure.Provisioning.BicepType outputType = Azure.Provisioning.BicepType.String, bool isSecure = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Provisioning.Output AddOutput(string outputName, string formattedString, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, valuetype Azure.Provisioning.BicepType outputType, bool isSecure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AddOutput(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Azure.Provisioning.BicepType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOutput (outputName As String, formattedString As String, propertySelector As Expression(Of Func(Of T, Object)), Optional outputType As BicepType = Azure.Provisioning.BicepType.String, Optional isSecure As Boolean = false) As Output" />
      <MemberSignature Language="F#" Value="override this.AddOutput : string * string * System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * Azure.Provisioning.BicepType * bool -&gt; Azure.Provisioning.Output" Usage="resource.AddOutput (outputName, formattedString, propertySelector, outputType, isSecure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="formattedString" Type="System.String" />
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="outputType" Type="Azure.Provisioning.BicepType" />
        <Parameter Name="isSecure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputName">The name of the output.</param>
        <param name="outputType">The kind of the output.</param>
        <param name="propertySelector">A lambda expression to select the property to use as the source of the output.</param>
        <param name="formattedString">A tokenized string containing the output.</param>
        <param name="isSecure">Is the output secure.</param>
        <summary>
            Adds an output to the resource.
            </summary>
        <returns>The <see cref="T:Azure.Provisioning.Output" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutput">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Output AddOutput (string outputName, string formattedString, System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, bool isLiteral, bool isSecure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Provisioning.Output AddOutput(string outputName, string formattedString, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, bool isLiteral, bool isSecure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AddOutput(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOutput (outputName As String, formattedString As String, propertySelector As Expression(Of Func(Of T, Object)), isLiteral As Boolean, isSecure As Boolean) As Output" />
      <MemberSignature Language="F#" Value="override this.AddOutput : string * string * System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * bool * bool -&gt; Azure.Provisioning.Output" Usage="resource.AddOutput (outputName, formattedString, propertySelector, isLiteral, isSecure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Output</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="formattedString" Type="System.String" />
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="isLiteral" Type="System.Boolean" />
        <Parameter Name="isSecure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputName">The name of the output.</param>
        <param name="propertySelector">A lambda expression to select the property to use as the source of the output.</param>
        <param name="formattedString">A tokenized string containing the output.</param>
        <param name="isLiteral">Is the output literal.</param>
        <param name="isSecure">Is the output secure.</param>
        <summary>
            Adds an output to the resource.
            </summary>
        <returns>The <see cref="T:Azure.Provisioning.Output" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignProperty">
      <MemberSignature Language="C#" Value="public void AssignProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, Azure.Provisioning.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, valuetype Azure.Provisioning.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AssignProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Azure.Provisioning.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignProperty (propertySelector As Expression(Of Func(Of T, Object)), parameter As Parameter)" />
      <MemberSignature Language="F#" Value="override this.AssignProperty : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * Azure.Provisioning.Parameter -&gt; unit" Usage="resource.AssignProperty (propertySelector, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="parameter" Type="Azure.Provisioning.Parameter" />
      </Parameters>
      <Docs>
        <param name="propertySelector" />
        <param name="parameter" />
        <summary />
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
    <Member MemberName="AssignProperty">
      <MemberSignature Language="C#" Value="public void AssignProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object?&gt;&gt; propertySelector, string propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertySelector, string propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resource`1.AssignProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignProperty (propertySelector As Expression(Of Func(Of T, Object)), propertyValue As String)" />
      <MemberSignature Language="F#" Value="override this.AssignProperty : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; * string -&gt; unit" Usage="resource.AssignProperty (propertySelector, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="propertyValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertySelector" />
        <param name="propertyValue" />
        <summary />
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public T Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Properties" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resource`1.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As T" />
      <MemberSignature Language="F#" Value="member this.Properties : 'T" Usage="Azure.Provisioning.Resource&lt;'T&gt;.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the properties of the resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
