<Type Name="Construct" FullName="Azure.Provisioning.Construct">
  <TypeSignature Language="C#" Value="public abstract class Construct : Azure.Provisioning.IConstruct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Construct extends System.Object implements class Azure.Provisioning.IConstruct" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Construct" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Construct&#xA;Implements IConstruct" />
  <TypeSignature Language="F#" Value="type Construct = class&#xA;    interface IConstruct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Azure.Provisioning.IConstruct</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Basic building block of a set of resources in Azure.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Construct (Azure.Provisioning.IConstruct? scope, string name, Azure.Provisioning.ConstructScope constructScope = Azure.Provisioning.ConstructScope.ResourceGroup, Guid? tenantId = default, Guid? subscriptionId = default, string? envName = default, Azure.Provisioning.ResourceManager.ResourceGroup? resourceGroup = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Provisioning.IConstruct scope, string name, valuetype Azure.Provisioning.ConstructScope constructScope, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId, string envName, class Azure.Provisioning.ResourceManager.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.#ctor(Azure.Provisioning.IConstruct,System.String,Azure.Provisioning.ConstructScope,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,Azure.Provisioning.ResourceManager.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (scope As IConstruct, name As String, Optional constructScope As ConstructScope = Azure.Provisioning.ConstructScope.ResourceGroup, Optional tenantId As Nullable(Of Guid) = Nothing, Optional subscriptionId As Nullable(Of Guid) = Nothing, Optional envName As String = Nothing, Optional resourceGroup As ResourceGroup = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.Construct : Azure.Provisioning.IConstruct * string * Azure.Provisioning.ConstructScope * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; * string * Azure.Provisioning.ResourceManager.ResourceGroup -&gt; Azure.Provisioning.Construct" Usage="new Azure.Provisioning.Construct (scope, name, constructScope, tenantId, subscriptionId, envName, resourceGroup)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Provisioning.IConstruct" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="constructScope" Type="Azure.Provisioning.ConstructScope" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="envName" Type="System.String" />
        <Parameter Name="resourceGroup" Type="Azure.Provisioning.ResourceManager.ResourceGroup" />
      </Parameters>
      <Docs>
        <param name="scope">The scope the construct belongs to.</param>
        <param name="name">The name of the construct.</param>
        <param name="constructScope">The <see cref="P:Azure.Provisioning.Construct.ConstructScope" /> the construct is.</param>
        <param name="tenantId">The tenant id to use.  If not passed in will try to load from AZURE_TENANT_ID environment variable.</param>
        <param name="subscriptionId">The subscription id to use.  If not passed, the subscription will be loaded from the deployment context.</param>
        <param name="envName">The environment name to use.  If not passed in will try to load from AZURE_ENV_NAME environment variable.</param>
        <param name="resourceGroup" />
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Provisioning.Construct" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="constructScope" /> is <see cref="F:Azure.Provisioning.ConstructScope.ResourceGroup" /> and <paramref name="scope" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddConstruct">
      <MemberSignature Language="C#" Value="public void AddConstruct (Azure.Provisioning.IConstruct construct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddConstruct(class Azure.Provisioning.IConstruct construct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.AddConstruct(Azure.Provisioning.IConstruct)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddConstruct (construct As IConstruct)" />
      <MemberSignature Language="F#" Value="abstract member AddConstruct : Azure.Provisioning.IConstruct -&gt; unit&#xA;override this.AddConstruct : Azure.Provisioning.IConstruct -&gt; unit" Usage="construct.AddConstruct construct" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.AddConstruct(Azure.Provisioning.IConstruct)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="construct" Type="Azure.Provisioning.IConstruct" />
      </Parameters>
      <Docs>
        <param name="construct">The <see cref="T:Azure.Provisioning.IConstruct" /> to add.</param>
        <summary>
            Adds a child construct to the construct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOutput">
      <MemberSignature Language="C#" Value="public void AddOutput (Azure.Provisioning.Output output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOutput(class Azure.Provisioning.Output output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.AddOutput(Azure.Provisioning.Output)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOutput (output As Output)" />
      <MemberSignature Language="F#" Value="abstract member AddOutput : Azure.Provisioning.Output -&gt; unit&#xA;override this.AddOutput : Azure.Provisioning.Output -&gt; unit" Usage="construct.AddOutput output" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.AddOutput(Azure.Provisioning.Output)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Azure.Provisioning.Output" />
      </Parameters>
      <Docs>
        <param name="output">The <see cref="T:Azure.Provisioning.Output" /> to add.</param>
        <summary>
            Adds an output to the construct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public void AddParameter (Azure.Provisioning.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(valuetype Azure.Provisioning.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.AddParameter(Azure.Provisioning.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddParameter (parameter As Parameter)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : Azure.Provisioning.Parameter -&gt; unit&#xA;override this.AddParameter : Azure.Provisioning.Parameter -&gt; unit" Usage="construct.AddParameter parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.AddParameter(Azure.Provisioning.Parameter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Azure.Provisioning.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">The <see cref="T:Azure.Provisioning.Parameter" /> to add.</param>
        <summary>
            Adds a parameter to the construct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (Azure.Provisioning.Resource resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(class Azure.Provisioning.Resource resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.AddResource(Azure.Provisioning.Resource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (resource As Resource)" />
      <MemberSignature Language="F#" Value="abstract member AddResource : Azure.Provisioning.Resource -&gt; unit&#xA;override this.AddResource : Azure.Provisioning.Resource -&gt; unit" Usage="construct.AddResource resource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.AddResource(Azure.Provisioning.Resource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="Azure.Provisioning.Resource" />
      </Parameters>
      <Docs>
        <param name="resource">The <see cref="T:Azure.Provisioning.Resource" /> to add.</param>
        <summary>
            Adds a resource to the construct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Configuration? Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Configuration Configuration" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Configuration As Configuration" />
      <MemberSignature Language="F#" Value="member this.Configuration : Azure.Provisioning.Configuration" Usage="Azure.Provisioning.Construct.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Configuration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the configuration for the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructScope">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.ConstructScope ConstructScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Provisioning.ConstructScope ConstructScope" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.ConstructScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructScope As ConstructScope" />
      <MemberSignature Language="F#" Value="member this.ConstructScope : Azure.Provisioning.ConstructScope" Usage="Azure.Provisioning.Construct.ConstructScope" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.ConstructScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.ConstructScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Provisioning.ConstructScope" /> scope.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentName">
      <MemberSignature Language="C#" Value="public string EnvironmentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnvironmentName" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.EnvironmentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentName As String" />
      <MemberSignature Language="F#" Value="member this.EnvironmentName : string" Usage="Azure.Provisioning.Construct.EnvironmentName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.EnvironmentName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the environment name of the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.IConstruct&gt; GetConstructs (bool recursive = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.IConstruct&gt; GetConstructs(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.GetConstructs(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructs (Optional recursive As Boolean = true) As IEnumerable(Of IConstruct)" />
      <MemberSignature Language="F#" Value="abstract member GetConstructs : bool -&gt; seq&lt;Azure.Provisioning.IConstruct&gt;&#xA;override this.GetConstructs : bool -&gt; seq&lt;Azure.Provisioning.IConstruct&gt;" Usage="construct.GetConstructs recursive" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.GetConstructs(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.IConstruct&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Include all child constructs.</param>
        <summary>
            Gets all child constructs in the construct.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Output&gt; GetOutputs (bool recursive = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Output&gt; GetOutputs(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.GetOutputs(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutputs (Optional recursive As Boolean = true) As IEnumerable(Of Output)" />
      <MemberSignature Language="F#" Value="abstract member GetOutputs : bool -&gt; seq&lt;Azure.Provisioning.Output&gt;&#xA;override this.GetOutputs : bool -&gt; seq&lt;Azure.Provisioning.Output&gt;" Usage="construct.GetOutputs recursive" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.GetOutputs(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Output&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Include all child constructs.</param>
        <summary>
            Gets all outputs in the construct.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Parameter&gt; GetParameters (bool recursive = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Provisioning.Parameter&gt; GetParameters(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.GetParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameters (Optional recursive As Boolean = true) As IEnumerable(Of Parameter)" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : bool -&gt; seq&lt;Azure.Provisioning.Parameter&gt;&#xA;override this.GetParameters : bool -&gt; seq&lt;Azure.Provisioning.Parameter&gt;" Usage="construct.GetParameters recursive" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.GetParameters(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Parameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Include all child constructs.</param>
        <summary>
            Gets all parameters in the construct.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResources">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Resource&gt; GetResources (bool recursive = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Resource&gt; GetResources(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.GetResources(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResources (Optional recursive As Boolean = true) As IEnumerable(Of Resource)" />
      <MemberSignature Language="F#" Value="abstract member GetResources : bool -&gt; seq&lt;Azure.Provisioning.Resource&gt;&#xA;override this.GetResources : bool -&gt; seq&lt;Azure.Provisioning.Resource&gt;" Usage="construct.GetResources recursive" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Provisioning.IConstruct.GetResources(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Resource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Include all child constructs.</param>
        <summary>
            Gets all resources in the construct.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Provisioning.Construct.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceGroup">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.ResourceManager.ResourceGroup? ResourceGroup { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.ResourceManager.ResourceGroup ResourceGroup" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.ResourceGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceGroup As ResourceGroup" />
      <MemberSignature Language="F#" Value="member this.ResourceGroup : Azure.Provisioning.ResourceManager.ResourceGroup with get, set" Usage="Azure.Provisioning.Construct.ResourceGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.ResourceManager.ResourceGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Provisioning.ResourceManager.ResourceGroup" /> for the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.ResourceManager.Tenant Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.ResourceManager.Tenant Root" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As Tenant" />
      <MemberSignature Language="F#" Value="member this.Root : Azure.Provisioning.ResourceManager.Tenant" Usage="Azure.Provisioning.Construct.Root" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.Root</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.ResourceManager.Tenant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Provisioning.ResourceManager.Tenant" /> for the construct."/&gt;.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.IConstruct? Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.IConstruct Scope" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As IConstruct" />
      <MemberSignature Language="F#" Value="member this.Scope : Azure.Provisioning.IConstruct" Usage="Azure.Provisioning.Construct.Scope" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.Scope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.IConstruct</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent of the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscription">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.ResourceManager.Subscription? Subscription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.ResourceManager.Subscription Subscription" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Construct.Subscription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subscription As Subscription" />
      <MemberSignature Language="F#" Value="member this.Subscription : Azure.Provisioning.ResourceManager.Subscription" Usage="Azure.Provisioning.Construct.Subscription" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Provisioning.IConstruct.Subscription</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.ResourceManager.Subscription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Provisioning.ResourceManager.Subscription" /> for the construct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseExistingResource&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected T UseExistingResource&lt;T&gt; (T? resource, Func&lt;T&gt; create) where T : Azure.Provisioning.Resource;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !!T UseExistingResource&lt;(class Azure.Provisioning.Resource) T&gt;(!!T resource, class System.Func`1&lt;!!T&gt; create) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Construct.UseExistingResource``1(``0,System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseExistingResource(Of T As Resource) (resource As T, create As Func(Of T)) As T" />
      <MemberSignature Language="F#" Value="member this.UseExistingResource : 'T * Func&lt;'T (requires 'T :&gt; Azure.Provisioning.Resource)&gt; -&gt; 'T (requires 'T :&gt; Azure.Provisioning.Resource)" Usage="construct.UseExistingResource (resource, create)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Azure.Provisioning.Resource</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="resource" Type="T" />
        <Parameter Name="create" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of <see cref="T:Azure.Provisioning.Resource" /> to use.</typeparam>
        <param name="resource">Resource instance to use.</param>
        <param name="create">Lambda to create the resource if it was not found.</param>
        <summary>
            Registers an existing resource with this construct that will be used by other resources in the construct.
            </summary>
        <returns>The <see cref="T:Azure.Provisioning.Resource" /> instance that will be used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
