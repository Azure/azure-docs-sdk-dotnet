<Type Name="ReservationOrderResource" FullName="Azure.ResourceManager.Reservations.ReservationOrderResource">
  <TypeSignature Language="C#" Value="public class ReservationOrderResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReservationOrderResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Reservations.ReservationOrderResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ReservationOrderResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type ReservationOrderResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class ReservationOrderResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReservationOrderResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class ReservationOrderResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of ReservationOrderData), IPersistableModel(Of ReservationOrderData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type ReservationOrderResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;ReservationOrderData&gt;&#xA;    interface IPersistableModel&lt;ReservationOrderData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a ReservationOrder along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetReservationOrderResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> using the GetReservationOrder method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationOrderResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRefund">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt; CalculateRefund (Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt; CalculateRefund(class Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.CalculateRefund(Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateRefund (content As ReservationCalculateRefundContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationCalculateRefundResult)" />
      <MemberSignature Language="F#" Value="abstract member CalculateRefund : Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&#xA;override this.CalculateRefund : Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;" Usage="reservationOrderResource.CalculateRefund (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for calculating refund of a reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculate price for returning `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund</description></item><item><term>Operation Id</term><description>CalculateRefund_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateRefundAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&gt; CalculateRefundAsync (Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&gt; CalculateRefundAsync(class Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.CalculateRefundAsync(Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateRefundAsync (content As ReservationCalculateRefundContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationCalculateRefundResult))" />
      <MemberSignature Language="F#" Value="abstract member CalculateRefundAsync : Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&gt;&#xA;override this.CalculateRefundAsync : Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&gt;" Usage="reservationOrderResource.CalculateRefundAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationCalculateRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for calculating refund of a reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculate price for returning `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund</description></item><item><term>Operation Id</term><description>CalculateRefund_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDirectory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt; ChangeDirectory (Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt; ChangeDirectory(class Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.ChangeDirectory(Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeDirectory (content As ChangeDirectoryContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChangeDirectoryDetail)" />
      <MemberSignature Language="F#" Value="abstract member ChangeDirectory : Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&#xA;override this.ChangeDirectory : Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;" Usage="reservationOrderResource.ChangeDirectory (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed to change directory of reservation order. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/changeDirectory</description></item><item><term>Operation Id</term><description>ReservationOrder_ChangeDirectory</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDirectoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&gt; ChangeDirectoryAsync (Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&gt; ChangeDirectoryAsync(class Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.ChangeDirectoryAsync(Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeDirectoryAsync (content As ChangeDirectoryContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChangeDirectoryDetail))" />
      <MemberSignature Language="F#" Value="abstract member ChangeDirectoryAsync : Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&gt;&#xA;override this.ChangeDirectoryAsync : Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&gt;" Usage="reservationOrderResource.ChangeDirectoryAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ChangeDirectoryDetail&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ChangeDirectoryContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed to change directory of reservation order. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/changeDirectory</description></item><item><term>Operation Id</term><description>ReservationOrder_ChangeDirectory</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (Guid reservationOrderId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(valuetype System.Guid reservationOrderId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.CreateResourceIdentifier(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (reservationOrderId As Guid) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : Guid -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Reservations.ReservationOrderResource.CreateResourceIdentifier reservationOrderId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationOrderId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="reservationOrderId"> The reservationOrderId. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Reservations.ReservationOrderData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Reservations.ReservationOrderData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Reservations.ReservationOrderResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ReservationOrderData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Reservations.ReservationOrderData" Usage="Azure.ResourceManager.Reservations.ReservationOrderResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Get (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Get(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationOrderResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;" Usage="reservationOrderResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationOrderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;" Usage="reservationOrderResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetail">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetail (Guid reservationId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetail(valuetype System.Guid reservationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.GetReservationDetail(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetail (reservationId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetail : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&#xA;override this.GetReservationDetail : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="reservationOrderResource.GetReservationDetail (reservationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationId"> Id of the reservation item. </param>
        <param name="expand"> Supported value of this query is renewProperties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get specific `Reservation` details.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}</description></item><item><term>Operation Id</term><description>Reservation_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&gt; GetReservationDetailAsync (Guid reservationId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&gt; GetReservationDetailAsync(valuetype System.Guid reservationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.GetReservationDetailAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetailAsync (reservationId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationDetailResource))" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetailAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&gt;&#xA;override this.GetReservationDetailAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&gt;" Usage="reservationOrderResource.GetReservationDetailAsync (reservationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationId"> Id of the reservation item. </param>
        <param name="expand"> Supported value of this query is renewProperties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get specific `Reservation` details.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}</description></item><item><term>Operation Id</term><description>Reservation_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Reservations.ReservationDetailCollection GetReservationDetails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.ReservationDetailCollection GetReservationDetails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.GetReservationDetails" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetails () As ReservationDetailCollection" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetails : unit -&gt; Azure.ResourceManager.Reservations.ReservationDetailCollection&#xA;override this.GetReservationDetails : unit -&gt; Azure.ResourceManager.Reservations.ReservationDetailCollection" Usage="reservationOrderResource.GetReservationDetails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationDetailCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ReservationDetailResources in the ReservationOrder. </summary>
        <returns> An object representing collection of ReservationDetailResources and their operations over a ReservationDetailResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Reservations.ReservationOrderResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Reservations.ReservationOrderResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeReservation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt; MergeReservation (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.MergeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt; MergeReservation(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.MergeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.MergeReservation(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.MergeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeReservation (waitUntil As WaitUntil, content As MergeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of IList(Of ReservationDetailData))" />
      <MemberSignature Language="F#" Value="abstract member MergeReservation : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.MergeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&#xA;override this.MergeReservation : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.MergeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;" Usage="reservationOrderResource.MergeReservation (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.MergeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for commercial request for a reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge</description></item><item><term>Operation Id</term><description>Reservation_Merge</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="MergeReservationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt; MergeReservationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.MergeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt; MergeReservationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.MergeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.MergeReservationAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.MergeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeReservationAsync (waitUntil As WaitUntil, content As MergeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of IList(Of ReservationDetailData)))" />
      <MemberSignature Language="F#" Value="abstract member MergeReservationAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.MergeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;&#xA;override this.MergeReservationAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.MergeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;" Usage="reservationOrderResource.MergeReservationAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.MergeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for commercial request for a reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge</description></item><item><term>Operation Id</term><description>Reservation_Merge</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Reservations.ReservationOrderResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Reservations.ReservationOrderResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt; Return (Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt; Return(class Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.Return(Azure.ResourceManager.Reservations.Models.ReservationRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Return (content As ReservationRefundContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationRefundResult)" />
      <MemberSignature Language="F#" Value="abstract member Return : Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&#xA;override this.Return : Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;" Usage="reservationOrderResource.Return (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for returning reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return a reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return</description></item><item><term>Operation Id</term><description>Return_Post</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Return (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Return(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.Return(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ReservationRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Return (waitUntil As WaitUntil, content As ReservationRefundContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReservationOrderResource)" />
      <MemberSignature Language="F#" Value="abstract member Return : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&#xA;override this.Return : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;" Usage="reservationOrderResource.Return (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for returning reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return a reservation and get refund information.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return</description></item><item><term>Operation Id</term><description>Return_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReturnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&gt; ReturnAsync (Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&gt; ReturnAsync(class Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.ReturnAsync(Azure.ResourceManager.Reservations.Models.ReservationRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReturnAsync (content As ReservationRefundContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationRefundResult))" />
      <MemberSignature Language="F#" Value="abstract member ReturnAsync : Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&gt;&#xA;override this.ReturnAsync : Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&gt;" Usage="reservationOrderResource.ReturnAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.ReservationRefundResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for returning reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return a reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return</description></item><item><term>Operation Id</term><description>Return_Post</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReturnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; ReturnAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; ReturnAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ReservationRefundContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.ReturnAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ReservationRefundContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReturnAsync (waitUntil As WaitUntil, content As ReservationRefundContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReservationOrderResource))" />
      <MemberSignature Language="F#" Value="abstract member ReturnAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;&#xA;override this.ReturnAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationRefundContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;" Usage="reservationOrderResource.ReturnAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationRefundContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for returning reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return a reservation and get refund information.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return</description></item><item><term>Operation Id</term><description>Return_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SplitReservation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt; SplitReservation (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.SplitContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt; SplitReservation(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.SplitContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.SplitReservation(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.SplitContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SplitReservation (waitUntil As WaitUntil, content As SplitContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of IList(Of ReservationDetailData))" />
      <MemberSignature Language="F#" Value="abstract member SplitReservation : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.SplitContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&#xA;override this.SplitReservation : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.SplitContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;" Usage="reservationOrderResource.SplitReservation (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.SplitContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed to Split a reservation item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Split a `Reservation` into two `Reservation`s with specified quantity distribution.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split</description></item><item><term>Operation Id</term><description>Reservation_Split</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SplitReservationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt; SplitReservationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.SplitContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt; SplitReservationAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.SplitContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.SplitReservationAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.SplitContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SplitReservationAsync (waitUntil As WaitUntil, content As SplitContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of IList(Of ReservationDetailData)))" />
      <MemberSignature Language="F#" Value="abstract member SplitReservationAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.SplitContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;&#xA;override this.SplitReservationAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.SplitContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;" Usage="reservationOrderResource.SplitReservationAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;System.Collections.Generic.IList&lt;Azure.ResourceManager.Reservations.ReservationDetailData&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.SplitContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed to Split a reservation item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Split a `Reservation` into two `Reservation`s with specified quantity distribution.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split</description></item><item><term>Operation Id</term><description>Reservation_Split</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Reservations.ReservationOrderData IJsonModel&lt;ReservationOrderData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.ReservationOrderData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Reservations#ReservationOrderData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ReservationOrderData Implements IJsonModel(Of ReservationOrderData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Reservations.ReservationOrderData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Reservations.ReservationOrderData" Usage="reservationOrderResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ReservationOrderData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Reservations#ReservationOrderData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ReservationOrderData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="reservationOrderResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Reservations.ReservationOrderData IPersistableModel&lt;ReservationOrderData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.ReservationOrderData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Reservations#ReservationOrderData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ReservationOrderData Implements IPersistableModel(Of ReservationOrderData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Reservations.ReservationOrderData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Reservations.ReservationOrderData" Usage="reservationOrderResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ReservationOrderData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Reservations#ReservationOrderData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ReservationOrderData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="reservationOrderResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ReservationOrderData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Reservations#ReservationOrderData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ReservationOrderData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="reservationOrderResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Reservations.ReservationOrderData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.Update(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReservationOrderResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;" Usage="reservationOrderResource.Update (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Purchase `ReservationOrder` and create resource under the specified URI.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Purchase</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationOrderResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReservationOrderResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;" Usage="reservationOrderResource.UpdateAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Purchase `ReservationOrder` and create resource under the specified URI.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Purchase</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
