<Type Name="ReservationsExtensions" FullName="Azure.ResourceManager.Reservations.ReservationsExtensions">
  <TypeSignature Language="C#" Value="public static class ReservationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ReservationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Reservations.ReservationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ReservationsExtensions" />
  <TypeSignature Language="F#" Value="type ReservationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Reservations. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CalculateReservationExchange">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt; CalculateReservationExchange (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt; CalculateReservationExchange(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationExchange(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationExchange (tenantResource As TenantResource, waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CalculateExchangeResult)" />
      <MemberSignature Language="F#" Value="static member CalculateReservationExchange : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationExchange (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculates price for exchanging `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculateExchange</description></item><item><term>Operation Id</term><description>CalculateExchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationExchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationExchangeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt; CalculateReservationExchangeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt; CalculateReservationExchangeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationExchangeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationExchangeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CalculateExchangeResult))" />
      <MemberSignature Language="F#" Value="static member CalculateReservationExchangeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationExchangeAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculates price for exchanging `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculateExchange</description></item><item><term>Operation Id</term><description>CalculateExchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationExchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationOrder">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt; CalculateReservationOrder (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt; CalculateReservationOrder(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrder(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationOrder (tenantResource As TenantResource, content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CalculatePriceResult)" />
      <MemberSignature Language="F#" Value="static member CalculateReservationOrder : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrder (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculatePrice</description></item><item><term>Operation Id</term><description>ReservationOrder_Calculate</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationOrder(Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationOrderAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt; CalculateReservationOrderAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt; CalculateReservationOrderAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrderAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationOrderAsync (tenantResource As TenantResource, content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CalculatePriceResult))" />
      <MemberSignature Language="F#" Value="static member CalculateReservationOrderAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrderAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculatePrice</description></item><item><term>Operation Id</term><description>ReservationOrder_Calculate</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationOrder(Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt; Exchange (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeResult&gt; Exchange(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.Exchange(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exchange (tenantResource As TenantResource, waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ExchangeResult)" />
      <MemberSignature Language="F#" Value="static member Exchange : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.Exchange (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/exchange</description></item><item><term>Operation Id</term><description>Exchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.Exchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExchangeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt; ExchangeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt; ExchangeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.ExchangeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExchangeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ExchangeResult))" />
      <MemberSignature Language="F#" Value="static member ExchangeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.ExchangeAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/exchange</description></item><item><term>Operation Id</term><description>Exchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.Exchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllReservationQuota">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationQuotaCollection GetAllReservationQuota (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationQuotaCollection GetAllReservationQuota(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetAllReservationQuota(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAllReservationQuota (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation) As ReservationQuotaCollection" />
      <MemberSignature Language="F#" Value="static member GetAllReservationQuota : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.ReservationQuotaCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetAllReservationQuota (subscriptionResource, providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationQuotaCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary>
            Gets a collection of ReservationQuotaResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAllReservationQuota(System.String,Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of ReservationQuotaResources and their operations over a ReservationQuotaResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservations">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt; GetAppliedReservations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt; GetAppliedReservations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservations(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppliedReservations (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppliedReservationData)" />
      <MemberSignature Language="F#" Value="static member GetAppliedReservations : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservations (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations</description></item><item><term>Operation Id</term><description>GetAppliedReservationList</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAppliedReservations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt; GetAppliedReservationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt; GetAppliedReservationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppliedReservationsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppliedReservationData))" />
      <MemberSignature Language="F#" Value="static member GetAppliedReservationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations</description></item><item><term>Operation Id</term><description>GetAppliedReservationList</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAppliedReservations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCatalog">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalog (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetCatalogOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalog : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalog(Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCatalog">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalog (subscriptionResource As SubscriptionResource, Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalog : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog (subscriptionResource, reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalogAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalogAsync (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetCatalogOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalogAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalog(Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCatalogAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalogAsync (subscriptionResource As SubscriptionResource, Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalogAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync (subscriptionResource, reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetail">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt; GetQuotaRequestDetail (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, Guid id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt; GetQuotaRequestDetail(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, valuetype System.Guid id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetail(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetail (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, id As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaRequestDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetail : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetail (subscriptionResource, providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetail(System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, Guid id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, valuetype System.Guid id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailAsync (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, id As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaRequestDetailResource))" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailAsync (subscriptionResource, providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetailAsync(System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.QuotaRequestDetailResource GetQuotaRequestDetailResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.QuotaRequestDetailResource GetQuotaRequestDetailResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailResource (client As ArmClient, id As ResourceIdentifier) As QuotaRequestDetailResource" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.QuotaRequestDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.QuotaRequestDetailResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsArmClient.GetQuotaRequestDetailResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.QuotaRequestDetailCollection GetQuotaRequestDetails (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.QuotaRequestDetailCollection GetQuotaRequestDetails(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetails (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation) As QuotaRequestDetailCollection" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetails : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails (subscriptionResource, providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.QuotaRequestDetailCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary>
            Gets a collection of QuotaRequestDetailResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetails(System.String,Azure.Core.AzureLocation)" /> instead.</description></item></summary>
        <returns> An object representing collection of QuotaRequestDetailResources and their operations over a QuotaRequestDetailResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationDetailResource GetReservationDetailResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationDetailResource GetReservationDetailResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationDetailResource (client As ArmClient, id As ResourceIdentifier) As ReservationDetailResource" />
      <MemberSignature Language="F#" Value="static member GetReservationDetailResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.ReservationDetailResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.ReservationDetailResource.CreateResourceIdentifier(System.Guid,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsArmClient.GetReservationDetailResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetails">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetails(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationDetails (tenantResource As TenantResource, options As TenantResourceGetReservationDetailsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationDetails : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetails (tenantResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetails(Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetails">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetails(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationDetails (tenantResource As TenantResource, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationDetails : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetails (tenantResource, filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailsAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationDetailsAsync (tenantResource As TenantResource, options As TenantResourceGetReservationDetailsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationDetailsAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailsAsync (tenantResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetails(Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailsAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationDetailsAsync (tenantResource As TenantResource, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationDetailsAsync : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationDetailsAsync (tenantResource, filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrder">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt; GetReservationOrder (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt; GetReservationOrder(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrder(Azure.ResourceManager.Resources.TenantResource,System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrder (tenantResource As TenantResource, reservationOrderId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationOrderResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationOrder : Azure.ResourceManager.Resources.TenantResource * Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrder (tenantResource, reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reservationOrderId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrder(System.Guid,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetReservationOrderAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Guid reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetReservationOrderAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Guid reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderAsync(Azure.ResourceManager.Resources.TenantResource,System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderAsync (tenantResource As TenantResource, reservationOrderId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationOrderResource))" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderAsync : Azure.ResourceManager.Resources.TenantResource * Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderAsync (tenantResource, reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reservationOrderId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrderAsync(System.Guid,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationOrderResource GetReservationOrderResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationOrderResource GetReservationOrderResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderResource (client As ArmClient, id As ResourceIdentifier) As ReservationOrderResource" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.ReservationOrderResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.ReservationOrderResource.CreateResourceIdentifier(System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsArmClient.GetReservationOrderResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrders">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationOrderCollection GetReservationOrders (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationOrderCollection GetReservationOrders(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrders(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrders (tenantResource As TenantResource) As ReservationOrderCollection" />
      <MemberSignature Language="F#" Value="static member GetReservationOrders : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Reservations.ReservationOrderCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrders tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ReservationOrderResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrders" /> instead.</description></item></summary>
        <returns> An object representing collection of ReservationOrderResources and their operations over a ReservationOrderResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationQuota">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt; GetReservationQuota (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationQuotaResource&gt; GetReservationQuota(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuota(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationQuota (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationQuotaResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationQuota : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuota (subscriptionResource, providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetReservationQuota(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationQuotaAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt; GetReservationQuotaAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt; GetReservationQuotaAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuotaAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationQuotaAsync (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationQuotaResource))" />
      <MemberSignature Language="F#" Value="static member GetReservationQuotaAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuotaAsync (subscriptionResource, providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetReservationQuotaAsync(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationQuotaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationQuotaResource GetReservationQuotaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationQuotaResource GetReservationQuotaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuotaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationQuotaResource (client As ArmClient, id As ResourceIdentifier) As ReservationQuotaResource" />
      <MemberSignature Language="F#" Value="static member GetReservationQuotaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.ReservationQuotaResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationQuotaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationQuotaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.ReservationQuotaResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsArmClient.GetReservationQuotaResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
