<Type Name="CostManagementExtensions" FullName="Azure.ResourceManager.CostManagement.CostManagementExtensions">
  <TypeSignature Language="C#" Value="public static class CostManagementExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CostManagementExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CostManagement.CostManagementExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CostManagementExtensions" />
  <TypeSignature Language="F#" Value="type CostManagementExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.CostManagement. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ByBillingAccountIdGenerateReservationDetailsReport">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingAccountIdGenerateReservationDetailsReport (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingAccountIdGenerateReservationDetailsReport(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingAccountIdGenerateReservationDetailsReport(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByBillingAccountIdGenerateReservationDetailsReport (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of OperationStatus)" />
      <MemberSignature Language="F#" Value="static member ByBillingAccountIdGenerateReservationDetailsReport : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingAccountIdGenerateReservationDetailsReport (tenantResource, waitUntil, billingAccountId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Enrollment ID (Legacy BillingAccount ID). </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously based on enrollment id. The Reservation usage details can be viewed only by certain enterprise roles. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingAccountIdGenerateReservationDetailsReportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingAccountIdGenerateReservationDetailsReportAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingAccountIdGenerateReservationDetailsReportAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingAccountIdGenerateReservationDetailsReportAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByBillingAccountIdGenerateReservationDetailsReportAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of OperationStatus))" />
      <MemberSignature Language="F#" Value="static member ByBillingAccountIdGenerateReservationDetailsReportAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingAccountIdGenerateReservationDetailsReportAsync (tenantResource, waitUntil, billingAccountId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Enrollment ID (Legacy BillingAccount ID). </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously based on enrollment id. The Reservation usage details can be viewed only by certain enterprise roles. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingAccountIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingProfileIdGenerateReservationDetailsReport">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingProfileIdGenerateReservationDetailsReport (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt; ByBillingProfileIdGenerateReservationDetailsReport(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingProfileIdGenerateReservationDetailsReport(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByBillingProfileIdGenerateReservationDetailsReport (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of OperationStatus)" />
      <MemberSignature Language="F#" Value="static member ByBillingProfileIdGenerateReservationDetailsReport : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingProfileIdGenerateReservationDetailsReport (tenantResource, waitUntil, billingAccountId, billingProfileId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously by billing profile. The Reservation usage details can be viewed by only certain enterprise roles by default. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="billingProfileId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByBillingProfileIdGenerateReservationDetailsReportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingProfileIdGenerateReservationDetailsReportAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt; ByBillingProfileIdGenerateReservationDetailsReportAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, string startDate, string endDate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingProfileIdGenerateReservationDetailsReportAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByBillingProfileIdGenerateReservationDetailsReportAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, startDate As String, endDate As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of OperationStatus))" />
      <MemberSignature Language="F#" Value="static member ByBillingProfileIdGenerateReservationDetailsReportAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByBillingProfileIdGenerateReservationDetailsReportAsync (tenantResource, waitUntil, billingAccountId, billingProfileId, startDate, endDate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.OperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="startDate"> Start Date. </param>
        <param name="endDate"> End Date. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates the reservations details report for provided date range asynchronously by billing profile. The Reservation usage details can be viewed by only certain enterprise roles by default. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport</description></item><item><term>Operation Id</term><description>GenerateReservationDetailsReport_ByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByBillingProfileIdGenerateReservationDetailsReport(Azure.WaitUntil,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="billingProfileId" />, <paramref name="startDate" /> or <paramref name="endDate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByExternalCloudProviderTypeDimensions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensions (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensions(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByExternalCloudProviderTypeDimensions(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByExternalCloudProviderTypeDimensions (tenantResource As TenantResource, options As TenantResourceByExternalCloudProviderTypeDimensionsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="static member ByExternalCloudProviderTypeDimensions : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByExternalCloudProviderTypeDimensions (tenantResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the external cloud provider type.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_ByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensions(Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.CostManagementDimension" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ByExternalCloudProviderTypeDimensionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensionsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; ByExternalCloudProviderTypeDimensionsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ByExternalCloudProviderTypeDimensionsAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ByExternalCloudProviderTypeDimensionsAsync (tenantResource As TenantResource, options As TenantResourceByExternalCloudProviderTypeDimensionsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="static member ByExternalCloudProviderTypeDimensionsAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ByExternalCloudProviderTypeDimensionsAsync (tenantResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the external cloud provider type.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_ByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ByExternalCloudProviderTypeDimensions(Azure.ResourceManager.CostManagement.Models.TenantResourceByExternalCloudProviderTypeDimensionsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.CostManagementDimension" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScheduledAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScheduledAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScheduledAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScheduledAction(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckCostManagementNameAvailabilityByScheduledAction (tenantResource As TenantResource, content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckCostManagementNameAvailabilityByScheduledAction : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScheduledAction (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledAction(Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScheduledActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScheduledActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScheduledActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScheduledActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckCostManagementNameAvailabilityByScheduledActionAsync (tenantResource As TenantResource, content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckCostManagementNameAvailabilityByScheduledActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScheduledActionAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.CheckCostManagementNameAvailabilityByScheduledAction(Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScopeScheduledAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScopeScheduledAction (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt; CheckCostManagementNameAvailabilityByScopeScheduledAction(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScopeScheduledAction(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckCostManagementNameAvailabilityByScopeScheduledAction (client As ArmClient, scope As ResourceIdentifier, content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckCostManagementNameAvailabilityByScopeScheduledAction : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScopeScheduledAction (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action within the given scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailabilityByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.CheckCostManagementNameAvailabilityByScopeScheduledAction(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckCostManagementNameAvailabilityByScopeScheduledActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScopeScheduledActionAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt; CheckCostManagementNameAvailabilityByScopeScheduledActionAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScopeScheduledActionAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckCostManagementNameAvailabilityByScopeScheduledActionAsync (client As ArmClient, scope As ResourceIdentifier, content As CostManagementNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckCostManagementNameAvailabilityByScopeScheduledActionAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.CheckCostManagementNameAvailabilityByScopeScheduledActionAsync (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> Scheduled action to be created or updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks availability and correctness of the name for a scheduled action within the given scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/checkNameAvailability</description></item><item><term>Operation Id</term><description>ScheduledActions_CheckNameAvailabilityByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.CheckCostManagementNameAvailabilityByScopeScheduledAction(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.CostManagementNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadByBillingProfilePriceSheet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadByBillingProfilePriceSheet (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadByBillingProfilePriceSheet(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadByBillingProfilePriceSheet(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DownloadByBillingProfilePriceSheet (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DownloadURL)" />
      <MemberSignature Language="F#" Value="static member DownloadByBillingProfilePriceSheet : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadByBillingProfilePriceSheet (tenantResource, waitUntil, billingAccountName, billingProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the current month's pricesheet for a billing profile. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview version will be updated from a single csv file to a Zip file containing multiple csv files, each with max 200k records.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_DownloadByBillingProfile</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadByBillingProfilePriceSheet(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadByBillingProfilePriceSheetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadByBillingProfilePriceSheetAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadByBillingProfilePriceSheetAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadByBillingProfilePriceSheetAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DownloadByBillingProfilePriceSheetAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DownloadURL))" />
      <MemberSignature Language="F#" Value="static member DownloadByBillingProfilePriceSheetAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadByBillingProfilePriceSheetAsync (tenantResource, waitUntil, billingAccountName, billingProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the current month's pricesheet for a billing profile. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview version will be updated from a single csv file to a Zip file containing multiple csv files, each with max 200k records.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_DownloadByBillingProfile</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadByBillingProfilePriceSheet(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountName" /> or <paramref name="billingProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadPriceSheet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadPriceSheet (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt; DownloadPriceSheet(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadPriceSheet(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DownloadPriceSheet (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, invoiceName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DownloadURL)" />
      <MemberSignature Language="F#" Value="static member DownloadPriceSheet : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadPriceSheet (tenantResource, waitUntil, billingAccountName, billingProfileName, invoiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="invoiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="invoiceName"> The ID that uniquely identifies an invoice. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the pricesheet for an invoice. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_Download</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadPriceSheet(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadPriceSheetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadPriceSheetAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt; DownloadPriceSheetAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountName, string billingProfileName, string invoiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadPriceSheetAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DownloadPriceSheetAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountName As String, billingProfileName As String, invoiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DownloadURL))" />
      <MemberSignature Language="F#" Value="static member DownloadPriceSheetAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.DownloadPriceSheetAsync (tenantResource, waitUntil, billingAccountName, billingProfileName, invoiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.DownloadURL&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountName" Type="System.String" />
        <Parameter Name="billingProfileName" Type="System.String" />
        <Parameter Name="invoiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        <param name="invoiceName"> The ID that uniquely identifies an invoice. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a URL to download the pricesheet for an invoice. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download</description></item><item><term>Operation Id</term><description>PriceSheet_Download</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.DownloadPriceSheet(Azure.WaitUntil,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountName" />, <paramref name="billingProfileName" /> or <paramref name="invoiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalCloudProviderUsageForecast">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; ExternalCloudProviderUsageForecast (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; ExternalCloudProviderUsageForecast(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ExternalCloudProviderUsageForecast(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExternalCloudProviderUsageForecast (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ForecastResult)" />
      <MemberSignature Language="F#" Value="static member ExternalCloudProviderUsageForecast : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ExternalCloudProviderUsageForecast (tenantResource, externalCloudProviderType, externalCloudProviderId, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast</description></item><item><term>Operation Id</term><description>Forecast_ExternalCloudProviderUsage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ExternalCloudProviderUsageForecast(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="externalCloudProviderId" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalCloudProviderUsageForecastAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; ExternalCloudProviderUsageForecastAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; ExternalCloudProviderUsageForecastAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.ExternalCloudProviderUsageForecastAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExternalCloudProviderUsageForecastAsync (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ForecastResult))" />
      <MemberSignature Language="F#" Value="static member ExternalCloudProviderUsageForecastAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.ExternalCloudProviderUsageForecastAsync (tenantResource, externalCloudProviderType, externalCloudProviderId, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast</description></item><item><term>Operation Id</term><description>Forecast_ExternalCloudProviderUsage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.ExternalCloudProviderUsageForecast(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="externalCloudProviderId" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (tenantResource As TenantResource, waitUntil As WaitUntil, savingsPlanOrderId As String, savingsPlanId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope (tenantResource, waitUntil, savingsPlanOrderId, savingsPlanId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanScope_GenerateBenefitUtilizationSummariesReportAsync</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" />, <paramref name="savingsPlanId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, string savingsPlanId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, savingsPlanOrderId As String, savingsPlanId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScopeAsync (tenantResource, waitUntil, savingsPlanOrderId, savingsPlanId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanScope_GenerateBenefitUtilizationSummariesReportAsync</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportAsyncSavingsPlanScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" />, <paramref name="savingsPlanId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingAccountScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingAccountScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportBillingAccountScope (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportBillingAccountScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingAccountScope (tenantResource, waitUntil, billingAccountId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account. This API supports only enrollment accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingAccountScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingAccountScopeAsync (tenantResource, waitUntil, billingAccountId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account. This API supports only enrollment accounts.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingAccountScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingAccountScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingProfileScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingProfileScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportBillingProfileScope (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportBillingProfileScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingProfileScope (tenantResource, waitUntil, billingAccountId, billingProfileId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account and billing profile.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingProfileScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="billingProfileId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string billingAccountId, string billingProfileId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, billingAccountId As String, billingProfileId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportBillingProfileScopeAsync (tenantResource, waitUntil, billingAccountId, billingProfileId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided billing account and billing profile.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>BillingProfileScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportBillingProfileScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" />, <paramref name="billingProfileId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationOrderScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string reservationOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string reservationOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationOrderScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportReservationOrderScope (tenantResource As TenantResource, waitUntil As WaitUntil, reservationOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportReservationOrderScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationOrderScope (tenantResource, waitUntil, reservationOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="reservationOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string reservationOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string reservationOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, reservationOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationOrderScopeAsync (tenantResource, waitUntil, reservationOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="reservationOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportReservationScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportReservationScope (tenantResource As TenantResource, waitUntil As WaitUntil, reservationOrderId As String, reservationId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportReservationScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationScope (tenantResource, waitUntil, reservationOrderId, reservationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="reservationId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="reservationId"> Reservation ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> or <paramref name="reservationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="reservationOrderId" />, <paramref name="reservationId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportReservationScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportReservationScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string reservationOrderId, string reservationId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportReservationScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, reservationOrderId As String, reservationId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportReservationScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportReservationScopeAsync (tenantResource, waitUntil, reservationOrderId, reservationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="reservationId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="reservationOrderId"> Reservation Order ID. </param>
        <param name="reservationId"> Reservation ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided reservation.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>ReservationScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportReservationScope(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> or <paramref name="reservationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="reservationOrderId" />, <paramref name="reservationId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string savingsPlanOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (tenantResource As TenantResource, waitUntil As WaitUntil, savingsPlanOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of BenefitUtilizationSummariesOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope (tenantResource, waitUntil, savingsPlanOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string savingsPlanOrderId, Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt; GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string savingsPlanOrderId, class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, savingsPlanOrderId As String, content As BenefitUtilizationSummariesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of BenefitUtilizationSummariesOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScopeAsync (tenantResource, waitUntil, savingsPlanOrderId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="content"> Async Benefit Utilization Summary report to be created. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers generation of a benefit utilization summaries report for the provided savings plan order.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport</description></item><item><term>Operation Id</term><description>SavingsPlanOrderScope_GenerateBenefitUtilizationSummariesReport</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GenerateBenefitUtilizationSummariesReportSavingsPlanOrderScope(Azure.WaitUntil,System.String,Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummariesContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllCostManagementViews">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementViewsCollection GetAllCostManagementViews (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementViewsCollection GetAllCostManagementViews(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetAllCostManagementViews(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAllCostManagementViews (client As ArmClient, scope As ResourceIdentifier) As CostManagementViewsCollection" />
      <MemberSignature Language="F#" Value="static member GetAllCostManagementViews : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementViewsCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetAllCostManagementViews (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementViewsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of CostManagementViewsResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetAllCostManagementViews(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of CostManagementViewsResources and their operations over a CostManagementViewsResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllTenantsCostManagementViews">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection GetAllTenantsCostManagementViews (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection GetAllTenantsCostManagementViews(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetAllTenantsCostManagementViews(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAllTenantsCostManagementViews (tenantResource As TenantResource) As TenantsCostManagementViewsCollection" />
      <MemberSignature Language="F#" Value="static member GetAllTenantsCostManagementViews : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetAllTenantsCostManagementViews tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantsCostManagementViewsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of TenantsCostManagementViewsResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetAllTenantsCostManagementViews" /> instead.</description></item></summary>
        <returns> An object representing collection of TenantsCostManagementViewsResources and their operations over a TenantsCostManagementViewsResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitRecommendations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt; GetBenefitRecommendations (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string orderby = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt; GetBenefitRecommendations(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string orderby, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitRecommendations(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitRecommendations (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitRecommendationModel)" />
      <MemberSignature Language="F#" Value="static member GetBenefitRecommendations : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitRecommendations (client, scope, filter, orderby, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> Can be used to filter benefitRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Shared'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last60Days'; properties/term with allowed values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId; properties/resourceGroup. </param>
        <param name="orderby"> May be used to order the recommendations by: properties/armSkuName. For the savings plan, the results are in order by default. There is no need to use this clause. </param>
        <param name="expand"> May be used to expand the properties by: properties/usage, properties/allRecommendationDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of recommendations for purchasing savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/{billingScope}/providers/Microsoft.CostManagement/benefitRecommendations</description></item><item><term>Operation Id</term><description>BenefitRecommendations_List</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetBenefitRecommendations(Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitRecommendationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt; GetBenefitRecommendationsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string orderby = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt; GetBenefitRecommendationsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string orderby, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitRecommendationsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitRecommendationsAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitRecommendationModel)" />
      <MemberSignature Language="F#" Value="static member GetBenefitRecommendationsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitRecommendationsAsync (client, scope, filter, orderby, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitRecommendationModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> Can be used to filter benefitRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Shared'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last60Days'; properties/term with allowed values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId; properties/resourceGroup. </param>
        <param name="orderby"> May be used to order the recommendations by: properties/armSkuName. For the savings plan, the results are in order by default. There is no need to use this clause. </param>
        <param name="expand"> May be used to expand the properties by: properties/usage, properties/allRecommendationDetails. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of recommendations for purchasing savings plan.
            <list type="bullet"><item><term>Request Path</term><description>/{billingScope}/providers/Microsoft.CostManagement/benefitRecommendations</description></item><item><term>Operation Id</term><description>BenefitRecommendations_List</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetBenefitRecommendations(Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingAccountId">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountId (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountId(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingAccountId(Azure.ResourceManager.Resources.TenantResource,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesByBillingAccountId (tenantResource As TenantResource, billingAccountId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesByBillingAccountId : Azure.ResourceManager.Resources.TenantResource * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingAccountId (tenantResource, billingAccountId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountId(System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="billingAccountId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingAccountIdAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountIdAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingAccountIdAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingAccountIdAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesByBillingAccountIdAsync (tenantResource As TenantResource, billingAccountId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesByBillingAccountIdAsync : Azure.ResourceManager.Resources.TenantResource * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingAccountIdAsync (tenantResource, billingAccountId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingAccountId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingAccountId(System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="billingAccountId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingProfileId">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileId (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileId(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, string billingProfileId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingProfileId(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesByBillingProfileId (tenantResource As TenantResource, billingAccountId As String, billingProfileId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesByBillingProfileId : Azure.ResourceManager.Resources.TenantResource * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingProfileId (tenantResource, billingAccountId, billingProfileId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileId(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesByBillingProfileIdAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileIdAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, string billingProfileId, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesByBillingProfileIdAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, string billingProfileId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingProfileIdAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesByBillingProfileIdAsync (tenantResource As TenantResource, billingAccountId As String, billingProfileId As String, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesByBillingProfileIdAsync : Azure.ResourceManager.Resources.TenantResource * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesByBillingProfileIdAsync (tenantResource, billingAccountId, billingProfileId, grainParameter, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="billingProfileId" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing account ID. </param>
        <param name="billingProfileId"> Billing profile ID. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="filter"> Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and 'Monthly'.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListByBillingProfileId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesByBillingProfileId(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="billingAccountId" /> or <paramref name="billingProfileId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanId">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanId (this Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string savingsPlanId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanId(class Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string savingsPlanId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanId(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesBySavingsPlanId (tenantResource As TenantResource, savingsPlanOrderId As String, savingsPlanId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesBySavingsPlanId : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanId (tenantResource, savingsPlanOrderId, savingsPlanId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanId(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanIdAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanIdAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string savingsPlanId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanIdAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string savingsPlanId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanIdAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesBySavingsPlanIdAsync (tenantResource As TenantResource, savingsPlanOrderId As String, savingsPlanId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesBySavingsPlanIdAsync : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanIdAsync (tenantResource, savingsPlanOrderId, savingsPlanId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="savingsPlanId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="savingsPlanId"> Savings plan ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanId</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanId(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="savingsPlanOrderId" /> or <paramref name="savingsPlanId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanOrder">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrder (this Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrder(class Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanOrder(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesBySavingsPlanOrder (tenantResource As TenantResource, savingsPlanOrderId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesBySavingsPlanOrder : Azure.ResourceManager.Resources.TenantResource * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanOrder (tenantResource, savingsPlanOrderId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanOrder</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrder(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="savingsPlanOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBenefitUtilizationSummariesBySavingsPlanOrderAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string filter = default, Azure.ResourceManager.CostManagement.Models.GrainContent? grainParameter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt; GetBenefitUtilizationSummariesBySavingsPlanOrderAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string savingsPlanOrderId, string filter, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.CostManagement.Models.GrainContent&gt; grainParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanOrderAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (tenantResource As TenantResource, savingsPlanOrderId As String, Optional filter As String = Nothing, Optional grainParameter As Nullable(Of GrainContent) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BenefitUtilizationSummary)" />
      <MemberSignature Language="F#" Value="static member GetBenefitUtilizationSummariesBySavingsPlanOrderAsync : Azure.ResourceManager.Resources.TenantResource * string * string * Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetBenefitUtilizationSummariesBySavingsPlanOrderAsync (tenantResource, savingsPlanOrderId, filter, grainParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="savingsPlanOrderId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="grainParameter" Type="System.Nullable&lt;Azure.ResourceManager.CostManagement.Models.GrainContent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="savingsPlanOrderId"> Savings plan order ID. </param>
        <param name="filter"> Supports filtering by properties/usageDate. </param>
        <param name="grainParameter"> Grain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the savings plan utilization summaries for daily or monthly grain.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries</description></item><item><term>Operation Id</term><description>BenefitUtilizationSummaries_ListBySavingsPlanOrder</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetBenefitUtilizationSummariesBySavingsPlanOrder(System.String,System.String,System.Nullable{Azure.ResourceManager.CostManagement.Models.GrainContent},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.Models.BenefitUtilizationSummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savingsPlanOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="savingsPlanOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlert">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlert (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string alertId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlert(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string alertId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlert(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlert (client As ArmClient, scope As ResourceIdentifier, alertId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlert : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlert (client, scope, alertId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="alertId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="alertId"> Alert ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the alert for the scope by alert ID.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/alerts/{alertId}</description></item><item><term>Operation Id</term><description>Alerts_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementAlert(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="alertId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlertAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&gt; GetCostManagementAlertAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string alertId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&gt; GetCostManagementAlertAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string alertId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlertAsync (client As ArmClient, scope As ResourceIdentifier, alertId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementAlertResource))" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlertAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertAsync (client, scope, alertId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="alertId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="alertId"> Alert ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the alert for the scope by alert ID.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/alerts/{alertId}</description></item><item><term>Operation Id</term><description>Alerts_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementAlertAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="alertId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlertResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementAlertResource GetCostManagementAlertResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementAlertResource GetCostManagementAlertResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlertResource (client As ArmClient, id As ResourceIdentifier) As CostManagementAlertResource" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlertResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementAlertResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.CostManagementAlertResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementAlertResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlerts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementAlertCollection GetCostManagementAlerts (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementAlertCollection GetCostManagementAlerts(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlerts(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlerts (client As ArmClient, scope As ResourceIdentifier) As CostManagementAlertCollection" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlerts : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementAlertCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlerts (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of CostManagementAlertResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementAlerts(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of CostManagementAlertResources and their operations over a CostManagementAlertResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlerts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlerts (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlerts(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlerts(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlerts (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CostManagementAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlerts : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlerts (tenantResource, externalCloudProviderType, externalCloudProviderId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Alerts for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListExternal</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetCostManagementAlerts(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="externalCloudProviderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementAlertsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlertsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt; GetCostManagementAlertsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertsAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementAlertsAsync (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CostManagementAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetCostManagementAlertsAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementAlertsAsync (tenantResource, externalCloudProviderType, externalCloudProviderId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.CostManagementAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Alerts for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListExternal</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetCostManagementAlerts(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CostManagement.CostManagementAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="externalCloudProviderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementExport">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt; GetCostManagementExport (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string exportName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementExportResource&gt; GetCostManagementExport(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string exportName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExport(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementExport (client As ArmClient, scope As ResourceIdentifier, exportName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementExportResource)" />
      <MemberSignature Language="F#" Value="static member GetCostManagementExport : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExport (client, scope, exportName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="exportName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="exportName"> Export Name. </param>
        <param name="expand"> May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last 10 runs of the export. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to get the export for the defined scope by export name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/exports/{exportName}</description></item><item><term>Operation Id</term><description>Exports_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementExportResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementExport(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="exportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementExportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;&gt; GetCostManagementExportAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string exportName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;&gt; GetCostManagementExportAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string exportName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExportAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementExportAsync (client As ArmClient, scope As ResourceIdentifier, exportName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementExportResource))" />
      <MemberSignature Language="F#" Value="static member GetCostManagementExportAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExportAsync (client, scope, exportName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementExportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="exportName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="exportName"> Export Name. </param>
        <param name="expand"> May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last 10 runs of the export. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to get the export for the defined scope by export name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/exports/{exportName}</description></item><item><term>Operation Id</term><description>Exports_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementExportResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementExportAsync(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="exportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementExportResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementExportResource GetCostManagementExportResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementExportResource GetCostManagementExportResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExportResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementExportResource (client As ArmClient, id As ResourceIdentifier) As CostManagementExportResource" />
      <MemberSignature Language="F#" Value="static member GetCostManagementExportResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementExportResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExportResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementExportResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementExportResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.CostManagementExportResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementExportResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementExportResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementExportResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementExports">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementExportCollection GetCostManagementExports (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementExportCollection GetCostManagementExports(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExports(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementExports (client As ArmClient, scope As ResourceIdentifier) As CostManagementExportCollection" />
      <MemberSignature Language="F#" Value="static member GetCostManagementExports : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementExportCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementExports (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementExportCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of CostManagementExportResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementExports(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of CostManagementExportResources and their operations over a CostManagementExportResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementViews">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt; GetCostManagementViews (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt; GetCostManagementViews(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViews(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementViews (client As ArmClient, scope As ResourceIdentifier, viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CostManagementViewsResource)" />
      <MemberSignature Language="F#" Value="static member GetCostManagementViews : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViews (client, scope, viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view for the defined scope by view name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_GetByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementViewsResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementViews(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementViewsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;&gt; GetCostManagementViewsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;&gt; GetCostManagementViewsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViewsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementViewsAsync (client As ArmClient, scope As ResourceIdentifier, viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CostManagementViewsResource))" />
      <MemberSignature Language="F#" Value="static member GetCostManagementViewsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViewsAsync (client, scope, viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.CostManagementViewsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view for the defined scope by view name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_GetByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.CostManagementViewsResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementViewsAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCostManagementViewsResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.CostManagementViewsResource GetCostManagementViewsResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.CostManagementViewsResource GetCostManagementViewsResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViewsResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCostManagementViewsResource (client As ArmClient, id As ResourceIdentifier) As CostManagementViewsResource" />
      <MemberSignature Language="F#" Value="static member GetCostManagementViewsResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.CostManagementViewsResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetCostManagementViewsResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.CostManagementViewsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementViewsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.CostManagementViewsResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementViewsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetCostManagementViewsResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.CostManagementViewsResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDimensions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; GetDimensions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, string skiptoken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; GetDimensions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, string skiptoken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetDimensions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDimensions (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional skiptoken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="static member GetDimensions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetDimensions (client, scope, filter, expand, skiptoken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'. </param>
        <param name="expand"> May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N dimension data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the defined scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_List</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetDimensions(Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDimensionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; GetDimensionsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, string skiptoken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt; GetDimensionsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, string skiptoken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetDimensionsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDimensionsAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional skiptoken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CostManagementDimension)" />
      <MemberSignature Language="F#" Value="static member GetDimensionsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetDimensionsAsync (client, scope, filter, expand, skiptoken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CostManagement.Models.CostManagementDimension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'. </param>
        <param name="expand"> May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="top"> May be used to limit the number of results to the most recent N dimension data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the dimensions by the defined scope.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/dimensions</description></item><item><term>Operation Id</term><description>Dimensions_List</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetDimensions(Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt; GetScheduledAction (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.ScheduledActionResource&gt; GetScheduledAction(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledAction(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledAction (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScheduledActionResource)" />
      <MemberSignature Language="F#" Value="static member GetScheduledAction : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledAction (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the shared scheduled action from the given scope by name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_GetByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.ScheduledActionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetScheduledAction(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;&gt; GetScheduledActionAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;&gt; GetScheduledActionAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActionAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledActionAsync (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScheduledActionResource))" />
      <MemberSignature Language="F#" Value="static member GetScheduledActionAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActionAsync (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.ScheduledActionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the shared scheduled action from the given scope by name.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_GetByScope</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.ScheduledActionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetScheduledActionAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledActionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.ScheduledActionResource GetScheduledActionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.ScheduledActionResource GetScheduledActionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledActionResource (client As ArmClient, id As ResourceIdentifier) As ScheduledActionResource" />
      <MemberSignature Language="F#" Value="static member GetScheduledActionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.ScheduledActionResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.ScheduledActionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.ScheduledActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.ScheduledActionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.ScheduledActionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetScheduledActionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.ScheduledActionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledActions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.ScheduledActionCollection GetScheduledActions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.ScheduledActionCollection GetScheduledActions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledActions (client As ArmClient, scope As ResourceIdentifier) As ScheduledActionCollection" />
      <MemberSignature Language="F#" Value="static member GetScheduledActions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.ScheduledActionCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetScheduledActions (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.ScheduledActionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of ScheduledActionResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetScheduledActions(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of ScheduledActionResources and their operations over a ScheduledActionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt; GetTenantScheduledAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt; GetTenantScheduledAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledAction(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantScheduledAction (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantScheduledActionResource)" />
      <MemberSignature Language="F#" Value="static member GetTenantScheduledAction : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledAction (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the private scheduled action by name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledAction(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt; GetTenantScheduledActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt; GetTenantScheduledActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActionAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantScheduledActionAsync (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantScheduledActionResource))" />
      <MemberSignature Language="F#" Value="static member GetTenantScheduledActionAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActionAsync (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantScheduledActionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Scheduled action name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the private scheduled action by name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/scheduledActions/{name}</description></item><item><term>Operation Id</term><description>ScheduledActions_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledActionAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledActionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.TenantScheduledActionResource GetTenantScheduledActionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.TenantScheduledActionResource GetTenantScheduledActionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantScheduledActionResource (client As ArmClient, id As ResourceIdentifier) As TenantScheduledActionResource" />
      <MemberSignature Language="F#" Value="static member GetTenantScheduledActionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.TenantScheduledActionResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantScheduledActionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.TenantScheduledActionResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetTenantScheduledActionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.TenantScheduledActionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantScheduledActions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.TenantScheduledActionCollection GetTenantScheduledActions (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.TenantScheduledActionCollection GetTenantScheduledActions(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActions(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantScheduledActions (tenantResource As TenantResource) As TenantScheduledActionCollection" />
      <MemberSignature Language="F#" Value="static member GetTenantScheduledActions : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.CostManagement.TenantScheduledActionCollection" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantScheduledActions tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantScheduledActionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of TenantScheduledActionResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantScheduledActions" /> instead.</description></item></summary>
        <returns> An object representing collection of TenantScheduledActionResources and their operations over a TenantScheduledActionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantsCostManagementViews">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt; GetTenantsCostManagementViews (this Azure.ResourceManager.Resources.TenantResource tenantResource, string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt; GetTenantsCostManagementViews(class Azure.ResourceManager.Resources.TenantResource tenantResource, string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViews(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantsCostManagementViews (tenantResource As TenantResource, viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantsCostManagementViewsResource)" />
      <MemberSignature Language="F#" Value="static member GetTenantsCostManagementViews : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViews (tenantResource, viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view by view name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantsCostManagementViews(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantsCostManagementViewsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt; GetTenantsCostManagementViewsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string viewName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt; GetTenantsCostManagementViewsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string viewName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViewsAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantsCostManagementViewsAsync (tenantResource As TenantResource, viewName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantsCostManagementViewsResource))" />
      <MemberSignature Language="F#" Value="static member GetTenantsCostManagementViewsAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViewsAsync (tenantResource, viewName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="viewName"> View name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the view by view name.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.GetTenantsCostManagementViewsAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="viewName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantsCostManagementViewsResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource GetTenantsCostManagementViewsResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource GetTenantsCostManagementViewsResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViewsResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantsCostManagementViewsResource (client As ArmClient, id As ResourceIdentifier) As TenantsCostManagementViewsResource" />
      <MemberSignature Language="F#" Value="static member GetTenantsCostManagementViewsResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.GetTenantsCostManagementViewsResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.GetTenantsCostManagementViewsResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CostManagement.TenantsCostManagementViewsResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageByExternalCloudProviderTypeQuery">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageByExternalCloudProviderTypeQuery (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageByExternalCloudProviderTypeQuery(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageByExternalCloudProviderTypeQuery(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageByExternalCloudProviderTypeQuery (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueryResult)" />
      <MemberSignature Language="F#" Value="static member UsageByExternalCloudProviderTypeQuery : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageByExternalCloudProviderTypeQuery (tenantResource, externalCloudProviderType, externalCloudProviderId, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query</description></item><item><term>Operation Id</term><description>Query_UsageByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQuery(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="externalCloudProviderId" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageByExternalCloudProviderTypeQueryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageByExternalCloudProviderTypeQueryAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageByExternalCloudProviderTypeQueryAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType externalCloudProviderType, string externalCloudProviderId, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageByExternalCloudProviderTypeQueryAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageByExternalCloudProviderTypeQueryAsync (tenantResource As TenantResource, externalCloudProviderType As ExternalCloudProviderType, externalCloudProviderId As String, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueryResult))" />
      <MemberSignature Language="F#" Value="static member UsageByExternalCloudProviderTypeQueryAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType * string * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageByExternalCloudProviderTypeQueryAsync (tenantResource, externalCloudProviderType, externalCloudProviderId, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="externalCloudProviderType" Type="Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType" />
        <Parameter Name="externalCloudProviderId" Type="System.String" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="externalCloudProviderType"> The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account. </param>
        <param name="externalCloudProviderId"> This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for external cloud provider type defined.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query</description></item><item><term>Operation Id</term><description>Query_UsageByExternalCloudProviderType</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementTenantResource.UsageByExternalCloudProviderTypeQuery(Azure.ResourceManager.CostManagement.Models.ExternalCloudProviderType,System.String,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalCloudProviderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="externalCloudProviderId" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageForecast">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; UsageForecast (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt; UsageForecast(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageForecast(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageForecast (client As ArmClient, scope As ResourceIdentifier, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ForecastResult)" />
      <MemberSignature Language="F#" Value="static member UsageForecast : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageForecast (client, scope, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for scope defined.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/forecast</description></item><item><term>Operation Id</term><description>Forecast_Usage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.UsageForecast(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageForecastAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; UsageForecastAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt; UsageForecastAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.ForecastDefinition forecastDefinition, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageForecastAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageForecastAsync (client As ArmClient, scope As ResourceIdentifier, forecastDefinition As ForecastDefinition, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ForecastResult))" />
      <MemberSignature Language="F#" Value="static member UsageForecastAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.ForecastDefinition * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageForecastAsync (client, scope, forecastDefinition, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.ForecastResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="forecastDefinition" Type="Azure.ResourceManager.CostManagement.Models.ForecastDefinition" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="forecastDefinition"> Parameters supplied to the CreateOrUpdate Forecast Config operation. </param>
        <param name="filter"> May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the forecast charges for scope defined.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/forecast</description></item><item><term>Operation Id</term><description>Forecast_Usage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.UsageForecast(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.ForecastDefinition,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="forecastDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageQuery">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageQuery (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt; UsageQuery(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageQuery(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageQuery (client As ArmClient, scope As ResourceIdentifier, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueryResult)" />
      <MemberSignature Language="F#" Value="static member UsageQuery : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageQuery (client, scope, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for scope defined.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/query</description></item><item><term>Operation Id</term><description>Query_Usage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.UsageQuery(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UsageQueryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageQueryAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt; UsageQueryAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.CostManagement.Models.QueryDefinition queryDefinition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageQueryAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UsageQueryAsync (client As ArmClient, scope As ResourceIdentifier, queryDefinition As QueryDefinition, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueryResult))" />
      <MemberSignature Language="F#" Value="static member UsageQueryAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.CostManagement.Models.QueryDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;" Usage="Azure.ResourceManager.CostManagement.CostManagementExtensions.UsageQueryAsync (client, scope, queryDefinition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CostManagement</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CostManagement.Models.QueryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="queryDefinition" Type="Azure.ResourceManager.CostManagement.Models.QueryDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="queryDefinition"> Parameters supplied to the CreateOrUpdate Query Config operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query the usage data for scope defined.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.CostManagement/query</description></item><item><term>Operation Id</term><description>Query_Usage</description></item><item><term>Default Api Version</term><description>2023-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.CostManagement.Mocking.MockableCostManagementArmClient.UsageQuery(Azure.Core.ResourceIdentifier,Azure.ResourceManager.CostManagement.Models.QueryDefinition,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="queryDefinition" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
