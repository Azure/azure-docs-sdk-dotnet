<Type Name="ArmServiceFabricModelFactory" FullName="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmServiceFabricModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmServiceFabricModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmServiceFabricModelFactory" />
  <TypeSignature Language="F#" Value="type ArmServiceFabricModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClusterCodeVersionsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult ClusterCodeVersionsResult (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string codeVersion = default, DateTimeOffset? supportExpireOn = default, Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment? environment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult ClusterCodeVersionsResult(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string codeVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; supportExpireOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt; environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ClusterCodeVersionsResult(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterCodeVersionsResult (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional codeVersion As String = Nothing, Optional supportExpireOn As Nullable(Of DateTimeOffset) = Nothing, Optional environment As Nullable(Of ClusterEnvironment) = Nothing) As ClusterCodeVersionsResult" />
      <MemberSignature Language="F#" Value="static member ClusterCodeVersionsResult : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt; -&gt; Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ClusterCodeVersionsResult (id, name, resourceType, systemData, codeVersion, supportExpireOn, environment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="codeVersion" Type="System.String" />
        <Parameter Name="supportExpireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="environment" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="codeVersion"> The Service Fabric runtime version of the cluster. </param>
        <param name="supportExpireOn"> The date of expiry of support of the version. </param>
        <param name="environment"> Indicates if this version is for Windows or Linux operating system. </param>
        <summary> Initializes a new instance of ClusterCodeVersionsResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterVersionDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails ClusterVersionDetails (string codeVersion = default, DateTimeOffset? supportExpireOn = default, Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment? environment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails ClusterVersionDetails(string codeVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; supportExpireOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt; environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ClusterVersionDetails(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterVersionDetails (Optional codeVersion As String = Nothing, Optional supportExpireOn As Nullable(Of DateTimeOffset) = Nothing, Optional environment As Nullable(Of ClusterEnvironment) = Nothing) As ClusterVersionDetails" />
      <MemberSignature Language="F#" Value="static member ClusterVersionDetails : string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt; -&gt; Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ClusterVersionDetails (codeVersion, supportExpireOn, environment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeVersion" Type="System.String" />
        <Parameter Name="supportExpireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="environment" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterEnvironment&gt;" />
      </Parameters>
      <Docs>
        <param name="codeVersion"> The Service Fabric runtime version of the cluster. </param>
        <param name="supportExpireOn"> The date of expiry of support of the version. </param>
        <param name="environment"> Indicates if this version is for Windows or Linux operating system. </param>
        <summary> Initializes a new instance of ClusterVersionDetails. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricApplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationData ServiceFabricApplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string typeVersion = default, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters = default, Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy upgradePolicy = default, long? minimumNodes = default, long? maximumNodes = default, bool? removeApplicationCapacity = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; metrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; managedIdentities = default, string provisioningState = default, string typeName = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationData ServiceFabricApplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string typeVersion, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, class Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy upgradePolicy, valuetype System.Nullable`1&lt;int64&gt; minimumNodes, valuetype System.Nullable`1&lt;int64&gt; maximumNodes, valuetype System.Nullable`1&lt;bool&gt; removeApplicationCapacity, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; metrics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; managedIdentities, string provisioningState, string typeName, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity},System.String,System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricApplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional typeVersion As String = Nothing, Optional parameters As IDictionary(Of String, String) = Nothing, Optional upgradePolicy As ApplicationUpgradePolicy = Nothing, Optional minimumNodes As Nullable(Of Long) = Nothing, Optional maximumNodes As Nullable(Of Long) = Nothing, Optional removeApplicationCapacity As Nullable(Of Boolean) = Nothing, Optional metrics As IEnumerable(Of ApplicationMetricDescription) = Nothing, Optional managedIdentities As IEnumerable(Of ApplicationUserAssignedIdentity) = Nothing, Optional provisioningState As String = Nothing, Optional typeName As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricApplicationData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricApplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; * string * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationData" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationData (id, name, resourceType, systemData, tags, location, identity, typeVersion, parameters, upgradePolicy, minimumNodes, maximumNodes, removeApplicationCapacity, metrics, managedIdentities, provisioningState, typeName, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="typeVersion" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="upgradePolicy" Type="Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy" />
        <Parameter Name="minimumNodes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="maximumNodes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="removeApplicationCapacity" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt;" />
        <Parameter Name="managedIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Describes the managed identities for an Azure resource. </param>
        <param name="typeVersion"> The version of the application type as defined in the application manifest. </param>
        <param name="parameters"> List of application parameters with overridden values from their default values specified in the application manifest. </param>
        <param name="upgradePolicy"> Describes the policy for a monitored application upgrade. </param>
        <param name="minimumNodes"> The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property. </param>
        <param name="maximumNodes"> The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node. </param>
        <param name="removeApplicationCapacity"> Remove the current application capacity settings. </param>
        <param name="metrics"> List of application capacity metric description. </param>
        <param name="managedIdentities"> List of user assigned identities for the application, each mapped to a friendly name. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="typeName"> The application type name as defined in the application manifest. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of ServiceFabricApplicationData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricApplicationPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.Models.ServiceFabricApplicationPatch ServiceFabricApplicationPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string typeVersion = default, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters = default, Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy upgradePolicy = default, long? minimumNodes = default, long? maximumNodes = default, bool? removeApplicationCapacity = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; metrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; managedIdentities = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.Models.ServiceFabricApplicationPatch ServiceFabricApplicationPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string typeVersion, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, class Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy upgradePolicy, valuetype System.Nullable`1&lt;int64&gt; minimumNodes, valuetype System.Nullable`1&lt;int64&gt; maximumNodes, valuetype System.Nullable`1&lt;bool&gt; removeApplicationCapacity, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; metrics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; managedIdentities, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricApplicationPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional typeVersion As String = Nothing, Optional parameters As IDictionary(Of String, String) = Nothing, Optional upgradePolicy As ApplicationUpgradePolicy = Nothing, Optional minimumNodes As Nullable(Of Long) = Nothing, Optional maximumNodes As Nullable(Of Long) = Nothing, Optional removeApplicationCapacity As Nullable(Of Boolean) = Nothing, Optional metrics As IEnumerable(Of ApplicationMetricDescription) = Nothing, Optional managedIdentities As IEnumerable(Of ApplicationUserAssignedIdentity) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricApplicationPatch" />
      <MemberSignature Language="F#" Value="static member ServiceFabricApplicationPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabric.Models.ServiceFabricApplicationPatch" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationPatch (id, name, resourceType, systemData, tags, location, typeVersion, parameters, upgradePolicy, minimumNodes, maximumNodes, removeApplicationCapacity, metrics, managedIdentities, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.Models.ServiceFabricApplicationPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="typeVersion" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="upgradePolicy" Type="Azure.ResourceManager.ServiceFabric.Models.ApplicationUpgradePolicy" />
        <Parameter Name="minimumNodes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="maximumNodes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="removeApplicationCapacity" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationMetricDescription&gt;" />
        <Parameter Name="managedIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ApplicationUserAssignedIdentity&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="typeVersion"> The version of the application type as defined in the application manifest. </param>
        <param name="parameters"> List of application parameters with overridden values from their default values specified in the application manifest. </param>
        <param name="upgradePolicy"> Describes the policy for a monitored application upgrade. </param>
        <param name="minimumNodes"> The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property. </param>
        <param name="maximumNodes"> The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node. </param>
        <param name="removeApplicationCapacity"> Remove the current application capacity settings. </param>
        <param name="metrics"> List of application capacity metric description. </param>
        <param name="managedIdentities"> List of user assigned identities for the application, each mapped to a friendly name. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of ServiceFabricApplicationPatch. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ServiceFabricApplicationPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricApplicationTypeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeData ServiceFabricApplicationTypeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeData ServiceFabricApplicationTypeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationTypeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricApplicationTypeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricApplicationTypeData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricApplicationTypeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeData" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationTypeData (id, name, resourceType, systemData, tags, location, provisioningState, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of ServiceFabricApplicationTypeData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricApplicationTypeVersionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeVersionData ServiceFabricApplicationTypeVersionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default, Uri appPackageUri = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; defaultParameterList = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeVersionData ServiceFabricApplicationTypeVersionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState, class System.Uri appPackageUri, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; defaultParameterList, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationTypeVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Uri,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricApplicationTypeVersionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing, Optional appPackageUri As Uri = Nothing, Optional defaultParameterList As IReadOnlyDictionary(Of String, String) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricApplicationTypeVersionData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricApplicationTypeVersionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * Uri * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeVersionData" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricApplicationTypeVersionData (id, name, resourceType, systemData, tags, location, provisioningState, appPackageUri, defaultParameterList, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeVersionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="appPackageUri" Type="System.Uri" />
        <Parameter Name="defaultParameterList" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="appPackageUri"> The URL to the application package. </param>
        <param name="defaultParameterList"> List of application type parameters that can be overridden when creating or updating the application. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of ServiceFabricApplicationTypeVersionData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricApplicationTypeVersionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricClusterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.ServiceFabricClusterData ServiceFabricClusterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterAddOnFeature&gt; addOnFeatures = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails&gt; availableClusterVersions = default, Azure.ResourceManager.ServiceFabric.Models.ClusterAadSetting azureActiveDirectory = default, Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription certificate = default, Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames certificateCommonNames = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateCommonName&gt; clientCertificateCommonNames = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateThumbprint&gt; clientCertificateThumbprints = default, string clusterCodeVersion = default, Uri clusterEndpoint = default, Guid? clusterId = default, Azure.ResourceManager.ServiceFabric.Models.ServiceFabricClusterState? clusterState = default, Azure.ResourceManager.ServiceFabric.Models.DiagnosticsStorageAccountConfig diagnosticsStorageAccountConfig = default, bool? isEventStoreServiceEnabled = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings = default, Uri managementEndpoint = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNodeTypeDescription&gt; nodeTypes = default, Azure.ResourceManager.ServiceFabric.Models.ServiceFabricProvisioningState? provisioningState = default, Azure.ResourceManager.ServiceFabric.Models.ClusterReliabilityLevel? reliabilityLevel = default, Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription reverseProxyCertificate = default, Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames reverseProxyCertificateCommonNames = default, Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription = default, Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeMode? upgradeMode = default, long? maxUnusedVersionsToKeep = default, string vmImage = default, Azure.ResourceManager.ServiceFabric.Models.SfZonalUpgradeMode? serviceFabricZonalUpgradeMode = default, Azure.ResourceManager.ServiceFabric.Models.VmssZonalUpgradeMode? vmssZonalUpgradeMode = default, bool? isInfrastructureServiceManagerEnabled = default, Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeCadence? upgradeWave = default, DateTimeOffset? upgradePauseStartOn = default, DateTimeOffset? upgradePauseEndOn = default, bool? isWaveUpgradePaused = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNotification&gt; notifications = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.ServiceFabricClusterData ServiceFabricClusterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterAddOnFeature&gt; addOnFeatures, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails&gt; availableClusterVersions, class Azure.ResourceManager.ServiceFabric.Models.ClusterAadSetting azureActiveDirectory, class Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription certificate, class Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames certificateCommonNames, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateCommonName&gt; clientCertificateCommonNames, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateThumbprint&gt; clientCertificateThumbprints, string clusterCodeVersion, class System.Uri clusterEndpoint, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; clusterId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ServiceFabricClusterState&gt; clusterState, class Azure.ResourceManager.ServiceFabric.Models.DiagnosticsStorageAccountConfig diagnosticsStorageAccountConfig, valuetype System.Nullable`1&lt;bool&gt; isEventStoreServiceEnabled, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.SettingsSectionDescription&gt; fabricSettings, class System.Uri managementEndpoint, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterNodeTypeDescription&gt; nodeTypes, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ServiceFabricProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterReliabilityLevel&gt; reliabilityLevel, class Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription reverseProxyCertificate, class Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames reverseProxyCertificateCommonNames, class Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradePolicy upgradeDescription, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeMode&gt; upgradeMode, valuetype System.Nullable`1&lt;int64&gt; maxUnusedVersionsToKeep, string vmImage, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.SfZonalUpgradeMode&gt; serviceFabricZonalUpgradeMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.VmssZonalUpgradeMode&gt; vmssZonalUpgradeMode, valuetype System.Nullable`1&lt;bool&gt; isInfrastructureServiceManagerEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeCadence&gt; upgradeWave, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; upgradePauseStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; upgradePauseEndOn, valuetype System.Nullable`1&lt;bool&gt; isWaveUpgradePaused, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterNotification&gt; notifications, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricClusterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterAddOnFeature},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails},Azure.ResourceManager.ServiceFabric.Models.ClusterAadSetting,Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription,Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateCommonName},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateThumbprint},System.String,System.Uri,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ServiceFabricClusterState},Azure.ResourceManager.ServiceFabric.Models.DiagnosticsStorageAccountConfig,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.SettingsSectionDescription},System.Uri,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterNodeTypeDescription},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ServiceFabricProvisioningState},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ClusterReliabilityLevel},Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription,Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames,Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradePolicy,System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeMode},System.Nullable{System.Int64},System.String,System.Nullable{Azure.ResourceManager.ServiceFabric.Models.SfZonalUpgradeMode},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.VmssZonalUpgradeMode},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeCadence},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabric.Models.ClusterNotification},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricClusterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional addOnFeatures As IEnumerable(Of ClusterAddOnFeature) = Nothing, Optional availableClusterVersions As IEnumerable(Of ClusterVersionDetails) = Nothing, Optional azureActiveDirectory As ClusterAadSetting = Nothing, Optional certificate As ClusterCertificateDescription = Nothing, Optional certificateCommonNames As ClusterServerCertificateCommonNames = Nothing, Optional clientCertificateCommonNames As IEnumerable(Of ClusterClientCertificateCommonName) = Nothing, Optional clientCertificateThumbprints As IEnumerable(Of ClusterClientCertificateThumbprint) = Nothing, Optional clusterCodeVersion As String = Nothing, Optional clusterEndpoint As Uri = Nothing, Optional clusterId As Nullable(Of Guid) = Nothing, Optional clusterState As Nullable(Of ServiceFabricClusterState) = Nothing, Optional diagnosticsStorageAccountConfig As DiagnosticsStorageAccountConfig = Nothing, Optional isEventStoreServiceEnabled As Nullable(Of Boolean) = Nothing, Optional fabricSettings As IEnumerable(Of SettingsSectionDescription) = Nothing, Optional managementEndpoint As Uri = Nothing, Optional nodeTypes As IEnumerable(Of ClusterNodeTypeDescription) = Nothing, Optional provisioningState As Nullable(Of ServiceFabricProvisioningState) = Nothing, Optional reliabilityLevel As Nullable(Of ClusterReliabilityLevel) = Nothing, Optional reverseProxyCertificate As ClusterCertificateDescription = Nothing, Optional reverseProxyCertificateCommonNames As ClusterServerCertificateCommonNames = Nothing, Optional upgradeDescription As ClusterUpgradePolicy = Nothing, Optional upgradeMode As Nullable(Of ClusterUpgradeMode) = Nothing, Optional maxUnusedVersionsToKeep As Nullable(Of Long) = Nothing, Optional vmImage As String = Nothing, Optional serviceFabricZonalUpgradeMode As Nullable(Of SfZonalUpgradeMode) = Nothing, Optional vmssZonalUpgradeMode As Nullable(Of VmssZonalUpgradeMode) = Nothing, Optional isInfrastructureServiceManagerEnabled As Nullable(Of Boolean) = Nothing, Optional upgradeWave As Nullable(Of ClusterUpgradeCadence) = Nothing, Optional upgradePauseStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional upgradePauseEndOn As Nullable(Of DateTimeOffset) = Nothing, Optional isWaveUpgradePaused As Nullable(Of Boolean) = Nothing, Optional notifications As IEnumerable(Of ClusterNotification) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricClusterData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricClusterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterAddOnFeature&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails&gt; * Azure.ResourceManager.ServiceFabric.Models.ClusterAadSetting * Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription * Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateCommonName&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateThumbprint&gt; * string * Uri * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ServiceFabricClusterState&gt; * Azure.ResourceManager.ServiceFabric.Models.DiagnosticsStorageAccountConfig * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.SettingsSectionDescription&gt; * Uri * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNodeTypeDescription&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ServiceFabricProvisioningState&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterReliabilityLevel&gt; * Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription * Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames * Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradePolicy * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeMode&gt; * Nullable&lt;int64&gt; * string * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.SfZonalUpgradeMode&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.VmssZonalUpgradeMode&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeCadence&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNotification&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabric.ServiceFabricClusterData" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.ServiceFabricClusterData (id, name, resourceType, systemData, tags, location, addOnFeatures, availableClusterVersions, azureActiveDirectory, certificate, certificateCommonNames, clientCertificateCommonNames, clientCertificateThumbprints, clusterCodeVersion, clusterEndpoint, clusterId, clusterState, diagnosticsStorageAccountConfig, isEventStoreServiceEnabled, fabricSettings, managementEndpoint, nodeTypes, provisioningState, reliabilityLevel, reverseProxyCertificate, reverseProxyCertificateCommonNames, upgradeDescription, upgradeMode, maxUnusedVersionsToKeep, vmImage, serviceFabricZonalUpgradeMode, vmssZonalUpgradeMode, isInfrastructureServiceManagerEnabled, upgradeWave, upgradePauseStartOn, upgradePauseEndOn, isWaveUpgradePaused, notifications, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.ServiceFabricClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="addOnFeatures" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterAddOnFeature&gt;" />
        <Parameter Name="availableClusterVersions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterVersionDetails&gt;" />
        <Parameter Name="azureActiveDirectory" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterAadSetting" />
        <Parameter Name="certificate" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription" />
        <Parameter Name="certificateCommonNames" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames" />
        <Parameter Name="clientCertificateCommonNames" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateCommonName&gt;" />
        <Parameter Name="clientCertificateThumbprints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterClientCertificateThumbprint&gt;" />
        <Parameter Name="clusterCodeVersion" Type="System.String" />
        <Parameter Name="clusterEndpoint" Type="System.Uri" />
        <Parameter Name="clusterId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="clusterState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ServiceFabricClusterState&gt;" />
        <Parameter Name="diagnosticsStorageAccountConfig" Type="Azure.ResourceManager.ServiceFabric.Models.DiagnosticsStorageAccountConfig" />
        <Parameter Name="isEventStoreServiceEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fabricSettings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.SettingsSectionDescription&gt;" />
        <Parameter Name="managementEndpoint" Type="System.Uri" />
        <Parameter Name="nodeTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNodeTypeDescription&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ServiceFabricProvisioningState&gt;" />
        <Parameter Name="reliabilityLevel" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterReliabilityLevel&gt;" />
        <Parameter Name="reverseProxyCertificate" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterCertificateDescription" />
        <Parameter Name="reverseProxyCertificateCommonNames" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterServerCertificateCommonNames" />
        <Parameter Name="upgradeDescription" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradePolicy" />
        <Parameter Name="upgradeMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeMode&gt;" />
        <Parameter Name="maxUnusedVersionsToKeep" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="vmImage" Type="System.String" />
        <Parameter Name="serviceFabricZonalUpgradeMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.SfZonalUpgradeMode&gt;" />
        <Parameter Name="vmssZonalUpgradeMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.VmssZonalUpgradeMode&gt;" />
        <Parameter Name="isInfrastructureServiceManagerEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="upgradeWave" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterUpgradeCadence&gt;" />
        <Parameter Name="upgradePauseStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="upgradePauseEndOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="isWaveUpgradePaused" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="notifications" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterNotification&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="addOnFeatures"> The list of add-on features to enable in the cluster. </param>
        <param name="availableClusterVersions"> The Service Fabric runtime versions available for this cluster. </param>
        <param name="azureActiveDirectory"> The AAD authentication settings of the cluster. </param>
        <param name="certificate"> The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client. </param>
        <param name="certificateCommonNames"> Describes a list of server certificates referenced by common name that are used to secure the cluster. </param>
        <param name="clientCertificateCommonNames"> The list of client certificates referenced by common name that are allowed to manage the cluster. </param>
        <param name="clientCertificateThumbprints"> The list of client certificates referenced by thumbprint that are allowed to manage the cluster. </param>
        <param name="clusterCodeVersion"> The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**. </param>
        <param name="clusterEndpoint"> The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint. </param>
        <param name="clusterId"> A service generated unique identifier for the cluster resource. </param>
        <param name="clusterState">
             The current state of the cluster.
            
               - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
               - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
               - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
               - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
               - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
               - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
               - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
               - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
               - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
               - Ready - Indicates that the cluster is in a stable state.
            
             </param>
        <param name="diagnosticsStorageAccountConfig"> The storage account information for storing Service Fabric diagnostic logs. </param>
        <param name="isEventStoreServiceEnabled"> Indicates if the event store service is enabled. </param>
        <param name="fabricSettings"> The list of custom fabric settings to configure the cluster. </param>
        <param name="managementEndpoint"> The http management endpoint of the cluster. </param>
        <param name="nodeTypes"> The list of node types in the cluster. </param>
        <param name="provisioningState"> The provisioning state of the cluster resource. </param>
        <param name="reliabilityLevel">
             The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
            
               - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
               - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
               - Silver - Run the System services with a target replica set count of 5.
               - Gold - Run the System services with a target replica set count of 7.
               - Platinum - Run the System services with a target replica set count of 9.
            
             </param>
        <param name="reverseProxyCertificate"> The server certificate used by reverse proxy. </param>
        <param name="reverseProxyCertificateCommonNames"> Describes a list of server certificates referenced by common name that are used to secure the cluster. </param>
        <param name="upgradeDescription"> The policy to use when upgrading the cluster. </param>
        <param name="upgradeMode"> The upgrade mode of the cluster when new Service Fabric runtime version is available. </param>
        <param name="maxUnusedVersionsToKeep"> The policy used to clean up unused versions. </param>
        <param name="vmImage"> The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used. </param>
        <param name="serviceFabricZonalUpgradeMode"> This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster. </param>
        <param name="vmssZonalUpgradeMode"> This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added. </param>
        <param name="isInfrastructureServiceManagerEnabled"> Indicates if infrastructure service manager is enabled. </param>
        <param name="upgradeWave"> Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'. </param>
        <param name="upgradePauseStartOn"> Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC). </param>
        <param name="upgradePauseEndOn"> Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC). </param>
        <param name="isWaveUpgradePaused"> Boolean to pause automatic runtime version upgrades to the cluster. </param>
        <param name="notifications"> Indicates a list of notification channels for cluster events. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of ServiceFabricClusterData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricClusterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradableVersionPathResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabric.Models.UpgradableVersionPathResult UpgradableVersionPathResult (System.Collections.Generic.IEnumerable&lt;string&gt; supportedPath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabric.Models.UpgradableVersionPathResult UpgradableVersionPathResult(class System.Collections.Generic.IEnumerable`1&lt;string&gt; supportedPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.UpgradableVersionPathResult(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpgradableVersionPathResult (Optional supportedPath As IEnumerable(Of String) = Nothing) As UpgradableVersionPathResult" />
      <MemberSignature Language="F#" Value="static member UpgradableVersionPathResult : seq&lt;string&gt; -&gt; Azure.ResourceManager.ServiceFabric.Models.UpgradableVersionPathResult" Usage="Azure.ResourceManager.ServiceFabric.Models.ArmServiceFabricModelFactory.UpgradableVersionPathResult supportedPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabric.Models.UpgradableVersionPathResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supportedPath" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="supportedPath" />
        <summary> Initializes a new instance of UpgradableVersionPathResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabric.Models.UpgradableVersionPathResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
