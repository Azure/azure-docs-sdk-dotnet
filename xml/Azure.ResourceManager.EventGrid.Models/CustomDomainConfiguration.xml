<Type Name="CustomDomainConfiguration" FullName="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration">
  <TypeSignature Language="C#" Value="public class CustomDomainConfiguration : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomDomainConfiguration extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomDomainConfiguration&#xA;Implements IJsonModel(Of CustomDomainConfiguration), IPersistableModel(Of CustomDomainConfiguration)" />
  <TypeSignature Language="F#" Value="type CustomDomainConfiguration = class&#xA;    interface IJsonModel&lt;CustomDomainConfiguration&gt;&#xA;    interface IPersistableModel&lt;CustomDomainConfiguration&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A custom domain configuration that allows users to publish to their own domain name. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomDomainConfiguration (string fullyQualifiedDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fullyQualifiedDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullyQualifiedDomainName As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration : string -&gt; Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration" Usage="new Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration fullyQualifiedDomainName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullyQualifiedDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullyQualifiedDomainName"> Fully Qualified Domain Name (FQDN) for the custom domain. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fullyQualifiedDomainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CertificateUri">
      <MemberSignature Language="C#" Value="public Uri CertificateUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CertificateUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.CertificateUri" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateUri As Uri" />
      <MemberSignature Language="F#" Value="member this.CertificateUri : Uri with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.CertificateUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either
            versioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,
            https://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedTxtRecordName">
      <MemberSignature Language="C#" Value="public string ExpectedTxtRecordName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpectedTxtRecordName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ExpectedTxtRecordName" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpectedTxtRecordName As String" />
      <MemberSignature Language="F#" Value="member this.ExpectedTxtRecordName : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ExpectedTxtRecordName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.
            The values under this TXT record must contain the expected TXT record value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedTxtRecordValue">
      <MemberSignature Language="C#" Value="public string ExpectedTxtRecordValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpectedTxtRecordValue" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ExpectedTxtRecordValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpectedTxtRecordValue As String" />
      <MemberSignature Language="F#" Value="member this.ExpectedTxtRecordValue : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ExpectedTxtRecordValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedDomainName">
      <MemberSignature Language="C#" Value="public string FullyQualifiedDomainName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedDomainName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.FullyQualifiedDomainName" />
      <MemberSignature Language="VB.NET" Value="Public Property FullyQualifiedDomainName As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedDomainName : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.FullyQualifiedDomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Fully Qualified Domain Name (FQDN) for the custom domain. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.CustomDomainIdentity Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.CustomDomainIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As CustomDomainIdentity" />
      <MemberSignature Language="F#" Value="member this.Identity : Azure.ResourceManager.EventGrid.Models.CustomDomainIdentity with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.CustomDomainIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration IJsonModel&lt;CustomDomainConfiguration&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#CustomDomainConfiguration&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As CustomDomainConfiguration Implements IJsonModel(Of CustomDomainConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration" Usage="customDomainConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;CustomDomainConfiguration&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#CustomDomainConfiguration&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of CustomDomainConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="customDomainConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration IPersistableModel&lt;CustomDomainConfiguration&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#CustomDomainConfiguration&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As CustomDomainConfiguration Implements IPersistableModel(Of CustomDomainConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration" Usage="customDomainConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;CustomDomainConfiguration&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#CustomDomainConfiguration&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of CustomDomainConfiguration).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="customDomainConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;CustomDomainConfiguration&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#CustomDomainConfiguration&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of CustomDomainConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="customDomainConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationState">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.CustomDomainValidationState? ValidationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.EventGrid.Models.CustomDomainValidationState&gt; ValidationState" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ValidationState" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationState As Nullable(Of CustomDomainValidationState)" />
      <MemberSignature Language="F#" Value="member this.ValidationState : Nullable&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainValidationState&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.CustomDomainConfiguration.ValidationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.EventGrid.Models.CustomDomainValidationState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
