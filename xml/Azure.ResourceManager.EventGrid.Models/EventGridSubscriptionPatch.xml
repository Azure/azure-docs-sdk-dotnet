<Type Name="EventGridSubscriptionPatch" FullName="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch">
  <TypeSignature Language="C#" Value="public class EventGridSubscriptionPatch" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridSubscriptionPatch extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridSubscriptionPatch" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type EventGridSubscriptionPatch = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class EventGridSubscriptionPatch : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridSubscriptionPatch extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridSubscriptionPatch&#xA;Implements IJsonModel(Of EventGridSubscriptionPatch), IPersistableModel(Of EventGridSubscriptionPatch)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type EventGridSubscriptionPatch = class&#xA;    interface IJsonModel&lt;EventGridSubscriptionPatch&gt;&#xA;    interface IPersistableModel&lt;EventGridSubscriptionPatch&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Properties of the Event Subscription update. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventGridSubscriptionPatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterDestination">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.DeadLetterDestination DeadLetterDestination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.DeadLetterDestination DeadLetterDestination" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeadLetterDestination" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterDestination As DeadLetterDestination" />
      <MemberSignature Language="F#" Value="member this.DeadLetterDestination : Azure.ResourceManager.EventGrid.Models.DeadLetterDestination with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeadLetterDestination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.DeadLetterDestination</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
            Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.DeadLetterDestination" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.StorageBlobDeadLetterDestination" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterWithResourceIdentity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity DeadLetterWithResourceIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity DeadLetterWithResourceIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeadLetterWithResourceIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterWithResourceIdentity As DeadLetterWithResourceIdentity" />
      <MemberSignature Language="F#" Value="member this.DeadLetterWithResourceIdentity : Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeadLetterWithResourceIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
            Uses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryWithResourceIdentity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity DeliveryWithResourceIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity DeliveryWithResourceIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeliveryWithResourceIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryWithResourceIdentity As DeliveryWithResourceIdentity" />
      <MemberSignature Language="F#" Value="member this.DeliveryWithResourceIdentity : Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.DeliveryWithResourceIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the destination where events have to be delivered for the event subscription.
            Uses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destination">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination Destination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination Destination" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Destination" />
      <MemberSignature Language="VB.NET" Value="Public Property Destination As EventSubscriptionDestination" />
      <MemberSignature Language="F#" Value="member this.Destination : Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Destination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the destination where events have to be delivered for the event subscription.
            Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.AzureFunctionEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.EventHubEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.HybridConnectionEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.MonitorAlertEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NamespaceTopicEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.PartnerEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.ServiceBusQueueEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.ServiceBusTopicEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StorageQueueEventSubscriptionDestination" /> and <see cref="T:Azure.ResourceManager.EventGrid.Models.WebHookEventSubscriptionDestination" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventDeliverySchema">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.EventDeliverySchema? EventDeliverySchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.EventGrid.Models.EventDeliverySchema&gt; EventDeliverySchema" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.EventDeliverySchema" />
      <MemberSignature Language="VB.NET" Value="Public Property EventDeliverySchema As Nullable(Of EventDeliverySchema)" />
      <MemberSignature Language="F#" Value="member this.EventDeliverySchema : Nullable&lt;Azure.ResourceManager.EventGrid.Models.EventDeliverySchema&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.EventDeliverySchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.EventGrid.Models.EventDeliverySchema&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The event delivery schema for the event subscription. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpireOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? ExpireOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; ExpireOn" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.ExpireOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpireOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.ExpireOn : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.ExpireOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Information about the expiration time for the event subscription. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As EventSubscriptionFilter" />
      <MemberSignature Language="F#" Value="member this.Filter : Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Information about the filter for the event subscription. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Labels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Labels" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Labels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Labels As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Labels : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.Labels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of user defined labels. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryPolicy">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.EventSubscriptionRetryPolicy RetryPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.EventSubscriptionRetryPolicy RetryPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.RetryPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryPolicy As EventSubscriptionRetryPolicy" />
      <MemberSignature Language="F#" Value="member this.RetryPolicy : Azure.ResourceManager.EventGrid.Models.EventSubscriptionRetryPolicy with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.RetryPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventSubscriptionRetryPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch IJsonModel&lt;EventGridSubscriptionPatch&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#EventGridSubscriptionPatch&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As EventGridSubscriptionPatch Implements IJsonModel(Of EventGridSubscriptionPatch).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch" Usage="eventGridSubscriptionPatch.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;EventGridSubscriptionPatch&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#EventGridSubscriptionPatch&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of EventGridSubscriptionPatch).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="eventGridSubscriptionPatch.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch IPersistableModel&lt;EventGridSubscriptionPatch&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#EventGridSubscriptionPatch&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As EventGridSubscriptionPatch Implements IPersistableModel(Of EventGridSubscriptionPatch).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch" Usage="eventGridSubscriptionPatch.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;EventGridSubscriptionPatch&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#EventGridSubscriptionPatch&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of EventGridSubscriptionPatch).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="eventGridSubscriptionPatch.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;EventGridSubscriptionPatch&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#EventGridSubscriptionPatch&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of EventGridSubscriptionPatch).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="eventGridSubscriptionPatch.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.EventGridSubscriptionPatch&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
