<Type Name="PushInfo" FullName="Azure.ResourceManager.EventGrid.Models.PushInfo">
  <TypeSignature Language="C#" Value="public class PushInfo : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PushInfo extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.EventGrid.Models.PushInfo&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.EventGrid.Models.PushInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.PushInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class PushInfo&#xA;Implements IJsonModel(Of PushInfo), IPersistableModel(Of PushInfo)" />
  <TypeSignature Language="F#" Value="type PushInfo = class&#xA;    interface IJsonModel&lt;PushInfo&gt;&#xA;    interface IPersistableModel&lt;PushInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Properties of the destination info for event subscription supporting push. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PushInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.EventGrid.Models.PushInfo" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterDestinationWithResourceIdentity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity DeadLetterDestinationWithResourceIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity DeadLetterDestinationWithResourceIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.PushInfo.DeadLetterDestinationWithResourceIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterDestinationWithResourceIdentity As DeadLetterWithResourceIdentity" />
      <MemberSignature Language="F#" Value="member this.DeadLetterDestinationWithResourceIdentity : Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity with get, set" Usage="Azure.ResourceManager.EventGrid.Models.PushInfo.DeadLetterDestinationWithResourceIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.DeadLetterWithResourceIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
            Uses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryWithResourceIdentity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity DeliveryWithResourceIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity DeliveryWithResourceIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.PushInfo.DeliveryWithResourceIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryWithResourceIdentity As DeliveryWithResourceIdentity" />
      <MemberSignature Language="F#" Value="member this.DeliveryWithResourceIdentity : Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity with get, set" Usage="Azure.ResourceManager.EventGrid.Models.PushInfo.DeliveryWithResourceIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.DeliveryWithResourceIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the destination where events have to be delivered for the event subscription.
            Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destination">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination Destination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination Destination" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.PushInfo.Destination" />
      <MemberSignature Language="VB.NET" Value="Public Property Destination As EventSubscriptionDestination" />
      <MemberSignature Language="F#" Value="member this.Destination : Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination with get, set" Usage="Azure.ResourceManager.EventGrid.Models.PushInfo.Destination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the destination where events have to be delivered for the event subscription.
            Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.EventSubscriptionDestination" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.AzureFunctionEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.EventHubEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.HybridConnectionEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.MonitorAlertEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NamespaceTopicEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.PartnerEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.ServiceBusQueueEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.ServiceBusTopicEventSubscriptionDestination" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StorageQueueEventSubscriptionDestination" /> and <see cref="T:Azure.ResourceManager.EventGrid.Models.WebHookEventSubscriptionDestination" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventTimeToLive">
      <MemberSignature Language="C#" Value="public string EventTimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventTimeToLive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.PushInfo.EventTimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property EventTimeToLive As String" />
      <MemberSignature Language="F#" Value="member this.EventTimeToLive : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.PushInfo.EventTimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.
            This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
                - (n) is replaced by the value of each time element that follows the (n).
                - P is the duration (or Period) designator and is always placed at the beginning of the duration.
                - Y is the year designator, and it follows the value for the number of years.
                - M is the month designator, and it follows the value for the number of months.
                - W is the week designator, and it follows the value for the number of weeks.
                - D is the day designator, and it follows the value for the number of days.
                - T is the time designator, and it precedes the time components.
                - H is the hour designator, and it follows the value for the number of hours.
                - M is the minute designator, and it follows the value for the number of minutes.
                - S is the second designator, and it follows the value for the number of seconds.
            This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined
            by topic’s EventRetentionInDays value. The followings are examples of valid values:
                - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
                - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDeliveryCount">
      <MemberSignature Language="C#" Value="public int? MaxDeliveryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxDeliveryCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.PushInfo.MaxDeliveryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDeliveryCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxDeliveryCount : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.PushInfo.MaxDeliveryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum delivery count of the events. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.PushInfo IJsonModel&lt;PushInfo&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.PushInfo System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#PushInfo&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As PushInfo Implements IJsonModel(Of PushInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.PushInfo&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.PushInfo" Usage="pushInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.PushInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;PushInfo&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#EventGrid#Models#PushInfo&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of PushInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="pushInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.EventGrid.Models.PushInfo IPersistableModel&lt;PushInfo&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.EventGrid.Models.PushInfo System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#PushInfo&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As PushInfo Implements IPersistableModel(Of PushInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.PushInfo&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.EventGrid.Models.PushInfo" Usage="pushInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.Models.PushInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;PushInfo&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#PushInfo&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of PushInfo).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="pushInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;PushInfo&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.PushInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#EventGrid#Models#PushInfo&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of PushInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="pushInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.EventGrid.Models.PushInfo&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
