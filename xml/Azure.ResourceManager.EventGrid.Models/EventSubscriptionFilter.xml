<Type Name="EventSubscriptionFilter" FullName="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter">
  <TypeSignature Language="C#" Value="public class EventSubscriptionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSubscriptionFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSubscriptionFilter" />
  <TypeSignature Language="F#" Value="type EventSubscriptionFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Filter for the Event Subscription. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSubscriptionFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of EventSubscriptionFilter. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.AdvancedFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedFilters As IList(Of AdvancedFilter)" />
      <MemberSignature Language="F#" Value="member this.AdvancedFilters : System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.AdvancedFilter&gt;" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.AdvancedFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.AdvancedFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An array of advanced filters that are used for filtering event subscriptions.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.AdvancedFilter" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.BoolEqualsAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNotNullAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNullOrUndefinedAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanOrEqualsAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInRangeAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanOrEqualsAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInRangeAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringBeginsWithAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringContainsAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringEndsWithAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringInAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotBeginsWithAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotContainsAdvancedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotEndsWithAdvancedFilter" /> and <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotInAdvancedFilter" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAdvancedFilteringOnArrays">
      <MemberSignature Language="C#" Value="public bool? EnableAdvancedFilteringOnArrays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableAdvancedFilteringOnArrays" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.EnableAdvancedFilteringOnArrays" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAdvancedFilteringOnArrays As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableAdvancedFilteringOnArrays : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.EnableAdvancedFilteringOnArrays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludedEventTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; IncludedEventTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; IncludedEventTypes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.IncludedEventTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludedEventTypes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.IncludedEventTypes : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.IncludedEventTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubjectCaseSensitive">
      <MemberSignature Language="C#" Value="public bool? IsSubjectCaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSubjectCaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.IsSubjectCaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubjectCaseSensitive As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSubjectCaseSensitive : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.IsSubjectCaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
            should be compared in a case sensitive manner.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectBeginsWith">
      <MemberSignature Language="C#" Value="public string SubjectBeginsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectBeginsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.SubjectBeginsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectBeginsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectBeginsWith : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.SubjectBeginsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional string to filter events for an event subscription based on a resource path prefix.
            The format of this depends on the publisher of the events.
            Wildcard characters are not supported in this path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEndsWith">
      <MemberSignature Language="C#" Value="public string SubjectEndsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectEndsWith" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.SubjectEndsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEndsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectEndsWith : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventSubscriptionFilter.SubjectEndsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional string to filter events for an event subscription based on a resource path suffix.
            Wildcard characters are not supported in this path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
