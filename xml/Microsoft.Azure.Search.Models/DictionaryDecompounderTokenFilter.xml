<Type Name="DictionaryDecompounderTokenFilter" FullName="Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter">
  <TypeSignature Language="C#" Value="public class DictionaryDecompounderTokenFilter : Microsoft.Azure.Search.Models.TokenFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictionaryDecompounderTokenFilter extends Microsoft.Azure.Search.Models.TokenFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Search.Models.TokenFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonObject("#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Decomposes compound words found in many Germanic languages. This token
            filter is implemented using Apache Lucene.
            <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.html" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictionaryDecompounderTokenFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the DictionaryDecompounderTokenFilter
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictionaryDecompounderTokenFilter (string name, System.Collections.Generic.IList&lt;string&gt; wordList, Nullable&lt;int&gt; minWordSize = null, Nullable&lt;int&gt; minSubwordSize = null, Nullable&lt;int&gt; maxSubwordSize = null, Nullable&lt;bool&gt; onlyLongestMatch = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IList`1&lt;string&gt; wordList, valuetype System.Nullable`1&lt;int32&gt; minWordSize, valuetype System.Nullable`1&lt;int32&gt; minSubwordSize, valuetype System.Nullable`1&lt;int32&gt; maxSubwordSize, valuetype System.Nullable`1&lt;bool&gt; onlyLongestMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="wordList" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="minWordSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minSubwordSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maxSubwordSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="onlyLongestMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the token filter. It must only
            contain letters, digits, spaces, dashes or underscores, can only
            start and end with alphanumeric characters, and is limited to 128
            characters.</param>
        <param name="wordList">The list of words to match against.</param>
        <param name="minWordSize">The minimum word size. Only words longer
            than this get processed. Default is 5. Maximum is 300.</param>
        <param name="minSubwordSize">The minimum subword size. Only
            subwords longer than this are outputted. Default is 2. Maximum is
            300.</param>
        <param name="maxSubwordSize">The maximum subword size. Only
            subwords shorter than this are outputted. Default is 15. Maximum is
            300.</param>
        <param name="onlyLongestMatch">A value indicating whether to add
            only the longest matching subword to the output. Default is
            false.</param>
        <summary>
            Initializes a new instance of the DictionaryDecompounderTokenFilter
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSubwordSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MaxSubwordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxSubwordSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.MaxSubwordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="maxSubwordSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum subword size. Only subwords shorter than
            this are outputted. Default is 15. Maximum is 300.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSubwordSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MinSubwordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinSubwordSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.MinSubwordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="minSubwordSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum subword size. Only subwords longer than
            this are outputted. Default is 2. Maximum is 300.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWordSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MinWordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinWordSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.MinWordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="minWordSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum word size. Only words longer than this get
            processed. Default is 5. Maximum is 300.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlyLongestMatch">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; OnlyLongestMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; OnlyLongestMatch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.OnlyLongestMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="onlyLongestMatch")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to add only the longest
            matching subword to the output. Default is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WordList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; WordList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WordList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.DictionaryDecompounderTokenFilter.WordList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="wordList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of words to match against.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>