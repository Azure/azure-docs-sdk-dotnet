<Type Name="Field" FullName="Microsoft.Azure.Search.Models.Field">
  <TypeSignature Language="C#" Value="public class Field" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Field extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.Field" />
  <TypeSignature Language="VB.NET" Value="Public Class Field" />
  <TypeSignature Language="F#" Value="type Field = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.1.0</AssemblyVersion>
    <AssemblyVersion>10.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a field in an index definition, which describes the name,
            data type, and search behavior of a field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Create-Index" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.AnalyzerName -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, analyzerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
      </Parameters>
      <Docs>
        <param name="name">The name of the string field.</param>
        <param name="analyzerName">The name of the analyzer to use for the simple field.</param>
        <summary>
            Initializes a new searchable string Field with required arguments.
            </summary>
        <remarks>The new field will automatically be searchable and of type Edm.String.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="dataType">The data type of the simple field. Cannot be a complex type.</param>
        <summary>
            Initializes a new simple Field with required arguments.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType, Microsoft.Azure.Search.Models.AnalyzerName analyzerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType * Microsoft.Azure.Search.Models.AnalyzerName -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType, analyzerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="dataType">The data type of the field. Cannot be a complex type.</param>
        <param name="analyzerName">The name of the analyzer to use for the field.</param>
        <summary>
            Initializes a new searchable simple Field with required arguments.
            </summary>
        <remarks>The new field will automatically be searchable.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType, System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field})" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType * System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType, fields)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
        <Parameter Name="fields" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the complex field.</param>
        <param name="dataType">The data type of the field. Must be a complex type.</param>
        <param name="fields">The sub-fields that comprise the complex type. They can be simple or complex fields themselves.</param>
        <summary>
            Initializes a new complex Field with required arguments.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is not a complex type.</exception>
        <exception cref="T:System.ArgumentNullException">Thrown if <c>fields</c> is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>fields</c> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Analyzer">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; Analyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; Analyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Analyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property Analyzer As Nullable(Of AnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.Analyzer : Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.Analyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="analyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the language analyzer to use for the
            field. This option can be used only with searchable fields and it
            can't be set together with either searchAnalyzer or indexAnalyzer.
            Once the analyzer is chosen, it cannot be changed for the field.
            Must be null for complex fields. Possible values include:
            'ar.microsoft', 'ar.lucene', 'hy.lucene', 'bn.microsoft',
            'eu.lucene', 'bg.microsoft', 'bg.lucene', 'ca.microsoft',
            'ca.lucene', 'zh-Hans.microsoft', 'zh-Hans.lucene',
            'zh-Hant.microsoft', 'zh-Hant.lucene', 'hr.microsoft',
            'cs.microsoft', 'cs.lucene', 'da.microsoft', 'da.lucene',
            'nl.microsoft', 'nl.lucene', 'en.microsoft', 'en.lucene',
            'et.microsoft', 'fi.microsoft', 'fi.lucene', 'fr.microsoft',
            'fr.lucene', 'gl.lucene', 'de.microsoft', 'de.lucene',
            'el.microsoft', 'el.lucene', 'gu.microsoft', 'he.microsoft',
            'hi.microsoft', 'hi.lucene', 'hu.microsoft', 'hu.lucene',
            'is.microsoft', 'id.microsoft', 'id.lucene', 'ga.lucene',
            'it.microsoft', 'it.lucene', 'ja.microsoft', 'ja.lucene',
            'kn.microsoft', 'ko.microsoft', 'ko.lucene', 'lv.microsoft',
            'lv.lucene', 'lt.microsoft', 'ml.microsoft', 'ms.microsoft',
            'mr.microsoft', 'nb.microsoft', 'no.lucene', 'fa.lucene',
            'pl.microsoft', 'pl.lucene', 'pt-BR.microsoft', 'pt-BR.lucene',
            'pt-PT.microsoft', 'pt-PT.lucene', 'pa.microsoft', 'ro.microsoft',
            'ro.lucene', 'ru.microsoft', 'ru.lucene', 'sr-cyrillic.microsoft',
            'sr-latin.microsoft', 'sk.microsoft', 'sl.microsoft',
            'es.microsoft', 'es.lucene', 'sv.microsoft', 'sv.lucene',
            'ta.microsoft', 'te.microsoft', 'th.microsoft', 'th.lucene',
            'tr.microsoft', 'tr.lucene', 'uk.microsoft', 'ur.microsoft',
            'vi.microsoft', 'standard.lucene', 'standardasciifolding.lucene',
            'keyword', 'pattern', 'simple', 'stop', 'whitespace'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; Fields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Fields" />
      <MemberSignature Language="VB.NET" Value="Public Property Fields As IList(Of Field)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="fields")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of sub-fields if this is a field of type
            Edm.ComplexType or Collection(Edm.ComplexType). Must be null or
            empty for simple fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexAnalyzer">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; IndexAnalyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; IndexAnalyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IndexAnalyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexAnalyzer As Nullable(Of AnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.IndexAnalyzer : Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IndexAnalyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="indexAnalyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at indexing time for the
            field. This option can be used only with searchable fields. It must
            be set together with searchAnalyzer and it cannot be set together
            with the analyzer option. Once the analyzer is chosen, it cannot be
            changed for the field. Must be null for complex fields. Possible
            values include: 'ar.microsoft', 'ar.lucene', 'hy.lucene',
            'bn.microsoft', 'eu.lucene', 'bg.microsoft', 'bg.lucene',
            'ca.microsoft', 'ca.lucene', 'zh-Hans.microsoft', 'zh-Hans.lucene',
            'zh-Hant.microsoft', 'zh-Hant.lucene', 'hr.microsoft',
            'cs.microsoft', 'cs.lucene', 'da.microsoft', 'da.lucene',
            'nl.microsoft', 'nl.lucene', 'en.microsoft', 'en.lucene',
            'et.microsoft', 'fi.microsoft', 'fi.lucene', 'fr.microsoft',
            'fr.lucene', 'gl.lucene', 'de.microsoft', 'de.lucene',
            'el.microsoft', 'el.lucene', 'gu.microsoft', 'he.microsoft',
            'hi.microsoft', 'hi.lucene', 'hu.microsoft', 'hu.lucene',
            'is.microsoft', 'id.microsoft', 'id.lucene', 'ga.lucene',
            'it.microsoft', 'it.lucene', 'ja.microsoft', 'ja.lucene',
            'kn.microsoft', 'ko.microsoft', 'ko.lucene', 'lv.microsoft',
            'lv.lucene', 'lt.microsoft', 'ml.microsoft', 'ms.microsoft',
            'mr.microsoft', 'nb.microsoft', 'no.lucene', 'fa.lucene',
            'pl.microsoft', 'pl.lucene', 'pt-BR.microsoft', 'pt-BR.lucene',
            'pt-PT.microsoft', 'pt-PT.lucene', 'pa.microsoft', 'ro.microsoft',
            'ro.lucene', 'ru.microsoft', 'ru.lucene', 'sr-cyrillic.microsoft',
            'sr-latin.microsoft', 'sk.microsoft', 'sl.microsoft',
            'es.microsoft', 'es.lucene', 'sv.microsoft', 'sv.lucene',
            'ta.microsoft', 'te.microsoft', 'th.microsoft', 'th.lucene',
            'tr.microsoft', 'tr.lucene', 'uk.microsoft', 'ur.microsoft',
            'vi.microsoft', 'standard.lucene', 'standardasciifolding.lucene',
            'keyword', 'pattern', 'simple', 'stop', 'whitespace'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFacetable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsFacetable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsFacetable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsFacetable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFacetable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsFacetable : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsFacetable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to enable the field to be
            referenced in facet queries. Typically used in a presentation of
            search results that includes hit count by category (for example,
            search for digital cameras and see hits by brand, by megapixels, by
            price, and so on). This property must be null for complex fields.
            Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint)
            cannot be facetable. All other simple fields can be facetable.
            Default is false for simple fields, and null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilterable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsFilterable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsFilterable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsFilterable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFilterable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsFilterable : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsFilterable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to enable the field to be
            referenced in $filter queries. filterable differs from searchable
            in how strings are handled. Fields of type Edm.String or
            Collection(Edm.String) that are filterable do not undergo
            word-breaking, so comparisons are for exact matches only. For
            example, if you set such a field f to "sunny day", $filter=f eq
            'sunny' will find no matches, but $filter=f eq 'sunny day' will.
            This property must be null for complex fields. Default is false for
            simple fields and null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsKey : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field uniquely
            identifies documents in the index. Exactly one top-level field in
            each index must be chosen as the key field and it must be of type
            Edm.String. Key fields can be used to look up documents directly
            and update or delete specific documents. Default is false for
            simple fields and null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetrievable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsRetrievable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsRetrievable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsRetrievable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRetrievable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsRetrievable : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsRetrievable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be returned
            in a search result. You can disable this option if you want to use
            a field (for example, margin) as a filter, sorting, or scoring
            mechanism but do not want the field to be visible to the end user.
            This property must be true for key fields, and it must be null for
            complex fields. This property can be changed on existing fields.
            Enabling this property does not cause any increase in index storage
            requirements. Default is true for simple fields and null for
            complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSearchable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSearchable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsSearchable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSearchable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSearchable : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsSearchable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field is full-text
            searchable. This means it will undergo analysis such as
            word-breaking during indexing. If you set a searchable field to a
            value like "sunny day", internally it will be split into the
            individual tokens "sunny" and "day". This enables full-text
            searches for these terms. This property may be set to true only for
            fields of type Edm.String or Collection(Edm.String), and it must be
            null for complex fields. Default is false for simple fields and null for
            complex fields. Note: searchable fields consume extra space in your
            index since Azure Cognitive Search will store an additional tokenized version
            of the field value for full-text searches. If you want to save space
            in your index and you don't need a field to be included in searches,
            set searchable to false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSortable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSortable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsSortable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSortable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSortable : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsSortable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to enable the field to be
            referenced in $orderby expressions. By default Azure Cognitive Search sorts
            results by score, but in many experiences users will want to sort
            by fields in the documents. A simple field can be sortable only if
            it is single-valued (it has a single value in the scope of the
            parent document). Simple collection fields cannot be sortable,
            since they are multi-valued. Simple sub-fields of complex
            collections are also multi-valued, and therefore cannot be
            sortable. This is true whether it's an immediate parent field, or
            an ancestor field, that's the complex collection. Complex fields
            cannot be sortable and the sortable property must be null for such
            fields. The default for sortable is false for simple fields, and
            null for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.Search.Models.Field.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the field, which must be unique within the
            fields collection of the index or parent field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field New (string name, Microsoft.Azure.Search.Models.DataType dataType, bool isKey = false, bool isRetrievable = true, bool isSearchable = false, bool isFilterable = false, bool isSortable = false, bool isFacetable = false, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; analyzerName = null, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; searchAnalyzerName = null, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; indexAnalyzerName = null, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field New(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType, bool isKey, bool isRetrievable, bool isSearchable, bool isFilterable, bool isSortable, bool isFacetable, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; analyzerName, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; searchAnalyzerName, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; indexAnalyzerName, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.New(System.String,Microsoft.Azure.Search.Models.DataType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member New : string * Microsoft.Azure.Search.Models.DataType * bool * bool * bool * bool * bool * bool * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.New (name, dataType, isKey, isRetrievable, isSearchable, isFilterable, isSortable, isFacetable, analyzerName, searchAnalyzerName, indexAnalyzerName, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
        <Parameter Name="isKey" Type="System.Boolean" />
        <Parameter Name="isRetrievable" Type="System.Boolean" />
        <Parameter Name="isSearchable" Type="System.Boolean" />
        <Parameter Name="isFilterable" Type="System.Boolean" />
        <Parameter Name="isSortable" Type="System.Boolean" />
        <Parameter Name="isFacetable" Type="System.Boolean" />
        <Parameter Name="analyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" />
        <Parameter Name="searchAnalyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" />
        <Parameter Name="indexAnalyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="dataType">The data type of the simple field. Cannot be a complex type.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isSearchable">A value indicating whether the field is
            full-text search-able. Default is false.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isSortable">A value indicating whether to enable the
            field to be referenced in $orderby expressions. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="analyzerName">The name of the language analyzer to use for
            the field. Default is null.</param>
        <param name="searchAnalyzerName">The name of the analyzer used at
            search time for the field. Default is null.</param>
        <param name="indexAnalyzerName">The name of the analyzer used at
            indexing time for the field. Default is null.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new simple Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewComplex">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewComplex (string name, bool isCollection, System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; fields);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewComplex(string name, bool isCollection, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewComplex(System.String,System.Boolean,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewComplex (name As String, isCollection As Boolean, fields As IList(Of Field)) As Field" />
      <MemberSignature Language="F#" Value="static member NewComplex : string * bool * System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewComplex (name, isCollection, fields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isCollection" Type="System.Boolean" />
        <Parameter Name="fields" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the complex field.</param>
        <param name="isCollection">
          <c>true</c> if the field should be of type Collection(Edm.ComplexType); <c>false</c> if it should be
            of type Edm.ComplexType.</param>
        <param name="fields">The sub-fields that comprise the complex type. They can be simple or complex fields themselves.</param>
        <summary>
            Creates a new complex Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <c>fields</c> is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>fields</c> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSearchableCollection">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewSearchableCollection (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey = false, bool isRetrievable = true, bool isFilterable = false, bool isFacetable = false, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewSearchableCollection(string name, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey, bool isRetrievable, bool isFilterable, bool isFacetable, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewSearchableCollection(System.String,Microsoft.Azure.Search.Models.AnalyzerName,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member NewSearchableCollection : string * Microsoft.Azure.Search.Models.AnalyzerName * bool * bool * bool * bool * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewSearchableCollection (name, analyzerName, isKey, isRetrievable, isFilterable, isFacetable, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
        <Parameter Name="isKey" Type="System.Boolean" />
        <Parameter Name="isRetrievable" Type="System.Boolean" />
        <Parameter Name="isFilterable" Type="System.Boolean" />
        <Parameter Name="isFacetable" Type="System.Boolean" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="analyzerName">The name of the analyzer to use for the field.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new searchable string collection Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>The new field will automatically be searchable and of type Collection(Edm.String).</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSearchableString">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewSearchableString (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey = false, bool isRetrievable = true, bool isFilterable = false, bool isSortable = false, bool isFacetable = false, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewSearchableString(string name, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey, bool isRetrievable, bool isFilterable, bool isSortable, bool isFacetable, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewSearchableString(System.String,Microsoft.Azure.Search.Models.AnalyzerName,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member NewSearchableString : string * Microsoft.Azure.Search.Models.AnalyzerName * bool * bool * bool * bool * bool * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewSearchableString (name, analyzerName, isKey, isRetrievable, isFilterable, isSortable, isFacetable, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
        <Parameter Name="isKey" Type="System.Boolean" />
        <Parameter Name="isRetrievable" Type="System.Boolean" />
        <Parameter Name="isFilterable" Type="System.Boolean" />
        <Parameter Name="isSortable" Type="System.Boolean" />
        <Parameter Name="isFacetable" Type="System.Boolean" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the string field.</param>
        <param name="analyzerName">The name of the analyzer to use for the simple field.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isSortable">A value indicating whether to enable the
            field to be referenced in $orderby expressions. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new searchable string Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>The new field will automatically be searchable and of type Edm.String.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchAnalyzer">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; SearchAnalyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; SearchAnalyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.SearchAnalyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchAnalyzer As Nullable(Of AnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.SearchAnalyzer : Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.SearchAnalyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="searchAnalyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at search time for the
            field. This option can be used only with searchable fields. It must
            be set together with indexAnalyzer and it cannot be set together
            with the analyzer option. This analyzer can be updated on an
            existing field. Must be null for complex fields. Possible values
            include: 'ar.microsoft', 'ar.lucene', 'hy.lucene', 'bn.microsoft',
            'eu.lucene', 'bg.microsoft', 'bg.lucene', 'ca.microsoft',
            'ca.lucene', 'zh-Hans.microsoft', 'zh-Hans.lucene',
            'zh-Hant.microsoft', 'zh-Hant.lucene', 'hr.microsoft',
            'cs.microsoft', 'cs.lucene', 'da.microsoft', 'da.lucene',
            'nl.microsoft', 'nl.lucene', 'en.microsoft', 'en.lucene',
            'et.microsoft', 'fi.microsoft', 'fi.lucene', 'fr.microsoft',
            'fr.lucene', 'gl.lucene', 'de.microsoft', 'de.lucene',
            'el.microsoft', 'el.lucene', 'gu.microsoft', 'he.microsoft',
            'hi.microsoft', 'hi.lucene', 'hu.microsoft', 'hu.lucene',
            'is.microsoft', 'id.microsoft', 'id.lucene', 'ga.lucene',
            'it.microsoft', 'it.lucene', 'ja.microsoft', 'ja.lucene',
            'kn.microsoft', 'ko.microsoft', 'ko.lucene', 'lv.microsoft',
            'lv.lucene', 'lt.microsoft', 'ml.microsoft', 'ms.microsoft',
            'mr.microsoft', 'nb.microsoft', 'no.lucene', 'fa.lucene',
            'pl.microsoft', 'pl.lucene', 'pt-BR.microsoft', 'pt-BR.lucene',
            'pt-PT.microsoft', 'pt-PT.lucene', 'pa.microsoft', 'ro.microsoft',
            'ro.lucene', 'ru.microsoft', 'ru.lucene', 'sr-cyrillic.microsoft',
            'sr-latin.microsoft', 'sk.microsoft', 'sl.microsoft',
            'es.microsoft', 'es.lucene', 'sv.microsoft', 'sv.lucene',
            'ta.microsoft', 'te.microsoft', 'th.microsoft', 'th.lucene',
            'tr.microsoft', 'tr.lucene', 'uk.microsoft', 'ur.microsoft',
            'vi.microsoft', 'standard.lucene', 'standardasciifolding.lucene',
            'keyword', 'pattern', 'simple', 'stop', 'whitespace'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymMaps">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SynonymMaps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SynonymMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.SynonymMaps" />
      <MemberSignature Language="VB.NET" Value="Public Property SynonymMaps As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.SynonymMaps : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.SynonymMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="synonymMaps")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of the names of synonym maps to associate with
            this field. This option can be used only with searchable fields.
            Currently only one synonym map per field is supported. Assigning a
            synonym map to a field ensures that query terms targeting that
            field are expanded at query-time using the rules in the synonym
            map. This attribute can be changed on existing fields. Must be null
            or an empty collection for complex fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.DataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Search.Models.DataType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As DataType" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Azure.Search.Models.DataType with get, set" Usage="Microsoft.Azure.Search.Models.Field.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.DataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the data type of the field. Possible values include:
            'Edm.String', 'Edm.Int32', 'Edm.Int64', 'Edm.Double',
            'Edm.Boolean', 'Edm.DateTimeOffset', 'Edm.GeographyPoint',
            'Edm.ComplexType'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="field.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
