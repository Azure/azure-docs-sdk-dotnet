<Type Name="SuggestParameters" FullName="Microsoft.Azure.Search.Models.SuggestParameters">
  <TypeSignature Language="C#" Value="public class SuggestParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SuggestParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.SuggestParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class SuggestParameters" />
  <TypeSignature Language="F#" Value="type SuggestParameters = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.1.0</AssemblyVersion>
    <AssemblyVersion>10.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuggestParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SuggestParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuggestParameters (string filter = null, bool useFuzzyMatching = false, string highlightPostTag = null, string highlightPreTag = null, Nullable&lt;double&gt; minimumCoverage = null, System.Collections.Generic.IList&lt;string&gt; orderBy = null, System.Collections.Generic.IList&lt;string&gt; searchFields = null, System.Collections.Generic.IList&lt;string&gt; select = null, Nullable&lt;int&gt; top = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, bool useFuzzyMatching, string highlightPostTag, string highlightPreTag, valuetype System.Nullable`1&lt;float64&gt; minimumCoverage, class System.Collections.Generic.IList`1&lt;string&gt; orderBy, class System.Collections.Generic.IList`1&lt;string&gt; searchFields, class System.Collections.Generic.IList`1&lt;string&gt; select, valuetype System.Nullable`1&lt;int32&gt; top) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor(System.String,System.Boolean,System.String,System.String,System.Nullable{System.Double},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional filter As String = null, Optional useFuzzyMatching As Boolean = false, Optional highlightPostTag As String = null, Optional highlightPreTag As String = null, Optional minimumCoverage As Nullable(Of Double) = null, Optional orderBy As IList(Of String) = null, Optional searchFields As IList(Of String) = null, Optional select As IList(Of String) = null, Optional top As Nullable(Of Integer) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.SuggestParameters : string * bool * string * string * Nullable&lt;double&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; -&gt; Microsoft.Azure.Search.Models.SuggestParameters" Usage="new Microsoft.Azure.Search.Models.SuggestParameters (filter, useFuzzyMatching, highlightPostTag, highlightPreTag, minimumCoverage, orderBy, searchFields, select, top)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="useFuzzyMatching" Type="System.Boolean" />
        <Parameter Name="highlightPostTag" Type="System.String" />
        <Parameter Name="highlightPreTag" Type="System.String" />
        <Parameter Name="minimumCoverage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="searchFields" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="select" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="filter">An OData expression that filters the documents
            considered for suggestions.</param>
        <param name="useFuzzyMatching">A value indicating whether to use
            fuzzy matching for the suggestions query. Default is false. When
            set to true, the query will find terms even if there's a
            substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a
            performance cost as fuzzy suggestions queries are slower and
            consume more resources.</param>
        <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
        <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
        <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a suggestions
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
        <param name="orderBy">The list of OData $orderby expressions by
            which to sort the results. Each expression can be either a field
            name or a call to either the geo.distance() or the search.score()
            functions. Each expression can be followed by asc to indicate
            ascending, or desc to indicate descending. The default is ascending
            order. Ties will be broken by the match scores of documents. If no
            $orderby is specified, the default sort order is descending by
            document match score. There can be at most 32 $orderby
            clauses.</param>
        <param name="searchFields">The list of field names to search for
            the specified search text. Target fields must be included in the
            specified suggester.</param>
        <param name="select">The list of fields to retrieve. If
            unspecified, only the key field will be included in the
            results.</param>
        <param name="top">The number of suggestions to retrieve. The value
            must be a number between 1 and 100. The default is 5.</param>
        <summary>
            Initializes a new instance of the SuggestParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureSelect">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.SuggestParameters EnsureSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Search.Models.SuggestParameters EnsureSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.SuggestParameters.EnsureSelect" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureSelect () As SuggestParameters" />
      <MemberSignature Language="F#" Value="member this.EnsureSelect : unit -&gt; Microsoft.Azure.Search.Models.SuggestParameters" Usage="suggestParameters.EnsureSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.SuggestParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this instance if it has a non-null <c cref="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">Select</c> property,
            or a new instance with Select set to "*" otherwise.
            </summary>
        <returns>A <c cref="T:Microsoft.Azure.Search.Models.SuggestParameters">SuggestParameters</c> instance that has a
            non-null <c cref="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">Select</c> property</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an OData expression that filters the documents
            considered for suggestions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightPostTag">
      <MemberSignature Language="C#" Value="public string HighlightPostTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HighlightPostTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightPostTag As String" />
      <MemberSignature Language="F#" Value="member this.HighlightPostTag : string with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightPreTag">
      <MemberSignature Language="C#" Value="public string HighlightPreTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HighlightPreTag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightPreTag As String" />
      <MemberSignature Language="F#" Value="member this.HighlightPreTag : string with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumCoverage">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; MinimumCoverage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; MinimumCoverage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCoverage As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.MinimumCoverage : Nullable&lt;double&gt; with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a suggestions query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; OrderBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.OrderBy : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of OData $orderby expressions by which to
            sort the results. Each expression can be either a field name or a
            call to either the geo.distance() or the search.score() functions.
            Each expression can be followed by asc to indicate ascending, or
            desc to indicate descending. The default is ascending order. Ties
            will be broken by the match scores of documents. If no $orderby is
            specified, the default sort order is descending by document match
            score. There can be at most 32 $orderby clauses.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchFields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SearchFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SearchFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.SearchFields" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchFields As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.SearchFields : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.SearchFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of field names to search for the specified
            search text. Target fields must be included in the specified
            suggester.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Select" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Select : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of fields to retrieve. If unspecified, only
            the key field will be included in the results.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Top : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of suggestions to retrieve. The value must
            be a number between 1 and 100. The default is 5.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFuzzyMatching">
      <MemberSignature Language="C#" Value="public bool UseFuzzyMatching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFuzzyMatching" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFuzzyMatching As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseFuzzyMatching : bool with get, set" Usage="Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.1.0</AssemblyVersion>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the suggestions query. Default is false. When set to true, the
            query will find terms even if there's a substituted or missing
            character in the search text. While this provides a better
            experience in some scenarios, it comes at a performance cost as
            fuzzy suggestions queries are slower and consume more resources.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
