<Type Name="CharFilterName" FullName="Microsoft.Azure.Search.Models.CharFilterName">
  <TypeSignature Language="C#" Value="public struct CharFilterName : IEquatable&lt;Microsoft.Azure.Search.Models.CharFilterName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharFilterName extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.Azure.Search.Models.CharFilterName&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.CharFilterName" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharFilterName&#xA;Implements IEquatable(Of CharFilterName)" />
  <TypeSignature Language="F#" Value="type CharFilterName = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
    <AssemblyVersion>10.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Azure.Search.Models.CharFilterName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonConverter(typeof(Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter`1&lt;Microsoft.Azure.Search.Models.CharFilterName&gt;))]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonConverter(typeof(Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter`1&lt;Microsoft.Azure.Search.Models.CharFilterName&gt;))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the names of all character filters supported by Azure Cognitive Search.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Azure.Search.Models.CharFilterName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Azure.Search.Models.CharFilterName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.Equals(Microsoft.Azure.Search.Models.CharFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CharFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Azure.Search.Models.CharFilterName -&gt; bool" Usage="charFilterName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Azure.Search.Models.CharFilterName" />
      </Parameters>
      <Docs>
        <param name="other">The CharFilterName with which to compare.</param>
        <summary>
            Compares the CharFilterName for equality with another CharFilterName.
            </summary>
        <returns>
          <c>true</c> if the CharFilterName objects are equal; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="charFilterName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="charFilterName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlStrip">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Azure.Search.Models.CharFilterName HtmlStrip;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Azure.Search.Models.CharFilterName HtmlStrip" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Search.Models.CharFilterName.HtmlStrip" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HtmlStrip As CharFilterName " />
      <MemberSignature Language="F#" Value=" staticval mutable HtmlStrip : Microsoft.Azure.Search.Models.CharFilterName" Usage="Microsoft.Azure.Search.Models.CharFilterName.HtmlStrip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.CharFilterName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A character filter that attempts to strip out HTML constructs.
            <see href="https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Azure.Search.Models.CharFilterName lhs, Microsoft.Azure.Search.Models.CharFilterName rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Azure.Search.Models.CharFilterName lhs, valuetype Microsoft.Azure.Search.Models.CharFilterName rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.op_Equality(Microsoft.Azure.Search.Models.CharFilterName,Microsoft.Azure.Search.Models.CharFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (lhs As CharFilterName, rhs As CharFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Azure.Search.Models.CharFilterName * Microsoft.Azure.Search.Models.CharFilterName -&gt; bool" Usage="lhs = rhs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="Microsoft.Azure.Search.Models.CharFilterName" />
        <Parameter Name="rhs" Type="Microsoft.Azure.Search.Models.CharFilterName" />
      </Parameters>
      <Docs>
        <param name="lhs">The first CharFilterName to compare.</param>
        <param name="rhs">The second CharFilterName to compare.</param>
        <summary>
            Compares two CharFilterName values for equality.
            </summary>
        <returns>true if the CharFilterName objects are equal or are both null; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (Microsoft.Azure.Search.Models.CharFilterName name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(valuetype Microsoft.Azure.Search.Models.CharFilterName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.op_Explicit(Microsoft.Azure.Search.Models.CharFilterName)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (name As CharFilterName) As String" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Microsoft.Azure.Search.Models.CharFilterName -&gt; string" Usage="Microsoft.Azure.Search.Models.CharFilterName.op_Explicit name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.Azure.Search.Models.CharFilterName" />
      </Parameters>
      <Docs>
        <param name="name">CharFilterName to convert.</param>
        <summary>
            Defines explicit conversion from CharFilterName to string.
            </summary>
        <returns>The CharFilterName as a string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.Azure.Search.Models.CharFilterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.Azure.Search.Models.CharFilterName op_Implicit(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.op_Implicit(System.String)~Microsoft.Azure.Search.Models.CharFilterName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (name As String) As CharFilterName" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Microsoft.Azure.Search.Models.CharFilterName" Usage="Microsoft.Azure.Search.Models.CharFilterName.op_Implicit name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.CharFilterName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">string to convert.</param>
        <summary>
            Defines implicit conversion from string to CharFilterName.
            </summary>
        <returns>The string as a CharFilterName.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Azure.Search.Models.CharFilterName lhs, Microsoft.Azure.Search.Models.CharFilterName rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Azure.Search.Models.CharFilterName lhs, valuetype Microsoft.Azure.Search.Models.CharFilterName rhs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.op_Inequality(Microsoft.Azure.Search.Models.CharFilterName,Microsoft.Azure.Search.Models.CharFilterName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (lhs As CharFilterName, rhs As CharFilterName) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Azure.Search.Models.CharFilterName * Microsoft.Azure.Search.Models.CharFilterName -&gt; bool" Usage="Microsoft.Azure.Search.Models.CharFilterName.op_Inequality (lhs, rhs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="Microsoft.Azure.Search.Models.CharFilterName" />
        <Parameter Name="rhs" Type="Microsoft.Azure.Search.Models.CharFilterName" />
      </Parameters>
      <Docs>
        <param name="lhs">The first CharFilterName to compare.</param>
        <param name="rhs">The second CharFilterName to compare.</param>
        <summary>
            Compares two CharFilterName values for inequality.
            </summary>
        <returns>true if the CharFilterName objects are not equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.CharFilterName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="charFilterName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>10.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a string representation of the CharFilterName.
            </summary>
        <returns>The CharFilterName as a string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
