<Type Name="IndexingParametersExtensions" FullName="Microsoft.Azure.Search.Models.IndexingParametersExtensions">
  <TypeSignature Language="C#" Value="public static class IndexingParametersExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IndexingParametersExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.IndexingParametersExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines extension methods for the IndexingParameters class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DoNotFailOnUnsupportedContentType">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters DoNotFailOnUnsupportedContentType (this Microsoft.Azure.Search.Models.IndexingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters DoNotFailOnUnsupportedContentType(class Microsoft.Azure.Search.Models.IndexingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.DoNotFailOnUnsupportedContentType(Microsoft.Azure.Search.Models.IndexingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <summary>
            Specifies that <c cref="F:Microsoft.Azure.Search.Models.BlobExtractionMode.StorageMetadata">BlobExtractionMode.StorageMetadata</c> blob extraction mode will be
            automatically used for blobs of unsupported content types. The default is false.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <returns />
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeFileNameExtensions">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters ExcludeFileNameExtensions (this Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] extensions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters ExcludeFileNameExtensions(class Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
        <Parameter Name="extensions" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <param name="extensions">File extensions to exclude from indexing.</param>
        <summary>
            Specifies that the indexer will not index blobs with the file name extensions you specify. Each string is a file extensions with a
            leading dot. For example, ".pdf", ".docx", etc. If you pass the same file extension to this method and IndexFileNameExtensions, blobs
            with that extension will be excluded from indexing (that is, this method takes precedence).
            See <see href="https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage" /> for details.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexFileNameExtensions">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters IndexFileNameExtensions (this Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] extensions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters IndexFileNameExtensions(class Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
        <Parameter Name="extensions" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <param name="extensions">File extensions to include in indexing.</param>
        <summary>
            Specifies that the indexer will index only the blobs with the file name extensions you specify. Each string is a file extensions with a
            leading dot. For example, ".pdf", ".docx", etc. If you pass the same file extension to this method and ExcludeFileNameExtensions, blobs
            with that extension will be excluded from indexing (that is, ExcludeFileNameExtensions takes precedence).
            See <see href="https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage" /> for details.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexStorageMetadataOnly">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters IndexStorageMetadataOnly (this Microsoft.Azure.Search.Models.IndexingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters IndexStorageMetadataOnly(class Microsoft.Azure.Search.Models.IndexingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete. Please use SetBlobExtractionMode(BlobExtractionMode.StorageMetadata).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <summary> 
            Specifies that the indexer will index only the storage metadata and completely skip the document extraction process. This is useful when 
            you don't need the document content, nor do you need any of the content type-specific metadata properties. 
            See <see href="https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage" /> for details. 
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks> 
            This option only applies to indexers that index Azure Blob Storage. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDelimitedTextFiles">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters ParseDelimitedTextFiles (this Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters ParseDelimitedTextFiles(class Microsoft.Azure.Search.Models.IndexingParameters parameters, string[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
        <Parameter Name="headers" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <param name="headers">
            Specifies column headers that the indexer will use to map values to specific fields in the Azure Search index. If you don't specify any
            headers, the indexer assumes that the first non-blank line of each blob contains comma-separated headers.
            </param>
        <summary>
            Tells the indexer to assume that all blobs are delimited text files. Currently only comma-separated value (CSV) text files are supported.
            See <see href="https://docs.microsoft.com/azure/search/search-howto-index-csv-blobs" /> for details.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseJson">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters ParseJson (this Microsoft.Azure.Search.Models.IndexingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters ParseJson(class Microsoft.Azure.Search.Models.IndexingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <summary>
            Tells the indexer to assume that all blobs contain JSON, which it will then parse such that each blob's JSON will map to a single
            document in the Azure Search index.
            See <see href="https://docs.microsoft.com/azure/search/search-howto-index-json-blobs/" /> for details.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseJsonArrays">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters ParseJsonArrays (this Microsoft.Azure.Search.Models.IndexingParameters parameters, string documentRoot = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters ParseJsonArrays(class Microsoft.Azure.Search.Models.IndexingParameters parameters, string documentRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
        <Parameter Name="documentRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <param name="documentRoot">
            An optional JSON Pointer that tells the indexer how to find the JSON array if it's not the top-level JSON property of each blob. If this
            parameter is null or empty, the indexer will assume that the JSON array can be found in the top-level JSON property of each blob.
            Default is null.
            </param>
        <summary>
            Tells the indexer to assume that all blobs contain JSON arrays, which it will then parse such that each JSON object in each array will
            map to a single document in the Azure Search index.
            See <see href="https://docs.microsoft.com/azure/search/search-howto-index-json-blobs" /> for details.
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlobExtractionMode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters SetBlobExtractionMode (this Microsoft.Azure.Search.Models.IndexingParameters parameters, Microsoft.Azure.Search.Models.BlobExtractionMode extractionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters SetBlobExtractionMode(class Microsoft.Azure.Search.Models.IndexingParameters parameters, class Microsoft.Azure.Search.Models.BlobExtractionMode extractionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.SetBlobExtractionMode(Microsoft.Azure.Search.Models.IndexingParameters,Microsoft.Azure.Search.Models.BlobExtractionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
        <Parameter Name="extractionMode" Type="Microsoft.Azure.Search.Models.BlobExtractionMode" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <param name="extractionMode">A <c cref="T:Microsoft.Azure.Search.Models.BlobExtractionMode">BlobExtractionMode</c> value specifying what to index.</param>
        <summary>
            Specifies which parts of a blob will be indexed by the blob storage indexer. 
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks>
            This option only applies to indexers that index Azure Blob Storage.
            <see href="https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipContent">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.IndexingParameters SkipContent (this Microsoft.Azure.Search.Models.IndexingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.IndexingParameters SkipContent(class Microsoft.Azure.Search.Models.IndexingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete. Please use SetBlobExtractionMode(BlobExtractionMode.AllMetadata).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.IndexingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Azure.Search.Models.IndexingParameters" RefType="this" />
      </Parameters>
      <Docs>
        <param name="parameters">IndexingParameters to configure.</param>
        <summary>
            Specifies that the indexer will extract metadata, but skip content extraction for all blobs. If you want to skip content extraction for 
            only some blobs, add AzureSearch_SkipContent metadata to those blobs individually instead of using this option. 
            See <see href="https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage" /> for details. 
            </summary>
        <returns>The IndexingParameters instance.</returns>
        <remarks> 
            This option only applies to indexers that index Azure Blob Storage. 
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>