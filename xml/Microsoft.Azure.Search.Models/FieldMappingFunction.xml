<Type Name="FieldMappingFunction" FullName="Microsoft.Azure.Search.Models.FieldMappingFunction">
  <TypeSignature Language="C#" Value="public class FieldMappingFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldMappingFunction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.FieldMappingFunction" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldMappingFunction" />
  <TypeSignature Language="F#" Value="type FieldMappingFunction = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a function that transforms a value from a data source before
            indexing.
            <see href="https://docs.microsoft.com/azure/search/search-indexer-field-mappings" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMappingFunction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the FieldMappingFunction class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldMappingFunction (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional parameters As IDictionary(Of String, Object) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.FieldMappingFunction : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="new Microsoft.Azure.Search.Models.FieldMappingFunction (name, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field mapping function.</param>
        <param name="parameters">A dictionary of parameter name/value pairs
            to pass to the function. Each value must be of a primitive
            type.</param>
        <summary>
            Initializes a new instance of the FieldMappingFunction class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64Decode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction Base64Decode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction Base64Decode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Base64Decode () As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member Base64Decode : unit -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a field mapping function that performs Base64 decoding of the input string. The input is assumed
            to a URL-safe Base64-encoded string. 
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
          <para>Sample use case: Blob custom metadata values must be ASCII-encoded. You can use Base64 encoding to
            represent arbitrary Unicode strings in blob custom metadata. However, to make search meaningful, you can
            use this function to turn the encoded data back into "regular" strings when populating your search index. 
            </para>
          <para>
            For details on the decoding used, see <see href="https://docs.microsoft.com/azure/search/search-indexer-field-mappings#details-of-base64-encoding-and-decoding" />.
            Calling this method is the same as calling <c cref="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode(System.Boolean)" /> with <c>useHttpServerUtilityUrlTokenDecode</c> set to <c>true</c>.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64Decode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction Base64Decode (bool useHttpServerUtilityUrlTokenDecode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction Base64Decode(bool useHttpServerUtilityUrlTokenDecode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Base64Decode (useHttpServerUtilityUrlTokenDecode As Boolean) As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member Base64Decode : bool -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode useHttpServerUtilityUrlTokenDecode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useHttpServerUtilityUrlTokenDecode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useHttpServerUtilityUrlTokenDecode">Determines how Base64 decoding is performed. See <see href="https://docs.microsoft.com/azure/search/search-indexer-field-mappings#details-of-base64-encoding-and-decoding" /> for details.</param>
        <summary>
            Creates a field mapping function that performs Base64 decoding of the input string. The input is assumed
            to a URL-safe Base64-encoded string. 
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
            Sample use case: Blob custom metadata values must be ASCII-encoded. You can use Base64 encoding to
            represent arbitrary Unicode strings in blob custom metadata. However, to make search meaningful, you can
            use this function to turn the encoded data back into "regular" strings when populating your search index. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64Encode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction Base64Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction Base64Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Base64Encode () As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member Base64Encode : unit -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a field mapping function that performs URL-safe Base64 encoding of the input string. Assumes that
            the input is UTF-8 encoded.
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
          <para>Sample use case: Only URL-safe characters can appear in an Azure Search document key (because customers
            must be able to address the document using the Lookup API, for example). If your data contains URL-unsafe
            characters and you want to use it to populate a key field in your search index, use this function. 
            </para>
          <para>
            For details on the encoding used, see <see href="https://docs.microsoft.com/azure/search/search-indexer-field-mappings#details-of-base64-encoding-and-decoding" />.
            Calling this method is the same as calling <c cref="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode(System.Boolean)" /> with <c>useHttpServerUtilityUrlTokenEncode</c> set to <c>true</c>.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64Encode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction Base64Encode (bool useHttpServerUtilityUrlTokenEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction Base64Encode(bool useHttpServerUtilityUrlTokenEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Base64Encode (useHttpServerUtilityUrlTokenEncode As Boolean) As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member Base64Encode : bool -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode useHttpServerUtilityUrlTokenEncode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useHttpServerUtilityUrlTokenEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useHttpServerUtilityUrlTokenEncode">Determines how Base64 encoding is performed. See <see href="https://docs.microsoft.com/azure/search/search-indexer-field-mappings#details-of-base64-encoding-and-decoding" /> for details.</param>
        <summary>
            Creates a field mapping function that performs URL-safe Base64 encoding of the input string. Assumes that
            the input is UTF-8 encoded.
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
            Sample use case: Only URL-safe characters can appear in an Azure Search document key (because customers
            must be able to address the document using the Lookup API, for example). If your data contains URL-unsafe
            characters and you want to use it to populate a key field in your search index, use this function. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractTokenAtPosition">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction ExtractTokenAtPosition (string delimiter, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction ExtractTokenAtPosition(string delimiter, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractTokenAtPosition (delimiter As String, position As Integer) As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member ExtractTokenAtPosition : string * int -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition (delimiter, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiter" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delimiter">A string to use as the separator when splitting the input string.</param>
        <param name="position">An integer zero-based position of the token to pick after the input string is split.</param>
        <summary>
            Creates a field mapping function that splits a string field using the specified delimiter, and picks the
            token at the specified position in the resulting split.
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
          <para>
            For example, if the input is Jane Doe, the delimiter is " " (space) and the position is 0, the result is
            Jane; if the position is 1, the result is Doe. If the position refers to a token that doesn't exist, an
            error will be returned.
            </para>
          <para>
            Sample use case: Your data source contains a PersonName field, and you want to index it as two separate
            FirstName and LastName fields. You can use this function to split the input using the space character as
            the delimiter.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonArrayToStringCollection">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.FieldMappingFunction JsonArrayToStringCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.FieldMappingFunction JsonArrayToStringCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JsonArrayToStringCollection () As FieldMappingFunction" />
      <MemberSignature Language="F#" Value="static member JsonArrayToStringCollection : unit -&gt; Microsoft.Azure.Search.Models.FieldMappingFunction" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.FieldMappingFunction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a field mapping function that transforms a string formatted as a JSON array of strings into a string array that can be used to
            populate a Collection(Edm.String) field in the index.
            </summary>
        <returns>A new field mapping function.</returns>
        <remarks>
          <para>
            For example, if the input string is ["red", "white", "blue"], then the target field of type Collection(Edm.String) will be populated
            with the three values red, white and blue. For input values that cannot be parsed as JSON string arrays, an error will be returned.
            </para>
          <para>
            Sample use case: Azure SQL database doesn't have a built-in data type that naturally maps to Collection(Edm.String) fields in Azure
            Search. To populate string collection fields, format your source data as a JSON string array and use this function.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.FieldMappingFunction.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the field mapping function.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a dictionary of parameter name/value pairs to pass to
            the function. Each value must be of a primitive type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.FieldMappingFunction.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="fieldMappingFunction.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>