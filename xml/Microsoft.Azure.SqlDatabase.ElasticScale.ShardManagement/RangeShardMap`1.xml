<Type Name="RangeShardMap&lt;TKey&gt;" FullName="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public sealed class RangeShardMap&lt;TKey&gt; : Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RangeShardMap`1&lt;TKey&gt; extends Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TKey">Key type.</typeparam>
    <summary>
            Represents a shard map of ranges.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap&lt;TKey&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1&lt;!TKey&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clones the given range shard map.
            </summary>
        <returns>A cloned instance of the range shard map.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap CloneCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clones the current shard map instance.
            </summary>
        <returns>Cloned shard map instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRangeMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; CreateRangeMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo&lt;TKey&gt; creationInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; CreateRangeMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1&lt;!TKey&gt; creationInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creationInfo" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="creationInfo">Information about mapping to be added.</param>
        <summary>
            Creates and adds a range mapping to ShardMap.
            </summary>
        <returns>Newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRangeMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; CreateRangeMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt; range, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; CreateRangeMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1&lt;!TKey&gt; range, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt;" />
        <Parameter Name="shard" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard" />
      </Parameters>
      <Docs>
        <param name="range">Range for which to create the mapping.</param>
        <param name="shard">Shard associated with the range mapping.</param>
        <summary>
            Creates and adds a range mapping to ShardMap.
            </summary>
        <returns>Newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMapping">
      <MemberSignature Language="C#" Value="public void DeleteMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="mapping">Mapping being removed.</param>
        <summary>
            Removes a range mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMapping">
      <MemberSignature Language="C#" Value="public void DeleteMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mapping">Mapping being removed.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Removes a range mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappingForKey">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; GetMappingForKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; GetMappingForKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <summary>
            Looks up the key value and returns the corresponding mapping.
            </summary>
        <returns>Mapping that contains the key value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappingLockOwner">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken GetMappingLockOwner (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken GetMappingLockOwner(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <summary>
            Gets the lock owner id of the specified mapping.
            </summary>
        <returns>An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; GetMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; GetMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification="Necessary to allow different types of keys")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets all the range mappings for the shard map.
            </summary>
        <returns>Read-only collection of all range mappings on the shard map.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; GetMappings (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt; range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; GetMappings(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1&lt;!TKey&gt; range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification="Necessary to allow different types of keys")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="range">Range value, any mapping overlapping with the range will be returned.</param>
        <summary>
            Gets all the range mappings that exist within given range.
            </summary>
        <returns>Read-only collection of mappings that satisfy the given range constraint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; GetMappings (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; GetMappings(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification="Necessary to allow different types of keys")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shard" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard" />
      </Parameters>
      <Docs>
        <param name="shard">Shard for which the mappings will be returned.</param>
        <summary>
            Gets all the range mappings that exist for the given shard.
            </summary>
        <returns>Read-only collection of mappings that satisfy the given shard constraint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; GetMappings (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt; range, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; GetMappings(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1&lt;!TKey&gt; range, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard shard) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification="Necessary to allow different types of keys")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range&lt;TKey&gt;" />
        <Parameter Name="shard" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard" />
      </Parameters>
      <Docs>
        <param name="range">Range value, any mapping overlapping with the range will be returned.</param>
        <param name="shard">Shard for which the mappings will be returned.</param>
        <summary>
            Gets all the range mappings that exist within given range and given shard.
            </summary>
        <returns>Read-only collection of mappings that satisfy the given range and shard constraints.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockMapping">
      <MemberSignature Language="C#" Value="public void LockMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Locks the mapping for the specified owner
            The state of a locked mapping can only be modified by the lock owner.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkMappingOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MarkMappingOffline (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MarkMappingOffline(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <summary>
            Marks the specified mapping offline.
            </summary>
        <returns>An offline mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkMappingOffline">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MarkMappingOffline (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MarkMappingOffline(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Marks the specified mapping offline.
            </summary>
        <returns>An offline mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkMappingOnline">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MarkMappingOnline (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MarkMappingOnline(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <summary>
            Marks the specified mapping online.
            </summary>
        <returns>An online mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkMappingOnline">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MarkMappingOnline (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MarkMappingOnline(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Marks the specified mapping online.
            </summary>
        <returns>An online mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMappings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MergeMappings (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; left, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MergeMappings(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; left, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="right" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="left">Left mapping.</param>
        <param name="right">Right mapping.</param>
        <summary>
            Merges 2 contiguous mappings into a single mapping. Both left and right mappings should point
            to the same location and must be contiguous.
            </summary>
        <returns>Mapping that results from the merge operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMappings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; MergeMappings (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; left, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; right, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken leftMappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken rightMappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; MergeMappings(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; left, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; right, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken leftMappingLockToken, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken rightMappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="2")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="3")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="right" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="leftMappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
        <Parameter Name="rightMappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="left">Left mapping.</param>
        <param name="right">Right mapping.</param>
        <param name="leftMappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /> for the left mapping</param>
        <param name="rightMappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /> for the right mapping</param>
        <summary>
            Merges 2 contiguous mappings into a single mapping. Both left and right mappings should point
            to the same location and must be contiguous.
            </summary>
        <returns>Mapping that results from the merge operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionForKey">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection OpenConnectionForKey (TKey key, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlConnection OpenConnectionForKey(!TKey key, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <param name="connectionString">
            Connection string with credential information such as SQL Server credentials or Integrated Security settings. 
            The hostname of the server and the database name for the shard are obtained from the lookup operation for key.
            </param>
        <summary>
            Opens a regular <see cref="T:System.Data.SqlClient.SqlConnection" /> to the shard 
            to which the specified key value is mapped, with <see cref="F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate" />.
            </summary>
        <returns>An opened SqlConnection.</returns>
        <remarks>
            Note that the <see cref="T:System.Data.SqlClient.SqlConnection" /> object returned by this call is not protected against transient faults. 
            Callers should follow best practices to protect the connection against transient faults 
            in their application code, e.g., by using the transient fault handling 
            functionality in the Enterprise Library from Microsoft Patterns and Practices team.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionForKey">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection OpenConnectionForKey (TKey key, string connectionString, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlConnection OpenConnectionForKey(!TKey key, string connectionString, valuetype Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <param name="connectionString">
            Connection string with credential information such as SQL Server credentials or Integrated Security settings. 
            The hostname of the server and the database name for the shard are obtained from the lookup operation for key.
            </param>
        <param name="options">Options for validation operations to perform on opened connection.</param>
        <summary>
            Opens a regular <see cref="T:System.Data.SqlClient.SqlConnection" /> to the shard 
            to which the specified key value is mapped.
            </summary>
        <returns>An opened SqlConnection.</returns>
        <remarks>
            Note that the <see cref="T:System.Data.SqlClient.SqlConnection" /> object returned by this call is not protected against transient faults. 
            Callers should follow best practices to protect the connection against transient faults 
            in their application code, e.g., by using the transient fault handling 
            functionality in the Enterprise Library from Microsoft Patterns and Practices team.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionForKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlConnection&gt; OpenConnectionForKeyAsync (TKey key, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlConnection&gt; OpenConnectionForKeyAsync(!TKey key, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <param name="connectionString">
            Connection string with credential information such as SQL Server credentials or Integrated Security settings. 
            The hostname of the server and the database name for the shard are obtained from the lookup operation for key.
            </param>
        <summary>
            Asynchronously opens a regular <see cref="T:System.Data.SqlClient.SqlConnection" /> to the shard 
            to which the specified key value is mapped, with <see cref="F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate" />.
            </summary>
        <returns>A Task encapsulating an opened SqlConnection.</returns>
        <remarks>
            Note that the <see cref="T:System.Data.SqlClient.SqlConnection" /> object returned by this call is not protected against transient faults. 
            Callers should follow best practices to protect the connection against transient faults 
            in their application code, e.g., by using the transient fault handling 
            functionality in the Enterprise Library from Microsoft Patterns and Practices team.
            All non-usage errors will be propagated via the returned Task.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionForKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlConnection&gt; OpenConnectionForKeyAsync (TKey key, string connectionString, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlConnection&gt; OpenConnectionForKeyAsync(!TKey key, string connectionString, valuetype Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <param name="connectionString">
            Connection string with credential information such as SQL Server credentials or Integrated Security settings. 
            The hostname of the server and the database name for the shard are obtained from the lookup operation for key.
            </param>
        <param name="options">Options for validation operations to perform on opened connection.</param>
        <summary>
            Asynchronously opens a regular <see cref="T:System.Data.SqlClient.SqlConnection" /> to the shard 
            to which the specified key value is mapped.
            </summary>
        <returns>A Task encapsulating an opened SqlConnection.</returns>
        <remarks>
            Note that the <see cref="T:System.Data.SqlClient.SqlConnection" /> object returned by this call is not protected against transient faults. 
            Callers should follow best practices to protect the connection against transient faults 
            in their application code, e.g., by using the transient fault handling 
            functionality in the Enterprise Library from Microsoft Patterns and Practices team.
            All non-usage errors will be propagated via the returned Task.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; SplitMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; existingMapping, TKey splitAt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; SplitMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; existingMapping, !TKey splitAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", Justification="Necessary to allow different types of keys", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existingMapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="splitAt" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="existingMapping">Existing mapping.</param>
        <param name="splitAt">Split point.</param>
        <summary>
            Splits the specified mapping into two new mappings using the specified key as boundary. 
            The new mappings point to the same shard as the existing mapping.
            </summary>
        <returns>Read-only collection of two new mappings that were created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt; SplitMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; existingMapping, TKey splitAt, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt;&gt; SplitMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; existingMapping, !TKey splitAt, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", Justification="Necessary to allow different types of keys", MessageId="0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="2")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existingMapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="splitAt" Type="TKey" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="existingMapping">Existing mapping.</param>
        <param name="splitAt">Split point.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Splits the specified mapping into two new mappings using the specified key as boundary. 
            The new mappings point to the same shard as the existing mapping.
            </summary>
        <returns>Read-only collection of two new mappings that were created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMappingForKey">
      <MemberSignature Language="C#" Value="public bool TryGetMappingForKey (TKey key, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; rangeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetMappingForKey(!TKey key, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; rangeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="rangeMapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Input key value.</param>
        <param name="rangeMapping">Mapping that contains the key value.</param>
        <summary>
            Tries to looks up the key value and place the corresponding mapping in <paramref name="rangeMapping" />.
            </summary>
        <returns>
          <c>true</c> if mapping is found, <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockMapping">
      <MemberSignature Language="C#" Value="public void UnlockMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Unlocks all mappings in this map that belong to the given <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockMapping">
      <MemberSignature Language="C#" Value="public void UnlockMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; mapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; mapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="mapping">Input range mapping.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Unlocks the specified mapping
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; UpdateMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; currentMapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; UpdateMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; currentMapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate update) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentMapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="update" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate" />
      </Parameters>
      <Docs>
        <param name="currentMapping">Mapping being updated.</param>
        <param name="update">Updated properties of the mapping.</param>
        <summary>
            Updates a <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1" /> with the updates provided in 
            the <paramref name="update" /> parameter.
            </summary>
        <returns>New instance of mapping with updated information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; UpdateMapping (Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt; currentMapping, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate update, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; UpdateMapping(class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1&lt;!TKey&gt; currentMapping, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate update, class Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken mappingLockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.SqlDatabase.ElasticScale.Client</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="2")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId="0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentMapping" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping&lt;TKey&gt;" />
        <Parameter Name="update" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate" />
        <Parameter Name="mappingLockToken" Type="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" />
      </Parameters>
      <Docs>
        <param name="currentMapping">Mapping being updated.</param>
        <param name="update">Updated properties of the mapping.</param>
        <param name="mappingLockToken">An instance of <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" /></param>
        <summary>
            Updates a <see cref="T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1" /> with the updates provided in 
            the <paramref name="update" /> parameter.
            </summary>
        <returns>New instance of mapping with updated information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>