<Type Name="MockableArcScVmmArmClient" FullName="Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient">
  <TypeSignature Language="C#" Value="public class MockableArcScVmmArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableArcScVmmArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableArcScVmmArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableArcScVmmArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableArcScVmmArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInventoryItemResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.InventoryItemResource GetInventoryItemResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.InventoryItemResource GetInventoryItemResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetInventoryItemResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInventoryItemResource (id As ResourceIdentifier) As InventoryItemResource" />
      <MemberSignature Language="F#" Value="abstract member GetInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.InventoryItemResource&#xA;override this.GetInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.InventoryItemResource" Usage="mockableArcScVmmArmClient.GetInventoryItemResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.InventoryItemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ArcScVmm.InventoryItemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.InventoryItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ArcScVmm.InventoryItemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.InventoryItemResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmAvailabilitySetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource GetScVmmAvailabilitySetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource GetScVmmAvailabilitySetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmAvailabilitySetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmAvailabilitySetResource (id As ResourceIdentifier) As ScVmmAvailabilitySetResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource&#xA;override this.GetScVmmAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource" Usage="mockableArcScVmmArmClient.GetScVmmAvailabilitySetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmAvailabilitySetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmCloudResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmCloudResource GetScVmmCloudResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmCloudResource GetScVmmCloudResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmCloudResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmCloudResource (id As ResourceIdentifier) As ScVmmCloudResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmCloudResource&#xA;override this.GetScVmmCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmCloudResource" Usage="mockableArcScVmmArmClient.GetScVmmCloudResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmCloudResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmCloudResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmCloudResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmCloudResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmCloudResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmServerResource GetScVmmServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmServerResource GetScVmmServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmServerResource (id As ResourceIdentifier) As ScVmmServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmServerResource&#xA;override this.GetScVmmServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmServerResource" Usage="mockableArcScVmmArmClient.GetScVmmServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource GetScVmmVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource GetScVmmVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualMachineResource (id As ResourceIdentifier) As ScVmmVirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource&#xA;override this.GetScVmmVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource" Usage="mockableArcScVmmArmClient.GetScVmmVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualMachineTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource GetScVmmVirtualMachineTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource GetScVmmVirtualMachineTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmVirtualMachineTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualMachineTemplateResource (id As ResourceIdentifier) As ScVmmVirtualMachineTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualMachineTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource&#xA;override this.GetScVmmVirtualMachineTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource" Usage="mockableArcScVmmArmClient.GetScVmmVirtualMachineTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualMachineTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource GetScVmmVirtualNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource GetScVmmVirtualNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ArcScVmm.Mocking.MockableArcScVmmArmClient.GetScVmmVirtualNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualNetworkResource (id As ResourceIdentifier) As ScVmmVirtualNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource&#xA;override this.GetScVmmVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource" Usage="mockableArcScVmmArmClient.GetScVmmVirtualNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ArcScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ArcScVmm.ScVmmVirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
