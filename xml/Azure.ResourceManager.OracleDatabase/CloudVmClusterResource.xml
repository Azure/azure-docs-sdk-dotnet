<Type Name="CloudVmClusterResource" FullName="Azure.ResourceManager.OracleDatabase.CloudVmClusterResource">
  <TypeSignature Language="C#" Value="public class CloudVmClusterResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CloudVmClusterResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" />
  <TypeSignature Language="VB.NET" Value="Public Class CloudVmClusterResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of CloudVmClusterData), IPersistableModel(Of CloudVmClusterData)" />
  <TypeSignature Language="F#" Value="type CloudVmClusterResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;CloudVmClusterData&gt;&#xA;    interface IPersistableModel&lt;CloudVmClusterData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a CloudVmCluster along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetCloudVmClusterResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetCloudVmCluster method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CloudVmClusterResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddVms">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; AddVms (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; AddVms(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.AddVms(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddVms (waitUntil As WaitUntil, content As CloudVmClusterDBNodeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member AddVms : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.AddVms : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.AddVms (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add VMs to the VM Cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/addVms</description></item><item><term>Operation Id</term><description>CloudVmClusters_AddVms</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddVmsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; AddVmsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; AddVmsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.AddVmsAsync(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddVmsAsync (waitUntil As WaitUntil, content As CloudVmClusterDBNodeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member AddVmsAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.AddVmsAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.AddVmsAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add VMs to the VM Cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/addVms</description></item><item><term>Operation Id</term><description>CloudVmClusters_AddVms</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string cloudvmclustername);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string cloudvmclustername) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, cloudvmclustername As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, cloudvmclustername)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cloudvmclustername" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="cloudvmclustername"> The cloudvmclustername. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As CloudVmClusterData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.OracleDatabase.CloudVmClusterData" Usage="Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="cloudVmClusterResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Delete</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="cloudVmClusterResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Delete</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterDBNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt; GetCloudVmClusterDBNode (string dbnodeocid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt; GetCloudVmClusterDBNode(string dbnodeocid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterDBNode(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterDBNode (dbnodeocid As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterDBNodeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterDBNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&#xA;override this.GetCloudVmClusterDBNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;" Usage="cloudVmClusterResource.GetCloudVmClusterDBNode (dbnodeocid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbnodeocid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dbnodeocid"> DbNode OCID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DbNode
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/dbNodes/{dbnodeocid}</description></item><item><term>Operation Id</term><description>DbNodes_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dbnodeocid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbnodeocid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterDBNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&gt; GetCloudVmClusterDBNodeAsync (string dbnodeocid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&gt; GetCloudVmClusterDBNodeAsync(string dbnodeocid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterDBNodeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterDBNodeAsync (dbnodeocid As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterDBNodeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterDBNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&gt;&#xA;override this.GetCloudVmClusterDBNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&gt;" Usage="cloudVmClusterResource.GetCloudVmClusterDBNodeAsync (dbnodeocid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbnodeocid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dbnodeocid"> DbNode OCID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DbNode
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/dbNodes/{dbnodeocid}</description></item><item><term>Operation Id</term><description>DbNodes_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dbnodeocid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbnodeocid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterDBNodes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeCollection GetCloudVmClusterDBNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeCollection GetCloudVmClusterDBNodes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterDBNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterDBNodes () As CloudVmClusterDBNodeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterDBNodes : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeCollection&#xA;override this.GetCloudVmClusterDBNodes : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeCollection" Usage="cloudVmClusterResource.GetCloudVmClusterDBNodes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CloudVmClusterDBNodeResources in the CloudVmCluster. </summary>
        <returns> An object representing collection of CloudVmClusterDBNodeResources and their operations over a CloudVmClusterDBNodeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterVirtualNetworkAddress">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt; GetCloudVmClusterVirtualNetworkAddress (string virtualnetworkaddressname, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt; GetCloudVmClusterVirtualNetworkAddress(string virtualnetworkaddressname, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddress(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterVirtualNetworkAddress (virtualnetworkaddressname As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterVirtualNetworkAddressResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterVirtualNetworkAddress : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&#xA;override this.GetCloudVmClusterVirtualNetworkAddress : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;" Usage="cloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddress (virtualnetworkaddressname, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualnetworkaddressname" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualnetworkaddressname"> Virtual IP address hostname. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a VirtualNetworkAddress
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/virtualNetworkAddresses/{virtualnetworkaddressname}</description></item><item><term>Operation Id</term><description>VirtualNetworkAddresses_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualnetworkaddressname" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualnetworkaddressname" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterVirtualNetworkAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&gt; GetCloudVmClusterVirtualNetworkAddressAsync (string virtualnetworkaddressname, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&gt; GetCloudVmClusterVirtualNetworkAddressAsync(string virtualnetworkaddressname, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddressAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterVirtualNetworkAddressAsync (virtualnetworkaddressname As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterVirtualNetworkAddressResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterVirtualNetworkAddressAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&gt;&#xA;override this.GetCloudVmClusterVirtualNetworkAddressAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&gt;" Usage="cloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddressAsync (virtualnetworkaddressname, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualnetworkaddressname" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualnetworkaddressname"> Virtual IP address hostname. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a VirtualNetworkAddress
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/virtualNetworkAddresses/{virtualnetworkaddressname}</description></item><item><term>Operation Id</term><description>VirtualNetworkAddresses_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualnetworkaddressname" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualnetworkaddressname" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterVirtualNetworkAddresses">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressCollection GetCloudVmClusterVirtualNetworkAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressCollection GetCloudVmClusterVirtualNetworkAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterVirtualNetworkAddresses () As CloudVmClusterVirtualNetworkAddressCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterVirtualNetworkAddresses : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressCollection&#xA;override this.GetCloudVmClusterVirtualNetworkAddresses : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressCollection" Usage="cloudVmClusterResource.GetCloudVmClusterVirtualNetworkAddresses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CloudVmClusterVirtualNetworkAddressResources in the CloudVmCluster. </summary>
        <returns> An object representing collection of CloudVmClusterVirtualNetworkAddressResources and their operations over a CloudVmClusterVirtualNetworkAddressResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateIPAddresses">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt; GetPrivateIPAddresses (Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt; GetPrivateIPAddresses(class Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetPrivateIPAddresses(Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateIPAddresses (content As PrivateIPAddressesContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PrivateIPAddressResult)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateIPAddresses : Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;&#xA;override this.GetPrivateIPAddresses : Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;" Usage="cloudVmClusterResource.GetPrivateIPAddresses (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Private IP Addresses by the provided filter
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/listPrivateIpAddresses</description></item><item><term>Operation Id</term><description>CloudVmClusters_ListPrivateIPAddresses</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateIPAddressesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt; GetPrivateIPAddressesAsync (Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt; GetPrivateIPAddressesAsync(class Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.GetPrivateIPAddressesAsync(Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateIPAddressesAsync (content As PrivateIPAddressesContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PrivateIPAddressResult)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateIPAddressesAsync : Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;&#xA;override this.GetPrivateIPAddressesAsync : Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;" Usage="cloudVmClusterResource.GetPrivateIPAddressesAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Private IP Addresses by the provided filter
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/listPrivateIpAddresses</description></item><item><term>Operation Id</term><description>CloudVmClusters_ListPrivateIPAddresses</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.OracleDatabase.Models.PrivateIPAddressResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveVms">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; RemoveVms (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; RemoveVms(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.RemoveVms(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveVms (waitUntil As WaitUntil, content As CloudVmClusterDBNodeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveVms : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.RemoveVms : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.RemoveVms (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove VMs from the VM Cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/removeVms</description></item><item><term>Operation Id</term><description>CloudVmClusters_RemoveVms</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveVmsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; RemoveVmsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; RemoveVmsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.RemoveVmsAsync(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveVmsAsync (waitUntil As WaitUntil, content As CloudVmClusterDBNodeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveVmsAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.RemoveVmsAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.RemoveVmsAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterDBNodeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove VMs from the VM Cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/removeVms</description></item><item><term>Operation Id</term><description>CloudVmClusters_RemoveVms</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Get</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.OracleDatabase.CloudVmClusterData IJsonModel&lt;CloudVmClusterData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#OracleDatabase#CloudVmClusterData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As CloudVmClusterData Implements IJsonModel(Of CloudVmClusterData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterData" Usage="cloudVmClusterResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;CloudVmClusterData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#OracleDatabase#CloudVmClusterData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of CloudVmClusterData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="cloudVmClusterResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.OracleDatabase.CloudVmClusterData IPersistableModel&lt;CloudVmClusterData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#OracleDatabase#CloudVmClusterData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As CloudVmClusterData Implements IPersistableModel(Of CloudVmClusterData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterData" Usage="cloudVmClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;CloudVmClusterData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#OracleDatabase#CloudVmClusterData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of CloudVmClusterData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="cloudVmClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;CloudVmClusterData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#OracleDatabase#CloudVmClusterData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of CloudVmClusterData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="cloudVmClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.Update(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As CloudVmClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="cloudVmClusterResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The resource properties to be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Update</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As CloudVmClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="cloudVmClusterResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.OracleDatabase.Models.CloudVmClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The resource properties to be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmClusters_Update</description></item><item><term>Default Api Version</term><description>2023-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
