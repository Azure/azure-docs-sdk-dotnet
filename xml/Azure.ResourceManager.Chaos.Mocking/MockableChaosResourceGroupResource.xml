<Type Name="MockableChaosResourceGroupResource" FullName="Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableChaosResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableChaosResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableChaosResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableChaosResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableChaosResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExperiment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiment (string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiment(string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperiment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExperiment (experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExperimentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExperiment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&#xA;override this.GetExperiment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;" Usage="mockableChaosResourceGroupResource.GetExperiment (experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="experimentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt; GetExperimentAsync (string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt; GetExperimentAsync(string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperimentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExperimentAsync (experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExperimentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExperimentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt;&#xA;override this.GetExperimentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt;" Usage="mockableChaosResourceGroupResource.GetExperimentAsync (experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="experimentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperiments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ExperimentCollection GetExperiments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ExperimentCollection GetExperiments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperiments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExperiments () As ExperimentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExperiments : unit -&gt; Azure.ResourceManager.Chaos.ExperimentCollection&#xA;override this.GetExperiments : unit -&gt; Azure.ResourceManager.Chaos.ExperimentCollection" Usage="mockableChaosResourceGroupResource.GetExperiments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ExperimentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExperimentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExperimentResources and their operations over a ExperimentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt; GetTarget (string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetResource&gt; GetTarget(string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTarget(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTarget (parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TargetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTarget : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&#xA;override this.GetTarget : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;" Usage="mockableChaosResourceGroupResource.GetTarget (parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourceType" Type="System.String" />
        <Parameter Name="parentResourceName" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt; GetTargetAsync (string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetResource&gt;&gt; GetTargetAsync(string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTargetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTargetAsync (parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TargetResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTargetAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt;&#xA;override this.GetTargetAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt;" Usage="mockableChaosResourceGroupResource.GetTargetAsync (parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourceType" Type="System.String" />
        <Parameter Name="parentResourceName" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.TargetCollection GetTargets (string parentProviderNamespace, string parentResourceType, string parentResourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.TargetCollection GetTargets(string parentProviderNamespace, string parentResourceType, string parentResourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTargets(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTargets (parentProviderNamespace As String, parentResourceType As String, parentResourceName As String) As TargetCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTargets : string * string * string -&gt; Azure.ResourceManager.Chaos.TargetCollection&#xA;override this.GetTargets : string * string * string -&gt; Azure.ResourceManager.Chaos.TargetCollection" Usage="mockableChaosResourceGroupResource.GetTargets (parentProviderNamespace, parentResourceType, parentResourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.TargetCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourceType" Type="System.String" />
        <Parameter Name="parentResourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <summary> Gets a collection of TargetResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of TargetResources and their operations over a TargetResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
