<Type Name="MockableChaosArmClient" FullName="Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient">
  <TypeSignature Language="C#" Value="public class MockableChaosArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableChaosArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableChaosArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableChaosArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableChaosArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosCapabilityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosCapabilityResource GetChaosCapabilityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosCapabilityResource GetChaosCapabilityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosCapabilityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosCapabilityResource (id As ResourceIdentifier) As ChaosCapabilityResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosCapabilityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityResource&#xA;override this.GetChaosCapabilityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityResource" Usage="mockableChaosArmClient.GetChaosCapabilityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosCapabilityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosCapabilityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosCapabilityTypeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource GetChaosCapabilityTypeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource GetChaosCapabilityTypeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosCapabilityTypeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosCapabilityTypeResource (id As ResourceIdentifier) As ChaosCapabilityTypeResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosCapabilityTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource&#xA;override this.GetChaosCapabilityTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" Usage="mockableChaosArmClient.GetChaosCapabilityTypeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentExecutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource GetChaosExperimentExecutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource GetChaosExperimentExecutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosExperimentExecutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosExperimentExecutionResource (id As ResourceIdentifier) As ChaosExperimentExecutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosExperimentExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource&#xA;override this.GetChaosExperimentExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" Usage="mockableChaosArmClient.GetChaosExperimentExecutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosExperimentResource GetChaosExperimentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosExperimentResource GetChaosExperimentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosExperimentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosExperimentResource (id As ResourceIdentifier) As ChaosExperimentResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosExperimentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentResource&#xA;override this.GetChaosExperimentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentResource" Usage="mockableChaosArmClient.GetChaosExperimentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosExperimentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosExperimentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosTargetResource GetChaosTargetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosTargetResource GetChaosTargetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosTargetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosTargetResource (id As ResourceIdentifier) As ChaosTargetResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetResource&#xA;override this.GetChaosTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetResource" Usage="mockableChaosArmClient.GetChaosTargetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosTargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosTargetTypeResource GetChaosTargetTypeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosTargetTypeResource GetChaosTargetTypeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosTargetTypeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosTargetTypeResource (id As ResourceIdentifier) As ChaosTargetTypeResource" />
      <MemberSignature Language="F#" Value="abstract member GetChaosTargetTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeResource&#xA;override this.GetChaosTargetTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeResource" Usage="mockableChaosArmClient.GetChaosTargetTypeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosTargetTypeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
