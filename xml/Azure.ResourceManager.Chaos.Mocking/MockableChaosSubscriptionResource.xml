<Type Name="MockableChaosSubscriptionResource" FullName="Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableChaosSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableChaosSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableChaosSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableChaosSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableChaosSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperiments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiments (bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiments(valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosExperiments(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosExperiments (Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ChaosExperimentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetChaosExperiments : Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&#xA;override this.GetChaosExperiments : Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;" Usage="mockableChaosSubscriptionResource.GetChaosExperiments (running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperimentsAsync (bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperimentsAsync(valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosExperimentsAsync(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosExperimentsAsync (Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ChaosExperimentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetChaosExperimentsAsync : Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&#xA;override this.GetChaosExperimentsAsync : Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;" Usage="mockableChaosSubscriptionResource.GetChaosExperimentsAsync (running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt; GetChaosTargetType (string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt; GetChaosTargetType(string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetType(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosTargetType (locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChaosTargetTypeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetChaosTargetType : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&#xA;override this.GetChaosTargetType : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;" Usage="mockableChaosSubscriptionResource.GetChaosTargetType (locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="targetTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt; GetChaosTargetTypeAsync (string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt; GetChaosTargetTypeAsync(string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetTypeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosTargetTypeAsync (locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChaosTargetTypeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetChaosTargetTypeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt;&#xA;override this.GetChaosTargetTypeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt;" Usage="mockableChaosSubscriptionResource.GetChaosTargetTypeAsync (locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="targetTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item><item><term>Default Api Version</term><description>2024-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Chaos.ChaosTargetTypeCollection GetChaosTargetTypes (string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Chaos.ChaosTargetTypeCollection GetChaosTargetTypes(string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChaosTargetTypes (locationName As String) As ChaosTargetTypeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetChaosTargetTypes : string -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeCollection&#xA;override this.GetChaosTargetTypes : string -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeCollection" Usage="mockableChaosSubscriptionResource.GetChaosTargetTypes locationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationName"> String that represents a Location resource name. </param>
        <summary> Gets a collection of ChaosTargetTypeResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ChaosTargetTypeResources and their operations over a ChaosTargetTypeResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
