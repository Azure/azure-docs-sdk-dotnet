<Type Name="AIAnomalyDetectorModelFactory" FullName="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory">
  <TypeSignature Language="C#" Value="public static class AIAnomalyDetectorModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AIAnomalyDetectorModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AIAnomalyDetectorModelFactory" />
  <TypeSignature Language="F#" Value="type AIAnomalyDetectorModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnomalyDetectionModel">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.AnomalyDetectionModel AnomalyDetectionModel (Guid modelId = default, DateTimeOffset createdTime = default, DateTimeOffset lastUpdatedTime = default, Azure.AI.AnomalyDetector.ModelInfo modelInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.AnomalyDetectionModel AnomalyDetectionModel(valuetype System.Guid modelId, valuetype System.DateTimeOffset createdTime, valuetype System.DateTimeOffset lastUpdatedTime, class Azure.AI.AnomalyDetector.ModelInfo modelInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyDetectionModel(System.Guid,System.DateTimeOffset,System.DateTimeOffset,Azure.AI.AnomalyDetector.ModelInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyDetectionModel (Optional modelId As Guid = Nothing, Optional createdTime As DateTimeOffset = Nothing, Optional lastUpdatedTime As DateTimeOffset = Nothing, Optional modelInfo As ModelInfo = Nothing) As AnomalyDetectionModel" />
      <MemberSignature Language="F#" Value="static member AnomalyDetectionModel : Guid * DateTimeOffset * DateTimeOffset * Azure.AI.AnomalyDetector.ModelInfo -&gt; Azure.AI.AnomalyDetector.AnomalyDetectionModel" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyDetectionModel (modelId, createdTime, lastUpdatedTime, modelInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.AnomalyDetectionModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="createdTime" Type="System.DateTimeOffset" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="modelInfo" Type="Azure.AI.AnomalyDetector.ModelInfo" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="createdTime"> Date and time (UTC) when the model was created. </param>
        <param name="lastUpdatedTime"> Date and time (UTC) when the model was last updated. </param>
        <param name="modelInfo">
            Training result of a model, including its status, errors, and diagnostics
            information.
            </param>
        <summary> Initializes a new instance of AnomalyDetectionModel. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectionModel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnomalyInterpretation">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.AnomalyInterpretation AnomalyInterpretation (string variable = default, float? contributionScore = default, Azure.AI.AnomalyDetector.CorrelationChanges correlationChanges = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.AnomalyInterpretation AnomalyInterpretation(string variable, valuetype System.Nullable`1&lt;float32&gt; contributionScore, class Azure.AI.AnomalyDetector.CorrelationChanges correlationChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyInterpretation(System.String,System.Nullable{System.Single},Azure.AI.AnomalyDetector.CorrelationChanges)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyInterpretation (Optional variable As String = Nothing, Optional contributionScore As Nullable(Of Single) = Nothing, Optional correlationChanges As CorrelationChanges = Nothing) As AnomalyInterpretation" />
      <MemberSignature Language="F#" Value="static member AnomalyInterpretation : string * Nullable&lt;single&gt; * Azure.AI.AnomalyDetector.CorrelationChanges -&gt; Azure.AI.AnomalyDetector.AnomalyInterpretation" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyInterpretation (variable, contributionScore, correlationChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.AnomalyInterpretation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" />
        <Parameter Name="contributionScore" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="correlationChanges" Type="Azure.AI.AnomalyDetector.CorrelationChanges" />
      </Parameters>
      <Docs>
        <param name="variable"> Variable. </param>
        <param name="contributionScore">
            This score shows the percentage that contributes to the anomalous time stamp. It's a
            number between 0 and 1.
            </param>
        <param name="correlationChanges"> Correlation changes among the anomalous variables. </param>
        <summary> Initializes a new instance of AnomalyInterpretation. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.AnomalyInterpretation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnomalyState">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.AnomalyState AnomalyState (DateTimeOffset timestamp = default, Azure.AI.AnomalyDetector.AnomalyValue value = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; errors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.AnomalyState AnomalyState(valuetype System.DateTimeOffset timestamp, class Azure.AI.AnomalyDetector.AnomalyValue value, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.ErrorResponse&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyState(System.DateTimeOffset,Azure.AI.AnomalyDetector.AnomalyValue,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.ErrorResponse})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyState (Optional timestamp As DateTimeOffset = Nothing, Optional value As AnomalyValue = Nothing, Optional errors As IEnumerable(Of ErrorResponse) = Nothing) As AnomalyState" />
      <MemberSignature Language="F#" Value="static member AnomalyState : DateTimeOffset * Azure.AI.AnomalyDetector.AnomalyValue * seq&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; -&gt; Azure.AI.AnomalyDetector.AnomalyState" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyState (timestamp, value, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.AnomalyState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.DateTimeOffset" />
        <Parameter Name="value" Type="Azure.AI.AnomalyDetector.AnomalyValue" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"> Time stamp for this anomaly. </param>
        <param name="value"> Detailed value of this anomalous time stamp. </param>
        <param name="errors"> Error message for the current time stamp. </param>
        <summary> Initializes a new instance of AnomalyState. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.AnomalyState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnomalyValue">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.AnomalyValue AnomalyValue (bool isAnomaly = false, float severity = 0, float score = 0, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyInterpretation&gt; interpretation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.AnomalyValue AnomalyValue(bool isAnomaly, float32 severity, float32 score, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.AnomalyInterpretation&gt; interpretation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyValue(System.Boolean,System.Single,System.Single,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.AnomalyInterpretation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnomalyValue (Optional isAnomaly As Boolean = false, Optional severity As Single = 0, Optional score As Single = 0, Optional interpretation As IEnumerable(Of AnomalyInterpretation) = Nothing) As AnomalyValue" />
      <MemberSignature Language="F#" Value="static member AnomalyValue : bool * single * single * seq&lt;Azure.AI.AnomalyDetector.AnomalyInterpretation&gt; -&gt; Azure.AI.AnomalyDetector.AnomalyValue" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.AnomalyValue (isAnomaly, severity, score, interpretation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.AnomalyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isAnomaly" Type="System.Boolean" />
        <Parameter Name="severity" Type="System.Single" />
        <Parameter Name="score" Type="System.Single" />
        <Parameter Name="interpretation" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyInterpretation&gt;" />
      </Parameters>
      <Docs>
        <param name="isAnomaly"> True if an anomaly is detected at the current time stamp. </param>
        <param name="severity">
            Indicates the significance of the anomaly. The higher the severity, the more
            significant the anomaly is.
            </param>
        <param name="score"> Raw anomaly score of severity, to help indicate the degree of abnormality. </param>
        <param name="interpretation"> Interpretation of this anomalous time stamp. </param>
        <summary> Initializes a new instance of AnomalyValue. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.AnomalyValue" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationChanges">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.CorrelationChanges CorrelationChanges (System.Collections.Generic.IEnumerable&lt;string&gt; changedVariables = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.CorrelationChanges CorrelationChanges(class System.Collections.Generic.IEnumerable`1&lt;string&gt; changedVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.CorrelationChanges(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CorrelationChanges (Optional changedVariables As IEnumerable(Of String) = Nothing) As CorrelationChanges" />
      <MemberSignature Language="F#" Value="static member CorrelationChanges : seq&lt;string&gt; -&gt; Azure.AI.AnomalyDetector.CorrelationChanges" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.CorrelationChanges changedVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.CorrelationChanges</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedVariables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="changedVariables"> Correlated variables that have correlation changes under an anomaly. </param>
        <summary> Initializes a new instance of CorrelationChanges. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.CorrelationChanges" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelInfo">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.ModelInfo ModelInfo (Uri dataSource = default, Azure.AI.AnomalyDetector.DataSchema? dataSchema = default, DateTimeOffset startTime = default, DateTimeOffset endTime = default, string displayName = default, int? slidingWindow = default, Azure.AI.AnomalyDetector.AlignPolicy alignPolicy = default, Azure.AI.AnomalyDetector.ModelStatus? status = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; errors = default, Azure.AI.AnomalyDetector.DiagnosticsInfo diagnosticsInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.ModelInfo ModelInfo(class System.Uri dataSource, valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.DataSchema&gt; dataSchema, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, string displayName, valuetype System.Nullable`1&lt;int32&gt; slidingWindow, class Azure.AI.AnomalyDetector.AlignPolicy alignPolicy, valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.ModelStatus&gt; status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.ErrorResponse&gt; errors, class Azure.AI.AnomalyDetector.DiagnosticsInfo diagnosticsInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.ModelInfo(System.Uri,System.Nullable{Azure.AI.AnomalyDetector.DataSchema},System.DateTimeOffset,System.DateTimeOffset,System.String,System.Nullable{System.Int32},Azure.AI.AnomalyDetector.AlignPolicy,System.Nullable{Azure.AI.AnomalyDetector.ModelStatus},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.ErrorResponse},Azure.AI.AnomalyDetector.DiagnosticsInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelInfo (Optional dataSource As Uri = Nothing, Optional dataSchema As Nullable(Of DataSchema) = Nothing, Optional startTime As DateTimeOffset = Nothing, Optional endTime As DateTimeOffset = Nothing, Optional displayName As String = Nothing, Optional slidingWindow As Nullable(Of Integer) = Nothing, Optional alignPolicy As AlignPolicy = Nothing, Optional status As Nullable(Of ModelStatus) = Nothing, Optional errors As IEnumerable(Of ErrorResponse) = Nothing, Optional diagnosticsInfo As DiagnosticsInfo = Nothing) As ModelInfo" />
      <MemberSignature Language="F#" Value="static member ModelInfo : Uri * Nullable&lt;Azure.AI.AnomalyDetector.DataSchema&gt; * DateTimeOffset * DateTimeOffset * string * Nullable&lt;int&gt; * Azure.AI.AnomalyDetector.AlignPolicy * Nullable&lt;Azure.AI.AnomalyDetector.ModelStatus&gt; * seq&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; * Azure.AI.AnomalyDetector.DiagnosticsInfo -&gt; Azure.AI.AnomalyDetector.ModelInfo" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.ModelInfo (dataSource, dataSchema, startTime, endTime, displayName, slidingWindow, alignPolicy, status, errors, diagnosticsInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.ModelInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Uri" />
        <Parameter Name="dataSchema" Type="System.Nullable&lt;Azure.AI.AnomalyDetector.DataSchema&gt;" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="slidingWindow" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="alignPolicy" Type="Azure.AI.AnomalyDetector.AlignPolicy" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.AI.AnomalyDetector.ModelStatus&gt;" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt;" />
        <Parameter Name="diagnosticsInfo" Type="Azure.AI.AnomalyDetector.DiagnosticsInfo" />
      </Parameters>
      <Docs>
        <param name="dataSource">
            Source link to the input data to indicate an accessible Azure Storage URI.
            It either points to an Azure Blob Storage folder or points to a CSV file in
            Azure Blob Storage, based on your data schema selection.
            </param>
        <param name="dataSchema">
            Data schema of the input data source. The default
            is OneTable.
            </param>
        <param name="startTime">
            Start date/time of training data, which should be
            in ISO 8601 format.
            </param>
        <param name="endTime">
            End date/time of training data, which should be
            in ISO 8601 format.
            </param>
        <param name="displayName">
            Display name of the model. Maximum length is 24
            characters.
            </param>
        <param name="slidingWindow">
            Number of previous time stamps that will be used to
            detect whether the time stamp is an anomaly or not.
            </param>
        <param name="alignPolicy"> Manner of aligning multiple variables. </param>
        <param name="status"> Model status. </param>
        <param name="errors"> Error messages after failure to create a model. </param>
        <param name="diagnosticsInfo"> Diagnostics information to help inspect the states of a model or variable. </param>
        <summary> Initializes a new instance of ModelInfo. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.ModelInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultivariateBatchDetectionResultSummary">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary MultivariateBatchDetectionResultSummary (Azure.AI.AnomalyDetector.MultivariateBatchDetectionStatus status = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; errors = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.VariableState&gt; variableStates = default, Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions setupInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary MultivariateBatchDetectionResultSummary(valuetype Azure.AI.AnomalyDetector.MultivariateBatchDetectionStatus status, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.ErrorResponse&gt; errors, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.VariableState&gt; variableStates, class Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions setupInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateBatchDetectionResultSummary(Azure.AI.AnomalyDetector.MultivariateBatchDetectionStatus,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.ErrorResponse},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.VariableState},Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultivariateBatchDetectionResultSummary (Optional status As MultivariateBatchDetectionStatus = Nothing, Optional errors As IEnumerable(Of ErrorResponse) = Nothing, Optional variableStates As IEnumerable(Of VariableState) = Nothing, Optional setupInfo As MultivariateBatchDetectionOptions = Nothing) As MultivariateBatchDetectionResultSummary" />
      <MemberSignature Language="F#" Value="static member MultivariateBatchDetectionResultSummary : Azure.AI.AnomalyDetector.MultivariateBatchDetectionStatus * seq&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; * seq&lt;Azure.AI.AnomalyDetector.VariableState&gt; * Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateBatchDetectionResultSummary (status, errors, variableStates, setupInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.AI.AnomalyDetector.MultivariateBatchDetectionStatus" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt;" />
        <Parameter Name="variableStates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.VariableState&gt;" />
        <Parameter Name="setupInfo" Type="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" />
      </Parameters>
      <Docs>
        <param name="status"> Status of detection results. </param>
        <param name="errors"> Error message when detection fails. </param>
        <param name="variableStates"> Variable status. </param>
        <param name="setupInfo">
            Detection request for batch inference. This is an asynchronous inference that
            will need another API to get detection results.
            </param>
        <summary> Initializes a new instance of MultivariateBatchDetectionResultSummary. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultivariateDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.MultivariateDetectionResult MultivariateDetectionResult (Guid resultId = default, Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary summary = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyState&gt; results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.MultivariateDetectionResult MultivariateDetectionResult(valuetype System.Guid resultId, class Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary summary, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.AnomalyState&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateDetectionResult(System.Guid,Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary,System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.AnomalyState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultivariateDetectionResult (Optional resultId As Guid = Nothing, Optional summary As MultivariateBatchDetectionResultSummary = Nothing, Optional results As IEnumerable(Of AnomalyState) = Nothing) As MultivariateDetectionResult" />
      <MemberSignature Language="F#" Value="static member MultivariateDetectionResult : Guid * Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary * seq&lt;Azure.AI.AnomalyDetector.AnomalyState&gt; -&gt; Azure.AI.AnomalyDetector.MultivariateDetectionResult" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateDetectionResult (resultId, summary, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.MultivariateDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultId" Type="System.Guid" />
        <Parameter Name="summary" Type="Azure.AI.AnomalyDetector.MultivariateBatchDetectionResultSummary" />
        <Parameter Name="results" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyState&gt;" />
      </Parameters>
      <Docs>
        <param name="resultId"> Result identifier that's used to fetch the results of an inference call. </param>
        <param name="summary"> Multivariate anomaly detection status. </param>
        <param name="results"> Detection result for each time stamp. </param>
        <summary> Initializes a new instance of MultivariateDetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.MultivariateDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultivariateLastDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.MultivariateLastDetectionResult MultivariateLastDetectionResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.VariableState&gt; variableStates = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyState&gt; results = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.MultivariateLastDetectionResult MultivariateLastDetectionResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.VariableState&gt; variableStates, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.AnomalyDetector.AnomalyState&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateLastDetectionResult(System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.VariableState},System.Collections.Generic.IEnumerable{Azure.AI.AnomalyDetector.AnomalyState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultivariateLastDetectionResult (Optional variableStates As IEnumerable(Of VariableState) = Nothing, Optional results As IEnumerable(Of AnomalyState) = Nothing) As MultivariateLastDetectionResult" />
      <MemberSignature Language="F#" Value="static member MultivariateLastDetectionResult : seq&lt;Azure.AI.AnomalyDetector.VariableState&gt; * seq&lt;Azure.AI.AnomalyDetector.AnomalyState&gt; -&gt; Azure.AI.AnomalyDetector.MultivariateLastDetectionResult" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.MultivariateLastDetectionResult (variableStates, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.MultivariateLastDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableStates" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.VariableState&gt;" />
        <Parameter Name="results" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.AnomalyDetector.AnomalyState&gt;" />
      </Parameters>
      <Docs>
        <param name="variableStates"> Variable status. </param>
        <param name="results"> Anomaly status and information. </param>
        <summary> Initializes a new instance of MultivariateLastDetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.MultivariateLastDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnivariateChangePointDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult UnivariateChangePointDetectionResult (int? period = default, System.Collections.Generic.IEnumerable&lt;bool&gt; isChangePoint = default, System.Collections.Generic.IEnumerable&lt;float&gt; confidenceScores = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult UnivariateChangePointDetectionResult(valuetype System.Nullable`1&lt;int32&gt; period, class System.Collections.Generic.IEnumerable`1&lt;bool&gt; isChangePoint, class System.Collections.Generic.IEnumerable`1&lt;float32&gt; confidenceScores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.UnivariateChangePointDetectionResult(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Boolean},System.Collections.Generic.IEnumerable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnivariateChangePointDetectionResult (Optional period As Nullable(Of Integer) = Nothing, Optional isChangePoint As IEnumerable(Of Boolean) = Nothing, Optional confidenceScores As IEnumerable(Of Single) = Nothing) As UnivariateChangePointDetectionResult" />
      <MemberSignature Language="F#" Value="static member UnivariateChangePointDetectionResult : Nullable&lt;int&gt; * seq&lt;bool&gt; * seq&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.UnivariateChangePointDetectionResult (period, isChangePoint, confidenceScores)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="period" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isChangePoint" Type="System.Collections.Generic.IEnumerable&lt;System.Boolean&gt;" />
        <Parameter Name="confidenceScores" Type="System.Collections.Generic.IEnumerable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="period">
            Frequency extracted from the series. Zero means no recurrent pattern has been
            found.
            </param>
        <param name="isChangePoint">
            Change point properties for each input point. True means
            an anomaly (either negative or positive) has been detected. The index of the
            array is consistent with the input series.
            </param>
        <param name="confidenceScores"> Change point confidence of each point. </param>
        <summary> Initializes a new instance of UnivariateChangePointDetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.UnivariateChangePointDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnivariateLastDetectionResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.AnomalyDetector.UnivariateLastDetectionResult UnivariateLastDetectionResult (int period = 0, int suggestedWindow = 0, float expectedValue = 0, float upperMargin = 0, float lowerMargin = 0, bool isAnomaly = false, bool isNegativeAnomaly = false, bool isPositiveAnomaly = false, float? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.AnomalyDetector.UnivariateLastDetectionResult UnivariateLastDetectionResult(int32 period, int32 suggestedWindow, float32 expectedValue, float32 upperMargin, float32 lowerMargin, bool isAnomaly, bool isNegativeAnomaly, bool isPositiveAnomaly, valuetype System.Nullable`1&lt;float32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.UnivariateLastDetectionResult(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnivariateLastDetectionResult (Optional period As Integer = 0, Optional suggestedWindow As Integer = 0, Optional expectedValue As Single = 0, Optional upperMargin As Single = 0, Optional lowerMargin As Single = 0, Optional isAnomaly As Boolean = false, Optional isNegativeAnomaly As Boolean = false, Optional isPositiveAnomaly As Boolean = false, Optional severity As Nullable(Of Single) = Nothing) As UnivariateLastDetectionResult" />
      <MemberSignature Language="F#" Value="static member UnivariateLastDetectionResult : int * int * single * single * single * bool * bool * bool * Nullable&lt;single&gt; -&gt; Azure.AI.AnomalyDetector.UnivariateLastDetectionResult" Usage="Azure.AI.AnomalyDetector.AIAnomalyDetectorModelFactory.UnivariateLastDetectionResult (period, suggestedWindow, expectedValue, upperMargin, lowerMargin, isAnomaly, isNegativeAnomaly, isPositiveAnomaly, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.UnivariateLastDetectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="period" Type="System.Int32" />
        <Parameter Name="suggestedWindow" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="System.Single" />
        <Parameter Name="upperMargin" Type="System.Single" />
        <Parameter Name="lowerMargin" Type="System.Single" />
        <Parameter Name="isAnomaly" Type="System.Boolean" />
        <Parameter Name="isNegativeAnomaly" Type="System.Boolean" />
        <Parameter Name="isPositiveAnomaly" Type="System.Boolean" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="period">
            Frequency extracted from the series. Zero means no recurrent pattern has been
            found.
            </param>
        <param name="suggestedWindow"> Suggested input series points needed for detecting the latest point. </param>
        <param name="expectedValue"> Expected value of the latest point. </param>
        <param name="upperMargin">
            Upper margin of the latest point. UpperMargin is used to calculate
            upperBoundary, which is equal to expectedValue + (100 - marginScale)*upperMargin.
            If the value of latest point is between upperBoundary and lowerBoundary, it
            should be treated as a normal value. Adjusting the marginScale value enables the anomaly
            status of the latest point to be changed.
            </param>
        <param name="lowerMargin">
            Lower margin of the latest point. LowerMargin is used to calculate
            lowerBoundary, which is equal to expectedValue - (100 - marginScale)*lowerMargin.
            </param>
        <param name="isAnomaly">
            Anomaly status of the latest point. True means the latest point is an anomaly,
            either in the negative direction or in the positive direction.
            </param>
        <param name="isNegativeAnomaly">
            Anomaly status of the latest point in a negative direction. True means the latest
            point is an anomaly and its real value is smaller than the expected one.
            </param>
        <param name="isPositiveAnomaly">
            Anomaly status of the latest point in a positive direction. True means the latest
            point is an anomaly and its real value is larger than the expected one.
            </param>
        <param name="severity">
            Severity score for the last input point. The larger the value is, the more
            severe the anomaly is. For normal points, the severity is always 0.
            </param>
        <summary> Initializes a new instance of UnivariateLastDetectionResult. </summary>
        <returns> A new <see cref="T:Azure.AI.AnomalyDetector.UnivariateLastDetectionResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
