<Type Name="MultivariateBatchDetectionOptions" FullName="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions">
  <TypeSignature Language="C#" Value="public class MultivariateBatchDetectionOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultivariateBatchDetectionOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class MultivariateBatchDetectionOptions&#xA;Implements IJsonModel(Of MultivariateBatchDetectionOptions), IPersistableModel(Of MultivariateBatchDetectionOptions)" />
  <TypeSignature Language="F#" Value="type MultivariateBatchDetectionOptions = class&#xA;    interface IJsonModel&lt;MultivariateBatchDetectionOptions&gt;&#xA;    interface IPersistableModel&lt;MultivariateBatchDetectionOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Detection request for batch inference. This is an asynchronous inference that
            will need another API to get detection results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultivariateBatchDetectionOptions (Uri dataSource, DateTimeOffset startTime, DateTimeOffset endTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri dataSource, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.#ctor(System.Uri,System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Uri, startTime As DateTimeOffset, endTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions : Uri * DateTimeOffset * DateTimeOffset -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" Usage="new Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions (dataSource, startTime, endTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Uri" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dataSource">
            Source link to the input data to indicate an accessible Azure Storage URI.
            It either points to an Azure Blob Storage folder or points to a CSV file in
            Azure Blob Storage, based on your data schema selection. The data schema should
            be exactly the same as those used in the training phase. The input data must
            contain at least slidingWindow entries preceding the start time of the data
            to be detected.
            </param>
        <param name="startTime">
            Start date/time of data for detection, which should
            be in ISO 8601 format.
            </param>
        <param name="endTime">
            End date/time of data for detection, which should
            be in ISO 8601 format.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public Uri DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DataSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Uri" />
      <MemberSignature Language="F#" Value="member this.DataSource : Uri with get, set" Usage="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Source link to the input data to indicate an accessible Azure Storage URI.
            It either points to an Azure Blob Storage folder or points to a CSV file in
            Azure Blob Storage, based on your data schema selection. The data schema should
            be exactly the same as those used in the training phase. The input data must
            contain at least slidingWindow entries preceding the start time of the data
            to be detected.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset EndTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset EndTime" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.EndTime" />
      <MemberSignature Language="VB.NET" Value="Public Property EndTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.EndTime : DateTimeOffset with get, set" Usage="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.EndTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            End date/time of data for detection, which should
            be in ISO 8601 format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset StartTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset StartTime" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.StartTime" />
      <MemberSignature Language="VB.NET" Value="Public Property StartTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.StartTime : DateTimeOffset with get, set" Usage="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.StartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Start date/time of data for detection, which should
            be in ISO 8601 format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions IJsonModel&lt;MultivariateBatchDetectionOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#AnomalyDetector#MultivariateBatchDetectionOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As MultivariateBatchDetectionOptions Implements IJsonModel(Of MultivariateBatchDetectionOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" Usage="multivariateBatchDetectionOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;MultivariateBatchDetectionOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#AnomalyDetector#MultivariateBatchDetectionOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of MultivariateBatchDetectionOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="multivariateBatchDetectionOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions IPersistableModel&lt;MultivariateBatchDetectionOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#MultivariateBatchDetectionOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As MultivariateBatchDetectionOptions Implements IPersistableModel(Of MultivariateBatchDetectionOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions" Usage="multivariateBatchDetectionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#MultivariateBatchDetectionOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of MultivariateBatchDetectionOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="multivariateBatchDetectionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;MultivariateBatchDetectionOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#MultivariateBatchDetectionOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of MultivariateBatchDetectionOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="multivariateBatchDetectionOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TopContributorCount">
      <MemberSignature Language="C#" Value="public int? TopContributorCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TopContributorCount" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.TopContributorCount" />
      <MemberSignature Language="VB.NET" Value="Public Property TopContributorCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TopContributorCount : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.AnomalyDetector.MultivariateBatchDetectionOptions.TopContributorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of top contributed variables for one anomalous time stamp in the response. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
