<Type Name="ModelInfo" FullName="Azure.AI.AnomalyDetector.ModelInfo">
  <TypeSignature Language="C#" Value="public class ModelInfo : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModelInfo extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.AnomalyDetector.ModelInfo&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.AnomalyDetector.ModelInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.ModelInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelInfo&#xA;Implements IJsonModel(Of ModelInfo), IPersistableModel(Of ModelInfo)" />
  <TypeSignature Language="F#" Value="type ModelInfo = class&#xA;    interface IJsonModel&lt;ModelInfo&gt;&#xA;    interface IPersistableModel&lt;ModelInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Training result of a model, including its status, errors, and diagnostics
            information.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelInfo (Uri dataSource, DateTimeOffset startTime, DateTimeOffset endTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri dataSource, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.#ctor(System.Uri,System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Uri, startTime As DateTimeOffset, endTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.ModelInfo : Uri * DateTimeOffset * DateTimeOffset -&gt; Azure.AI.AnomalyDetector.ModelInfo" Usage="new Azure.AI.AnomalyDetector.ModelInfo (dataSource, startTime, endTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Uri" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dataSource">
            Source link to the input data to indicate an accessible Azure Storage URI.
            It either points to an Azure Blob Storage folder or points to a CSV file in
            Azure Blob Storage, based on your data schema selection.
            </param>
        <param name="startTime">
            Start date/time of training data, which should be
            in ISO 8601 format.
            </param>
        <param name="endTime">
            End date/time of training data, which should be
            in ISO 8601 format.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.AnomalyDetector.ModelInfo" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataSource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AlignPolicy">
      <MemberSignature Language="C#" Value="public Azure.AI.AnomalyDetector.AlignPolicy AlignPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.AnomalyDetector.AlignPolicy AlignPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.AlignPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property AlignPolicy As AlignPolicy" />
      <MemberSignature Language="F#" Value="member this.AlignPolicy : Azure.AI.AnomalyDetector.AlignPolicy with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.AlignPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.AlignPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Manner of aligning multiple variables. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSchema">
      <MemberSignature Language="C#" Value="public Azure.AI.AnomalyDetector.DataSchema? DataSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.DataSchema&gt; DataSchema" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.DataSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSchema As Nullable(Of DataSchema)" />
      <MemberSignature Language="F#" Value="member this.DataSchema : Nullable&lt;Azure.AI.AnomalyDetector.DataSchema&gt; with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.DataSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.AnomalyDetector.DataSchema&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Data schema of the input data source. The default
            is OneTable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public Uri DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DataSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Uri" />
      <MemberSignature Language="F#" Value="member this.DataSource : Uri with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Source link to the input data to indicate an accessible Azure Storage URI.
            It either points to an Azure Blob Storage folder or points to a CSV file in
            Azure Blob Storage, based on your data schema selection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagnosticsInfo">
      <MemberSignature Language="C#" Value="public Azure.AI.AnomalyDetector.DiagnosticsInfo DiagnosticsInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.AnomalyDetector.DiagnosticsInfo DiagnosticsInfo" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.DiagnosticsInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagnosticsInfo As DiagnosticsInfo" />
      <MemberSignature Language="F#" Value="member this.DiagnosticsInfo : Azure.AI.AnomalyDetector.DiagnosticsInfo" Usage="Azure.AI.AnomalyDetector.ModelInfo.DiagnosticsInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.DiagnosticsInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Diagnostics information to help inspect the states of a model or variable. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Display name of the model. Maximum length is 24
            characters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset EndTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset EndTime" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.EndTime" />
      <MemberSignature Language="VB.NET" Value="Public Property EndTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.EndTime : DateTimeOffset with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.EndTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            End date/time of training data, which should be
            in ISO 8601 format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.AnomalyDetector.ErrorResponse&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IReadOnlyList(Of ErrorResponse)" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt;" Usage="Azure.AI.AnomalyDetector.ModelInfo.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.AnomalyDetector.ErrorResponse&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Error messages after failure to create a model. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingWindow">
      <MemberSignature Language="C#" Value="public int? SlidingWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; SlidingWindow" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.SlidingWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingWindow As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.SlidingWindow : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.SlidingWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of previous time stamps that will be used to
            detect whether the time stamp is an anomaly or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset StartTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset StartTime" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.StartTime" />
      <MemberSignature Language="VB.NET" Value="Public Property StartTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.StartTime : DateTimeOffset with get, set" Usage="Azure.AI.AnomalyDetector.ModelInfo.StartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Start date/time of training data, which should be
            in ISO 8601 format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Azure.AI.AnomalyDetector.ModelStatus? Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.ModelStatus&gt; Status" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.ModelInfo.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As Nullable(Of ModelStatus)" />
      <MemberSignature Language="F#" Value="member this.Status : Nullable&lt;Azure.AI.AnomalyDetector.ModelStatus&gt;" Usage="Azure.AI.AnomalyDetector.ModelInfo.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.AnomalyDetector.ModelStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Model status. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.AnomalyDetector.ModelInfo IJsonModel&lt;ModelInfo&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.ModelInfo System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#AnomalyDetector#ModelInfo&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ModelInfo Implements IJsonModel(Of ModelInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.ModelInfo&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.ModelInfo" Usage="modelInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.ModelInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ModelInfo&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#AnomalyDetector#ModelInfo&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ModelInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="modelInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.AnomalyDetector.ModelInfo IPersistableModel&lt;ModelInfo&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.ModelInfo System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#ModelInfo&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ModelInfo Implements IPersistableModel(Of ModelInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.ModelInfo&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.AnomalyDetector.ModelInfo" Usage="modelInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.ModelInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ModelInfo&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#ModelInfo&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ModelInfo).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="modelInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ModelInfo&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.ModelInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#AnomalyDetector#ModelInfo&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ModelInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="modelInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.AnomalyDetector.ModelInfo&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
