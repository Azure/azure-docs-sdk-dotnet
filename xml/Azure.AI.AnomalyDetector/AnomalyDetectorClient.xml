<Type Name="AnomalyDetectorClient" FullName="Azure.AI.AnomalyDetector.AnomalyDetectorClient">
  <TypeSignature Language="C#" Value="public class AnomalyDetectorClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnomalyDetectorClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AnomalyDetectorClient" />
  <TypeSignature Language="F#" Value="type AnomalyDetectorClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The AnomalyDetector service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnomalyDetectorClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AnomalyDetectorClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.AnomalyDetector.Models.ApiVersion? apiVersion = default, Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.Models.ApiVersion&gt; apiVersion, class Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.AzureKeyCredential,System.Nullable{Azure.AI.AnomalyDetector.Models.ApiVersion},Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, Optional apiVersion As Nullable(Of ApiVersion) = Nothing, Optional options As AnomalyDetectorClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.AzureKeyCredential * Nullable&lt;Azure.AI.AnomalyDetector.Models.ApiVersion&gt; * Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential, apiVersion, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="apiVersion" Type="System.Nullable&lt;Azure.AI.AnomalyDetector.Models.ApiVersion&gt;" />
        <Parameter Name="options" Type="Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="apiVersion"> Anomaly Detector API version (for example, v1.0). </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of AnomalyDetectorClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.AnomalyDetector.Models.ApiVersion? apiVersion = default, Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, valuetype System.Nullable`1&lt;valuetype Azure.AI.AnomalyDetector.Models.ApiVersion&gt; apiVersion, class Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.Core.TokenCredential,System.Nullable{Azure.AI.AnomalyDetector.Models.ApiVersion},Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional apiVersion As Nullable(Of ApiVersion) = Nothing, Optional options As AnomalyDetectorClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.Core.TokenCredential * Nullable&lt;Azure.AI.AnomalyDetector.Models.ApiVersion&gt; * Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential, apiVersion, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="apiVersion" Type="System.Nullable&lt;Azure.AI.AnomalyDetector.Models.ApiVersion&gt;" />
        <Parameter Name="options" Type="Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="apiVersion"> Anomaly Detector API version (for example, v1.0). </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of AnomalyDetectorClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMultivariateModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteMultivariateModel (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteMultivariateModel(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DeleteMultivariateModel(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMultivariateModel (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteMultivariateModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteMultivariateModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response" Usage="anomalyDetectorClient.DeleteMultivariateModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete an existing multivariate model according to the modelId. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMultivariateModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteMultivariateModelAsync (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteMultivariateModelAsync(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DeleteMultivariateModelAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMultivariateModelAsync (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMultivariateModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteMultivariateModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="anomalyDetectorClient.DeleteMultivariateModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete an existing multivariate model according to the modelId. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectAnomaly">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DetectAnomaly (Guid modelId, Azure.AI.AnomalyDetector.Models.DetectionRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DetectAnomaly(valuetype System.Guid modelId, class Azure.AI.AnomalyDetector.Models.DetectionRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectAnomaly(System.Guid,Azure.AI.AnomalyDetector.Models.DetectionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectAnomaly (modelId As Guid, body As DetectionRequest, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DetectAnomaly : Guid * Azure.AI.AnomalyDetector.Models.DetectionRequest * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DetectAnomaly : Guid * Azure.AI.AnomalyDetector.Models.DetectionRequest * System.Threading.CancellationToken -&gt; Azure.Response" Usage="anomalyDetectorClient.DetectAnomaly (modelId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="body"> Detect anomaly request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectAnomalyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DetectAnomalyAsync (Guid modelId, Azure.AI.AnomalyDetector.Models.DetectionRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DetectAnomalyAsync(valuetype System.Guid modelId, class Azure.AI.AnomalyDetector.Models.DetectionRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectAnomalyAsync(System.Guid,Azure.AI.AnomalyDetector.Models.DetectionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectAnomalyAsync (modelId As Guid, body As DetectionRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DetectAnomalyAsync : Guid * Azure.AI.AnomalyDetector.Models.DetectionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DetectAnomalyAsync : Guid * Azure.AI.AnomalyDetector.Models.DetectionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="anomalyDetectorClient.DetectAnomalyAsync (modelId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="body"> Detect anomaly request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submit detection multivariate anomaly task with the trained model of modelId, the input schema should be the same with the training request. Thus request will be complete asynchronously and will return a resultId for querying the detection result.The request should be a source link to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be as follows: the first column is timestamp and the second column is value. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangePoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt; DetectChangePoint (Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt; DetectChangePoint(class Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectChangePoint(Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectChangePoint (body As ChangePointDetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChangePointDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectChangePoint : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&#xA;override this.DetectChangePoint : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;" Usage="anomalyDetectorClient.DetectChangePoint (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and granularity is needed. Advanced model parameters can also be set in the request if needed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Evaluate change point score of every series point. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangePointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt; DetectChangePointAsync (Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt; DetectChangePointAsync(class Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectChangePointAsync(Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectChangePointAsync (body As ChangePointDetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChangePointDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectChangePointAsync : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;&#xA;override this.DetectChangePointAsync : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectChangePointAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and granularity is needed. Advanced model parameters can also be set in the request if needed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Evaluate change point score of every series point. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectEntireSeries">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt; DetectEntireSeries (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt; DetectEntireSeries(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectEntireSeries(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectEntireSeries (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EntireDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectEntireSeries : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&#xA;override this.DetectEntireSeries : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;" Usage="anomalyDetectorClient.DetectEntireSeries (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model with an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectEntireSeriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt; DetectEntireSeriesAsync (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt; DetectEntireSeriesAsync(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectEntireSeriesAsync(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectEntireSeriesAsync (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EntireDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectEntireSeriesAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;&#xA;override this.DetectEntireSeriesAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectEntireSeriesAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model with an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLastPoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt; DetectLastPoint (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt; DetectLastPoint(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectLastPoint(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectLastPoint (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LastDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectLastPoint : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&#xA;override this.DetectLastPoint : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;" Usage="anomalyDetectorClient.DetectLastPoint (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLastPointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt; DetectLastPointAsync (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt; DetectLastPointAsync(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectLastPointAsync(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectLastPointAsync (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LastDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectLastPointAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;&#xA;override this.DetectLastPointAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectLastPointAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; ExportModel (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; ExportModel(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.ExportModel(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportModel (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member ExportModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.ExportModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="anomalyDetectorClient.ExportModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Export multivariate anomaly detection model based on modelId. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; ExportModelAsync (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; ExportModelAsync(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.ExportModelAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportModelAsync (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member ExportModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.ExportModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="anomalyDetectorClient.ExportModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Export multivariate anomaly detection model based on modelId. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionResult">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt; GetDetectionResult (Guid resultId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.DetectionResult&gt; GetDetectionResult(valuetype System.Guid resultId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetDetectionResult(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionResult (resultId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DetectionResult)" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionResult : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&#xA;override this.GetDetectionResult : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;" Usage="anomalyDetectorClient.GetDetectionResult (resultId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resultId"> Result identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&gt; GetDetectionResultAsync (Guid resultId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&gt; GetDetectionResultAsync(valuetype System.Guid resultId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetDetectionResultAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionResultAsync (resultId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DetectionResult))" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionResultAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&gt;&#xA;override this.GetDetectionResultAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&gt;" Usage="anomalyDetectorClient.GetDetectionResultAsync (resultId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.DetectionResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resultId"> Result identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultivariateModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt; GetMultivariateModel (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.Model&gt; GetMultivariateModel(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModel(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultivariateModel (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Model)" />
      <MemberSignature Language="F#" Value="abstract member GetMultivariateModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;&#xA;override this.GetMultivariateModel : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;" Usage="anomalyDetectorClient.GetMultivariateModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get detailed information of multivariate model, including the training status and variables used in the model. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultivariateModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;&gt; GetMultivariateModelAsync (Guid modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.Model&gt;&gt; GetMultivariateModelAsync(valuetype System.Guid modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateModelAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultivariateModelAsync (modelId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Model))" />
      <MemberSignature Language="F#" Value="abstract member GetMultivariateModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;&gt;&#xA;override this.GetMultivariateModelAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;&gt;" Usage="anomalyDetectorClient.GetMultivariateModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.Model&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get detailed information of multivariate model, including the training status and variables used in the model. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastDetectAnomaly">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt; LastDetectAnomaly (Guid modelId, Azure.AI.AnomalyDetector.Models.LastDetectionRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt; LastDetectAnomaly(valuetype System.Guid modelId, class Azure.AI.AnomalyDetector.Models.LastDetectionRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.LastDetectAnomaly(System.Guid,Azure.AI.AnomalyDetector.Models.LastDetectionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastDetectAnomaly (modelId As Guid, body As LastDetectionRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LastDetectionResult)" />
      <MemberSignature Language="F#" Value="abstract member LastDetectAnomaly : Guid * Azure.AI.AnomalyDetector.Models.LastDetectionRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&#xA;override this.LastDetectAnomaly : Guid * Azure.AI.AnomalyDetector.Models.LastDetectionRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;" Usage="anomalyDetectorClient.LastDetectAnomaly (modelId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.LastDetectionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="body"> Request for last detection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Synchronized API for anomaly detection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastDetectAnomalyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&gt; LastDetectAnomalyAsync (Guid modelId, Azure.AI.AnomalyDetector.Models.LastDetectionRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&gt; LastDetectAnomalyAsync(valuetype System.Guid modelId, class Azure.AI.AnomalyDetector.Models.LastDetectionRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.LastDetectAnomalyAsync(System.Guid,Azure.AI.AnomalyDetector.Models.LastDetectionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastDetectAnomalyAsync (modelId As Guid, body As LastDetectionRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LastDetectionResult))" />
      <MemberSignature Language="F#" Value="abstract member LastDetectAnomalyAsync : Guid * Azure.AI.AnomalyDetector.Models.LastDetectionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&gt;&#xA;override this.LastDetectAnomalyAsync : Guid * Azure.AI.AnomalyDetector.Models.LastDetectionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&gt;" Usage="anomalyDetectorClient.LastDetectAnomalyAsync (modelId, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectionResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.Guid" />
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.LastDetectionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> Model identifier. </param>
        <param name="body"> Request for last detection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Synchronized API for anomaly detection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListMultivariateModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt; ListMultivariateModel (int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt; ListMultivariateModel(valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.ListMultivariateModel(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMultivariateModel (Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ModelSnapshot)" />
      <MemberSignature Language="F#" Value="abstract member ListMultivariateModel : Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;&#xA;override this.ListMultivariateModel : Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;" Usage="anomalyDetectorClient.ListMultivariateModel (skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skip"> $skip indicates how many models will be skipped. </param>
        <param name="top"> $top indicates how many models will be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List models of a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListMultivariateModelAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt; ListMultivariateModelAsync (int? skip = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt; ListMultivariateModelAsync(valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.ListMultivariateModelAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMultivariateModelAsync (Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ModelSnapshot)" />
      <MemberSignature Language="F#" Value="abstract member ListMultivariateModelAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;&#xA;override this.ListMultivariateModelAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;" Usage="anomalyDetectorClient.ListMultivariateModelAsync (skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.AnomalyDetector.Models.ModelSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skip"> $skip indicates how many models will be skipped. </param>
        <param name="top"> $top indicates how many models will be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List models of a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainMultivariateModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response TrainMultivariateModel (Azure.AI.AnomalyDetector.Models.ModelInfo body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response TrainMultivariateModel(class Azure.AI.AnomalyDetector.Models.ModelInfo body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.TrainMultivariateModel(Azure.AI.AnomalyDetector.Models.ModelInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TrainMultivariateModel (body As ModelInfo, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member TrainMultivariateModel : Azure.AI.AnomalyDetector.Models.ModelInfo * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.TrainMultivariateModel : Azure.AI.AnomalyDetector.Models.ModelInfo * System.Threading.CancellationToken -&gt; Azure.Response" Usage="anomalyDetectorClient.TrainMultivariateModel (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ModelInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Training request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create and train a multivariate anomaly detection model. The request must include a source parameter to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be in a single CSV file in which the first column is timestamp and the second column is value. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainMultivariateModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; TrainMultivariateModelAsync (Azure.AI.AnomalyDetector.Models.ModelInfo body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; TrainMultivariateModelAsync(class Azure.AI.AnomalyDetector.Models.ModelInfo body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.TrainMultivariateModelAsync(Azure.AI.AnomalyDetector.Models.ModelInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TrainMultivariateModelAsync (body As ModelInfo, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member TrainMultivariateModelAsync : Azure.AI.AnomalyDetector.Models.ModelInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.TrainMultivariateModelAsync : Azure.AI.AnomalyDetector.Models.ModelInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="anomalyDetectorClient.TrainMultivariateModelAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ModelInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Training request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create and train a multivariate anomaly detection model. The request must include a source parameter to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All time-series used in generate the model must be zipped into one single file. Each time-series will be in a single CSV file in which the first column is timestamp and the second column is value. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
