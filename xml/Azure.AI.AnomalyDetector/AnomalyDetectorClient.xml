<Type Name="AnomalyDetectorClient" FullName="Azure.AI.AnomalyDetector.AnomalyDetectorClient">
  <TypeSignature Language="C#" Value="public class AnomalyDetectorClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnomalyDetectorClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AnomalyDetectorClient" />
  <TypeSignature Language="F#" Value="type AnomalyDetectorClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Anomaly Detector API detects anomalies automatically in time series data.
            It supports both a stateless detection mode and a
            stateful detection mode. In stateless mode, there are three functionalities. Entire
            Detect is for detecting the whole series, with the model trained by the time series.
            Last Detect is for detecting the last point, with the model trained by points before.
            ChangePoint Detect is for detecting trend changes in the time series. In stateful
            mode, the user can store time series. The stored time series will be used for
            detection anomalies. In this mode, the user can still use the preceding three
            functionalities by only giving a time range without preparing time series on the
            client side. Besides the preceding three functionalities, the stateful model
            provides group-based detection and labeling services. By using the labeling
            service, the user can provide labels for each detection result. These labels will be
            used for retuning or regenerating detection models. Inconsistency detection is
            a kind of group-based detection that finds inconsistencies in
            a set of time series. By using the anomaly detector service, business customers can
            discover incidents and establish a logic flow for root cause analysis.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnomalyDetectorClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AnomalyDetectorClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Azure Cognitive Services endpoints (protocol and host name, such as
            https://westus2.api.cognitive.microsoft.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of AnomalyDetectorClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As AnomalyDetectorClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.AzureKeyCredential * Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Supported Azure Cognitive Services endpoints (protocol and host name, such as
            https://westus2.api.cognitive.microsoft.com).
            </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of AnomalyDetectorClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMultivariateClient">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.AnomalyDetector.Multivariate GetMultivariateClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.Multivariate GetMultivariateClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetMultivariateClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultivariateClient () As Multivariate" />
      <MemberSignature Language="F#" Value="abstract member GetMultivariateClient : unit -&gt; Azure.AI.AnomalyDetector.Multivariate&#xA;override this.GetMultivariateClient : unit -&gt; Azure.AI.AnomalyDetector.Multivariate" Usage="anomalyDetectorClient.GetMultivariateClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Multivariate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of Multivariate. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnivariateClient">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.AnomalyDetector.Univariate GetUnivariateClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.AnomalyDetector.Univariate GetUnivariateClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.GetUnivariateClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnivariateClient () As Univariate" />
      <MemberSignature Language="F#" Value="abstract member GetUnivariateClient : unit -&gt; Azure.AI.AnomalyDetector.Univariate&#xA;override this.GetUnivariateClient : unit -&gt; Azure.AI.AnomalyDetector.Univariate" Usage="anomalyDetectorClient.GetUnivariateClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.AnomalyDetector.Univariate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of Univariate. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.AnomalyDetector.AnomalyDetectorClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.AI.AnomalyDetector.AnomalyDetectorClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
