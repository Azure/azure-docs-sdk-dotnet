<Type Name="IWithEventHub" FullName="Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithEventHub">
  <TypeSignature Language="C#" Value="public interface IWithEventHub : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithEventHub implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithEventHub" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithEventHub&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IWithEventHub = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Stage of the authorization rule definition allowing to specify the event for which rule needs to be created.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithExistingEventHub">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHub (Microsoft.Azure.Management.Eventhub.Fluent.IEventHub eventHub);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHub(class Microsoft.Azure.Management.Eventhub.Fluent.IEventHub eventHub) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithEventHub.WithExistingEventHub(Microsoft.Azure.Management.Eventhub.Fluent.IEventHub)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingEventHub (eventHub As IEventHub) As IWithAccessPolicy" />
      <MemberSignature Language="F#" Value="abstract member WithExistingEventHub : Microsoft.Azure.Management.Eventhub.Fluent.IEventHub -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy" Usage="iWithEventHub.WithExistingEventHub eventHub" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHub" Type="Microsoft.Azure.Management.Eventhub.Fluent.IEventHub" />
      </Parameters>
      <Docs>
        <param name="eventHub">The event hub.</param>
        <summary>
            Specifies that authorization rule needs to be created for the given event hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithExistingEventHub">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHub (string resourceGroupName, string namespaceName, string eventHubName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHub(string resourceGroupName, string namespaceName, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithEventHub.WithExistingEventHub(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingEventHub (resourceGroupName As String, namespaceName As String, eventHubName As String) As IWithAccessPolicy" />
      <MemberSignature Language="F#" Value="abstract member WithExistingEventHub : string * string * string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy" Usage="iWithEventHub.WithExistingEventHub (resourceGroupName, namespaceName, eventHubName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">Event hub namespace resource group name.</param>
        <param name="namespaceName">Event hub parent namespace name.</param>
        <param name="eventHubName">Event hub name.</param>
        <summary>
            Specifies that authorization rule needs to be created for the given event hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithExistingEventHubId">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHubId (string eventHubResourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy WithExistingEventHubId(string eventHubResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithEventHub.WithExistingEventHubId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExistingEventHubId (eventHubResourceId As String) As IWithAccessPolicy" />
      <MemberSignature Language="F#" Value="abstract member WithExistingEventHubId : string -&gt; Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy" Usage="iWithEventHub.WithExistingEventHubId eventHubResourceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventHub.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Eventhub.Fluent.EventHubAuthorizationRule.Definition.IWithAccessPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHubResourceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventHubResourceId">The resource id of the event Hub.</param>
        <summary>
            Specifies that authorization rule needs to be created for the given event hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
  </Members>
</Type>
