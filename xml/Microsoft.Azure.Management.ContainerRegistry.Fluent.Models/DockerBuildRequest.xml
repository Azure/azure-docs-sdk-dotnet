<Type Name="DockerBuildRequest" FullName="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest">
  <TypeSignature Language="C#" Value="public class DockerBuildRequest : Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RunRequestInner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DockerBuildRequest extends Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RunRequestInner" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class DockerBuildRequest&#xA;Inherits RunRequestInner" />
  <TypeSignature Language="F#" Value="type DockerBuildRequest = class&#xA;    inherit RunRequestInner" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RunRequestInner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The parameters for a docker quick build.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DockerBuildRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the DockerBuildRequest class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DockerBuildRequest (string dockerFilePath, Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties platform, Nullable&lt;bool&gt; isArchiveEnabled = null, System.Collections.Generic.IList&lt;string&gt; imageNames = null, Nullable&lt;bool&gt; isPushEnabled = null, Nullable&lt;bool&gt; noCache = null, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; arguments = null, Nullable&lt;int&gt; timeout = null, Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties agentConfiguration = null, string sourceLocation = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dockerFilePath, class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties platform, valuetype System.Nullable`1&lt;bool&gt; isArchiveEnabled, class System.Collections.Generic.IList`1&lt;string&gt; imageNames, valuetype System.Nullable`1&lt;bool&gt; isPushEnabled, valuetype System.Nullable`1&lt;bool&gt; noCache, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; arguments, valuetype System.Nullable`1&lt;int32&gt; timeout, class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties agentConfiguration, string sourceLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.#ctor(System.String,Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument},System.Nullable{System.Int32},Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dockerFilePath As String, platform As PlatformProperties, Optional isArchiveEnabled As Nullable(Of Boolean) = null, Optional imageNames As IList(Of String) = null, Optional isPushEnabled As Nullable(Of Boolean) = null, Optional noCache As Nullable(Of Boolean) = null, Optional arguments As IList(Of Argument) = null, Optional timeout As Nullable(Of Integer) = null, Optional agentConfiguration As AgentProperties = null, Optional sourceLocation As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest : string * Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; * Nullable&lt;int&gt; * Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties * string -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest" Usage="new Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest (dockerFilePath, platform, isArchiveEnabled, imageNames, isPushEnabled, noCache, arguments, timeout, agentConfiguration, sourceLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dockerFilePath" Type="System.String" />
        <Parameter Name="platform" Type="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties" />
        <Parameter Name="isArchiveEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="isPushEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="noCache" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt;" />
        <Parameter Name="timeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="agentConfiguration" Type="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties" />
        <Parameter Name="sourceLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dockerFilePath">The Docker file path relative to the
            source location.</param>
        <param name="platform">The platform properties against which the
            run has to happen.</param>
        <param name="isArchiveEnabled">The value that indicates whether
            archiving is enabled for the run or not.</param>
        <param name="imageNames">The fully qualified image names including
            the repository and tag.</param>
        <param name="isPushEnabled">The value of this property indicates
            whether the image built should be pushed to the registry or
            not.</param>
        <param name="noCache">The value of this property indicates whether
            the image cache is enabled or not.</param>
        <param name="arguments">The collection of override arguments to be
            used when executing the run.</param>
        <param name="timeout">Run timeout in seconds.</param>
        <param name="agentConfiguration">The machine configuration of the
            run agent.</param>
        <param name="sourceLocation">The URL(absolute or relative) of the
            source context. It can be an URL to a tar or git repoistory.
            If it is relative URL, the relative path should be obtained from
            calling listBuildSourceUploadUrl API.</param>
        <summary>
            Initializes a new instance of the DockerBuildRequest class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties AgentConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties AgentConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.AgentConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property AgentConfiguration As AgentProperties" />
      <MemberSignature Language="F#" Value="member this.AgentConfiguration : Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.AgentConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="agentConfiguration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.AgentProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the machine configuration of the run agent.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As IList(Of Argument)" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="arguments")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.Argument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of override arguments to be used when
            executing the run.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockerFilePath">
      <MemberSignature Language="C#" Value="public string DockerFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockerFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.DockerFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DockerFilePath As String" />
      <MemberSignature Language="F#" Value="member this.DockerFilePath : string with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.DockerFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="dockerFilePath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Docker file path relative to the source location.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ImageNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ImageNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.ImageNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ImageNames : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.ImageNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="imageNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the fully qualified image names including the
            repository and tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPushEnabled">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsPushEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsPushEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.IsPushEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPushEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsPushEnabled : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.IsPushEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="isPushEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of this property indicates whether the image
            built should be pushed to the registry or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoCache">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; NoCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; NoCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.NoCache" />
      <MemberSignature Language="VB.NET" Value="Public Property NoCache As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NoCache : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.NoCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="noCache")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of this property indicates whether the image
            cache is enabled or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties Platform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties Platform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Platform" />
      <MemberSignature Language="VB.NET" Value="Public Property Platform As PlatformProperties" />
      <MemberSignature Language="F#" Value="member this.Platform : Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="platform")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.PlatformProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the platform properties against which the run has to
            happen.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceLocation">
      <MemberSignature Language="C#" Value="public string SourceLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.SourceLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceLocation As String" />
      <MemberSignature Language="F#" Value="member this.SourceLocation : string with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.SourceLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="sourceLocation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URL(absolute or relative) of the source context.
            It can be an URL to a tar or git repoistory.
            If it is relative URL, the relative path should be obtained from
            calling listBuildSourceUploadUrl API.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="timeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets run timeout in seconds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.DockerBuildRequest.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="dockerBuildRequest.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>