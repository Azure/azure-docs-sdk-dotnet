<Type Name="MockableMediaSubscriptionResource" FullName="Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMediaSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMediaSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMediaSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMediaSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMediaSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckMediaServicesNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt; CheckMediaServicesNameAvailability (Azure.Core.AzureLocation locationName, Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt; CheckMediaServicesNameAvailability(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource.CheckMediaServicesNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMediaServicesNameAvailability (locationName As AzureLocation, content As MediaServicesNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaServicesNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckMediaServicesNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&#xA;override this.CheckMediaServicesNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;" Usage="mockableMediaSubscriptionResource.CheckMediaServicesNameAvailability (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location name. </param>
        <param name="content"> The request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the Media Service resource name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMediaServicesNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&gt; CheckMediaServicesNameAvailabilityAsync (Azure.Core.AzureLocation locationName, Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&gt; CheckMediaServicesNameAvailabilityAsync(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource.CheckMediaServicesNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMediaServicesNameAvailabilityAsync (locationName As AzureLocation, content As MediaServicesNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaServicesNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckMediaServicesNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&gt;&#xA;override this.CheckMediaServicesNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&gt;" Usage="mockableMediaSubscriptionResource.CheckMediaServicesNameAvailabilityAsync (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Media.Models.MediaServicesNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location name. </param>
        <param name="content"> The request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the Media Service resource name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt; GetMediaServicesAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Media.MediaServicesAccountResource&gt; GetMediaServicesAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource.GetMediaServicesAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MediaServicesAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;&#xA;override this.GetMediaServicesAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;" Usage="mockableMediaSubscriptionResource.GetMediaServicesAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Media Services accounts in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices</description></item><item><term>Operation Id</term><description>Mediaservices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt; GetMediaServicesAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Media.MediaServicesAccountResource&gt; GetMediaServicesAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaSubscriptionResource.GetMediaServicesAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MediaServicesAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;&#xA;override this.GetMediaServicesAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;" Usage="mockableMediaSubscriptionResource.GetMediaServicesAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaServicesAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Media Services accounts in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices</description></item><item><term>Operation Id</term><description>Mediaservices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
