<Type Name="MockableMediaArmClient" FullName="Azure.ResourceManager.Media.Mocking.MockableMediaArmClient">
  <TypeSignature Language="C#" Value="public class MockableMediaArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMediaArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMediaArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMediaArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMediaArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentKeyPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.ContentKeyPolicyResource GetContentKeyPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.ContentKeyPolicyResource GetContentKeyPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetContentKeyPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentKeyPolicyResource (id As ResourceIdentifier) As ContentKeyPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetContentKeyPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.ContentKeyPolicyResource&#xA;override this.GetContentKeyPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.ContentKeyPolicyResource" Usage="mockableMediaArmClient.GetContentKeyPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.ContentKeyPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.ContentKeyPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaAssetFilterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaAssetFilterResource GetMediaAssetFilterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaAssetFilterResource GetMediaAssetFilterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaAssetFilterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaAssetFilterResource (id As ResourceIdentifier) As MediaAssetFilterResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaAssetFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetFilterResource&#xA;override this.GetMediaAssetFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetFilterResource" Usage="mockableMediaArmClient.GetMediaAssetFilterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaAssetFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaAssetFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaAssetFilterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaAssetFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaAssetFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaAssetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaAssetResource GetMediaAssetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaAssetResource GetMediaAssetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaAssetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaAssetResource (id As ResourceIdentifier) As MediaAssetResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaAssetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetResource&#xA;override this.GetMediaAssetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetResource" Usage="mockableMediaArmClient.GetMediaAssetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaAssetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaAssetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaAssetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaAssetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaAssetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaAssetTrackResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaAssetTrackResource GetMediaAssetTrackResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaAssetTrackResource GetMediaAssetTrackResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaAssetTrackResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaAssetTrackResource (id As ResourceIdentifier) As MediaAssetTrackResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaAssetTrackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetTrackResource&#xA;override this.GetMediaAssetTrackResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaAssetTrackResource" Usage="mockableMediaArmClient.GetMediaAssetTrackResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaAssetTrackResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaAssetTrackResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaAssetTrackResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaAssetTrackResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaAssetTrackResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaJobResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaJobResource GetMediaJobResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaJobResource GetMediaJobResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaJobResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaJobResource (id As ResourceIdentifier) As MediaJobResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaJobResource&#xA;override this.GetMediaJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaJobResource" Usage="mockableMediaArmClient.GetMediaJobResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaJobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaLiveEventResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaLiveEventResource GetMediaLiveEventResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaLiveEventResource GetMediaLiveEventResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaLiveEventResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaLiveEventResource (id As ResourceIdentifier) As MediaLiveEventResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaLiveEventResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaLiveEventResource&#xA;override this.GetMediaLiveEventResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaLiveEventResource" Usage="mockableMediaArmClient.GetMediaLiveEventResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaLiveEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaLiveEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaLiveEventResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaLiveEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaLiveEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaLiveOutputResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaLiveOutputResource GetMediaLiveOutputResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaLiveOutputResource GetMediaLiveOutputResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaLiveOutputResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaLiveOutputResource (id As ResourceIdentifier) As MediaLiveOutputResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaLiveOutputResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaLiveOutputResource&#xA;override this.GetMediaLiveOutputResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaLiveOutputResource" Usage="mockableMediaArmClient.GetMediaLiveOutputResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaLiveOutputResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaLiveOutputResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaLiveOutputResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaLiveOutputResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaLiveOutputResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesAccountFilterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaServicesAccountFilterResource GetMediaServicesAccountFilterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaServicesAccountFilterResource GetMediaServicesAccountFilterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaServicesAccountFilterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesAccountFilterResource (id As ResourceIdentifier) As MediaServicesAccountFilterResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesAccountFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesAccountFilterResource&#xA;override this.GetMediaServicesAccountFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesAccountFilterResource" Usage="mockableMediaArmClient.GetMediaServicesAccountFilterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServicesAccountFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServicesAccountFilterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaServicesAccountResource GetMediaServicesAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaServicesAccountResource GetMediaServicesAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaServicesAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesAccountResource (id As ResourceIdentifier) As MediaServicesAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesAccountResource&#xA;override this.GetMediaServicesAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesAccountResource" Usage="mockableMediaArmClient.GetMediaServicesAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServicesAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServicesAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServicesAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource GetMediaServicesPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource GetMediaServicesPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaServicesPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesPrivateEndpointConnectionResource (id As ResourceIdentifier) As MediaServicesPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource&#xA;override this.GetMediaServicesPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource" Usage="mockableMediaArmClient.GetMediaServicesPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaServicesPrivateLinkResource GetMediaServicesPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaServicesPrivateLinkResource GetMediaServicesPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaServicesPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaServicesPrivateLinkResource (id As ResourceIdentifier) As MediaServicesPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaServicesPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesPrivateLinkResource&#xA;override this.GetMediaServicesPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServicesPrivateLinkResource" Usage="mockableMediaArmClient.GetMediaServicesPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServicesPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServicesPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServicesPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaTransformResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.MediaTransformResource GetMediaTransformResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.MediaTransformResource GetMediaTransformResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetMediaTransformResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMediaTransformResource (id As ResourceIdentifier) As MediaTransformResource" />
      <MemberSignature Language="F#" Value="abstract member GetMediaTransformResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaTransformResource&#xA;override this.GetMediaTransformResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaTransformResource" Usage="mockableMediaArmClient.GetMediaTransformResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaTransformResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaTransformResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaTransformResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaTransformResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaTransformResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.StreamingEndpointResource GetStreamingEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.StreamingEndpointResource GetStreamingEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetStreamingEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingEndpointResource (id As ResourceIdentifier) As StreamingEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingEndpointResource&#xA;override this.GetStreamingEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingEndpointResource" Usage="mockableMediaArmClient.GetStreamingEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingLocatorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.StreamingLocatorResource GetStreamingLocatorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.StreamingLocatorResource GetStreamingLocatorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetStreamingLocatorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingLocatorResource (id As ResourceIdentifier) As StreamingLocatorResource" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingLocatorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingLocatorResource&#xA;override this.GetStreamingLocatorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingLocatorResource" Usage="mockableMediaArmClient.GetStreamingLocatorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingLocatorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingLocatorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Media.StreamingPolicyResource GetStreamingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Media.StreamingPolicyResource GetStreamingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Mocking.MockableMediaArmClient.GetStreamingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamingPolicyResource (id As ResourceIdentifier) As StreamingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetStreamingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingPolicyResource&#xA;override this.GetStreamingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingPolicyResource" Usage="mockableMediaArmClient.GetStreamingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
