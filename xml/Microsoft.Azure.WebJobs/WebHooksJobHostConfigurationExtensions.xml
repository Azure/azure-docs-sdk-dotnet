<Type Name="WebHooksJobHostConfigurationExtensions" FullName="Microsoft.Azure.WebJobs.WebHooksJobHostConfigurationExtensions">
  <TypeSignature Language="C#" Value="public static class WebHooksJobHostConfigurationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebHooksJobHostConfigurationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.WebHooksJobHostConfigurationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WebHooksJobHostConfigurationExtensions" />
  <TypeSignature Language="F#" Value="type WebHooksJobHostConfigurationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.WebHooks</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension class used to register WebHook extensions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseWebHooks">
      <MemberSignature Language="C#" Value="public static void UseWebHooks (this Microsoft.Azure.WebJobs.JobHostConfiguration config, Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration webHooksConfig = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseWebHooks(class Microsoft.Azure.WebJobs.JobHostConfiguration config, class Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration webHooksConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.WebHooksJobHostConfigurationExtensions.UseWebHooks(Microsoft.Azure.WebJobs.JobHostConfiguration,Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UseWebHooks (config As JobHostConfiguration, Optional webHooksConfig As WebHooksConfiguration = Nothing)" />
      <MemberSignature Language="F#" Value="static member UseWebHooks : Microsoft.Azure.WebJobs.JobHostConfiguration * Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration -&gt; unit" Usage="Microsoft.Azure.WebJobs.WebHooksJobHostConfigurationExtensions.UseWebHooks (config, webHooksConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.WebHooks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Microsoft.Azure.WebJobs.JobHostConfiguration" RefType="this" />
        <Parameter Name="webHooksConfig" Type="Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration" />
      </Parameters>
      <Docs>
        <param name="config">The <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration" /> to configure.</param>
        <param name="webHooksConfig">The <see cref="T:Microsoft.Azure.WebJobs.Extensions.WebHooks.WebHooksConfiguration" /> to use.</param>
        <summary>
            Enables use of the WebHooks extensions.
            </summary>
        <remarks>
          <para>
            In addition to enabling HTTP POST invocation of functions decorated with <see cref="T:Microsoft.Azure.WebJobs.WebHookTriggerAttribute" />
            this also enables HTTP invocation of other functions as well. For functions not decorated with
            <see cref="T:Microsoft.Azure.WebJobs.WebHookTriggerAttribute" />, they can be invoked via an implicit route of the form
            {TypeName}/{FunctionName}. The body should be a valid json string representing the data that you would
            pass in to <see cref="M:Microsoft.Azure.WebJobs.JobHost.Call(System.Reflection.MethodInfo,System.Object)" />.
            </para>
          <para>
            Authentication of incoming requests is handled outside of this extension. When running under the normal
            Azure Web App host, the extension will be listening on a loopback port that the SCM host has opened for
            the job, and SCM forwards authenticated requests through (SCM credentials are required to invoke the SCM endpoints).
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
