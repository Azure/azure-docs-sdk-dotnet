<Type Name="FeatureGateAttribute" FullName="Microsoft.FeatureManagement.Mvc.FeatureGateAttribute">
  <TypeSignature Language="C#" Value="public class FeatureGateAttribute : Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute, Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FeatureGateAttribute extends Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute implements class Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class FeatureGateAttribute&#xA;Inherits ActionFilterAttribute&#xA;Implements IAsyncPageFilter" />
  <TypeSignature Language="F#" Value="type FeatureGateAttribute = class&#xA;    inherit ActionFilterAttribute&#xA;    interface IAsyncPageFilter&#xA;    interface IFilterMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
    <AssemblyVersion>2.3.0.0</AssemblyVersion>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
    <AssemblyVersion>2.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.5.1.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An attribute that can be placed on MVC controllers, controller actions, or Razor pages to require all or any of a set of feature flags to be enabled.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureGateAttribute (params object[] features);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] features) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.#ctor(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray features As Object())" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute : obj[] -&gt; Microsoft.FeatureManagement.Mvc.FeatureGateAttribute" Usage="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute features" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="features" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="features">A set of enums representing the feature flags that the attribute will represent.</param>
        <summary>
            Creates an attribute that will gate actions or pages unless all the provided feature flag(s) are enabled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureGateAttribute (params string[] featureFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] featureFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray featureFlags As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute : string[] -&gt; Microsoft.FeatureManagement.Mvc.FeatureGateAttribute" Usage="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute featureFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="featureFlags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureFlags">The names of the feature flags that the attribute will represent.</param>
        <summary>
            Creates an attribute that will gate actions or pages unless all the provided feature flag(s) are enabled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureGateAttribute (Microsoft.FeatureManagement.RequirementType requirementType, params object[] featureFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.FeatureManagement.RequirementType requirementType, object[] featureFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.#ctor(Microsoft.FeatureManagement.RequirementType,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requirementType As RequirementType, ParamArray featureFlags As Object())" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute : Microsoft.FeatureManagement.RequirementType * obj[] -&gt; Microsoft.FeatureManagement.Mvc.FeatureGateAttribute" Usage="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute (requirementType, featureFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requirementType" Type="Microsoft.FeatureManagement.RequirementType" />
        <Parameter Name="featureFlags" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requirementType">Specifies whether all or any of the provided feature flags should be enabled in order to pass.</param>
        <param name="featureFlags">A set of enums representing the feature flags that the attribute will represent.</param>
        <summary>
            Creates an attribute that can be used to gate actions or pages. The gate can be configured to require all or any of the provided feature flag(s) to pass.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureGateAttribute (Microsoft.FeatureManagement.RequirementType requirementType, params string[] featureFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.FeatureManagement.RequirementType requirementType, string[] featureFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.#ctor(Microsoft.FeatureManagement.RequirementType,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requirementType As RequirementType, ParamArray featureFlags As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute : Microsoft.FeatureManagement.RequirementType * string[] -&gt; Microsoft.FeatureManagement.Mvc.FeatureGateAttribute" Usage="new Microsoft.FeatureManagement.Mvc.FeatureGateAttribute (requirementType, featureFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requirementType" Type="Microsoft.FeatureManagement.RequirementType" />
        <Parameter Name="featureFlags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requirementType">Specifies whether all or any of the provided feature flags should be enabled in order to pass.</param>
        <param name="featureFlags">The names of the feature flags that the attribute will represent.</param>
        <summary>
            Creates an attribute that can be used to gate actions or pages. The gate can be configured to require all or any of the provided feature flag(s) to pass.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureFlags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; FeatureFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; FeatureFlags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.FeatureFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FeatureFlags As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.FeatureFlags : seq&lt;string&gt;" Usage="Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.FeatureFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the feature flags that the feature gate attribute will activate for.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionExecutionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnActionExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnActionExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnActionExecutionAsync (context As ActionExecutingContext, next As ActionExecutionDelegate) As Task" />
      <MemberSignature Language="F#" Value="override this.OnActionExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate -&gt; System.Threading.Tasks.Task" Usage="featureGateAttribute.OnActionExecutionAsync (context, next)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The context of the MVC action.</param>
        <param name="next">The action delegate.</param>
        <summary>
            Performs controller action pre-procesing to ensure that at least one of the specified feature flags are enabled.
            </summary>
        <returns>Returns a task representing the action execution unit of work.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPageHandlerExecutionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnPageHandlerExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnPageHandlerExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext,Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnPageHandlerExecutionAsync (context As PageHandlerExecutingContext, next As PageHandlerExecutionDelegate) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnPageHandlerExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext * Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate -&gt; System.Threading.Tasks.Task&#xA;override this.OnPageHandlerExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext * Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate -&gt; System.Threading.Tasks.Task" Usage="featureGateAttribute.OnPageHandlerExecutionAsync (context, next)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext,Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext" />.</param>
        <param name="next">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate" />. Invoked to execute the next page filter or the handler method itself.</param>
        <summary>
            Called asynchronously before the handler method is invoked, after model binding is complete.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion indicates the filter has executed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPageHandlerSelectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnPageHandlerSelectionAsync (Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnPageHandlerSelectionAsync(class Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnPageHandlerSelectionAsync (context As PageHandlerSelectedContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnPageHandlerSelectionAsync : Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext -&gt; System.Threading.Tasks.Task&#xA;override this.OnPageHandlerSelectionAsync : Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext -&gt; System.Threading.Tasks.Task" Usage="featureGateAttribute.OnPageHandlerSelectionAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext" />.</param>
        <summary>
            Called asynchronously after the handler method has been selected, but before model binding occurs.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion indicates the filter has executed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequirementType">
      <MemberSignature Language="C#" Value="public Microsoft.FeatureManagement.RequirementType RequirementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.FeatureManagement.RequirementType RequirementType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.RequirementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequirementType As RequirementType" />
      <MemberSignature Language="F#" Value="member this.RequirementType : Microsoft.FeatureManagement.RequirementType" Usage="Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.RequirementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FeatureManagement.RequirementType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether any or all feature flags in <see cref="P:Microsoft.FeatureManagement.Mvc.FeatureGateAttribute.FeatureFlags" /> should be enabled to pass.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
