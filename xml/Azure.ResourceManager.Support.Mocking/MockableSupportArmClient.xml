<Type Name="MockableSupportArmClient" FullName="Azure.ResourceManager.Support.Mocking.MockableSupportArmClient">
  <TypeSignature Language="C#" Value="public class MockableSupportArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSupportArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSupportArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSupportArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSupportArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProblemClassificationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.ProblemClassificationResource GetProblemClassificationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.ProblemClassificationResource GetProblemClassificationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetProblemClassificationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProblemClassificationResource (id As ResourceIdentifier) As ProblemClassificationResource" />
      <MemberSignature Language="F#" Value="abstract member GetProblemClassificationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.ProblemClassificationResource&#xA;override this.GetProblemClassificationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.ProblemClassificationResource" Usage="mockableSupportArmClient.GetProblemClassificationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.ProblemClassificationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.ProblemClassificationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.ProblemClassificationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.ProblemClassificationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.ProblemClassificationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionFileWorkspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource GetSubscriptionFileWorkspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource GetSubscriptionFileWorkspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSubscriptionFileWorkspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionFileWorkspaceResource (id As ResourceIdentifier) As SubscriptionFileWorkspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionFileWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource&#xA;override this.GetSubscriptionFileWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource" Usage="mockableSupportArmClient.GetSubscriptionFileWorkspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SubscriptionFileWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSupportTicketResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SubscriptionSupportTicketResource GetSubscriptionSupportTicketResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SubscriptionSupportTicketResource GetSubscriptionSupportTicketResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSubscriptionSupportTicketResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSupportTicketResource (id As ResourceIdentifier) As SubscriptionSupportTicketResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSupportTicketResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SubscriptionSupportTicketResource&#xA;override this.GetSubscriptionSupportTicketResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SubscriptionSupportTicketResource" Usage="mockableSupportArmClient.GetSubscriptionSupportTicketResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SubscriptionSupportTicketResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SubscriptionSupportTicketResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SubscriptionSupportTicketResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SubscriptionSupportTicketResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SubscriptionSupportTicketResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportAzureServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportAzureServiceResource GetSupportAzureServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportAzureServiceResource GetSupportAzureServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportAzureServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportAzureServiceResource (id As ResourceIdentifier) As SupportAzureServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportAzureServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportAzureServiceResource&#xA;override this.GetSupportAzureServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportAzureServiceResource" Usage="mockableSupportArmClient.GetSupportAzureServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportAzureServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportAzureServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportAzureServiceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportAzureServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportAzureServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketChatTranscriptResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketChatTranscriptResource GetSupportTicketChatTranscriptResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketChatTranscriptResource GetSupportTicketChatTranscriptResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketChatTranscriptResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketChatTranscriptResource (id As ResourceIdentifier) As SupportTicketChatTranscriptResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketChatTranscriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketChatTranscriptResource&#xA;override this.GetSupportTicketChatTranscriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketChatTranscriptResource" Usage="mockableSupportArmClient.GetSupportTicketChatTranscriptResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketChatTranscriptResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketChatTranscriptResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketChatTranscriptResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketChatTranscriptResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketChatTranscriptResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketCommunicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketCommunicationResource GetSupportTicketCommunicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketCommunicationResource GetSupportTicketCommunicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketCommunicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketCommunicationResource (id As ResourceIdentifier) As SupportTicketCommunicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketCommunicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketCommunicationResource&#xA;override this.GetSupportTicketCommunicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketCommunicationResource" Usage="mockableSupportArmClient.GetSupportTicketCommunicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketCommunicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketCommunicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketCommunicationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketCommunicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketCommunicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketFileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketFileResource GetSupportTicketFileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketFileResource GetSupportTicketFileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketFileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketFileResource (id As ResourceIdentifier) As SupportTicketFileResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketFileResource&#xA;override this.GetSupportTicketFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketFileResource" Usage="mockableSupportArmClient.GetSupportTicketFileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketFileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketFileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketFileResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketFileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketFileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketNoSubChatTranscriptResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource GetSupportTicketNoSubChatTranscriptResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource GetSupportTicketNoSubChatTranscriptResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketNoSubChatTranscriptResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketNoSubChatTranscriptResource (id As ResourceIdentifier) As SupportTicketNoSubChatTranscriptResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketNoSubChatTranscriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource&#xA;override this.GetSupportTicketNoSubChatTranscriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource" Usage="mockableSupportArmClient.GetSupportTicketNoSubChatTranscriptResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubChatTranscriptResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketNoSubCommunicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource GetSupportTicketNoSubCommunicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource GetSupportTicketNoSubCommunicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketNoSubCommunicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketNoSubCommunicationResource (id As ResourceIdentifier) As SupportTicketNoSubCommunicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketNoSubCommunicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource&#xA;override this.GetSupportTicketNoSubCommunicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource" Usage="mockableSupportArmClient.GetSupportTicketNoSubCommunicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubCommunicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportTicketNoSubFileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.SupportTicketNoSubFileResource GetSupportTicketNoSubFileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.SupportTicketNoSubFileResource GetSupportTicketNoSubFileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetSupportTicketNoSubFileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportTicketNoSubFileResource (id As ResourceIdentifier) As SupportTicketNoSubFileResource" />
      <MemberSignature Language="F#" Value="abstract member GetSupportTicketNoSubFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubFileResource&#xA;override this.GetSupportTicketNoSubFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.SupportTicketNoSubFileResource" Usage="mockableSupportArmClient.GetSupportTicketNoSubFileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.SupportTicketNoSubFileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubFileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.SupportTicketNoSubFileResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubFileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.SupportTicketNoSubFileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantFileWorkspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.TenantFileWorkspaceResource GetTenantFileWorkspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.TenantFileWorkspaceResource GetTenantFileWorkspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetTenantFileWorkspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantFileWorkspaceResource (id As ResourceIdentifier) As TenantFileWorkspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetTenantFileWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.TenantFileWorkspaceResource&#xA;override this.GetTenantFileWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.TenantFileWorkspaceResource" Usage="mockableSupportArmClient.GetTenantFileWorkspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.TenantFileWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.TenantFileWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.TenantFileWorkspaceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.TenantFileWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.TenantFileWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantSupportTicketResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Support.TenantSupportTicketResource GetTenantSupportTicketResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Support.TenantSupportTicketResource GetTenantSupportTicketResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Support.Mocking.MockableSupportArmClient.GetTenantSupportTicketResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantSupportTicketResource (id As ResourceIdentifier) As TenantSupportTicketResource" />
      <MemberSignature Language="F#" Value="abstract member GetTenantSupportTicketResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.TenantSupportTicketResource&#xA;override this.GetTenantSupportTicketResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Support.TenantSupportTicketResource" Usage="mockableSupportArmClient.GetTenantSupportTicketResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Support</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Support.TenantSupportTicketResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Support.TenantSupportTicketResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Support.TenantSupportTicketResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Support.TenantSupportTicketResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Support.TenantSupportTicketResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
