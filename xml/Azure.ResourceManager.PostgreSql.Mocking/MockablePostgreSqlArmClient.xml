<Type Name="MockablePostgreSqlArmClient" FullName="Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient">
  <TypeSignature Language="C#" Value="public class MockablePostgreSqlArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePostgreSqlArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePostgreSqlArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePostgreSqlArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
    <AssemblyVersion>1.1.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePostgreSqlArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource GetPostgreSqlConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource GetPostgreSqlConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlConfigurationResource (id As ResourceIdentifier) As PostgreSqlConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource&#xA;override this.GetPostgreSqlConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource GetPostgreSqlDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource GetPostgreSqlDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlDatabaseResource (id As ResourceIdentifier) As PostgreSqlDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource&#xA;override this.GetPostgreSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlFirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource GetPostgreSqlFirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource GetPostgreSqlFirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlFirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlFirewallRuleResource (id As ResourceIdentifier) As PostgreSqlFirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource&#xA;override this.GetPostgreSqlFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlFirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource GetPostgreSqlPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource GetPostgreSqlPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlPrivateEndpointConnectionResource (id As ResourceIdentifier) As PostgreSqlPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource&#xA;override this.GetPostgreSqlPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource GetPostgreSqlPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource GetPostgreSqlPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlPrivateLinkResource (id As ResourceIdentifier) As PostgreSqlPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource&#xA;override this.GetPostgreSqlPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServerAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource GetPostgreSqlServerAdministratorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource GetPostgreSqlServerAdministratorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlServerAdministratorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServerAdministratorResource (id As ResourceIdentifier) As PostgreSqlServerAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServerAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource&#xA;override this.GetPostgreSqlServerAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlServerAdministratorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServerKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource GetPostgreSqlServerKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource GetPostgreSqlServerKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlServerKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServerKeyResource (id As ResourceIdentifier) As PostgreSqlServerKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServerKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource&#xA;override this.GetPostgreSqlServerKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlServerKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlServerResource GetPostgreSqlServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlServerResource GetPostgreSqlServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServerResource (id As ResourceIdentifier) As PostgreSqlServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&#xA;override this.GetPostgreSqlServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource GetPostgreSqlServerSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource GetPostgreSqlServerSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServerSecurityAlertPolicyResource (id As ResourceIdentifier) As PostgreSqlServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource&#xA;override this.GetPostgreSqlServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlServerSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.PostgreSql.Models.PostgreSqlSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlVirtualNetworkRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource GetPostgreSqlVirtualNetworkRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource GetPostgreSqlVirtualNetworkRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlArmClient.GetPostgreSqlVirtualNetworkRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlVirtualNetworkRuleResource (id As ResourceIdentifier) As PostgreSqlVirtualNetworkRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlVirtualNetworkRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource&#xA;override this.GetPostgreSqlVirtualNetworkRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource" Usage="mockablePostgreSqlArmClient.GetPostgreSqlVirtualNetworkRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlVirtualNetworkRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
