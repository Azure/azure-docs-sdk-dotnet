<Type Name="MockablePostgreSqlSubscriptionResource" FullName="Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockablePostgreSqlSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePostgreSqlSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePostgreSqlSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePostgreSqlSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
    <AssemblyVersion>1.1.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePostgreSqlSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt; CheckPostgreSqlNameAvailability (Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt; CheckPostgreSqlNameAvailability(class Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.CheckPostgreSqlNameAvailability(Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlNameAvailability (content As PostgreSqlNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PostgreSqlNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlNameAvailability : Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&#xA;override this.CheckPostgreSqlNameAvailability : Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;" Usage="mockablePostgreSqlSubscriptionResource.CheckPostgreSqlNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&gt; CheckPostgreSqlNameAvailabilityAsync (Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&gt; CheckPostgreSqlNameAvailabilityAsync(class Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.CheckPostgreSqlNameAvailabilityAsync(Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlNameAvailabilityAsync (content As PostgreSqlNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PostgreSqlNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlNameAvailabilityAsync : Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&gt;&#xA;override this.CheckPostgreSqlNameAvailabilityAsync : Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&gt;" Usage="mockablePostgreSqlSubscriptionResource.CheckPostgreSqlNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.Models.PostgreSqlNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocationBasedPerformanceTiers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt; GetLocationBasedPerformanceTiers (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt; GetLocationBasedPerformanceTiers(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.GetLocationBasedPerformanceTiers(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocationBasedPerformanceTiers (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PostgreSqlPerformanceTierProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetLocationBasedPerformanceTiers : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;&#xA;override this.GetLocationBasedPerformanceTiers : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;" Usage="mockablePostgreSqlSubscriptionResource.GetLocationBasedPerformanceTiers (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/performanceTiers</description></item><item><term>Operation Id</term><description>LocationBasedPerformanceTier_List</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocationBasedPerformanceTiersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt; GetLocationBasedPerformanceTiersAsync (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt; GetLocationBasedPerformanceTiersAsync(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.GetLocationBasedPerformanceTiersAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocationBasedPerformanceTiersAsync (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PostgreSqlPerformanceTierProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetLocationBasedPerformanceTiersAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;&#xA;override this.GetLocationBasedPerformanceTiersAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;" Usage="mockablePostgreSqlSubscriptionResource.GetLocationBasedPerformanceTiersAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the performance tiers at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/performanceTiers</description></item><item><term>Operation Id</term><description>LocationBasedPerformanceTier_List</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PostgreSql.Models.PostgreSqlPerformanceTierProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt; GetPostgreSqlServers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt; GetPostgreSqlServers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.GetPostgreSqlServers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PostgreSqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;&#xA;override this.GetPostgreSqlServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;" Usage="mockablePostgreSqlSubscriptionResource.GetPostgreSqlServers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlServersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt; GetPostgreSqlServersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt; GetPostgreSqlServersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.Mocking.MockablePostgreSqlSubscriptionResource.GetPostgreSqlServersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlServersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PostgreSqlServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;&#xA;override this.GetPostgreSqlServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;" Usage="mockablePostgreSqlSubscriptionResource.GetPostgreSqlServersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.PostgreSqlServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/servers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2017-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PostgreSql.PostgreSqlServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
