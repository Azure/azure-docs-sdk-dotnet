<Type Name="MockablePostgreSqlFlexibleServersSubscriptionResource" FullName="Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockablePostgreSqlFlexibleServersSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePostgreSqlFlexibleServersSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePostgreSqlFlexibleServersSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePostgreSqlFlexibleServersSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
    <AssemblyVersion>1.1.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePostgreSqlFlexibleServersSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlFlexibleServerNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt; CheckPostgreSqlFlexibleServerNameAvailability (Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt; CheckPostgreSqlFlexibleServerNameAvailability(class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailability(Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlFlexibleServerNameAvailability (content As PostgreSqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PostgreSqlFlexibleServerNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlFlexibleServerNameAvailability : Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&#xA;override this.CheckPostgreSqlFlexibleServerNameAvailability : Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlFlexibleServerNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckPostgreSqlFlexibleServerNameAvailabilityAsync (Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckPostgreSqlFlexibleServerNameAvailabilityAsync(class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityAsync(Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlFlexibleServerNameAvailabilityAsync (content As PostgreSqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PostgreSqlFlexibleServerNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlFlexibleServerNameAvailabilityAsync : Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;&#xA;override this.CheckPostgreSqlFlexibleServerNameAvailabilityAsync : Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt; CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation (Azure.Core.AzureLocation locationName, Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt; CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation(Azure.Core.AzureLocation,Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation (locationName As AzureLocation, content As PostgreSqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PostgreSqlFlexibleServerNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&#xA;override this.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocation (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityWithLocation_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync (Azure.Core.AzureLocation locationName, Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync(Azure.Core.AzureLocation,Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync (locationName As AzureLocation, content As PostgreSqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PostgreSqlFlexibleServerNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;&#xA;override this.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.CheckPostgreSqlFlexibleServerNameAvailabilityWithLocationAsync (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityWithLocation_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteLocationBasedCapabilities">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt; ExecuteLocationBasedCapabilities (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt; ExecuteLocationBasedCapabilities(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteLocationBasedCapabilities(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteLocationBasedCapabilities (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PostgreSqlFlexibleServerCapabilityProperties)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteLocationBasedCapabilities : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;&#xA;override this.ExecuteLocationBasedCapabilities : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteLocationBasedCapabilities (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>LocationBasedCapabilities_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteLocationBasedCapabilitiesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt; ExecuteLocationBasedCapabilitiesAsync (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt; ExecuteLocationBasedCapabilitiesAsync(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteLocationBasedCapabilitiesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteLocationBasedCapabilitiesAsync (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PostgreSqlFlexibleServerCapabilityProperties)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteLocationBasedCapabilitiesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;&#xA;override this.ExecuteLocationBasedCapabilitiesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteLocationBasedCapabilitiesAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>LocationBasedCapabilities_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualNetworkSubnetUsage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt; ExecuteVirtualNetworkSubnetUsage (Azure.Core.AzureLocation locationName, Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt; ExecuteVirtualNetworkSubnetUsage(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteVirtualNetworkSubnetUsage(Azure.Core.AzureLocation,Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualNetworkSubnetUsage (locationName As AzureLocation, postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter As PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualNetworkSubnetUsage : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&#xA;override this.ExecuteVirtualNetworkSubnetUsage : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteVirtualNetworkSubnetUsage (locationName, postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description></item><item><term>Operation Id</term><description>VirtualNetworkSubnetUsage_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualNetworkSubnetUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt; ExecuteVirtualNetworkSubnetUsageAsync (Azure.Core.AzureLocation locationName, Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt; ExecuteVirtualNetworkSubnetUsageAsync(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteVirtualNetworkSubnetUsageAsync(Azure.Core.AzureLocation,Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualNetworkSubnetUsageAsync (locationName As AzureLocation, postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter As PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualNetworkSubnetUsageAsync : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;&#xA;override this.ExecuteVirtualNetworkSubnetUsageAsync : Azure.Core.AzureLocation * Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.ExecuteVirtualNetworkSubnetUsageAsync (locationName, postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" Type="Azure.ResourceManager.PostgreSql.FlexibleServers.Models.PostgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description></item><item><term>Operation Id</term><description>VirtualNetworkSubnetUsage_Execute</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="postgreSqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlFlexibleServers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt; GetPostgreSqlFlexibleServers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt; GetPostgreSqlFlexibleServers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.GetPostgreSqlFlexibleServers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlFlexibleServers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PostgreSqlFlexibleServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlFlexibleServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;&#xA;override this.GetPostgreSqlFlexibleServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.GetPostgreSqlFlexibleServers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgreSqlFlexibleServersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt; GetPostgreSqlFlexibleServersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt; GetPostgreSqlFlexibleServersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PostgreSql.FlexibleServers.Mocking.MockablePostgreSqlFlexibleServersSubscriptionResource.GetPostgreSqlFlexibleServersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgreSqlFlexibleServersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PostgreSqlFlexibleServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPostgreSqlFlexibleServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;&#xA;override this.GetPostgreSqlFlexibleServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;" Usage="mockablePostgreSqlFlexibleServersSubscriptionResource.GetPostgreSqlFlexibleServersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PostgreSql</AssemblyName>
        <AssemblyVersion>1.1.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PostgreSql.FlexibleServers.PostgreSqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
