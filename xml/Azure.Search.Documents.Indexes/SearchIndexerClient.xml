<Type Name="SearchIndexerClient" FullName="Azure.Search.Documents.Indexes.SearchIndexerClient">
  <TypeSignature Language="C#" Value="public class SearchIndexerClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchIndexerClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.SearchIndexerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchIndexerClient" />
  <TypeSignature Language="F#" Value="type SearchIndexerClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure Cognitive Search client that can be used to manage and query
            indexes and documents, as well as manage other resources, on a Search
            Service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchIndexerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchIndexerClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.SearchIndexerClient : Uri * Azure.AzureKeyCredential -&gt; Azure.Search.Documents.Indexes.SearchIndexerClient" Usage="new Azure.Search.Documents.Indexes.SearchIndexerClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexerClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchIndexerClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Search.Documents.SearchClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Search.Documents.SearchClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As SearchClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.SearchIndexerClient : Uri * Azure.AzureKeyCredential * Azure.Search.Documents.SearchClientOptions -&gt; Azure.Search.Documents.Indexes.SearchIndexerClient" Usage="new Azure.Search.Documents.Indexes.SearchIndexerClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexerClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
        <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; CreateDataSourceConnection (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; CreateDataSourceConnection(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataSourceConnection (dataSourceConnection As SearchIndexerDataSourceConnection, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSourceConnection)" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&#xA;override this.CreateDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;" Usage="searchIndexerClient.CreateDataSourceConnection (dataSourceConnection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source connection.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; CreateDataSourceConnectionAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; CreateDataSourceConnectionAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataSourceConnectionAsync (dataSourceConnection As SearchIndexerDataSourceConnection, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSourceConnection))" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&#xA;override this.CreateDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;" Usage="searchIndexerClient.CreateDataSourceConnectionAsync (dataSourceConnection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source connection.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; CreateIndexer (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; CreateIndexer(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexer (indexer As SearchIndexer, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&#xA;override this.CreateIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;" Usage="searchIndexerClient.CreateIndexer (indexer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; CreateIndexerAsync (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; CreateIndexerAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexerAsync (indexer As SearchIndexer, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&#xA;override this.CreateIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;" Usage="searchIndexerClient.CreateIndexerAsync (indexer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateDataSourceConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; CreateOrUpdateDataSourceConnection (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; CreateOrUpdateDataSourceConnection(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateDataSourceConnection (dataSourceConnection As SearchIndexerDataSourceConnection, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSourceConnection)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&#xA;override this.CreateOrUpdateDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;" Usage="searchIndexerClient.CreateOrUpdateDataSourceConnection (dataSourceConnection, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source or updates an existing data source connection.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateDataSourceConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; CreateOrUpdateDataSourceConnectionAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; CreateOrUpdateDataSourceConnectionAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateDataSourceConnectionAsync (dataSourceConnection As SearchIndexerDataSourceConnection, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSourceConnection))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&#xA;override this.CreateOrUpdateDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;" Usage="searchIndexerClient.CreateOrUpdateDataSourceConnectionAsync (dataSourceConnection, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source or updates an existing data source connection.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; CreateOrUpdateIndexer (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; CreateOrUpdateIndexer(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexer (indexer As SearchIndexer, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&#xA;override this.CreateOrUpdateIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;" Usage="searchIndexerClient.CreateOrUpdateIndexer (indexer, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; CreateOrUpdateIndexerAsync (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; CreateOrUpdateIndexerAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexerAsync (indexer As SearchIndexer, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&#xA;override this.CreateOrUpdateIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;" Usage="searchIndexerClient.CreateOrUpdateIndexerAsync (indexer, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; CreateOrUpdateSkillset (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; CreateOrUpdateSkillset(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSkillset (skillset As SearchIndexerSkillset, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&#xA;override this.CreateOrUpdateSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;" Usage="searchIndexerClient.CreateOrUpdateSkillset (skillset, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; CreateOrUpdateSkillsetAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; CreateOrUpdateSkillsetAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSkillsetAsync (skillset As SearchIndexerSkillset, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.CreateOrUpdateSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchIndexerClient.CreateOrUpdateSkillsetAsync (skillset, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; CreateSkillset (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; CreateSkillset(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSkillset (skillset As SearchIndexerSkillset, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member CreateSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&#xA;override this.CreateSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;" Usage="searchIndexerClient.CreateSkillset (skillset, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; CreateSkillsetAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; CreateSkillsetAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSkillsetAsync (skillset As SearchIndexerSkillset, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member CreateSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.CreateSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchIndexerClient.CreateSkillsetAsync (skillset, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSourceConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDataSourceConnection (string dataSourceConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDataSourceConnection(string dataSourceConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSourceConnection (dataSourceConnectionName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSourceConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDataSourceConnection : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteDataSourceConnection (dataSourceConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnectionName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source connection.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSourceConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDataSourceConnection (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDataSourceConnection(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSourceConnection (dataSourceConnection As SearchIndexerDataSourceConnection, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDataSourceConnection : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteDataSourceConnection (dataSourceConnection, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source connection.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSourceConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDataSourceConnectionAsync (string dataSourceConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDataSourceConnectionAsync(string dataSourceConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSourceConnectionAsync (dataSourceConnectionName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSourceConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDataSourceConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteDataSourceConnectionAsync (dataSourceConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnectionName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source connection.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSourceConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDataSourceConnectionAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDataSourceConnectionAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection dataSourceConnection, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSourceConnectionAsync (dataSourceConnection As SearchIndexerDataSourceConnection, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDataSourceConnectionAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteDataSourceConnectionAsync (dataSourceConnection, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnection" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnection">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source connection.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndexer (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndexer(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexer (indexerName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteIndexer (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndexer (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndexer(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexer (indexer As SearchIndexer, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndexer : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteIndexer (indexer, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexerAsync (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexerAsync(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexerAsync (indexerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteIndexerAsync (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexerAsync (Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexerAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexer indexer, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexerAsync (indexer As SearchIndexer, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexerAsync : Azure.Search.Documents.Indexes.Models.SearchIndexer * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteIndexerAsync (indexer, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Indexes.Models.SearchIndexer" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSkillset (string skillsetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSkillset(string skillsetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillset(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillset (skillsetName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillset : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSkillset : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteSkillset (skillsetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSkillset (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSkillset(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillset (skillset As SearchIndexerSkillset, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSkillset : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.DeleteSkillset (skillset, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSkillsetAsync (string skillsetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSkillsetAsync(string skillsetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillsetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillsetAsync (skillsetName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillsetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSkillsetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteSkillsetAsync (skillsetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSkillsetAsync (Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSkillsetAsync(class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset skillset, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillsetAsync (skillset As SearchIndexerSkillset, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSkillsetAsync : Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.DeleteSkillsetAsync (skillset, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SearchIndexerClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Search.Documents.Indexes.SearchIndexerClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI endpoint of the Search service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; GetDataSourceConnection (string dataSourceConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt; GetDataSourceConnection(string dataSourceConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnection (dataSourceConnectionName As String, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSourceConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&#xA;override this.GetDataSourceConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;" Usage="searchIndexerClient.GetDataSourceConnection (dataSourceConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnectionName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; GetDataSourceConnectionAsync (string dataSourceConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; GetDataSourceConnectionAsync(string dataSourceConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnectionAsync (dataSourceConnectionName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSourceConnection))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&#xA;override this.GetDataSourceConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;" Usage="searchIndexerClient.GetDataSourceConnectionAsync (dataSourceConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceConnectionName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnectionNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; GetDataSourceConnectionNames (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; GetDataSourceConnectionNames(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionNames(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnectionNames (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnectionNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&#xA;override this.GetDataSourceConnectionNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;" Usage="searchIndexerClient.GetDataSourceConnectionNames cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data source connection names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnectionNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt; GetDataSourceConnectionNamesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt; GetDataSourceConnectionNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionNamesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnectionNamesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnectionNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;override this.GetDataSourceConnectionNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;" Usage="searchIndexerClient.GetDataSourceConnectionNamesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data source connection names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; GetDataSourceConnections (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt; GetDataSourceConnections(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnections(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnections (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexerDataSourceConnection))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnections : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&#xA;override this.GetDataSourceConnections : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;" Usage="searchIndexerClient.GetDataSourceConnections cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data source connections.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&gt; GetDataSourceConnectionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&gt; GetDataSourceConnectionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceConnectionsAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexerDataSourceConnection)))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceConnectionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&gt;&#xA;override this.GetDataSourceConnectionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&gt;" Usage="searchIndexerClient.GetDataSourceConnectionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data source connections.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; GetIndexer (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt; GetIndexer(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexer (indexerName As String, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&#xA;override this.GetIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;" Usage="searchIndexerClient.GetIndexer (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; GetIndexerAsync (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; GetIndexerAsync(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerAsync (indexerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&#xA;override this.GetIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;" Usage="searchIndexerClient.GetIndexerAsync (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; GetIndexerNames (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; GetIndexerNames(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerNames(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerNames (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&#xA;override this.GetIndexerNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;" Usage="searchIndexerClient.GetIndexerNames cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexer names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt; GetIndexerNamesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt; GetIndexerNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerNamesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerNamesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;override this.GetIndexerNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;" Usage="searchIndexerClient.GetIndexerNamesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexer names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; GetIndexers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt; GetIndexers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexers (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexers : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&#xA;override this.GetIndexers : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;" Usage="searchIndexerClient.GetIndexers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexers.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&gt; GetIndexersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&gt; GetIndexersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexersAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexer)))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexersAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&gt;&#xA;override this.GetIndexersAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&gt;" Usage="searchIndexerClient.GetIndexersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexer&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexers.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt; GetIndexerStatus (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt; GetIndexerStatus(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerStatus (indexerName As String, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&#xA;override this.GetIndexerStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;" Usage="searchIndexerClient.GetIndexerStatus (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the current status and execution history of an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&gt; GetIndexerStatusAsync (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&gt; GetIndexerStatusAsync(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerStatusAsync (indexerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerStatus))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&gt;&#xA;override this.GetIndexerStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&gt;" Usage="searchIndexerClient.GetIndexerStatusAsync (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the current status and execution history of an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; GetSkillset (string skillsetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt; GetSkillset(string skillsetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillset(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillset (skillsetName As String, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member GetSkillset : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&#xA;override this.GetSkillset : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;" Usage="searchIndexerClient.GetSkillset (skillsetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; GetSkillsetAsync (string skillsetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; GetSkillsetAsync(string skillsetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetAsync (skillsetName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.GetSkillsetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchIndexerClient.GetSkillsetAsync (skillsetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; GetSkillsetNames (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; GetSkillsetNames(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetNames(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetNames (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&#xA;override this.GetSkillsetNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;" Usage="searchIndexerClient.GetSkillsetNames cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillset names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt; GetSkillsetNamesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt; GetSkillsetNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetNamesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetNamesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;override this.GetSkillsetNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;" Usage="searchIndexerClient.GetSkillsetNamesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillset names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsets">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; GetSkillsets (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt; GetSkillsets(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsets(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsets (Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsets : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.GetSkillsets : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchIndexerClient.GetSkillsets cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillsets.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&gt; GetSkillsetsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&gt; GetSkillsetsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetsAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexerSkillset)))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&gt;&#xA;override this.GetSkillsetsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&gt;" Usage="searchIndexerClient.GetSkillsetsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillsets.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ResetIndexer (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ResetIndexer(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.ResetIndexer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetIndexer (indexerName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member ResetIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ResetIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.ResetIndexer (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to reset.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ResetIndexerAsync (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ResetIndexerAsync(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.ResetIndexerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetIndexerAsync (indexerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ResetIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ResetIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.ResetIndexerAsync (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to reset.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RunIndexer (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RunIndexer(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.RunIndexer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunIndexer (indexerName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member RunIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RunIndexer : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexerClient.RunIndexer (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to run.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Run an indexer now.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RunIndexerAsync (string indexerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RunIndexerAsync(string indexerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexerClient.RunIndexerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunIndexerAsync (indexerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RunIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RunIndexerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexerClient.RunIndexerAsync (indexerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to run.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Run an indexer now.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public virtual string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SearchIndexerClient.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceName As String" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="Azure.Search.Documents.Indexes.SearchIndexerClient.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
