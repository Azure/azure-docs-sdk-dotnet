<Type Name="SearchIndexClient" FullName="Azure.Search.Documents.Indexes.SearchIndexClient">
  <TypeSignature Language="C#" Value="public class SearchIndexClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchIndexClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.SearchIndexClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchIndexClient" />
  <TypeSignature Language="F#" Value="type SearchIndexClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure Cognitive Search client that can be used to manage indexes on a Search service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchIndexClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchIndexClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.SearchIndexClient : Uri * Azure.AzureKeyCredential -&gt; Azure.Search.Documents.Indexes.SearchIndexClient" Usage="new Azure.Search.Documents.Indexes.SearchIndexClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchIndexClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Search.Documents.SearchClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Search.Documents.SearchClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As SearchClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.SearchIndexClient : Uri * Azure.AzureKeyCredential * Azure.Search.Documents.SearchClientOptions -&gt; Azure.Search.Documents.Indexes.SearchIndexClient" Usage="new Azure.Search.Documents.Indexes.SearchIndexClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
        <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeText">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt; AnalyzeText (string indexName, Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt; AnalyzeText(string indexName, class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.AnalyzeText(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnalyzeText (indexName As String, options As AnalyzeTextOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of AnalyzedTokenInfo))" />
      <MemberSignature Language="F#" Value="abstract member AnalyzeText : string * Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&#xA;override this.AnalyzeText : string * Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;" Usage="searchIndexClient.AnalyzeText (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the index used to test an analyzer.</param>
        <param name="options">The <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" /> containing the text and analyzer or analyzer components to test.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&gt; AnalyzeTextAsync (string indexName, Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&gt; AnalyzeTextAsync(string indexName, class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.AnalyzeTextAsync(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnalyzeTextAsync (indexName As String, options As AnalyzeTextOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of AnalyzedTokenInfo)))" />
      <MemberSignature Language="F#" Value="abstract member AnalyzeTextAsync : string * Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&gt;&#xA;override this.AnalyzeTextAsync : string * Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&gt;" Usage="searchIndexClient.AnalyzeTextAsync (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the index used to test an analyzer.</param>
        <param name="options">The <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" /> containing the text and analyzer or analyzer components to test.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt; CreateIndex (Azure.Search.Documents.Indexes.Models.SearchIndex index, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt; CreateIndex(class Azure.Search.Documents.Indexes.Models.SearchIndex index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (index As SearchIndex, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&#xA;override this.CreateIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;" Usage="searchIndexClient.CreateIndex (index, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; CreateIndexAsync (Azure.Search.Documents.Indexes.Models.SearchIndex index, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; CreateIndexAsync(class Azure.Search.Documents.Indexes.Models.SearchIndex index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexAsync (index As SearchIndex, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;&#xA;override this.CreateIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;" Usage="searchIndexClient.CreateIndexAsync (index, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt; CreateOrUpdateIndex (Azure.Search.Documents.Indexes.Models.SearchIndex index, bool allowIndexDowntime = false, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt; CreateOrUpdateIndex(class Azure.Search.Documents.Indexes.Models.SearchIndex index, bool allowIndexDowntime, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndex (index As SearchIndex, Optional allowIndexDowntime As Boolean = false, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&#xA;override this.CreateOrUpdateIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;" Usage="searchIndexClient.CreateOrUpdateIndex (index, allowIndexDowntime, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="allowIndexDowntime" Type="System.Boolean" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create or update.</param>
        <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index or updates an existing index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; CreateOrUpdateIndexAsync (Azure.Search.Documents.Indexes.Models.SearchIndex index, bool allowIndexDowntime = false, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; CreateOrUpdateIndexAsync(class Azure.Search.Documents.Indexes.Models.SearchIndex index, bool allowIndexDowntime, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexAsync (index As SearchIndex, Optional allowIndexDowntime As Boolean = false, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;&#xA;override this.CreateOrUpdateIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;" Usage="searchIndexClient.CreateOrUpdateIndexAsync (index, allowIndexDowntime, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="allowIndexDowntime" Type="System.Boolean" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create or update.</param>
        <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index or updates an existing index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt; CreateOrUpdateSynonymMap (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt; CreateOrUpdateSynonymMap(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSynonymMap (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&#xA;override this.CreateOrUpdateSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;" Usage="searchIndexClient.CreateOrUpdateSynonymMap (synonymMap, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; CreateOrUpdateSynonymMapAsync (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; CreateOrUpdateSynonymMapAsync(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSynonymMapAsync (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&#xA;override this.CreateOrUpdateSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;" Usage="searchIndexClient.CreateOrUpdateSynonymMapAsync (synonymMap, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt; CreateSynonymMap (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt; CreateSynonymMap(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSynonymMap (synonymMap As SynonymMap, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member CreateSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&#xA;override this.CreateSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;" Usage="searchIndexClient.CreateSynonymMap (synonymMap, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; CreateSynonymMapAsync (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; CreateSynonymMapAsync(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSynonymMapAsync (synonymMap As SynonymMap, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member CreateSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&#xA;override this.CreateSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;" Usage="searchIndexClient.CreateSynonymMapAsync (synonymMap, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndex (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndex(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndex(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndex (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndex : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndex : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexClient.DeleteIndex (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndex (Azure.Search.Documents.Indexes.Models.SearchIndex index, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndex(class Azure.Search.Documents.Indexes.Models.SearchIndex index, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndex (index As SearchIndex, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndex : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexClient.DeleteIndex (index, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexAsync (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexAsync(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndexAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexAsync (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexClient.DeleteIndexAsync (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexAsync (Azure.Search.Documents.Indexes.Models.SearchIndex index, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexAsync(class Azure.Search.Documents.Indexes.Models.SearchIndex index, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexAsync (index As SearchIndex, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexAsync : Azure.Search.Documents.Indexes.Models.SearchIndex * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexClient.DeleteIndexAsync (index, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Indexes.Models.SearchIndex" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSynonymMap (string synonymMapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSynonymMap(string synonymMapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMap(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMap (synonymMapName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMap : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSynonymMap : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexClient.DeleteSynonymMap (synonymMapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">The name of a <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSynonymMap (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSynonymMap(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMap (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSynonymMap : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchIndexClient.DeleteSynonymMap (synonymMap, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSynonymMapAsync (string synonymMapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSynonymMapAsync(string synonymMapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMapAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMapAsync (synonymMapName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSynonymMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexClient.DeleteSynonymMapAsync (synonymMapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">The name of a <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSynonymMapAsync (Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSynonymMapAsync(class Azure.Search.Documents.Indexes.Models.SynonymMap synonymMap, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMapAsync (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSynonymMapAsync : Azure.Search.Documents.Indexes.Models.SynonymMap * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchIndexClient.DeleteSynonymMapAsync (synonymMap, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Indexes.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SearchIndexClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Search.Documents.Indexes.SearchIndexClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI endpoint of the Search service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndex (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndex(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndex(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndex (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndex : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&#xA;override this.GetIndex : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;" Usage="searchIndexClient.GetIndex (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; GetIndexAsync (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt; GetIndexAsync(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexAsync (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;&#xA;override this.GetIndexAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;" Usage="searchIndexClient.GetIndexAsync (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndexes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndexes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&#xA;override this.GetIndexes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;" Usage="searchIndexClient.GetIndexes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexes.
            </summary>
        <returns>The <see cref="T:Azure.Pageable`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndexesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndex&gt; GetIndexesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;&#xA;override this.GetIndexesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;" Usage="searchIndexClient.GetIndexesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Search.Documents.Indexes.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexes.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetIndexNames (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetIndexNames(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexNames(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexNames (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexNames : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetIndexNames : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="searchIndexClient.GetIndexNames cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all index names.
            </summary>
        <returns>The <see cref="T:Azure.Pageable`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexNamesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetIndexNamesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetIndexNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexNamesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexNamesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexNamesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetIndexNamesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="searchIndexClient.GetIndexNamesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all index names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt; GetIndexStatistics (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt; GetIndexStatistics(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexStatistics(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexStatistics (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchIndexStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexStatistics : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&#xA;override this.GetIndexStatistics : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;" Usage="searchIndexClient.GetIndexStatistics (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&gt; GetIndexStatisticsAsync (string indexName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&gt; GetIndexStatisticsAsync(string indexName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexStatisticsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexStatisticsAsync (indexName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchIndexStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexStatisticsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&gt;&#xA;override this.GetIndexStatisticsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&gt;" Usage="searchIndexClient.GetIndexStatisticsAsync (indexName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchIndexStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSearchClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Search.Documents.SearchClient GetSearchClient (string indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Search.Documents.SearchClient GetSearchClient(string indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSearchClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchClient (indexName As String) As SearchClient" />
      <MemberSignature Language="F#" Value="abstract member GetSearchClient : string -&gt; Azure.Search.Documents.SearchClient&#xA;override this.GetSearchClient : string -&gt; Azure.Search.Documents.SearchClient" Usage="searchIndexClient.GetSearchClient indexName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.SearchClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the desired Search Index.</param>
        <summary>
            Get a <see cref="T:Azure.Search.Documents.SearchClient" /> for the given <paramref name="indexName" /> to use for document operations like querying or adding documents to a Search Index.
            </summary>
        <returns>A SearchClient for the desired Search Index.</returns>
        <remarks>
            The same request <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> (including authentication and any other configuration) will be used for the
            <see cref="T:Azure.Search.Documents.SearchClient" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="indexName" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="indexName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt; GetServiceStatistics (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt; GetServiceStatistics(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetServiceStatistics(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceStatistics (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SearchServiceStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceStatistics : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&#xA;override this.GetServiceStatistics : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;" Usage="searchIndexClient.GetServiceStatistics cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
          <para>
            Gets service level statistics for a Search service.
            </para>
          <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
          <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
        </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&gt; GetServiceStatisticsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&gt; GetServiceStatisticsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetServiceStatisticsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceStatisticsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SearchServiceStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&gt;&#xA;override this.GetServiceStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&gt;" Usage="searchIndexClient.GetServiceStatisticsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SearchServiceStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
          <para>
            Gets service level statistics for a Search service.
            </para>
          <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
          <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
        </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt; GetSynonymMap (string synonymMapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt; GetSynonymMap(string synonymMapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMap(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMap (synonymMapName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&#xA;override this.GetSynonymMap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;" Usage="searchIndexClient.GetSynonymMap (synonymMapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; GetSynonymMapAsync (string synonymMapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; GetSynonymMapAsync(string synonymMapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapAsync (synonymMapName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&#xA;override this.GetSynonymMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;" Usage="searchIndexClient.GetSynonymMapAsync (synonymMapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to get.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapNames">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; GetSynonymMapNames (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; GetSynonymMapNames(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapNames(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapNames (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&#xA;override this.GetSynonymMapNames : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;" Usage="searchIndexClient.GetSynonymMapNames cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym map names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt; GetSynonymMapNamesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt; GetSynonymMapNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapNamesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapNamesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;override this.GetSynonymMapNamesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;&gt;" Usage="searchIndexClient.GetSynonymMapNamesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym map names.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> names.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMaps">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; GetSynonymMaps (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt; GetSynonymMaps(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMaps(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMaps (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMaps : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&#xA;override this.GetSynonymMaps : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;" Usage="searchIndexClient.GetSynonymMaps cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym maps.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&gt; GetSynonymMapsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&gt; GetSynonymMapsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of SynonymMap)))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&gt;&#xA;override this.GetSynonymMapsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&gt;" Usage="searchIndexClient.GetSynonymMapsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Indexes.Models.SynonymMap&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym maps.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public virtual string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SearchIndexClient.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceName As String" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="Azure.Search.Documents.Indexes.SearchIndexClient.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
