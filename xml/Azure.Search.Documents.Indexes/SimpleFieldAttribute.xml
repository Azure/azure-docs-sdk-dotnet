<Type Name="SimpleFieldAttribute" FullName="Azure.Search.Documents.Indexes.SimpleFieldAttribute">
  <TypeSignature Language="C#" Value="public class SimpleFieldAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleFieldAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.SimpleFieldAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleFieldAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type SimpleFieldAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.2.0.0</AssemblyVersion>
    <AssemblyVersion>11.2.1.0</AssemblyVersion>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Attributes a simple field using a primitive type or a collection of a primitive type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleFieldAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.SimpleFieldAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFacetable">
      <MemberSignature Language="C#" Value="public bool IsFacetable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFacetable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFacetable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFacetable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFacetable : bool with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFacetable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilterable">
      <MemberSignature Language="C#" Value="public bool IsFilterable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFilterable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFilterable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFilterable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFilterable : bool with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFilterable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHidden As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the field is returned in search results. The default is false.
            A key field where <see cref="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey" /> is true must have this property set to false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool IsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the field is the key field. The default is false.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public bool IsSortable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSortable" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsSortable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSortable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSortable : bool with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsSortable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
        <AssemblyVersion>11.2.1.0</AssemblyVersion>
        <AssemblyVersion>11.3.0.0</AssemblyVersion>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to enable the field can be referenced in <c>$orderby</c> expressions. The default is false.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default Azure Cognitive Search sorts results by score, but in many experiences users may want to sort by fields in the documents.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizerName">
      <MemberSignature Language="C#" Value="public string NormalizerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NormalizerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.NormalizerName" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizerName As String" />
      <MemberSignature Language="F#" Value="member this.NormalizerName : string with get, set" Usage="Azure.Search.Documents.Indexes.SimpleFieldAttribute.NormalizerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the normalizer to use for the field.
            This option can be used only with fields with filterable, sortable, or facetable enabled. Once the normalizer is chosen, it cannot be changed for the field.
            Must be null for complex fields.
            </summary>
        <value>String values from <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalNormalizerName.Values">LexicalAnalyzerName</see>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
