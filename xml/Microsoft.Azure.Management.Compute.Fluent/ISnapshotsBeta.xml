<Type Name="ISnapshotsBeta" FullName="Microsoft.Azure.Management.Compute.Fluent.ISnapshotsBeta">
  <TypeSignature Language="C#" Value="public interface ISnapshotsBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISnapshotsBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Compute.Fluent.ISnapshotsBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISnapshotsBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type ISnapshotsBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to managed snapshot management API in Azure.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GrantAccessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GrantAccessAsync (string resourceGroupName, string snapshotName, Microsoft.Azure.Management.Compute.Fluent.Models.AccessLevel accessLevel, int accessDuration, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GrantAccessAsync(string resourceGroupName, string snapshotName, class Microsoft.Azure.Management.Compute.Fluent.Models.AccessLevel accessLevel, int32 accessDuration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.ISnapshotsBeta.GrantAccessAsync(System.String,System.String,Microsoft.Azure.Management.Compute.Fluent.Models.AccessLevel,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GrantAccessAsync : string * string * Microsoft.Azure.Management.Compute.Fluent.Models.AccessLevel * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iSnapshotsBeta.GrantAccessAsync (resourceGroupName, snapshotName, accessLevel, accessDuration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="snapshotName" Type="System.String" />
        <Parameter Name="accessLevel" Type="Microsoft.Azure.Management.Compute.Fluent.Models.AccessLevel" />
        <Parameter Name="accessDuration" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="snapshotName">The snapshot name.</param>
        <param name="accessLevel">Access level.</param>
        <param name="accessDuration">Access duration.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Grants access to the snapshot asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <returna>Representation of the deferred computation of this call returning a read-only SAS URI to the snapshot.</returna>
        <return>A representation of the deferred computation of this call returning a read-only SAS URI to the snapshot.</return>
      </Docs>
    </Member>
    <Member MemberName="RevokeAccessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RevokeAccessAsync (string resourceGroupName, string snapName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RevokeAccessAsync(string resourceGroupName, string snapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.ISnapshotsBeta.RevokeAccessAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RevokeAccessAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iSnapshotsBeta.RevokeAccessAsync (resourceGroupName, snapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="snapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="snapName">The snapshot name.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Revoke access granted to the snapshot asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the deferred computation of this call.</return>
      </Docs>
    </Member>
  </Members>
</Type>