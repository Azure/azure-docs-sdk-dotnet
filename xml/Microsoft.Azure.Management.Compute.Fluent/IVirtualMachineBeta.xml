<Type Name="IVirtualMachineBeta" FullName="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta">
  <TypeSignature Language="C#" Value="public interface IVirtualMachineBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVirtualMachineBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVirtualMachineBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IVirtualMachineBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An immutable client-side representation of an Azure virtual machine.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailabilityZones">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt; AvailabilityZones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt; AvailabilityZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.AvailabilityZones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailabilityZones As ISet(Of AvailabilityZoneId)" />
      <MemberSignature Language="F#" Value="member this.AvailabilityZones : System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.AvailabilityZones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the availability zones assigned to the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManagedServiceIdentityEnabled">
      <MemberSignature Language="C#" Value="public bool IsManagedServiceIdentityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManagedServiceIdentityEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.IsManagedServiceIdentityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManagedServiceIdentityEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsManagedServiceIdentityEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.IsManagedServiceIdentityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if Managed Service Identity is enabled for the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedServiceIdentityType">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt; ManagedServiceIdentityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt; ManagedServiceIdentityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.ManagedServiceIdentityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedServiceIdentityType As Nullable(Of ResourceIdentityType)" />
      <MemberSignature Language="F#" Value="member this.ManagedServiceIdentityType : Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.ManagedServiceIdentityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of Managed Service Identity used for the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunCommand">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunCommand (Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunCommand(class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunCommand(Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunCommand (inputCommand As RunCommandInput) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunCommand : Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineBeta.RunCommand inputCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputCommand" Type="Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput" />
      </Parameters>
      <Docs>
        <param name="inputCommand">Command input.</param>
        <summary>
            Run commands in the virtual machine.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunCommandAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunCommandAsync (Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunCommandAsync(class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunCommandAsync(Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunCommandAsync : Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineBeta.RunCommandAsync (inputCommand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputCommand" Type="Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="inputCommand">Command input.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run commands in the virtual machine asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunPowerShellScript">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunPowerShellScript (System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunPowerShellScript(class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunPowerShellScript(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Function RunPowerShellScript (scriptLines As IList(Of String), scriptParameters As IList(Of RunCommandInputParameter)) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunPowerShellScript : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineBeta.RunPowerShellScript (scriptLines, scriptParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="scriptLines">PowerShell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <summary>
            Run shell script in a virtual machine.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of PowerShell script execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunPowerShellScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunPowerShellScriptAsync (System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunPowerShellScriptAsync(class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunPowerShellScriptAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunPowerShellScriptAsync : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineBeta.RunPowerShellScriptAsync (scriptLines, scriptParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptLines">PowerShell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run shell script in the virtual machine asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunShellScript">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunShellScript (System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunShellScript(class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunShellScript(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Function RunShellScript (scriptLines As IList(Of String), scriptParameters As IList(Of RunCommandInputParameter)) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunShellScript : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineBeta.RunShellScript (scriptLines, scriptParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="scriptLines">Shell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <summary>
            Run shell script in the virtual machine.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of shell script execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunShellScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunShellScriptAsync (System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunShellScriptAsync(class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.RunShellScriptAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunShellScriptAsync : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineBeta.RunShellScriptAsync (scriptLines, scriptParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptLines">Shell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run shell script in the virtual machine asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="SystemAssignedManagedServiceIdentityPrincipalId">
      <MemberSignature Language="C#" Value="public string SystemAssignedManagedServiceIdentityPrincipalId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemAssignedManagedServiceIdentityPrincipalId As String" />
      <MemberSignature Language="F#" Value="member this.SystemAssignedManagedServiceIdentityPrincipalId : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the System Assigned (Local) Managed Service Identity specific Active Directory service principal ID
            assigned to the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemAssignedManagedServiceIdentityTenantId">
      <MemberSignature Language="C#" Value="public string SystemAssignedManagedServiceIdentityTenantId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemAssignedManagedServiceIdentityTenantId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.SystemAssignedManagedServiceIdentityTenantId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemAssignedManagedServiceIdentityTenantId As String" />
      <MemberSignature Language="F#" Value="member this.SystemAssignedManagedServiceIdentityTenantId : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.SystemAssignedManagedServiceIdentityTenantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the System Assigned (Local) Managed Service Identity specific Active Directory tenant ID assigned
            to the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAssignedManagedServiceIdentityIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; UserAssignedManagedServiceIdentityIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; UserAssignedManagedServiceIdentityIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.UserAssignedManagedServiceIdentityIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAssignedManagedServiceIdentityIds As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.UserAssignedManagedServiceIdentityIds : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineBeta.UserAssignedManagedServiceIdentityIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource ids of User Assigned Managed Service Identities associated with the virtual machine.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>