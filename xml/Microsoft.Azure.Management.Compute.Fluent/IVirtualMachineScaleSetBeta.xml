<Type Name="IVirtualMachineScaleSetBeta" FullName="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta">
  <TypeSignature Language="C#" Value="public interface IVirtualMachineScaleSetBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVirtualMachineScaleSetBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVirtualMachineScaleSetBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IVirtualMachineScaleSetBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An immutable client-side representation of an Azure virtual machine scale set.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailabilityZones">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt; AvailabilityZones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt; AvailabilityZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.AvailabilityZones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailabilityZones As ISet(Of AvailabilityZoneId)" />
      <MemberSignature Language="F#" Value="member this.AvailabilityZones : System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.AvailabilityZones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.AvailabilityZoneId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the availability zones assigned to virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BootDiagnosticsStorageUri">
      <MemberSignature Language="C#" Value="public string BootDiagnosticsStorageUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BootDiagnosticsStorageUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.BootDiagnosticsStorageUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BootDiagnosticsStorageUri As String" />
      <MemberSignature Language="F#" Value="member this.BootDiagnosticsStorageUri : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.BootDiagnosticsStorageUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the storage blob endpoint uri if boot diagnostics is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAcceleratedNetworkingEnabled">
      <MemberSignature Language="C#" Value="public bool IsAcceleratedNetworkingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAcceleratedNetworkingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsAcceleratedNetworkingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAcceleratedNetworkingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAcceleratedNetworkingEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsAcceleratedNetworkingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if accelerated networking is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBootDiagnosticsEnabled">
      <MemberSignature Language="C#" Value="public bool IsBootDiagnosticsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBootDiagnosticsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsBootDiagnosticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBootDiagnosticsEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsBootDiagnosticsEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsBootDiagnosticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if boot diagnostics is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIpForwardingEnabled">
      <MemberSignature Language="C#" Value="public bool IsIpForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIpForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsIpForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIpForwardingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIpForwardingEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsIpForwardingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if ip forwarding is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManagedServiceIdentityEnabled">
      <MemberSignature Language="C#" Value="public bool IsManagedServiceIdentityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManagedServiceIdentityEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsManagedServiceIdentityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManagedServiceIdentityEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsManagedServiceIdentityEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsManagedServiceIdentityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if Managed Service Identity is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSinglePlacementGroupEnabled">
      <MemberSignature Language="C#" Value="public bool IsSinglePlacementGroupEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSinglePlacementGroupEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsSinglePlacementGroupEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSinglePlacementGroupEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSinglePlacementGroupEnabled : bool" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.IsSinglePlacementGroupEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets true if single placement group is enabled for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedOSDiskStorageAccountType">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.StorageAccountTypes ManagedOSDiskStorageAccountType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Compute.Fluent.Models.StorageAccountTypes ManagedOSDiskStorageAccountType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.ManagedOSDiskStorageAccountType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedOSDiskStorageAccountType As StorageAccountTypes" />
      <MemberSignature Language="F#" Value="member this.ManagedOSDiskStorageAccountType : Microsoft.Azure.Management.Compute.Fluent.Models.StorageAccountTypes" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.ManagedOSDiskStorageAccountType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.StorageAccountTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the storage account type of the OS managed disk. A null value will be returned if the
            virtual machine scale set is based on un-managed disk.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedServiceIdentityType">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt; ManagedServiceIdentityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt; ManagedServiceIdentityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.ManagedServiceIdentityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedServiceIdentityType As Nullable(Of ResourceIdentityType)" />
      <MemberSignature Language="F#" Value="member this.ManagedServiceIdentityType : Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.ManagedServiceIdentityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Management.Compute.Fluent.Models.ResourceIdentityType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of Managed Service Identity used for the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityGroupId">
      <MemberSignature Language="C#" Value="public string NetworkSecurityGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkSecurityGroupId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.NetworkSecurityGroupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkSecurityGroupId As String" />
      <MemberSignature Language="F#" Value="member this.NetworkSecurityGroupId : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.NetworkSecurityGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the network security group ARM id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunCommandInVMInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunCommandInVMInstance (string vmId, Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunCommandInVMInstance(string vmId, class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunCommandInVMInstance(System.String,Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunCommandInVMInstance (vmId As String, inputCommand As RunCommandInput) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunCommandInVMInstance : string * Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineScaleSetBeta.RunCommandInVMInstance (vmId, inputCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="inputCommand" Type="Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="inputCommand">Command input.</param>
        <summary>
            Run commands in a virtual machine instance in a scale set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunCommandVMInstanceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunCommandVMInstanceAsync (string vmId, Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunCommandVMInstanceAsync(string vmId, class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput inputCommand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunCommandVMInstanceAsync(System.String,Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunCommandVMInstanceAsync : string * Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineScaleSetBeta.RunCommandVMInstanceAsync (vmId, inputCommand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="inputCommand" Type="Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="inputCommand">Command input.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run commands in a virtual machine instance in a scale set asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunPowerShellScriptInVMInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunPowerShellScriptInVMInstance (string vmId, System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunPowerShellScriptInVMInstance(string vmId, class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunPowerShellScriptInVMInstance(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Function RunPowerShellScriptInVMInstance (vmId As String, scriptLines As IList(Of String), scriptParameters As IList(Of RunCommandInputParameter)) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunPowerShellScriptInVMInstance : string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineScaleSetBeta.RunPowerShellScriptInVMInstance (vmId, scriptLines, scriptParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="scriptLines">PowerShell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <summary>
            Run PowerShell script in a virtual machine instance in a scale set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of PowerShell script execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunPowerShellScriptInVMInstanceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunPowerShellScriptInVMInstanceAsync (string vmId, System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunPowerShellScriptInVMInstanceAsync(string vmId, class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunPowerShellScriptInVMInstanceAsync(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunPowerShellScriptInVMInstanceAsync : string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineScaleSetBeta.RunPowerShellScriptInVMInstanceAsync (vmId, scriptLines, scriptParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="scriptLines">PowerShell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run PowerShell in a virtual machine instance in a scale set asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunShellScriptInVMInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunShellScriptInVMInstance (string vmId, System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner RunShellScriptInVMInstance(string vmId, class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunShellScriptInVMInstance(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Function RunShellScriptInVMInstance (vmId As String, scriptLines As IList(Of String), scriptParameters As IList(Of RunCommandInputParameter)) As RunCommandResultInner" />
      <MemberSignature Language="F#" Value="abstract member RunShellScriptInVMInstance : string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; -&gt; Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner" Usage="iVirtualMachineScaleSetBeta.RunShellScriptInVMInstance (vmId, scriptLines, scriptParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="scriptLines">Shell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <summary>
            Run shell script in a virtual machine instance in a scale set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Result of shell script execution.</return>
      </Docs>
    </Member>
    <Member MemberName="RunShellScriptInVMInstanceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunShellScriptInVMInstanceAsync (string vmId, System.Collections.Generic.IList&lt;string&gt; scriptLines, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt; RunShellScriptInVMInstanceAsync(string vmId, class System.Collections.Generic.IList`1&lt;string&gt; scriptLines, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; scriptParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.RunShellScriptInVMInstanceAsync(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RunShellScriptInVMInstanceAsync : string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;" Usage="iVirtualMachineScaleSetBeta.RunShellScriptInVMInstanceAsync (vmId, scriptLines, scriptParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandResultInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="scriptLines" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="scriptParameters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Compute.Fluent.Models.RunCommandInputParameter&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vmId">The virtual machine instance id.</param>
        <param name="scriptLines">Shell script lines.</param>
        <param name="scriptParameters">Script parameters.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Run shell script in a virtual machine instance in a scale set asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Handle to the asynchronous execution.</return>
      </Docs>
    </Member>
    <Member MemberName="SystemAssignedManagedServiceIdentityPrincipalId">
      <MemberSignature Language="C#" Value="public string SystemAssignedManagedServiceIdentityPrincipalId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemAssignedManagedServiceIdentityPrincipalId As String" />
      <MemberSignature Language="F#" Value="member this.SystemAssignedManagedServiceIdentityPrincipalId : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.SystemAssignedManagedServiceIdentityPrincipalId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the System Assigned (Local) Managed Service Identity specific Active Directory service principal ID
            assigned to the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemAssignedManagedServiceIdentityTenantId">
      <MemberSignature Language="C#" Value="public string SystemAssignedManagedServiceIdentityTenantId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemAssignedManagedServiceIdentityTenantId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.SystemAssignedManagedServiceIdentityTenantId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemAssignedManagedServiceIdentityTenantId As String" />
      <MemberSignature Language="F#" Value="member this.SystemAssignedManagedServiceIdentityTenantId : string" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.SystemAssignedManagedServiceIdentityTenantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the System Assigned (Local) Managed Service Identity specific Active Directory tenant ID
            assigned to the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAssignedManagedServiceIdentityIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; UserAssignedManagedServiceIdentityIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; UserAssignedManagedServiceIdentityIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.UserAssignedManagedServiceIdentityIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAssignedManagedServiceIdentityIds As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.UserAssignedManagedServiceIdentityIds : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.UserAssignedManagedServiceIdentityIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource ids of User Assigned Managed Service Identities associated with the virtual machine scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachineEvictionPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineEvictionPolicyTypes VirtualMachineEvictionPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineEvictionPolicyTypes VirtualMachineEvictionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachineEvictionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualMachineEvictionPolicy As VirtualMachineEvictionPolicyTypes" />
      <MemberSignature Language="F#" Value="member this.VirtualMachineEvictionPolicy : Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineEvictionPolicyTypes" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachineEvictionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineEvictionPolicyTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the eviction policy of the virtual machines in the scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachinePriority">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachinePriorityTypes VirtualMachinePriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachinePriorityTypes VirtualMachinePriority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachinePriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualMachinePriority As VirtualMachinePriorityTypes" />
      <MemberSignature Language="F#" Value="member this.VirtualMachinePriority : Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachinePriorityTypes" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachinePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachinePriorityTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the priority of virtual machines in the scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachinePublicIpConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineScaleSetPublicIPAddressConfiguration VirtualMachinePublicIpConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineScaleSetPublicIPAddressConfiguration VirtualMachinePublicIpConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachinePublicIpConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualMachinePublicIpConfig As VirtualMachineScaleSetPublicIPAddressConfiguration" />
      <MemberSignature Language="F#" Value="member this.VirtualMachinePublicIpConfig : Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineScaleSetPublicIPAddressConfiguration" Usage="Microsoft.Azure.Management.Compute.Fluent.IVirtualMachineScaleSetBeta.VirtualMachinePublicIpConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.Models.VirtualMachineScaleSetPublicIPAddressConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the public ip configuration of virtual machines in the scale set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>