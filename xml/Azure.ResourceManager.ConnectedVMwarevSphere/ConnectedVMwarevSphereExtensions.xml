<Type Name="ConnectedVMwarevSphereExtensions" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions">
  <TypeSignature Language="C#" Value="public static class ConnectedVMwarevSphereExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConnectedVMwarevSphereExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ConnectedVMwarevSphereExtensions" />
  <TypeSignature Language="F#" Value="type ConnectedVMwarevSphereExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ConnectedVMwarevSphere. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetVCenterInventoryItemResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource GetVCenterInventoryItemResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource GetVCenterInventoryItemResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVCenterInventoryItemResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVCenterInventoryItemResource (client As ArmClient, id As ResourceIdentifier) As VCenterInventoryItemResource" />
      <MemberSignature Language="F#" Value="static member GetVCenterInventoryItemResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVCenterInventoryItemResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVCenterInventoryItemResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVmInstanceGuestAgentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource GetVmInstanceGuestAgentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource GetVmInstanceGuestAgentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVmInstanceGuestAgentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVmInstanceGuestAgentResource (client As ArmClient, id As ResourceIdentifier) As VmInstanceGuestAgentResource" />
      <MemberSignature Language="F#" Value="static member GetVmInstanceGuestAgentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVmInstanceGuestAgentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVmInstanceGuestAgentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVmInstanceHybridIdentityMetadataResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource GetVmInstanceHybridIdentityMetadataResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource GetVmInstanceHybridIdentityMetadataResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVmInstanceHybridIdentityMetadataResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVmInstanceHybridIdentityMetadataResource (client As ArmClient, id As ResourceIdentifier) As VmInstanceHybridIdentityMetadataResource" />
      <MemberSignature Language="F#" Value="static member GetVmInstanceHybridIdentityMetadataResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVmInstanceHybridIdentityMetadataResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVmInstanceHybridIdentityMetadataResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareCluster(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareCluster (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareCluster : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareCluster (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareCluster(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusterAsync (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareClusterResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusterAsync (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource GetVMwareClusterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource GetVMwareClusterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusterResource (client As ArmClient, id As ResourceIdentifier) As VMwareClusterResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareClusterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusters (resourceGroupResource As ResourceGroupResource) As VMwareClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareClusterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusters" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareClusterResources and their operations over a VMwareClusterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareClusters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareClusters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClusters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of clusters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/clusters</description></item><item><term>Operation Id</term><description>Clusters_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareClustersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareClustersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClustersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClustersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareClustersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareClustersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of clusters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/clusters</description></item><item><term>Operation Id</term><description>Clusters_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastore">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastore(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastore (resourceGroupResource As ResourceGroupResource, datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareDatastoreResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastore : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastore (resourceGroupResource, datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastore(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoreAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastoreAsync (resourceGroupResource As ResourceGroupResource, datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareDatastoreResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastoreAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoreAsync (resourceGroupResource, datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastoreAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource GetVMwareDatastoreResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource GetVMwareDatastoreResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoreResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastoreResource (client As ArmClient, id As ResourceIdentifier) As VMwareDatastoreResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastoreResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoreResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareDatastoreResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastores">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastores(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastores (resourceGroupResource As ResourceGroupResource) As VMwareDatastoreCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastores : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastores resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareDatastoreResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastores" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareDatastoreResources and their operations over a VMwareDatastoreResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastores">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastores (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastores(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastores(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastores (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareDatastoreResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastores : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastores (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of datastores in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/datastores</description></item><item><term>Operation Id</term><description>Datastores_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareDatastores(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoresAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastoresAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastoresAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoresAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastoresAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareDatastoreResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastoresAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareDatastoresAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of datastores in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/datastores</description></item><item><term>Operation Id</term><description>Datastores_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareDatastores(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHost">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHost(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHost (resourceGroupResource As ResourceGroupResource, hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareHostResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareHost : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHost (resourceGroupResource, hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHost(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHostAsync (resourceGroupResource As ResourceGroupResource, hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareHostResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareHostAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostAsync (resourceGroupResource, hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHostAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource GetVMwareHostResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource GetVMwareHostResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHostResource (client As ArmClient, id As ResourceIdentifier) As VMwareHostResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareHostResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareHostResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHosts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHosts(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHosts (resourceGroupResource As ResourceGroupResource) As VMwareHostCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareHosts : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHosts resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareHostResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHosts" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareHostResources and their operations over a VMwareHostResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHosts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHosts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHosts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHosts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHosts (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareHostResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareHosts : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHosts (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of hosts in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/hosts</description></item><item><term>Operation Id</term><description>Hosts_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareHosts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHostsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHostsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHostsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareHostResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareHostsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareHostsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of hosts in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/hosts</description></item><item><term>Operation Id</term><description>Hosts_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareHosts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePool (resourceGroupResource As ResourceGroupResource, resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareResourcePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePool (resourceGroupResource, resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePool(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt; GetVMwareResourcePoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt; GetVMwareResourcePoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePoolAsync (resourceGroupResource As ResourceGroupResource, resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareResourcePoolResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolAsync (resourceGroupResource, resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePoolAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource GetVMwareResourcePoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource GetVMwareResourcePoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePoolResource (client As ArmClient, id As ResourceIdentifier) As VMwareResourcePoolResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareResourcePoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection GetVMwareResourcePools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection GetVMwareResourcePools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePools (resourceGroupResource As ResourceGroupResource) As VMwareResourcePoolCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareResourcePoolResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePools" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareResourcePoolResources and their operations over a VMwareResourcePoolResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareResourcePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of resourcePools in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools</description></item><item><term>Operation Id</term><description>ResourcePools_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareResourcePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareResourcePoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareResourcePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareResourcePoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareResourcePoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of resourcePools in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools</description></item><item><term>Operation Id</term><description>ResourcePools_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareResourcePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenter">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenter (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenter(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenter(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCenter (resourceGroupResource As ResourceGroupResource, vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVCenterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCenter : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenter (resourceGroupResource, vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenter(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt; GetVMwareVCenterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt; GetVMwareVCenterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCenterAsync (resourceGroupResource As ResourceGroupResource, vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVCenterResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCenterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenterAsync (resourceGroupResource, vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource GetVMwareVCenterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource GetVMwareVCenterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCenterResource (client As ArmClient, id As ResourceIdentifier) As VMwareVCenterResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCenterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVCenterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection GetVMwareVCenters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection GetVMwareVCenters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCenters (resourceGroupResource As ResourceGroupResource) As VMwareVCenterCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCenters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareVCenterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenters" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareVCenterResources and their operations over a VMwareVCenterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCenters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareVCenterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCenters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCenters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of vCenters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/vcenters</description></item><item><term>Operation Id</term><description>VCenters_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVCenters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCentersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCentersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCentersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCentersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVCentersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareVCenterResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVCentersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVCentersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of vCenters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/vcenters</description></item><item><term>Operation Id</term><description>VCenters_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVCenters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetwork">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetwork (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetwork(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetwork(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetwork (resourceGroupResource As ResourceGroupResource, virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetwork : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetwork (resourceGroupResource, virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetwork(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt; GetVMwareVirtualNetworkAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt; GetVMwareVirtualNetworkAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworkAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetworkAsync (resourceGroupResource As ResourceGroupResource, virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetworkAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworkAsync (resourceGroupResource, virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworkAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource GetVMwareVirtualNetworkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource GetVMwareVirtualNetworkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetworkResource (client As ArmClient, id As ResourceIdentifier) As VMwareVirtualNetworkResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetworkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVirtualNetworkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworks">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection GetVMwareVirtualNetworks (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection GetVMwareVirtualNetworks(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworks(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetworks (resourceGroupResource As ResourceGroupResource) As VMwareVirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetworks : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworks resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareVirtualNetworkResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworks" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareVirtualNetworkResources and their operations over a VMwareVirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworks">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetworks (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetworks(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworks(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetworks (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetworks : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworks (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of virtualNetworks in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks</description></item><item><term>Operation Id</term><description>VirtualNetworks_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVirtualNetworks(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworksAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetworksAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetworksAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworksAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVirtualNetworksAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVirtualNetworksAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVirtualNetworksAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of virtualNetworks in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks</description></item><item><term>Operation Id</term><description>VirtualNetworks_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVirtualNetworks(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmInstance">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstance (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstance(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmInstance(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmInstance (client As ArmClient, scope As ResourceIdentifier) As VMwareVmInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmInstance : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmInstance (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets an object representing a VMwareVmInstanceResource along with the instance operations that can be performed on it in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmInstance(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmInstanceResource (client As ArmClient, id As ResourceIdentifier) As VMwareVmInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplate (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplate(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplate(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplate (resourceGroupResource As ResourceGroupResource, virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVmTemplateResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplate : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplate (resourceGroupResource, virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplate(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt; GetVMwareVmTemplateAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt; GetVMwareVmTemplateAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplateAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplateAsync (resourceGroupResource As ResourceGroupResource, virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVmTemplateResource))" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplateAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplateAsync (resourceGroupResource, virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplateAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplateResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource GetVMwareVmTemplateResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource GetVMwareVmTemplateResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplateResource (client As ArmClient, id As ResourceIdentifier) As VMwareVmTemplateResource" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplateResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplateResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmTemplateResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplates">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection GetVMwareVmTemplates (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection GetVMwareVmTemplates(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplates(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplates (resourceGroupResource As ResourceGroupResource) As VMwareVmTemplateCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplates : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplates resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of VMwareVmTemplateResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplates" /> instead.</description></item></summary>
        <returns> An object representing collection of VMwareVmTemplateResources and their operations over a VMwareVmTemplateResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplates">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplates (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplates(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplates(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplates (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VMwareVmTemplateResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplates : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplates (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of virtualMachineTemplates in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVmTemplates(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplatesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplatesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplatesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplatesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareVmTemplatesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VMwareVmTemplateResource)" />
      <MemberSignature Language="F#" Value="static member GetVMwareVmTemplatesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ConnectedVMwarevSphereExtensions.GetVMwareVmTemplatesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of virtualMachineTemplates in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_List</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereSubscriptionResource.GetVMwareVmTemplates(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
