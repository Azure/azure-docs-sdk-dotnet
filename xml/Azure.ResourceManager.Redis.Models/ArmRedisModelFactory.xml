<Type Name="ArmRedisModelFactory" FullName="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmRedisModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmRedisModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmRedisModelFactory" />
  <TypeSignature Language="F#" Value="type ArmRedisModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportRdbContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.ExportRdbContent ExportRdbContent (string format = default, string prefix = default, string container = default, string preferredDataArchiveAuthMethod = default, string storageSubscriptionId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.ExportRdbContent ExportRdbContent(string format, string prefix, string container, string preferredDataArchiveAuthMethod, string storageSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.ExportRdbContent(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExportRdbContent (Optional format As String = Nothing, Optional prefix As String = Nothing, Optional container As String = Nothing, Optional preferredDataArchiveAuthMethod As String = Nothing, Optional storageSubscriptionId As String = Nothing) As ExportRdbContent" />
      <MemberSignature Language="F#" Value="static member ExportRdbContent : string * string * string * string * string -&gt; Azure.ResourceManager.Redis.Models.ExportRdbContent" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.ExportRdbContent (format, prefix, container, preferredDataArchiveAuthMethod, storageSubscriptionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.ExportRdbContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="prefix" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="container" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="preferredDataArchiveAuthMethod" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="storageSubscriptionId" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="format"> File format. </param>
        <param name="prefix"> Prefix to use for exported files. </param>
        <param name="container"> Container name to export to. </param>
        <param name="preferredDataArchiveAuthMethod"> Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="storageSubscriptionId"> Subscription id of the storage container for data to be exported using ManagedIdentity. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.ExportRdbContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.ExportRdbContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisAccessKeys">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisAccessKeys RedisAccessKeys (string primaryKey = default, string secondaryKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisAccessKeys RedisAccessKeys(string primaryKey, string secondaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisAccessKeys(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisAccessKeys (Optional primaryKey As String = Nothing, Optional secondaryKey As String = Nothing) As RedisAccessKeys" />
      <MemberSignature Language="F#" Value="static member RedisAccessKeys : string * string -&gt; Azure.ResourceManager.Redis.Models.RedisAccessKeys" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisAccessKeys (primaryKey, secondaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisAccessKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKey" Type="System.String" />
        <Parameter Name="secondaryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primaryKey"> The current primary key that clients can use to authenticate with Redis cache. </param>
        <param name="secondaryKey"> The current secondary key that clients can use to authenticate with Redis cache. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisAccessKeys" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisAccessKeys" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCacheAccessPolicyAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData RedisCacheAccessPolicyAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Redis.Models.AccessPolicyAssignmentProvisioningState? provisioningState = default, Guid? objectId = default, string objectIdAlias = default, string accessPolicyName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData RedisCacheAccessPolicyAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.AccessPolicyAssignmentProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; objectId, string objectIdAlias, string accessPolicyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCacheAccessPolicyAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Redis.Models.AccessPolicyAssignmentProvisioningState},System.Nullable{System.Guid},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCacheAccessPolicyAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of AccessPolicyAssignmentProvisioningState) = Nothing, Optional objectId As Nullable(Of Guid) = Nothing, Optional objectIdAlias As String = Nothing, Optional accessPolicyName As String = Nothing) As RedisCacheAccessPolicyAssignmentData" />
      <MemberSignature Language="F#" Value="static member RedisCacheAccessPolicyAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyAssignmentProvisioningState&gt; * Nullable&lt;Guid&gt; * string * string -&gt; Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCacheAccessPolicyAssignmentData (id, name, resourceType, systemData, provisioningState, objectId, objectIdAlias, accessPolicyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyAssignmentProvisioningState&gt;" />
        <Parameter Name="objectId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="objectIdAlias" Type="System.String" />
        <Parameter Name="accessPolicyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> Provisioning state of an access policy assignment set. </param>
        <param name="objectId"> Object Id to assign access policy to. </param>
        <param name="objectIdAlias"> User friendly name for object id. Also represents username for token based authentication. </param>
        <param name="accessPolicyName"> The name of the access policy that is being assigned. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisCacheAccessPolicyAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCacheAccessPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisCacheAccessPolicyData RedisCacheAccessPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Redis.Models.AccessPolicyProvisioningState? provisioningState = default, Azure.ResourceManager.Redis.Models.AccessPolicyType? typePropertiesType = default, string permissions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisCacheAccessPolicyData RedisCacheAccessPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.AccessPolicyProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.AccessPolicyType&gt; typePropertiesType, string permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCacheAccessPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Redis.Models.AccessPolicyProvisioningState},System.Nullable{Azure.ResourceManager.Redis.Models.AccessPolicyType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCacheAccessPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of AccessPolicyProvisioningState) = Nothing, Optional typePropertiesType As Nullable(Of AccessPolicyType) = Nothing, Optional permissions As String = Nothing) As RedisCacheAccessPolicyData" />
      <MemberSignature Language="F#" Value="static member RedisCacheAccessPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyProvisioningState&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyType&gt; * string -&gt; Azure.ResourceManager.Redis.RedisCacheAccessPolicyData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCacheAccessPolicyData (id, name, resourceType, systemData, provisioningState, typePropertiesType, permissions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisCacheAccessPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyProvisioningState&gt;" />
        <Parameter Name="typePropertiesType" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.AccessPolicyType&gt;" />
        <Parameter Name="permissions" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> Provisioning state of access policy. </param>
        <param name="typePropertiesType"> Built-In or Custom access policy. </param>
        <param name="permissions"> Permissions for the access policy. Learn how to configure permissions at https://aka.ms/redis/AADPreRequisites. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisCacheAccessPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisCacheAccessPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCommonConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration (bool? isRdbBackupEnabled = default, string rdbBackupFrequency = default, int? rdbBackupMaxSnapshotCount = default, string rdbStorageConnectionString = default, bool? isAofBackupEnabled = default, string aofStorageConnectionString0 = default, string aofStorageConnectionString1 = default, string maxFragmentationMemoryReserved = default, string maxMemoryPolicy = default, string maxMemoryReserved = default, string maxMemoryDelta = default, string maxClients = default, string preferredDataArchiveAuthMethod = default, string preferredDataPersistenceAuthMethod = default, string zonalConfiguration = default, string authNotRequired = default, string storageSubscriptionId = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration(valuetype System.Nullable`1&lt;bool&gt; isRdbBackupEnabled, string rdbBackupFrequency, valuetype System.Nullable`1&lt;int32&gt; rdbBackupMaxSnapshotCount, string rdbStorageConnectionString, valuetype System.Nullable`1&lt;bool&gt; isAofBackupEnabled, string aofStorageConnectionString0, string aofStorageConnectionString1, string maxFragmentationMemoryReserved, string maxMemoryPolicy, string maxMemoryReserved, string maxMemoryDelta, string maxClients, string preferredDataArchiveAuthMethod, string preferredDataPersistenceAuthMethod, string zonalConfiguration, string authNotRequired, string storageSubscriptionId, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCommonConfiguration (Optional isRdbBackupEnabled As Nullable(Of Boolean) = Nothing, Optional rdbBackupFrequency As String = Nothing, Optional rdbBackupMaxSnapshotCount As Nullable(Of Integer) = Nothing, Optional rdbStorageConnectionString As String = Nothing, Optional isAofBackupEnabled As Nullable(Of Boolean) = Nothing, Optional aofStorageConnectionString0 As String = Nothing, Optional aofStorageConnectionString1 As String = Nothing, Optional maxFragmentationMemoryReserved As String = Nothing, Optional maxMemoryPolicy As String = Nothing, Optional maxMemoryReserved As String = Nothing, Optional maxMemoryDelta As String = Nothing, Optional maxClients As String = Nothing, Optional preferredDataArchiveAuthMethod As String = Nothing, Optional preferredDataPersistenceAuthMethod As String = Nothing, Optional zonalConfiguration As String = Nothing, Optional authNotRequired As String = Nothing, Optional storageSubscriptionId As String = Nothing, Optional additionalProperties As IDictionary(Of String, BinaryData) = Nothing) As RedisCommonConfiguration" />
      <MemberSignature Language="F#" Value="static member RedisCommonConfiguration : Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * string * string * string * string * string * string * string * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration (isRdbBackupEnabled, rdbBackupFrequency, rdbBackupMaxSnapshotCount, rdbStorageConnectionString, isAofBackupEnabled, aofStorageConnectionString0, aofStorageConnectionString1, maxFragmentationMemoryReserved, maxMemoryPolicy, maxMemoryReserved, maxMemoryDelta, maxClients, preferredDataArchiveAuthMethod, preferredDataPersistenceAuthMethod, zonalConfiguration, authNotRequired, storageSubscriptionId, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisCommonConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isRdbBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rdbBackupFrequency" Type="System.String" />
        <Parameter Name="rdbBackupMaxSnapshotCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rdbStorageConnectionString" Type="System.String" />
        <Parameter Name="isAofBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="aofStorageConnectionString0" Type="System.String" />
        <Parameter Name="aofStorageConnectionString1" Type="System.String" />
        <Parameter Name="maxFragmentationMemoryReserved" Type="System.String" />
        <Parameter Name="maxMemoryPolicy" Type="System.String" />
        <Parameter Name="maxMemoryReserved" Type="System.String" />
        <Parameter Name="maxMemoryDelta" Type="System.String" />
        <Parameter Name="maxClients" Type="System.String" />
        <Parameter Name="preferredDataArchiveAuthMethod" Type="System.String" />
        <Parameter Name="preferredDataPersistenceAuthMethod" Type="System.String" />
        <Parameter Name="zonalConfiguration" Type="System.String" />
        <Parameter Name="authNotRequired" Type="System.String" />
        <Parameter Name="storageSubscriptionId" Type="System.String" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="isRdbBackupEnabled"> Specifies whether the rdb backup is enabled. </param>
        <param name="rdbBackupFrequency"> Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440). </param>
        <param name="rdbBackupMaxSnapshotCount"> Specifies the maximum number of snapshots for rdb backup. </param>
        <param name="rdbStorageConnectionString"> The storage account connection string for storing rdb file. </param>
        <param name="isAofBackupEnabled"> Specifies whether the aof backup is enabled. </param>
        <param name="aofStorageConnectionString0"> First storage account connection string. </param>
        <param name="aofStorageConnectionString1"> Second storage account connection string. </param>
        <param name="maxFragmentationMemoryReserved"> Value in megabytes reserved for fragmentation per shard. </param>
        <param name="maxMemoryPolicy"> The eviction strategy used when your data won't fit within its memory limit. </param>
        <param name="maxMemoryReserved"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxMemoryDelta"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxClients"> The max clients config. </param>
        <param name="preferredDataArchiveAuthMethod"> Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="preferredDataPersistenceAuthMethod"> Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="zonalConfiguration"> Zonal Configuration. </param>
        <param name="authNotRequired"> Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view. </param>
        <param name="storageSubscriptionId"> SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of RedisCommonConfiguration. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCommonConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration (bool? isRdbBackupEnabled, string rdbBackupFrequency, int? rdbBackupMaxSnapshotCount, string rdbStorageConnectionString, bool? isAofBackupEnabled, string aofStorageConnectionString0, string aofStorageConnectionString1, string maxFragmentationMemoryReserved, string maxMemoryPolicy, string maxMemoryReserved, string maxMemoryDelta, string maxClients, string preferredDataArchiveAuthMethod, string preferredDataPersistenceAuthMethod, string zonalConfiguration, string authNotRequired, string storageSubscriptionId, string isAadEnabled, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; additionalProperties);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration(valuetype System.Nullable`1&lt;bool&gt; isRdbBackupEnabled, string rdbBackupFrequency, valuetype System.Nullable`1&lt;int32&gt; rdbBackupMaxSnapshotCount, string rdbStorageConnectionString, valuetype System.Nullable`1&lt;bool&gt; isAofBackupEnabled, string aofStorageConnectionString0, string aofStorageConnectionString1, string maxFragmentationMemoryReserved, string maxMemoryPolicy, string maxMemoryReserved, string maxMemoryDelta, string maxClients, string preferredDataArchiveAuthMethod, string preferredDataPersistenceAuthMethod, string zonalConfiguration, string authNotRequired, string storageSubscriptionId, string isAadEnabled, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCommonConfiguration (isRdbBackupEnabled As Nullable(Of Boolean), rdbBackupFrequency As String, rdbBackupMaxSnapshotCount As Nullable(Of Integer), rdbStorageConnectionString As String, isAofBackupEnabled As Nullable(Of Boolean), aofStorageConnectionString0 As String, aofStorageConnectionString1 As String, maxFragmentationMemoryReserved As String, maxMemoryPolicy As String, maxMemoryReserved As String, maxMemoryDelta As String, maxClients As String, preferredDataArchiveAuthMethod As String, preferredDataPersistenceAuthMethod As String, zonalConfiguration As String, authNotRequired As String, storageSubscriptionId As String, isAadEnabled As String, additionalProperties As IDictionary(Of String, BinaryData)) As RedisCommonConfiguration" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member RedisCommonConfiguration : Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * string * string * string * string * string * string * string * string * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration (isRdbBackupEnabled, rdbBackupFrequency, rdbBackupMaxSnapshotCount, rdbStorageConnectionString, isAofBackupEnabled, aofStorageConnectionString0, aofStorageConnectionString1, maxFragmentationMemoryReserved, maxMemoryPolicy, maxMemoryReserved, maxMemoryDelta, maxClients, preferredDataArchiveAuthMethod, preferredDataPersistenceAuthMethod, zonalConfiguration, authNotRequired, storageSubscriptionId, isAadEnabled, additionalProperties)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration (bool? isRdbBackupEnabled = default, string rdbBackupFrequency = default, int? rdbBackupMaxSnapshotCount = default, string rdbStorageConnectionString = default, bool? isAofBackupEnabled = default, string aofStorageConnectionString0 = default, string aofStorageConnectionString1 = default, string maxFragmentationMemoryReserved = default, string maxMemoryPolicy = default, string maxMemoryReserved = default, string maxMemoryDelta = default, string maxClients = default, string preferredDataArchiveAuthMethod = default, string preferredDataPersistenceAuthMethod = default, string zonalConfiguration = default, string authNotRequired = default, string storageSubscriptionId = default, string isAadEnabled = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; additionalProperties = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCommonConfiguration (Optional isRdbBackupEnabled As Nullable(Of Boolean) = Nothing, Optional rdbBackupFrequency As String = Nothing, Optional rdbBackupMaxSnapshotCount As Nullable(Of Integer) = Nothing, Optional rdbStorageConnectionString As String = Nothing, Optional isAofBackupEnabled As Nullable(Of Boolean) = Nothing, Optional aofStorageConnectionString0 As String = Nothing, Optional aofStorageConnectionString1 As String = Nothing, Optional maxFragmentationMemoryReserved As String = Nothing, Optional maxMemoryPolicy As String = Nothing, Optional maxMemoryReserved As String = Nothing, Optional maxMemoryDelta As String = Nothing, Optional maxClients As String = Nothing, Optional preferredDataArchiveAuthMethod As String = Nothing, Optional preferredDataPersistenceAuthMethod As String = Nothing, Optional zonalConfiguration As String = Nothing, Optional authNotRequired As String = Nothing, Optional storageSubscriptionId As String = Nothing, Optional isAadEnabled As String = Nothing, Optional additionalProperties As IDictionary(Of String, BinaryData) = Nothing) As RedisCommonConfiguration" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisCommonConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isRdbBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rdbBackupFrequency" Type="System.String" />
        <Parameter Name="rdbBackupMaxSnapshotCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rdbStorageConnectionString" Type="System.String" />
        <Parameter Name="isAofBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="aofStorageConnectionString0" Type="System.String" />
        <Parameter Name="aofStorageConnectionString1" Type="System.String" />
        <Parameter Name="maxFragmentationMemoryReserved" Type="System.String" />
        <Parameter Name="maxMemoryPolicy" Type="System.String" />
        <Parameter Name="maxMemoryReserved" Type="System.String" />
        <Parameter Name="maxMemoryDelta" Type="System.String" />
        <Parameter Name="maxClients" Type="System.String" />
        <Parameter Name="preferredDataArchiveAuthMethod" Type="System.String" />
        <Parameter Name="preferredDataPersistenceAuthMethod" Type="System.String" />
        <Parameter Name="zonalConfiguration" Type="System.String" />
        <Parameter Name="authNotRequired" Type="System.String" />
        <Parameter Name="storageSubscriptionId" Type="System.String" />
        <Parameter Name="isAadEnabled" Type="System.String" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="isRdbBackupEnabled"> Specifies whether the rdb backup is enabled. </param>
        <param name="rdbBackupFrequency"> Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440). </param>
        <param name="rdbBackupMaxSnapshotCount"> Specifies the maximum number of snapshots for rdb backup. </param>
        <param name="rdbStorageConnectionString"> The storage account connection string for storing rdb file. </param>
        <param name="isAofBackupEnabled"> Specifies whether the aof backup is enabled. </param>
        <param name="aofStorageConnectionString0"> First storage account connection string. </param>
        <param name="aofStorageConnectionString1"> Second storage account connection string. </param>
        <param name="maxFragmentationMemoryReserved"> Value in megabytes reserved for fragmentation per shard. </param>
        <param name="maxMemoryPolicy"> The eviction strategy used when your data won't fit within its memory limit. </param>
        <param name="maxMemoryReserved"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxMemoryDelta"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxClients"> The max clients config. </param>
        <param name="preferredDataArchiveAuthMethod"> Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="preferredDataPersistenceAuthMethod"> Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="zonalConfiguration"> Zonal Configuration. </param>
        <param name="authNotRequired"> Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view. </param>
        <param name="storageSubscriptionId"> SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity. </param>
        <param name="isAadEnabled"> Specifies whether AAD based authentication has been enabled or disabled for the cache. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCommonConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration (bool? isRdbBackupEnabled = default, string rdbBackupFrequency = default, int? rdbBackupMaxSnapshotCount = default, string rdbStorageConnectionString = default, bool? isAofBackupEnabled = default, string aofStorageConnectionString0 = default, string aofStorageConnectionString1 = default, string maxFragmentationMemoryReserved = default, string maxMemoryPolicy = default, string maxMemoryReserved = default, string maxMemoryDelta = default, string maxClients = default, string notifyKeyspaceEvents = default, string preferredDataArchiveAuthMethod = default, string preferredDataPersistenceAuthMethod = default, string zonalConfiguration = default, string authNotRequired = default, string storageSubscriptionId = default, string isAadEnabled = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration RedisCommonConfiguration(valuetype System.Nullable`1&lt;bool&gt; isRdbBackupEnabled, string rdbBackupFrequency, valuetype System.Nullable`1&lt;int32&gt; rdbBackupMaxSnapshotCount, string rdbStorageConnectionString, valuetype System.Nullable`1&lt;bool&gt; isAofBackupEnabled, string aofStorageConnectionString0, string aofStorageConnectionString1, string maxFragmentationMemoryReserved, string maxMemoryPolicy, string maxMemoryReserved, string maxMemoryDelta, string maxClients, string notifyKeyspaceEvents, string preferredDataArchiveAuthMethod, string preferredDataPersistenceAuthMethod, string zonalConfiguration, string authNotRequired, string storageSubscriptionId, string isAadEnabled, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCommonConfiguration (Optional isRdbBackupEnabled As Nullable(Of Boolean) = Nothing, Optional rdbBackupFrequency As String = Nothing, Optional rdbBackupMaxSnapshotCount As Nullable(Of Integer) = Nothing, Optional rdbStorageConnectionString As String = Nothing, Optional isAofBackupEnabled As Nullable(Of Boolean) = Nothing, Optional aofStorageConnectionString0 As String = Nothing, Optional aofStorageConnectionString1 As String = Nothing, Optional maxFragmentationMemoryReserved As String = Nothing, Optional maxMemoryPolicy As String = Nothing, Optional maxMemoryReserved As String = Nothing, Optional maxMemoryDelta As String = Nothing, Optional maxClients As String = Nothing, Optional notifyKeyspaceEvents As String = Nothing, Optional preferredDataArchiveAuthMethod As String = Nothing, Optional preferredDataPersistenceAuthMethod As String = Nothing, Optional zonalConfiguration As String = Nothing, Optional authNotRequired As String = Nothing, Optional storageSubscriptionId As String = Nothing, Optional isAadEnabled As String = Nothing, Optional additionalProperties As IDictionary(Of String, BinaryData) = Nothing) As RedisCommonConfiguration" />
      <MemberSignature Language="F#" Value="static member RedisCommonConfiguration : Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * string * string * string * string * string * string * string * string * string * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCommonConfiguration (isRdbBackupEnabled, rdbBackupFrequency, rdbBackupMaxSnapshotCount, rdbStorageConnectionString, isAofBackupEnabled, aofStorageConnectionString0, aofStorageConnectionString1, maxFragmentationMemoryReserved, maxMemoryPolicy, maxMemoryReserved, maxMemoryDelta, maxClients, notifyKeyspaceEvents, preferredDataArchiveAuthMethod, preferredDataPersistenceAuthMethod, zonalConfiguration, authNotRequired, storageSubscriptionId, isAadEnabled, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisCommonConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isRdbBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="rdbBackupFrequency" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="rdbBackupMaxSnapshotCount" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="rdbStorageConnectionString" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAofBackupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aofStorageConnectionString0" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="aofStorageConnectionString1" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="maxFragmentationMemoryReserved" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="maxMemoryPolicy" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="maxMemoryReserved" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="maxMemoryDelta" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="maxClients" Type="System.String" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="notifyKeyspaceEvents" Type="System.String" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="preferredDataArchiveAuthMethod" Type="System.String" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="preferredDataPersistenceAuthMethod" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="zonalConfiguration" Type="System.String" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="authNotRequired" Type="System.String" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="storageSubscriptionId" Type="System.String" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAadEnabled" Type="System.String" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" Index="19" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="isRdbBackupEnabled"> Specifies whether the rdb backup is enabled. </param>
        <param name="rdbBackupFrequency"> Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440). </param>
        <param name="rdbBackupMaxSnapshotCount"> Specifies the maximum number of snapshots for rdb backup. </param>
        <param name="rdbStorageConnectionString"> The storage account connection string for storing rdb file. </param>
        <param name="isAofBackupEnabled"> Specifies whether the aof backup is enabled. </param>
        <param name="aofStorageConnectionString0"> First storage account connection string. </param>
        <param name="aofStorageConnectionString1"> Second storage account connection string. </param>
        <param name="maxFragmentationMemoryReserved"> Value in megabytes reserved for fragmentation per shard. </param>
        <param name="maxMemoryPolicy"> The eviction strategy used when your data won't fit within its memory limit. </param>
        <param name="maxMemoryReserved"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxMemoryDelta"> Value in megabytes reserved for non-cache usage per shard e.g. failover. </param>
        <param name="maxClients"> The max clients config. </param>
        <param name="notifyKeyspaceEvents"> The keyspace events which should be monitored. </param>
        <param name="preferredDataArchiveAuthMethod"> Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="preferredDataPersistenceAuthMethod"> Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS. </param>
        <param name="zonalConfiguration"> Zonal Configuration. </param>
        <param name="authNotRequired"> Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view. </param>
        <param name="storageSubscriptionId"> SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity. </param>
        <param name="isAadEnabled"> Specifies whether AAD based authentication has been enabled or disabled for the cache. </param>
        <param name="additionalProperties"> Additional Properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent RedisCreateOrUpdateContent (System.Collections.Generic.IEnumerable&lt;string&gt; zones, Azure.Core.AzureLocation location, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, bool? enableNonSslPort, int? replicasPerMaster, int? replicasPerPrimary, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings, int? shardCount, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess, Azure.ResourceManager.Redis.Models.UpdateChannel? updateChannel, Azure.ResourceManager.Redis.Models.RedisSku sku, Azure.Core.ResourceIdentifier subnetId, System.Net.IPAddress staticIP);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent RedisCreateOrUpdateContent(class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, valuetype System.Nullable`1&lt;bool&gt; enableNonSslPort, valuetype System.Nullable`1&lt;int32&gt; replicasPerMaster, valuetype System.Nullable`1&lt;int32&gt; replicasPerPrimary, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tenantSettings, valuetype System.Nullable`1&lt;int32&gt; shardCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.UpdateChannel&gt; updateChannel, class Azure.ResourceManager.Redis.Models.RedisSku sku, class Azure.Core.ResourceIdentifier subnetId, class System.Net.IPAddress staticIP) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCreateOrUpdateContent(System.Collections.Generic.IEnumerable{System.String},Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Redis.Models.RedisCommonConfiguration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Redis.Models.RedisTlsVersion},System.Nullable{Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess},System.Nullable{Azure.ResourceManager.Redis.Models.UpdateChannel},Azure.ResourceManager.Redis.Models.RedisSku,Azure.Core.ResourceIdentifier,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCreateOrUpdateContent (zones As IEnumerable(Of String), location As AzureLocation, tags As IDictionary(Of String, String), identity As ManagedServiceIdentity, redisConfiguration As RedisCommonConfiguration, redisVersion As String, enableNonSslPort As Nullable(Of Boolean), replicasPerMaster As Nullable(Of Integer), replicasPerPrimary As Nullable(Of Integer), tenantSettings As IDictionary(Of String, String), shardCount As Nullable(Of Integer), minimumTlsVersion As Nullable(Of RedisTlsVersion), publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess), updateChannel As Nullable(Of UpdateChannel), sku As RedisSku, subnetId As ResourceIdentifier, staticIP As IPAddress) As RedisCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member RedisCreateOrUpdateContent : seq&lt;string&gt; * Azure.Core.AzureLocation * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Redis.Models.RedisCommonConfiguration * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt; * Azure.ResourceManager.Redis.Models.RedisSku * Azure.Core.ResourceIdentifier * System.Net.IPAddress -&gt; Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCreateOrUpdateContent (zones, location, tags, identity, redisConfiguration, redisVersion, enableNonSslPort, replicasPerMaster, replicasPerPrimary, tenantSettings, shardCount, minimumTlsVersion, publicNetworkAccess, updateChannel, sku, subnetId, staticIP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisConfiguration" Type="Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisVersion" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableNonSslPort" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerMaster" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerPrimary" Type="System.Nullable&lt;System.Int32&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tenantSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="shardCount" Type="System.Nullable&lt;System.Int32&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt;" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="updateChannel" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Redis.Models.RedisSku" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="staticIP" Type="System.Net.IPAddress" Index="16" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="zones"> A list of availability zones denoting where the resource needs to come from. </param>
        <param name="location"> The geo-location where the resource lives. </param>
        <param name="tags"> Resource tags. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="redisConfiguration"> All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc. </param>
        <param name="redisVersion"> Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'. </param>
        <param name="enableNonSslPort"> Specifies whether the non-ssl Redis server port (6379) is enabled. </param>
        <param name="replicasPerMaster"> The number of replicas to be created per primary. </param>
        <param name="replicasPerPrimary"> The number of replicas to be created per primary. </param>
        <param name="tenantSettings"> A dictionary of tenant settings. </param>
        <param name="shardCount"> The number of shards to be created on a Premium Cluster Cache. </param>
        <param name="minimumTlsVersion"> Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). </param>
        <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'. </param>
        <param name="updateChannel"> Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'. </param>
        <param name="sku"> The SKU of the Redis cache to deploy. </param>
        <param name="subnetId"> The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1. </param>
        <param name="staticIP"> Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent RedisCreateOrUpdateContent (System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration = default, string redisVersion = default, bool? enableNonSslPort = default, int? replicasPerMaster = default, int? replicasPerPrimary = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings = default, int? shardCount = default, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Redis.Models.UpdateChannel? updateChannel = default, bool? isAccessKeyAuthenticationDisabled = default, Azure.ResourceManager.Redis.Models.RedisSku sku = default, Azure.Core.ResourceIdentifier subnetId = default, System.Net.IPAddress staticIP = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent RedisCreateOrUpdateContent(class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, valuetype System.Nullable`1&lt;bool&gt; enableNonSslPort, valuetype System.Nullable`1&lt;int32&gt; replicasPerMaster, valuetype System.Nullable`1&lt;int32&gt; replicasPerPrimary, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tenantSettings, valuetype System.Nullable`1&lt;int32&gt; shardCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.UpdateChannel&gt; updateChannel, valuetype System.Nullable`1&lt;bool&gt; isAccessKeyAuthenticationDisabled, class Azure.ResourceManager.Redis.Models.RedisSku sku, class Azure.Core.ResourceIdentifier subnetId, class System.Net.IPAddress staticIP) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCreateOrUpdateContent(System.Collections.Generic.IEnumerable{System.String},Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Redis.Models.RedisCommonConfiguration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Redis.Models.RedisTlsVersion},System.Nullable{Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess},System.Nullable{Azure.ResourceManager.Redis.Models.UpdateChannel},System.Nullable{System.Boolean},Azure.ResourceManager.Redis.Models.RedisSku,Azure.Core.ResourceIdentifier,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisCreateOrUpdateContent (Optional zones As IEnumerable(Of String) = Nothing, Optional location As AzureLocation = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional redisConfiguration As RedisCommonConfiguration = Nothing, Optional redisVersion As String = Nothing, Optional enableNonSslPort As Nullable(Of Boolean) = Nothing, Optional replicasPerMaster As Nullable(Of Integer) = Nothing, Optional replicasPerPrimary As Nullable(Of Integer) = Nothing, Optional tenantSettings As IDictionary(Of String, String) = Nothing, Optional shardCount As Nullable(Of Integer) = Nothing, Optional minimumTlsVersion As Nullable(Of RedisTlsVersion) = Nothing, Optional publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess) = Nothing, Optional updateChannel As Nullable(Of UpdateChannel) = Nothing, Optional isAccessKeyAuthenticationDisabled As Nullable(Of Boolean) = Nothing, Optional sku As RedisSku = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional staticIP As IPAddress = Nothing) As RedisCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member RedisCreateOrUpdateContent : seq&lt;string&gt; * Azure.Core.AzureLocation * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Redis.Models.RedisCommonConfiguration * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Redis.Models.RedisSku * Azure.Core.ResourceIdentifier * System.Net.IPAddress -&gt; Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisCreateOrUpdateContent (zones, location, tags, identity, redisConfiguration, redisVersion, enableNonSslPort, replicasPerMaster, replicasPerPrimary, tenantSettings, shardCount, minimumTlsVersion, publicNetworkAccess, updateChannel, isAccessKeyAuthenticationDisabled, sku, subnetId, staticIP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisConfiguration" Type="Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisVersion" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableNonSslPort" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerMaster" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerPrimary" Type="System.Nullable&lt;System.Int32&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tenantSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="shardCount" Type="System.Nullable&lt;System.Int32&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt;" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="updateChannel" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAccessKeyAuthenticationDisabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Redis.Models.RedisSku" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="staticIP" Type="System.Net.IPAddress" Index="17" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="zones"> A list of availability zones denoting where the resource needs to come from. </param>
        <param name="location"> The geo-location where the resource lives. </param>
        <param name="tags"> Resource tags. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="redisConfiguration"> All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc. </param>
        <param name="redisVersion"> Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'. </param>
        <param name="enableNonSslPort"> Specifies whether the non-ssl Redis server port (6379) is enabled. </param>
        <param name="replicasPerMaster"> The number of replicas to be created per primary. </param>
        <param name="replicasPerPrimary"> The number of replicas to be created per primary. </param>
        <param name="tenantSettings"> A dictionary of tenant settings. </param>
        <param name="shardCount"> The number of shards to be created on a Premium Cluster Cache. </param>
        <param name="minimumTlsVersion"> Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). </param>
        <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'. </param>
        <param name="updateChannel"> Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'. </param>
        <param name="isAccessKeyAuthenticationDisabled"> Authentication to Redis through access keys is disabled when set as true. Default value is false. </param>
        <param name="sku"> The SKU of the Redis cache to deploy. </param>
        <param name="subnetId"> The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1. </param>
        <param name="staticIP"> Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisData RedisData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration = default, string redisVersion = default, bool? enableNonSslPort = default, int? replicasPerMaster = default, int? replicasPerPrimary = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings = default, int? shardCount = default, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Redis.Models.RedisSku sku = default, Azure.Core.ResourceIdentifier subnetId = default, System.Net.IPAddress staticIP = default, Azure.ResourceManager.Redis.Models.RedisProvisioningState? provisioningState = default, string hostName = default, int? port = default, int? sslPort = default, Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisData RedisData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, valuetype System.Nullable`1&lt;bool&gt; enableNonSslPort, valuetype System.Nullable`1&lt;int32&gt; replicasPerMaster, valuetype System.Nullable`1&lt;int32&gt; replicasPerPrimary, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tenantSettings, valuetype System.Nullable`1&lt;int32&gt; shardCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Redis.Models.RedisSku sku, class Azure.Core.ResourceIdentifier subnetId, class System.Net.IPAddress staticIP, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; provisioningState, string hostName, valuetype System.Nullable`1&lt;int32&gt; port, valuetype System.Nullable`1&lt;int32&gt; sslPort, class Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Redis.Models.RedisCommonConfiguration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Redis.Models.RedisTlsVersion},System.Nullable{Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess},Azure.ResourceManager.Redis.Models.RedisSku,Azure.Core.ResourceIdentifier,System.Net.IPAddress,System.Nullable{Azure.ResourceManager.Redis.Models.RedisProvisioningState},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Redis.Models.RedisAccessKeys,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Resources.Models.SubResource},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.Models.RedisInstanceDetails},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional redisConfiguration As RedisCommonConfiguration = Nothing, Optional redisVersion As String = Nothing, Optional enableNonSslPort As Nullable(Of Boolean) = Nothing, Optional replicasPerMaster As Nullable(Of Integer) = Nothing, Optional replicasPerPrimary As Nullable(Of Integer) = Nothing, Optional tenantSettings As IDictionary(Of String, String) = Nothing, Optional shardCount As Nullable(Of Integer) = Nothing, Optional minimumTlsVersion As Nullable(Of RedisTlsVersion) = Nothing, Optional publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess) = Nothing, Optional sku As RedisSku = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional staticIP As IPAddress = Nothing, Optional provisioningState As Nullable(Of RedisProvisioningState) = Nothing, Optional hostName As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional sslPort As Nullable(Of Integer) = Nothing, Optional accessKeys As RedisAccessKeys = Nothing, Optional linkedServers As IEnumerable(Of SubResource) = Nothing, Optional instances As IEnumerable(Of RedisInstanceDetails) = Nothing, Optional privateEndpointConnections As IEnumerable(Of RedisPrivateEndpointConnectionData) = Nothing) As RedisData" />
      <MemberSignature Language="F#" Value="static member RedisData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Redis.Models.RedisCommonConfiguration * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; * Azure.ResourceManager.Redis.Models.RedisSku * Azure.Core.ResourceIdentifier * System.Net.IPAddress * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Redis.Models.RedisAccessKeys * seq&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; * seq&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; * seq&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; -&gt; Azure.ResourceManager.Redis.RedisData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData (id, name, resourceType, systemData, tags, location, zones, identity, redisConfiguration, redisVersion, enableNonSslPort, replicasPerMaster, replicasPerPrimary, tenantSettings, shardCount, minimumTlsVersion, publicNetworkAccess, sku, subnetId, staticIP, provisioningState, hostName, port, sslPort, accessKeys, linkedServers, instances, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="redisConfiguration" Type="Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" />
        <Parameter Name="redisVersion" Type="System.String" />
        <Parameter Name="enableNonSslPort" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="replicasPerMaster" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="replicasPerPrimary" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tenantSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="shardCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt;" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Redis.Models.RedisSku" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="staticIP" Type="System.Net.IPAddress" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt;" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sslPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessKeys" Type="Azure.ResourceManager.Redis.Models.RedisAccessKeys" />
        <Parameter Name="linkedServers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" />
        <Parameter Name="instances" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="zones"> A list of availability zones denoting where the resource needs to come from. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="redisConfiguration"> All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc. </param>
        <param name="redisVersion"> Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'. </param>
        <param name="enableNonSslPort"> Specifies whether the non-ssl Redis server port (6379) is enabled. </param>
        <param name="replicasPerMaster"> The number of replicas to be created per primary. </param>
        <param name="replicasPerPrimary"> The number of replicas to be created per primary. </param>
        <param name="tenantSettings"> A dictionary of tenant settings. </param>
        <param name="shardCount"> The number of shards to be created on a Premium Cluster Cache. </param>
        <param name="minimumTlsVersion"> Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). </param>
        <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'. </param>
        <param name="sku"> The SKU of the Redis cache to deploy. </param>
        <param name="subnetId"> The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1. </param>
        <param name="staticIP"> Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default. </param>
        <param name="provisioningState"> Redis instance provisioning status. </param>
        <param name="hostName"> Redis host name. </param>
        <param name="port"> Redis non-SSL port. </param>
        <param name="sslPort"> Redis SSL port. </param>
        <param name="accessKeys"> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </param>
        <param name="linkedServers"> List of the linked servers associated with the cache. </param>
        <param name="instances"> List of the Redis instances associated with the cache. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified redis cache. </param>
        <summary> Initializes a new instance of RedisData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisData RedisData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, System.Collections.Generic.IEnumerable&lt;string&gt; zones, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, bool? enableNonSslPort, int? replicasPerMaster, int? replicasPerPrimary, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings, int? shardCount, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess, Azure.ResourceManager.Redis.Models.UpdateChannel? updateChannel, Azure.ResourceManager.Redis.Models.RedisSku sku, Azure.Core.ResourceIdentifier subnetId, System.Net.IPAddress staticIP, Azure.ResourceManager.Redis.Models.RedisProvisioningState? provisioningState, string hostName, int? port, int? sslPort, Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisData RedisData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, valuetype System.Nullable`1&lt;bool&gt; enableNonSslPort, valuetype System.Nullable`1&lt;int32&gt; replicasPerMaster, valuetype System.Nullable`1&lt;int32&gt; replicasPerPrimary, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tenantSettings, valuetype System.Nullable`1&lt;int32&gt; shardCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.UpdateChannel&gt; updateChannel, class Azure.ResourceManager.Redis.Models.RedisSku sku, class Azure.Core.ResourceIdentifier subnetId, class System.Net.IPAddress staticIP, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; provisioningState, string hostName, valuetype System.Nullable`1&lt;int32&gt; port, valuetype System.Nullable`1&lt;int32&gt; sslPort, class Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Redis.Models.RedisCommonConfiguration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Redis.Models.RedisTlsVersion},System.Nullable{Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess},System.Nullable{Azure.ResourceManager.Redis.Models.UpdateChannel},Azure.ResourceManager.Redis.Models.RedisSku,Azure.Core.ResourceIdentifier,System.Net.IPAddress,System.Nullable{Azure.ResourceManager.Redis.Models.RedisProvisioningState},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Redis.Models.RedisAccessKeys,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Resources.Models.SubResource},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.Models.RedisInstanceDetails},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, zones As IEnumerable(Of String), identity As ManagedServiceIdentity, redisConfiguration As RedisCommonConfiguration, redisVersion As String, enableNonSslPort As Nullable(Of Boolean), replicasPerMaster As Nullable(Of Integer), replicasPerPrimary As Nullable(Of Integer), tenantSettings As IDictionary(Of String, String), shardCount As Nullable(Of Integer), minimumTlsVersion As Nullable(Of RedisTlsVersion), publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess), updateChannel As Nullable(Of UpdateChannel), sku As RedisSku, subnetId As ResourceIdentifier, staticIP As IPAddress, provisioningState As Nullable(Of RedisProvisioningState), hostName As String, port As Nullable(Of Integer), sslPort As Nullable(Of Integer), accessKeys As RedisAccessKeys, linkedServers As IEnumerable(Of SubResource), instances As IEnumerable(Of RedisInstanceDetails), privateEndpointConnections As IEnumerable(Of RedisPrivateEndpointConnectionData)) As RedisData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member RedisData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Redis.Models.RedisCommonConfiguration * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt; * Azure.ResourceManager.Redis.Models.RedisSku * Azure.Core.ResourceIdentifier * System.Net.IPAddress * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Redis.Models.RedisAccessKeys * seq&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; * seq&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; * seq&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; -&gt; Azure.ResourceManager.Redis.RedisData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData (id, name, resourceType, systemData, tags, location, zones, identity, redisConfiguration, redisVersion, enableNonSslPort, replicasPerMaster, replicasPerPrimary, tenantSettings, shardCount, minimumTlsVersion, publicNetworkAccess, updateChannel, sku, subnetId, staticIP, provisioningState, hostName, port, sslPort, accessKeys, linkedServers, instances, privateEndpointConnections)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisData RedisData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration = default, string redisVersion = default, bool? enableNonSslPort = default, int? replicasPerMaster = default, int? replicasPerPrimary = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings = default, int? shardCount = default, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Redis.Models.UpdateChannel? updateChannel = default, Azure.ResourceManager.Redis.Models.RedisSku sku = default, Azure.Core.ResourceIdentifier subnetId = default, System.Net.IPAddress staticIP = default, Azure.ResourceManager.Redis.Models.RedisProvisioningState? provisioningState = default, string hostName = default, int? port = default, int? sslPort = default, Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional redisConfiguration As RedisCommonConfiguration = Nothing, Optional redisVersion As String = Nothing, Optional enableNonSslPort As Nullable(Of Boolean) = Nothing, Optional replicasPerMaster As Nullable(Of Integer) = Nothing, Optional replicasPerPrimary As Nullable(Of Integer) = Nothing, Optional tenantSettings As IDictionary(Of String, String) = Nothing, Optional shardCount As Nullable(Of Integer) = Nothing, Optional minimumTlsVersion As Nullable(Of RedisTlsVersion) = Nothing, Optional publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess) = Nothing, Optional updateChannel As Nullable(Of UpdateChannel) = Nothing, Optional sku As RedisSku = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional staticIP As IPAddress = Nothing, Optional provisioningState As Nullable(Of RedisProvisioningState) = Nothing, Optional hostName As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional sslPort As Nullable(Of Integer) = Nothing, Optional accessKeys As RedisAccessKeys = Nothing, Optional linkedServers As IEnumerable(Of SubResource) = Nothing, Optional instances As IEnumerable(Of RedisInstanceDetails) = Nothing, Optional privateEndpointConnections As IEnumerable(Of RedisPrivateEndpointConnectionData) = Nothing) As RedisData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="redisConfiguration" Type="Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" />
        <Parameter Name="redisVersion" Type="System.String" />
        <Parameter Name="enableNonSslPort" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="replicasPerMaster" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="replicasPerPrimary" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tenantSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="shardCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt;" />
        <Parameter Name="updateChannel" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt;" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Redis.Models.RedisSku" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="staticIP" Type="System.Net.IPAddress" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt;" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sslPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessKeys" Type="Azure.ResourceManager.Redis.Models.RedisAccessKeys" />
        <Parameter Name="linkedServers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" />
        <Parameter Name="instances" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="zones"> A list of availability zones denoting where the resource needs to come from. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="redisConfiguration"> All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc. </param>
        <param name="redisVersion"> Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'. </param>
        <param name="enableNonSslPort"> Specifies whether the non-ssl Redis server port (6379) is enabled. </param>
        <param name="replicasPerMaster"> The number of replicas to be created per primary. </param>
        <param name="replicasPerPrimary"> The number of replicas to be created per primary. </param>
        <param name="tenantSettings"> A dictionary of tenant settings. </param>
        <param name="shardCount"> The number of shards to be created on a Premium Cluster Cache. </param>
        <param name="minimumTlsVersion"> Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). </param>
        <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'. </param>
        <param name="updateChannel"> Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'. </param>
        <param name="sku"> The SKU of the Redis cache to deploy. </param>
        <param name="subnetId"> The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1. </param>
        <param name="staticIP"> Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default. </param>
        <param name="provisioningState"> Redis instance provisioning status. </param>
        <param name="hostName"> Redis host name. </param>
        <param name="port"> Redis non-SSL port. </param>
        <param name="sslPort"> Redis SSL port. </param>
        <param name="accessKeys"> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </param>
        <param name="linkedServers"> List of the linked servers associated with the cache. </param>
        <param name="instances"> List of the Redis instances associated with the cache. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified redis cache. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisData RedisData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration = default, string redisVersion = default, bool? enableNonSslPort = default, int? replicasPerMaster = default, int? replicasPerPrimary = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tenantSettings = default, int? shardCount = default, Azure.ResourceManager.Redis.Models.RedisTlsVersion? minimumTlsVersion = default, Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Redis.Models.UpdateChannel? updateChannel = default, bool? isAccessKeyAuthenticationDisabled = default, Azure.ResourceManager.Redis.Models.RedisSku sku = default, Azure.Core.ResourceIdentifier subnetId = default, System.Net.IPAddress staticIP = default, Azure.ResourceManager.Redis.Models.RedisProvisioningState? provisioningState = default, string hostName = default, int? port = default, int? sslPort = default, Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisData RedisData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Redis.Models.RedisCommonConfiguration redisConfiguration, string redisVersion, valuetype System.Nullable`1&lt;bool&gt; enableNonSslPort, valuetype System.Nullable`1&lt;int32&gt; replicasPerMaster, valuetype System.Nullable`1&lt;int32&gt; replicasPerPrimary, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tenantSettings, valuetype System.Nullable`1&lt;int32&gt; shardCount, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.UpdateChannel&gt; updateChannel, valuetype System.Nullable`1&lt;bool&gt; isAccessKeyAuthenticationDisabled, class Azure.ResourceManager.Redis.Models.RedisSku sku, class Azure.Core.ResourceIdentifier subnetId, class System.Net.IPAddress staticIP, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; provisioningState, string hostName, valuetype System.Nullable`1&lt;int32&gt; port, valuetype System.Nullable`1&lt;int32&gt; sslPort, class Azure.ResourceManager.Redis.Models.RedisAccessKeys accessKeys, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; linkedServers, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; instances, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Redis.Models.RedisCommonConfiguration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Redis.Models.RedisTlsVersion},System.Nullable{Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess},System.Nullable{Azure.ResourceManager.Redis.Models.UpdateChannel},System.Nullable{System.Boolean},Azure.ResourceManager.Redis.Models.RedisSku,Azure.Core.ResourceIdentifier,System.Net.IPAddress,System.Nullable{Azure.ResourceManager.Redis.Models.RedisProvisioningState},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Redis.Models.RedisAccessKeys,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Resources.Models.SubResource},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.Models.RedisInstanceDetails},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional redisConfiguration As RedisCommonConfiguration = Nothing, Optional redisVersion As String = Nothing, Optional enableNonSslPort As Nullable(Of Boolean) = Nothing, Optional replicasPerMaster As Nullable(Of Integer) = Nothing, Optional replicasPerPrimary As Nullable(Of Integer) = Nothing, Optional tenantSettings As IDictionary(Of String, String) = Nothing, Optional shardCount As Nullable(Of Integer) = Nothing, Optional minimumTlsVersion As Nullable(Of RedisTlsVersion) = Nothing, Optional publicNetworkAccess As Nullable(Of RedisPublicNetworkAccess) = Nothing, Optional updateChannel As Nullable(Of UpdateChannel) = Nothing, Optional isAccessKeyAuthenticationDisabled As Nullable(Of Boolean) = Nothing, Optional sku As RedisSku = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional staticIP As IPAddress = Nothing, Optional provisioningState As Nullable(Of RedisProvisioningState) = Nothing, Optional hostName As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional sslPort As Nullable(Of Integer) = Nothing, Optional accessKeys As RedisAccessKeys = Nothing, Optional linkedServers As IEnumerable(Of SubResource) = Nothing, Optional instances As IEnumerable(Of RedisInstanceDetails) = Nothing, Optional privateEndpointConnections As IEnumerable(Of RedisPrivateEndpointConnectionData) = Nothing) As RedisData" />
      <MemberSignature Language="F#" Value="static member RedisData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Redis.Models.RedisCommonConfiguration * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Redis.Models.RedisSku * Azure.Core.ResourceIdentifier * System.Net.IPAddress * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Redis.Models.RedisAccessKeys * seq&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; * seq&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt; * seq&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt; -&gt; Azure.ResourceManager.Redis.RedisData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisData (id, name, resourceType, systemData, tags, location, zones, identity, redisConfiguration, redisVersion, enableNonSslPort, replicasPerMaster, replicasPerPrimary, tenantSettings, shardCount, minimumTlsVersion, publicNetworkAccess, updateChannel, isAccessKeyAuthenticationDisabled, sku, subnetId, staticIP, provisioningState, hostName, port, sslPort, accessKeys, linkedServers, instances, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisConfiguration" Type="Azure.ResourceManager.Redis.Models.RedisCommonConfiguration" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="redisVersion" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableNonSslPort" Type="System.Nullable&lt;System.Boolean&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerMaster" Type="System.Nullable&lt;System.Int32&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="replicasPerPrimary" Type="System.Nullable&lt;System.Int32&gt;" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tenantSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="shardCount" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisTlsVersion&gt;" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPublicNetworkAccess&gt;" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="updateChannel" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.UpdateChannel&gt;" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAccessKeyAuthenticationDisabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Redis.Models.RedisSku" Index="19" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="20" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="staticIP" Type="System.Net.IPAddress" Index="21" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisProvisioningState&gt;" Index="22" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hostName" Type="System.String" Index="23" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" Index="24" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sslPort" Type="System.Nullable&lt;System.Int32&gt;" Index="25" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessKeys" Type="Azure.ResourceManager.Redis.Models.RedisAccessKeys" Index="26" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="linkedServers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Index="27" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="instances" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisInstanceDetails&gt;" Index="28" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData&gt;" Index="29" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="zones"> A list of availability zones denoting where the resource needs to come from. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="redisConfiguration"> All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc. </param>
        <param name="redisVersion"> Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'. </param>
        <param name="enableNonSslPort"> Specifies whether the non-ssl Redis server port (6379) is enabled. </param>
        <param name="replicasPerMaster"> The number of replicas to be created per primary. </param>
        <param name="replicasPerPrimary"> The number of replicas to be created per primary. </param>
        <param name="tenantSettings"> A dictionary of tenant settings. </param>
        <param name="shardCount"> The number of shards to be created on a Premium Cluster Cache. </param>
        <param name="minimumTlsVersion"> Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). </param>
        <param name="publicNetworkAccess"> Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'. </param>
        <param name="updateChannel"> Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'. </param>
        <param name="isAccessKeyAuthenticationDisabled"> Authentication to Redis through access keys is disabled when set as true. Default value is false. </param>
        <param name="sku"> The SKU of the Redis cache to deploy. </param>
        <param name="subnetId"> The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1. </param>
        <param name="staticIP"> Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default. </param>
        <param name="provisioningState"> Redis instance provisioning status. </param>
        <param name="hostName"> Redis host name. </param>
        <param name="port"> Redis non-SSL port. </param>
        <param name="sslPort"> Redis SSL port. </param>
        <param name="accessKeys"> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </param>
        <param name="linkedServers"> List of the linked servers associated with the cache. </param>
        <param name="instances"> List of the Redis instances associated with the cache. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified redis cache. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisFirewallRuleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisFirewallRuleData RedisFirewallRuleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Net.IPAddress startIP = default, System.Net.IPAddress endIP = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisFirewallRuleData RedisFirewallRuleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Net.IPAddress startIP, class System.Net.IPAddress endIP) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisFirewallRuleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisFirewallRuleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional startIP As IPAddress = Nothing, Optional endIP As IPAddress = Nothing) As RedisFirewallRuleData" />
      <MemberSignature Language="F#" Value="static member RedisFirewallRuleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Net.IPAddress * System.Net.IPAddress -&gt; Azure.ResourceManager.Redis.RedisFirewallRuleData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisFirewallRuleData (id, name, resourceType, systemData, startIP, endIP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisFirewallRuleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="startIP" Type="System.Net.IPAddress" />
        <Parameter Name="endIP" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="startIP"> lowest IP address included in the range. </param>
        <param name="endIP"> highest IP address included in the range. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisFirewallRuleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisFirewallRuleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisForceRebootResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisForceRebootResult RedisForceRebootResult (string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisForceRebootResult RedisForceRebootResult(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisForceRebootResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisForceRebootResult (Optional message As String = Nothing) As RedisForceRebootResult" />
      <MemberSignature Language="F#" Value="static member RedisForceRebootResult : string -&gt; Azure.ResourceManager.Redis.Models.RedisForceRebootResult" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisForceRebootResult message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisForceRebootResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"> Status message. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisForceRebootResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisForceRebootResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisInstanceDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisInstanceDetails RedisInstanceDetails (int? sslPort = default, int? nonSslPort = default, string zone = default, int? shardId = default, bool? isMaster = default, bool? isPrimary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisInstanceDetails RedisInstanceDetails(valuetype System.Nullable`1&lt;int32&gt; sslPort, valuetype System.Nullable`1&lt;int32&gt; nonSslPort, string zone, valuetype System.Nullable`1&lt;int32&gt; shardId, valuetype System.Nullable`1&lt;bool&gt; isMaster, valuetype System.Nullable`1&lt;bool&gt; isPrimary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisInstanceDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisInstanceDetails (Optional sslPort As Nullable(Of Integer) = Nothing, Optional nonSslPort As Nullable(Of Integer) = Nothing, Optional zone As String = Nothing, Optional shardId As Nullable(Of Integer) = Nothing, Optional isMaster As Nullable(Of Boolean) = Nothing, Optional isPrimary As Nullable(Of Boolean) = Nothing) As RedisInstanceDetails" />
      <MemberSignature Language="F#" Value="static member RedisInstanceDetails : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisInstanceDetails" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisInstanceDetails (sslPort, nonSslPort, zone, shardId, isMaster, isPrimary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisInstanceDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="nonSslPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="zone" Type="System.String" />
        <Parameter Name="shardId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isMaster" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="sslPort"> Redis instance SSL port. </param>
        <param name="nonSslPort"> If enableNonSslPort is true, provides Redis instance Non-SSL port. </param>
        <param name="zone"> If the Cache uses availability zones, specifies availability zone where this instance is located. </param>
        <param name="shardId"> If clustering is enabled, the Shard ID of Redis Instance. </param>
        <param name="isMaster"> Specifies whether the instance is a primary node. </param>
        <param name="isPrimary"> Specifies whether the instance is a primary node. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisInstanceDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisInstanceDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisLinkedServerWithPropertyCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent RedisLinkedServerWithPropertyCreateOrUpdateContent (Azure.Core.ResourceIdentifier linkedRedisCacheId = default, Azure.Core.AzureLocation linkedRedisCacheLocation = default, Azure.ResourceManager.Redis.Models.RedisLinkedServerRole serverRole = Azure.ResourceManager.Redis.Models.RedisLinkedServerRole.Primary, string geoReplicatedPrimaryHostName = default, string primaryHostName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent RedisLinkedServerWithPropertyCreateOrUpdateContent(class Azure.Core.ResourceIdentifier linkedRedisCacheId, valuetype Azure.Core.AzureLocation linkedRedisCacheLocation, valuetype Azure.ResourceManager.Redis.Models.RedisLinkedServerRole serverRole, string geoReplicatedPrimaryHostName, string primaryHostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisLinkedServerWithPropertyCreateOrUpdateContent(Azure.Core.ResourceIdentifier,Azure.Core.AzureLocation,Azure.ResourceManager.Redis.Models.RedisLinkedServerRole,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisLinkedServerWithPropertyCreateOrUpdateContent (Optional linkedRedisCacheId As ResourceIdentifier = Nothing, Optional linkedRedisCacheLocation As AzureLocation = Nothing, Optional serverRole As RedisLinkedServerRole = Azure.ResourceManager.Redis.Models.RedisLinkedServerRole.Primary, Optional geoReplicatedPrimaryHostName As String = Nothing, Optional primaryHostName As String = Nothing) As RedisLinkedServerWithPropertyCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member RedisLinkedServerWithPropertyCreateOrUpdateContent : Azure.Core.ResourceIdentifier * Azure.Core.AzureLocation * Azure.ResourceManager.Redis.Models.RedisLinkedServerRole * string * string -&gt; Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisLinkedServerWithPropertyCreateOrUpdateContent (linkedRedisCacheId, linkedRedisCacheLocation, serverRole, geoReplicatedPrimaryHostName, primaryHostName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkedRedisCacheId" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="linkedRedisCacheLocation" Type="Azure.Core.AzureLocation" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="serverRole" Type="Azure.ResourceManager.Redis.Models.RedisLinkedServerRole" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="geoReplicatedPrimaryHostName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="primaryHostName" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="linkedRedisCacheId"> Fully qualified resourceId of the linked redis cache. </param>
        <param name="linkedRedisCacheLocation"> Location of the linked redis cache. </param>
        <param name="serverRole"> Role of the linked server. </param>
        <param name="geoReplicatedPrimaryHostName"> The unchanging DNS name which will always point to current geo-primary cache among the linked redis caches for seamless Geo Failover experience. </param>
        <param name="primaryHostName"> The changing DNS name that resolves to the current geo-primary cache among the linked redis caches before or after the Geo Failover. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisLinkedServerWithPropertyCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisLinkedServerWithPropertyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData RedisLinkedServerWithPropertyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier linkedRedisCacheId = default, Azure.Core.AzureLocation? linkedRedisCacheLocation = default, Azure.ResourceManager.Redis.Models.RedisLinkedServerRole? serverRole = default, string geoReplicatedPrimaryHostName = default, string primaryHostName = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData RedisLinkedServerWithPropertyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier linkedRedisCacheId, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; linkedRedisCacheLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisLinkedServerRole&gt; serverRole, string geoReplicatedPrimaryHostName, string primaryHostName, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisLinkedServerWithPropertyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Redis.Models.RedisLinkedServerRole},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisLinkedServerWithPropertyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional linkedRedisCacheId As ResourceIdentifier = Nothing, Optional linkedRedisCacheLocation As Nullable(Of AzureLocation) = Nothing, Optional serverRole As Nullable(Of RedisLinkedServerRole) = Nothing, Optional geoReplicatedPrimaryHostName As String = Nothing, Optional primaryHostName As String = Nothing, Optional provisioningState As String = Nothing) As RedisLinkedServerWithPropertyData" />
      <MemberSignature Language="F#" Value="static member RedisLinkedServerWithPropertyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisLinkedServerRole&gt; * string * string * string -&gt; Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisLinkedServerWithPropertyData (id, name, resourceType, systemData, linkedRedisCacheId, linkedRedisCacheLocation, serverRole, geoReplicatedPrimaryHostName, primaryHostName, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="linkedRedisCacheId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="linkedRedisCacheLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="serverRole" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisLinkedServerRole&gt;" />
        <Parameter Name="geoReplicatedPrimaryHostName" Type="System.String" />
        <Parameter Name="primaryHostName" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="linkedRedisCacheId"> Fully qualified resourceId of the linked redis cache. </param>
        <param name="linkedRedisCacheLocation"> Location of the linked redis cache. </param>
        <param name="serverRole"> Role of the linked server. </param>
        <param name="geoReplicatedPrimaryHostName"> The unchanging DNS name which will always point to current geo-primary cache among the linked redis caches for seamless Geo Failover experience. </param>
        <param name="primaryHostName"> The changing DNS name that resolves to the current geo-primary cache among the linked redis caches before or after the Geo Failover. </param>
        <param name="provisioningState"> Terminal state of the link between primary and secondary redis cache. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisLinkedServerWithPropertyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisOperationStatus RedisOperationStatus (Azure.Core.ResourceIdentifier id = default, string name = default, string status = default, float? percentComplete = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Models.OperationStatusResult&gt; operations = default, Azure.ResponseError error = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,BinaryData&gt; properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisOperationStatus RedisOperationStatus(class Azure.Core.ResourceIdentifier id, string name, string status, valuetype System.Nullable`1&lt;float32&gt; percentComplete, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Models.OperationStatusResult&gt; operations, class Azure.ResponseError error, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.BinaryData&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisOperationStatus(Azure.Core.ResourceIdentifier,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Models.OperationStatusResult},Azure.ResponseError,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisOperationStatus (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional status As String = Nothing, Optional percentComplete As Nullable(Of Single) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing, Optional operations As IEnumerable(Of OperationStatusResult) = Nothing, Optional error As ResponseError = Nothing, Optional properties As IReadOnlyDictionary(Of String, BinaryData) = Nothing) As RedisOperationStatus" />
      <MemberSignature Language="F#" Value="static member RedisOperationStatus : Azure.Core.ResourceIdentifier * string * string * Nullable&lt;single&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.Models.OperationStatusResult&gt; * Azure.ResponseError * System.Collections.Generic.IReadOnlyDictionary&lt;string, BinaryData&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisOperationStatus" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisOperationStatus (id, name, status, percentComplete, startOn, endOn, operations, error, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="percentComplete" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="operations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Models.OperationStatusResult&gt;" />
        <Parameter Name="error" Type="Azure.ResponseError" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Fully qualified ID for the async operation. </param>
        <param name="name"> Name of the async operation. </param>
        <param name="status"> Operation status. </param>
        <param name="percentComplete"> Percent of the operation that is complete. </param>
        <param name="startOn"> The start time of the operation. </param>
        <param name="endOn"> The end time of the operation. </param>
        <param name="operations"> The operations list. </param>
        <param name="error"> If present, details of the operation error. </param>
        <param name="properties"> Additional properties from RP, only when operation is successful. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisOperationStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisOperationStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisPatchScheduleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisPatchScheduleData RedisPatchScheduleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisPatchScheduleSetting&gt; scheduleEntries = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisPatchScheduleData RedisPatchScheduleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Redis.Models.RedisPatchScheduleSetting&gt; scheduleEntries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPatchScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Redis.Models.RedisPatchScheduleSetting})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisPatchScheduleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional scheduleEntries As IEnumerable(Of RedisPatchScheduleSetting) = Nothing) As RedisPatchScheduleData" />
      <MemberSignature Language="F#" Value="static member RedisPatchScheduleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * seq&lt;Azure.ResourceManager.Redis.Models.RedisPatchScheduleSetting&gt; -&gt; Azure.ResourceManager.Redis.RedisPatchScheduleData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPatchScheduleData (id, name, resourceType, systemData, location, scheduleEntries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisPatchScheduleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="scheduleEntries" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Redis.Models.RedisPatchScheduleSetting&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The geo-location where the resource lives. </param>
        <param name="scheduleEntries"> List of patch schedules for a Redis cache. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisPatchScheduleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisPatchScheduleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisPrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData RedisPrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.Redis.Models.RedisPrivateLinkServiceConnectionState redisPrivateLinkServiceConnectionState = default, Azure.ResourceManager.Redis.Models.RedisPrivateEndpointConnectionProvisioningState? redisProvisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData RedisPrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.Redis.Models.RedisPrivateLinkServiceConnectionState redisPrivateLinkServiceConnectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Redis.Models.RedisPrivateEndpointConnectionProvisioningState&gt; redisProvisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Redis.Models.RedisPrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.Redis.Models.RedisPrivateEndpointConnectionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisPrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional redisPrivateLinkServiceConnectionState As RedisPrivateLinkServiceConnectionState = Nothing, Optional redisProvisioningState As Nullable(Of RedisPrivateEndpointConnectionProvisioningState) = Nothing) As RedisPrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member RedisPrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Redis.Models.RedisPrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPrivateEndpointConnectionProvisioningState&gt; -&gt; Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, redisPrivateLinkServiceConnectionState, redisProvisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="redisPrivateLinkServiceConnectionState" Type="Azure.ResourceManager.Redis.Models.RedisPrivateLinkServiceConnectionState" />
        <Parameter Name="redisProvisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Redis.Models.RedisPrivateEndpointConnectionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="redisPrivateLinkServiceConnectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="redisProvisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.RedisPrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource RedisPrivateLinkResource (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource RedisPrivateLinkResource(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPrivateLinkResource(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisPrivateLinkResource (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As RedisPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member RedisPrivateLinkResource : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisPrivateLinkResource (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisPrivateLinkResource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedisUpgradeNotification">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Redis.Models.RedisUpgradeNotification RedisUpgradeNotification (string name = default, DateTimeOffset? timestamp = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; upsellNotification = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Redis.Models.RedisUpgradeNotification RedisUpgradeNotification(string name, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; upsellNotification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisUpgradeNotification(System.String,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedisUpgradeNotification (Optional name As String = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional upsellNotification As IReadOnlyDictionary(Of String, String) = Nothing) As RedisUpgradeNotification" />
      <MemberSignature Language="F#" Value="static member RedisUpgradeNotification : string * Nullable&lt;DateTimeOffset&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.Redis.Models.RedisUpgradeNotification" Usage="Azure.ResourceManager.Redis.Models.ArmRedisModelFactory.RedisUpgradeNotification (name, timestamp, upsellNotification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Redis</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Redis.Models.RedisUpgradeNotification</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="upsellNotification" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of upgrade notification. </param>
        <param name="timestamp"> Timestamp when upgrade notification occurred. </param>
        <param name="upsellNotification"> Details about this upgrade notification. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Redis.Models.RedisUpgradeNotification" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Redis.Models.RedisUpgradeNotification" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
