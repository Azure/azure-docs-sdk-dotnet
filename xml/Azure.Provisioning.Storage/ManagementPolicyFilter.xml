<Type Name="ManagementPolicyFilter" FullName="Azure.Provisioning.Storage.ManagementPolicyFilter">
  <TypeSignature Language="C#" Value="public class ManagementPolicyFilter : Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementPolicyFilter extends Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Storage.ManagementPolicyFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementPolicyFilter&#xA;Inherits ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type ManagementPolicyFilter = class&#xA;    inherit ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class ManagementPolicyFilter : Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementPolicyFilter extends Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementPolicyFilter&#xA;Inherits ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type ManagementPolicyFilter = class&#xA;    inherit ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Primitives.ProvisionableConstruct</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet-preview">Azure.Provisioning.Primitives.ProvisioningConstruct</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Filters limit rule actions to a subset of blobs within the storage account.
            If multiple filters are defined, a logical AND is performed on all filters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementPolicyFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Storage.ManagementPolicyFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new ManagementPolicyFilter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobIndexMatch">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepList&lt;Azure.Provisioning.Storage.ManagementPolicyTagFilter&gt; BlobIndexMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepList`1&lt;class Azure.Provisioning.Storage.ManagementPolicyTagFilter&gt; BlobIndexMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Storage.ManagementPolicyFilter.BlobIndexMatch" />
      <MemberSignature Language="VB.NET" Value="Public Property BlobIndexMatch As BicepList(Of ManagementPolicyTagFilter)" />
      <MemberSignature Language="F#" Value="member this.BlobIndexMatch : Azure.Provisioning.BicepList&lt;Azure.Provisioning.Storage.ManagementPolicyTagFilter&gt; with get, set" Usage="Azure.Provisioning.Storage.ManagementPolicyFilter.BlobIndexMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;Azure.Provisioning.Storage.ManagementPolicyTagFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An array of blob index tag based filters, there can be at most 10 tag
            filters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobTypes">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepList&lt;string&gt; BlobTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepList`1&lt;string&gt; BlobTypes" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Storage.ManagementPolicyFilter.BlobTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property BlobTypes As BicepList(Of String)" />
      <MemberSignature Language="F#" Value="member this.BlobTypes : Azure.Provisioning.BicepList&lt;string&gt; with get, set" Usage="Azure.Provisioning.Storage.ManagementPolicyFilter.BlobTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An array of predefined enum values. Currently blockBlob supports all
            tiering and delete actions. Only delete actions are supported for
            appendBlob.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineProvisionableProperties">
      <MemberSignature Language="C#" Value="protected override void DefineProvisionableProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefineProvisionableProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Storage.ManagementPolicyFilter.DefineProvisionableProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefineProvisionableProperties ()" />
      <MemberSignature Language="F#" Value="override this.DefineProvisionableProperties : unit -&gt; unit" Usage="managementPolicyFilter.DefineProvisionableProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Define all the provisionable properties of ManagementPolicyFilter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixMatch">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepList&lt;string&gt; PrefixMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepList`1&lt;string&gt; PrefixMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Storage.ManagementPolicyFilter.PrefixMatch" />
      <MemberSignature Language="VB.NET" Value="Public Property PrefixMatch As BicepList(Of String)" />
      <MemberSignature Language="F#" Value="member this.PrefixMatch : Azure.Provisioning.BicepList&lt;string&gt; with get, set" Usage="Azure.Provisioning.Storage.ManagementPolicyFilter.PrefixMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An array of strings for prefixes to be match.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
