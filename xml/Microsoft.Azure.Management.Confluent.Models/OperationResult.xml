<Type Name="OperationResult" FullName="Microsoft.Azure.Management.Confluent.Models.OperationResult">
  <TypeSignature Language="C#" Value="public class OperationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OperationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Confluent.Models.OperationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class OperationResult" />
  <TypeSignature Language="F#" Value="type OperationResult = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An Confluent REST API operation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Confluent.Models.OperationResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationResult (string name = default, Microsoft.Azure.Management.Confluent.Models.OperationDisplay display = default, bool? isDataAction = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Azure.Management.Confluent.Models.OperationDisplay display, valuetype System.Nullable`1&lt;bool&gt; isDataAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Confluent.Models.OperationResult.#ctor(System.String,Microsoft.Azure.Management.Confluent.Models.OperationDisplay,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional name As String = Nothing, Optional display As OperationDisplay = Nothing, Optional isDataAction As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Confluent.Models.OperationResult : string * Microsoft.Azure.Management.Confluent.Models.OperationDisplay * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.Confluent.Models.OperationResult" Usage="new Microsoft.Azure.Management.Confluent.Models.OperationResult (name, display, isDataAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="display" Type="Microsoft.Azure.Management.Confluent.Models.OperationDisplay" />
        <Parameter Name="isDataAction" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
        <param name="display">The object that represents the
            operation.</param>
        <param name="isDataAction">Indicates whether the operation is a
            data action</param>
        <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Confluent.Models.OperationDisplay Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Confluent.Models.OperationDisplay Display" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Confluent.Models.OperationResult.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As OperationDisplay" />
      <MemberSignature Language="F#" Value="member this.Display : Microsoft.Azure.Management.Confluent.Models.OperationDisplay with get, set" Usage="Microsoft.Azure.Management.Confluent.Models.OperationResult.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="display")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="display")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Confluent.Models.OperationDisplay</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the object that represents the operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataAction">
      <MemberSignature Language="C#" Value="public bool? IsDataAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsDataAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Confluent.Models.OperationResult.IsDataAction" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDataAction As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsDataAction : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.Confluent.Models.OperationResult.IsDataAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isDataAction")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isDataAction")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates whether the operation is a data action
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Confluent.Models.OperationResult.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.Management.Confluent.Models.OperationResult.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Confluent</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="name")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
