<Type Name="BindingFactory" FullName="Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory">
  <TypeSignature Language="C#" Value="public class BindingFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingFactory" />
  <TypeSignature Language="F#" Value="type BindingFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
    <AssemblyVersion>3.0.25.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Not ready for public consumption.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Not ready for public consumption.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
        <AssemblyVersion>3.0.25.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTriggerBinding&lt;TMessage,TTriggerValue&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding GetTriggerBinding&lt;TMessage,TTriggerValue&gt; (Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy&lt;TMessage,TTriggerValue&gt; bindingStrategy, System.Reflection.ParameterInfo parameter, Microsoft.Azure.WebJobs.IConverterManager converterManager, Func&lt;Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext,bool,System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Host.Listeners.IListener&gt;&gt; createListener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding GetTriggerBinding&lt;TMessage, TTriggerValue&gt;(class Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2&lt;!!TMessage, !!TTriggerValue&gt; bindingStrategy, class System.Reflection.ParameterInfo parameter, class Microsoft.Azure.WebJobs.IConverterManager converterManager, class System.Func`3&lt;class Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext, bool, class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.WebJobs.Host.Listeners.IListener&gt;&gt; createListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.GetTriggerBinding``2(Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy{``0,``1},System.Reflection.ParameterInfo,Microsoft.Azure.WebJobs.IConverterManager,System.Func{Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext,System.Boolean,System.Threading.Tasks.Task{Microsoft.Azure.WebJobs.Host.Listeners.IListener}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTriggerBinding(Of TMessage, TTriggerValue) (bindingStrategy As ITriggerBindingStrategy(Of TMessage, TTriggerValue), parameter As ParameterInfo, converterManager As IConverterManager, createListener As Func(Of ListenerFactoryContext, Boolean, Task(Of IListener))) As ITriggerBinding" />
      <MemberSignature Language="F#" Value="static member GetTriggerBinding : Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy&lt;'Message, 'riggerValue&gt; * System.Reflection.ParameterInfo * Microsoft.Azure.WebJobs.IConverterManager * Func&lt;Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext, bool, System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Host.Listeners.IListener&gt;&gt; -&gt; Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding" Usage="Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.GetTriggerBinding (bindingStrategy, parameter, converterManager, createListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
        <AssemblyVersion>3.0.25.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage" />
        <TypeParameter Name="TTriggerValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindingStrategy" Type="Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy&lt;TMessage,TTriggerValue&gt;" />
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="converterManager" Type="Microsoft.Azure.WebJobs.IConverterManager" />
        <Parameter Name="createListener" Type="System.Func&lt;Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext,System.Boolean,System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Host.Listeners.IListener&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">To be added.</typeparam>
        <typeparam name="TTriggerValue">To be added.</typeparam>
        <param name="bindingStrategy">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="converterManager">To be added.</param>
        <param name="createListener">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
