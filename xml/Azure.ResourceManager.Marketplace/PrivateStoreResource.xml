<Type Name="PrivateStoreResource" FullName="Azure.ResourceManager.Marketplace.PrivateStoreResource">
  <TypeSignature Language="C#" Value="public class PrivateStoreResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrivateStoreResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Marketplace.PrivateStoreResource" />
  <TypeSignature Language="VB.NET" Value="Public Class PrivateStoreResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type PrivateStoreResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a PrivateStore along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Marketplace.PrivateStoreResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetPrivateStoreResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> using the GetPrivateStore method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrivateStoreResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Marketplace.PrivateStoreResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeOfferNotification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AcknowledgeOfferNotification (string offerId, Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AcknowledgeOfferNotification(string offerId, class Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.AcknowledgeOfferNotification(System.String,Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcknowledgeOfferNotification (offerId As String, Optional payload As AcknowledgeOfferNotificationProperties = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AcknowledgeOfferNotification : string * Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.AcknowledgeOfferNotification : string * Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties * System.Threading.CancellationToken -&gt; Azure.Response" Usage="privateStoreResource.AcknowledgeOfferNotification (offerId, payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="offerId"> The offer ID to update or delete. </param>
        <param name="payload"> The AcknowledgeOfferNotificationProperties to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Acknowledge notification for offer
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/offers/{offerId}/acknowledgeNotification
            Operation Id: PrivateStore_AcknowledgeOfferNotification
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="offerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeOfferNotificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AcknowledgeOfferNotificationAsync (string offerId, Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AcknowledgeOfferNotificationAsync(string offerId, class Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.AcknowledgeOfferNotificationAsync(System.String,Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcknowledgeOfferNotificationAsync (offerId As String, Optional payload As AcknowledgeOfferNotificationProperties = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AcknowledgeOfferNotificationAsync : string * Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AcknowledgeOfferNotificationAsync : string * Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="privateStoreResource.AcknowledgeOfferNotificationAsync (offerId, payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.AcknowledgeOfferNotificationProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="offerId"> The offer ID to update or delete. </param>
        <param name="payload"> The AcknowledgeOfferNotificationProperties to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Acknowledge notification for offer
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/offers/{offerId}/acknowledgeNotification
            Operation Id: PrivateStore_AcknowledgeOfferNotification
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="offerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AnyExistingOffersInTheCollections">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt; AnyExistingOffersInTheCollections (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt; AnyExistingOffersInTheCollections(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.AnyExistingOffersInTheCollections(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnyExistingOffersInTheCollections (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnyExistingOffersInTheCollectionsResponse)" />
      <MemberSignature Language="F#" Value="abstract member AnyExistingOffersInTheCollections : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&#xA;override this.AnyExistingOffersInTheCollections : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;" Usage="privateStoreResource.AnyExistingOffersInTheCollections cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query whether exists any offer in the collections.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/anyExistingOffersInTheCollections
            Operation Id: PrivateStore_AnyExistingOffersInTheCollections
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyExistingOffersInTheCollectionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&gt; AnyExistingOffersInTheCollectionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&gt; AnyExistingOffersInTheCollectionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.AnyExistingOffersInTheCollectionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnyExistingOffersInTheCollectionsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnyExistingOffersInTheCollectionsResponse))" />
      <MemberSignature Language="F#" Value="abstract member AnyExistingOffersInTheCollectionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&gt;&#xA;override this.AnyExistingOffersInTheCollectionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&gt;" Usage="privateStoreResource.AnyExistingOffersInTheCollectionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.AnyExistingOffersInTheCollectionsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Query whether exists any offer in the collections.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/anyExistingOffersInTheCollections
            Operation Id: PrivateStore_AnyExistingOffersInTheCollections
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BillingAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt; BillingAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt; BillingAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.BillingAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BillingAccounts (Optional cancellationToken As CancellationToken = Nothing) As Response(Of BillingAccountsResponse)" />
      <MemberSignature Language="F#" Value="abstract member BillingAccounts : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&#xA;override this.BillingAccounts : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;" Usage="privateStoreResource.BillingAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tenant billing accounts names
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/billingAccounts
            Operation Id: PrivateStore_BillingAccounts
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BillingAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&gt; BillingAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&gt; BillingAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.BillingAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BillingAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BillingAccountsResponse))" />
      <MemberSignature Language="F#" Value="abstract member BillingAccountsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&gt;&#xA;override this.BillingAccountsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&gt;" Usage="privateStoreResource.BillingAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BillingAccountsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tenant billing accounts names
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/billingAccounts
            Operation Id: PrivateStore_BillingAccounts
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkCollectionsAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt; BulkCollectionsAction (Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt; BulkCollectionsAction(class Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.BulkCollectionsAction(Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BulkCollectionsAction (Optional payload As BulkCollectionsPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkCollectionsResponse)" />
      <MemberSignature Language="F#" Value="abstract member BulkCollectionsAction : Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&#xA;override this.BulkCollectionsAction : Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;" Usage="privateStoreResource.BulkCollectionsAction (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The BulkCollectionsPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Perform an action on bulk collections
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/bulkCollectionsAction
            Operation Id: PrivateStore_BulkCollectionsAction
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkCollectionsActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&gt; BulkCollectionsActionAsync (Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&gt; BulkCollectionsActionAsync(class Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.BulkCollectionsActionAsync(Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BulkCollectionsActionAsync (Optional payload As BulkCollectionsPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkCollectionsResponse))" />
      <MemberSignature Language="F#" Value="abstract member BulkCollectionsActionAsync : Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&gt;&#xA;override this.BulkCollectionsActionAsync : Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&gt;" Usage="privateStoreResource.BulkCollectionsActionAsync (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.BulkCollectionsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.BulkCollectionsPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The BulkCollectionsPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Perform an action on bulk collections
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/bulkCollectionsAction
            Operation Id: PrivateStore_BulkCollectionsAction
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionsToSubscriptionsMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt; CollectionsToSubscriptionsMapping (Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt; CollectionsToSubscriptionsMapping(class Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.CollectionsToSubscriptionsMapping(Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CollectionsToSubscriptionsMapping (Optional payload As CollectionsToSubscriptionsMappingPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CollectionsToSubscriptionsMappingResponse)" />
      <MemberSignature Language="F#" Value="abstract member CollectionsToSubscriptionsMapping : Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&#xA;override this.CollectionsToSubscriptionsMapping : Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;" Usage="privateStoreResource.CollectionsToSubscriptionsMapping (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The CollectionsToSubscriptionsMappingPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For a given subscriptions list, the API will return a map of collections and the related subscriptions from the supplied list.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collectionsToSubscriptionsMapping
            Operation Id: PrivateStore_CollectionsToSubscriptionsMapping
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionsToSubscriptionsMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&gt; CollectionsToSubscriptionsMappingAsync (Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&gt; CollectionsToSubscriptionsMappingAsync(class Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.CollectionsToSubscriptionsMappingAsync(Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CollectionsToSubscriptionsMappingAsync (Optional payload As CollectionsToSubscriptionsMappingPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CollectionsToSubscriptionsMappingResponse))" />
      <MemberSignature Language="F#" Value="abstract member CollectionsToSubscriptionsMappingAsync : Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&gt;&#xA;override this.CollectionsToSubscriptionsMappingAsync : Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&gt;" Usage="privateStoreResource.CollectionsToSubscriptionsMappingAsync (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.CollectionsToSubscriptionsMappingPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The CollectionsToSubscriptionsMappingPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For a given subscriptions list, the API will return a map of collections and the related subscriptions from the supplied list.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collectionsToSubscriptionsMapping
            Operation Id: PrivateStore_CollectionsToSubscriptionsMapping
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string privateStoreId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string privateStoreId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.CreateResourceIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (privateStoreId As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Marketplace.PrivateStoreResource.CreateResourceIdentifier privateStoreId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateStoreId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="privateStoreId">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Marketplace.PrivateStoreResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Marketplace.PrivateStoreData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Marketplace.PrivateStoreData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Marketplace.PrivateStoreResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As PrivateStoreData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Marketplace.PrivateStoreData" Usage="Azure.ResourceManager.Marketplace.PrivateStoreResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Marketplace.PrivateStoreData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateStoreResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the private store. All that is not saved will be lost.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateStoreResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the private store. All that is not saved will be lost.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllSubscriptionsInTenant">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt; FetchAllSubscriptionsInTenant (string nextPageToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Marketplace.Models.Subscription&gt; FetchAllSubscriptionsInTenant(string nextPageToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.FetchAllSubscriptionsInTenant(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAllSubscriptionsInTenant (Optional nextPageToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Subscription)" />
      <MemberSignature Language="F#" Value="abstract member FetchAllSubscriptionsInTenant : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;&#xA;override this.FetchAllSubscriptionsInTenant : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;" Usage="privateStoreResource.FetchAllSubscriptionsInTenant (nextPageToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextPageToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nextPageToken"> The skip token to get the next page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch all subscriptions in tenant, only for marketplace admin
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/fetchAllSubscriptionsInTenant
            Operation Id: PrivateStore_FetchAllSubscriptionsInTenant
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.Subscription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllSubscriptionsInTenantAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt; FetchAllSubscriptionsInTenantAsync (string nextPageToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Marketplace.Models.Subscription&gt; FetchAllSubscriptionsInTenantAsync(string nextPageToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.FetchAllSubscriptionsInTenantAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchAllSubscriptionsInTenantAsync (Optional nextPageToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Subscription)" />
      <MemberSignature Language="F#" Value="abstract member FetchAllSubscriptionsInTenantAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;&#xA;override this.FetchAllSubscriptionsInTenantAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;" Usage="privateStoreResource.FetchAllSubscriptionsInTenantAsync (nextPageToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.Subscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextPageToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nextPageToken"> The skip token to get the next page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch all subscriptions in tenant, only for marketplace admin
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/fetchAllSubscriptionsInTenant
            Operation Id: PrivateStore_FetchAllSubscriptionsInTenant
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.Subscription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.PrivateStoreResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateStoreResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;" Usage="privateStoreResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about the private store
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdminRequestApprovalsResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt; GetAdminRequestApprovalsResource (string adminRequestApprovalId, string publisherId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt; GetAdminRequestApprovalsResource(string adminRequestApprovalId, string publisherId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetAdminRequestApprovalsResource(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminRequestApprovalsResource (adminRequestApprovalId As String, publisherId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AdminRequestApprovalsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAdminRequestApprovalsResource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&#xA;override this.GetAdminRequestApprovalsResource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;" Usage="privateStoreResource.GetAdminRequestApprovalsResource (adminRequestApprovalId, publisherId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adminRequestApprovalId" Type="System.String" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="adminRequestApprovalId"> The admin request approval ID to get create or update. </param>
        <param name="publisherId"> The publisher id of this offer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get open approval requests
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}
            Operation Id: PrivateStore_GetAdminRequestApproval
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="adminRequestApprovalId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="adminRequestApprovalId" /> or <paramref name="publisherId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdminRequestApprovalsResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&gt; GetAdminRequestApprovalsResourceAsync (string adminRequestApprovalId, string publisherId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&gt; GetAdminRequestApprovalsResourceAsync(string adminRequestApprovalId, string publisherId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetAdminRequestApprovalsResourceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminRequestApprovalsResourceAsync (adminRequestApprovalId As String, publisherId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AdminRequestApprovalsResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAdminRequestApprovalsResourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&gt;&#xA;override this.GetAdminRequestApprovalsResourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&gt;" Usage="privateStoreResource.GetAdminRequestApprovalsResourceAsync (adminRequestApprovalId, publisherId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.AdminRequestApprovalsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adminRequestApprovalId" Type="System.String" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="adminRequestApprovalId"> The admin request approval ID to get create or update. </param>
        <param name="publisherId"> The publisher id of this offer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get open approval requests
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}
            Operation Id: PrivateStore_GetAdminRequestApproval
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="adminRequestApprovalId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="adminRequestApprovalId" /> or <paramref name="publisherId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdminRequestApprovalsResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Marketplace.AdminRequestApprovalsResourceCollection GetAdminRequestApprovalsResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Marketplace.AdminRequestApprovalsResourceCollection GetAdminRequestApprovalsResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetAdminRequestApprovalsResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminRequestApprovalsResources () As AdminRequestApprovalsResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAdminRequestApprovalsResources : unit -&gt; Azure.ResourceManager.Marketplace.AdminRequestApprovalsResourceCollection&#xA;override this.GetAdminRequestApprovalsResources : unit -&gt; Azure.ResourceManager.Marketplace.AdminRequestApprovalsResourceCollection" Usage="privateStoreResource.GetAdminRequestApprovalsResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Marketplace.AdminRequestApprovalsResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AdminRequestApprovalsResources in the PrivateStore. </summary>
        <returns> An object representing collection of AdminRequestApprovalsResources and their operations over a AdminRequestApprovalsResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateStoreResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&gt;" Usage="privateStoreResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.PrivateStoreResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about the private store
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt; GetCollection (string collectionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.CollectionResource&gt; GetCollection(string collectionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetCollection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollection (collectionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CollectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCollection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;&#xA;override this.GetCollection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;" Usage="privateStoreResource.GetCollection (collectionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collectionId"> The collection ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets private store collection
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}
            Operation Id: PrivateStoreCollection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;&gt; GetCollectionAsync (string collectionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.CollectionResource&gt;&gt; GetCollectionAsync(string collectionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetCollectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionAsync (collectionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CollectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;&gt;&#xA;override this.GetCollectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;&gt;" Usage="privateStoreResource.GetCollectionAsync (collectionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.CollectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collectionId"> The collection ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets private store collection
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}
            Operation Id: PrivateStoreCollection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCollections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Marketplace.CollectionCollection GetCollections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Marketplace.CollectionCollection GetCollections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetCollections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollections () As CollectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCollections : unit -&gt; Azure.ResourceManager.Marketplace.CollectionCollection&#xA;override this.GetCollections : unit -&gt; Azure.ResourceManager.Marketplace.CollectionCollection" Usage="privateStoreResource.GetCollections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Marketplace.CollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CollectionResources in the PrivateStore. </summary>
        <returns> An object representing collection of CollectionResources and their operations over a CollectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewPlansNotifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt; GetNewPlansNotifications (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt; GetNewPlansNotifications(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetNewPlansNotifications(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNewPlansNotifications (Optional cancellationToken As CancellationToken = Nothing) As Response(Of NewPlansNotificationsList)" />
      <MemberSignature Language="F#" Value="abstract member GetNewPlansNotifications : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&#xA;override this.GetNewPlansNotifications : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;" Usage="privateStoreResource.GetNewPlansNotifications cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List new plans notifications
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listNewPlansNotifications
            Operation Id: PrivateStore_ListNewPlansNotifications
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewPlansNotificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&gt; GetNewPlansNotificationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&gt; GetNewPlansNotificationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetNewPlansNotificationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNewPlansNotificationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NewPlansNotificationsList))" />
      <MemberSignature Language="F#" Value="abstract member GetNewPlansNotificationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&gt;&#xA;override this.GetNewPlansNotificationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&gt;" Usage="privateStoreResource.GetNewPlansNotificationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.NewPlansNotificationsList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List new plans notifications
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listNewPlansNotifications
            Operation Id: PrivateStore_ListNewPlansNotifications
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestApprovalResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt; GetRequestApprovalResource (string requestApprovalId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.RequestApprovalResource&gt; GetRequestApprovalResource(string requestApprovalId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetRequestApprovalResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestApprovalResource (requestApprovalId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RequestApprovalResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRequestApprovalResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&#xA;override this.GetRequestApprovalResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;" Usage="privateStoreResource.GetRequestApprovalResource (requestApprovalId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestApprovalId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestApprovalId"> The request approval ID to get create or update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get open request approval details
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}
            Operation Id: PrivateStore_GetRequestApproval
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="requestApprovalId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestApprovalId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestApprovalResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&gt; GetRequestApprovalResourceAsync (string requestApprovalId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&gt; GetRequestApprovalResourceAsync(string requestApprovalId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetRequestApprovalResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestApprovalResourceAsync (requestApprovalId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RequestApprovalResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRequestApprovalResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&gt;&#xA;override this.GetRequestApprovalResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&gt;" Usage="privateStoreResource.GetRequestApprovalResourceAsync (requestApprovalId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.RequestApprovalResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestApprovalId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestApprovalId"> The request approval ID to get create or update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get open request approval details
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}
            Operation Id: PrivateStore_GetRequestApproval
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="requestApprovalId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestApprovalId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestApprovalResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Marketplace.RequestApprovalResourceCollection GetRequestApprovalResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Marketplace.RequestApprovalResourceCollection GetRequestApprovalResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetRequestApprovalResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestApprovalResources () As RequestApprovalResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRequestApprovalResources : unit -&gt; Azure.ResourceManager.Marketplace.RequestApprovalResourceCollection&#xA;override this.GetRequestApprovalResources : unit -&gt; Azure.ResourceManager.Marketplace.RequestApprovalResourceCollection" Usage="privateStoreResource.GetRequestApprovalResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Marketplace.RequestApprovalResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RequestApprovalResources in the PrivateStore. </summary>
        <returns> An object representing collection of RequestApprovalResources and their operations over a RequestApprovalResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStopSellOffersPlansNotifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt; GetStopSellOffersPlansNotifications (Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions stopSellSubscriptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt; GetStopSellOffersPlansNotifications(class Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions stopSellSubscriptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetStopSellOffersPlansNotifications(Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStopSellOffersPlansNotifications (Optional stopSellSubscriptions As StopSellSubscriptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StopSellOffersPlansNotificationsList)" />
      <MemberSignature Language="F#" Value="abstract member GetStopSellOffersPlansNotifications : Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&#xA;override this.GetStopSellOffersPlansNotifications : Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;" Usage="privateStoreResource.GetStopSellOffersPlansNotifications (stopSellSubscriptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopSellSubscriptions" Type="Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stopSellSubscriptions"> The StopSellSubscriptions to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List stop sell notifications for both stop sell offers and stop sell plans
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listStopSellOffersPlansNotifications
            Operation Id: PrivateStore_ListStopSellOffersPlansNotifications
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStopSellOffersPlansNotificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&gt; GetStopSellOffersPlansNotificationsAsync (Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions stopSellSubscriptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&gt; GetStopSellOffersPlansNotificationsAsync(class Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions stopSellSubscriptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetStopSellOffersPlansNotificationsAsync(Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStopSellOffersPlansNotificationsAsync (Optional stopSellSubscriptions As StopSellSubscriptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StopSellOffersPlansNotificationsList))" />
      <MemberSignature Language="F#" Value="abstract member GetStopSellOffersPlansNotificationsAsync : Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&gt;&#xA;override this.GetStopSellOffersPlansNotificationsAsync : Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&gt;" Usage="privateStoreResource.GetStopSellOffersPlansNotificationsAsync (stopSellSubscriptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.StopSellOffersPlansNotificationsList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopSellSubscriptions" Type="Azure.ResourceManager.Marketplace.Models.StopSellSubscriptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stopSellSubscriptions"> The StopSellSubscriptions to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List stop sell notifications for both stop sell offers and stop sell plans
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listStopSellOffersPlansNotifications
            Operation Id: PrivateStore_ListStopSellOffersPlansNotifications
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionsContext">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt; GetSubscriptionsContext (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt; GetSubscriptionsContext(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetSubscriptionsContext(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionsContext (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionsContextList)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionsContext : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&#xA;override this.GetSubscriptionsContext : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;" Usage="privateStoreResource.GetSubscriptionsContext cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the subscriptions in the private store context
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listSubscriptionsContext
            Operation Id: PrivateStore_ListSubscriptionsContext
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionsContextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&gt; GetSubscriptionsContextAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&gt; GetSubscriptionsContextAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.GetSubscriptionsContextAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionsContextAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionsContextList))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionsContextAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&gt;&#xA;override this.GetSubscriptionsContextAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&gt;" Usage="privateStoreResource.GetSubscriptionsContextAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.SubscriptionsContextList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the subscriptions in the private store context
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listSubscriptionsContext
            Operation Id: PrivateStore_ListSubscriptionsContext
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Marketplace.PrivateStoreResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Marketplace.PrivateStoreResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryApprovedPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt; QueryApprovedPlans (Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt; QueryApprovedPlans(class Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryApprovedPlans(Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryApprovedPlans (Optional payload As QueryApprovedPlansPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueryApprovedPlansResponse)" />
      <MemberSignature Language="F#" Value="abstract member QueryApprovedPlans : Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&#xA;override this.QueryApprovedPlans : Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;" Usage="privateStoreResource.QueryApprovedPlans (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The QueryApprovedPlansPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get map of plans and related approved subscriptions.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryApprovedPlans
            Operation Id: PrivateStore_QueryApprovedPlans
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryApprovedPlansAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&gt; QueryApprovedPlansAsync (Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&gt; QueryApprovedPlansAsync(class Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryApprovedPlansAsync(Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryApprovedPlansAsync (Optional payload As QueryApprovedPlansPayload = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueryApprovedPlansResponse))" />
      <MemberSignature Language="F#" Value="abstract member QueryApprovedPlansAsync : Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&gt;&#xA;override this.QueryApprovedPlansAsync : Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&gt;" Usage="privateStoreResource.QueryApprovedPlansAsync (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.QueryApprovedPlansPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The QueryApprovedPlansPayload to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get map of plans and related approved subscriptions.
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryApprovedPlans
            Operation Id: PrivateStore_QueryApprovedPlans
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryNotificationsState">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt; QueryNotificationsState (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt; QueryNotificationsState(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryNotificationsState(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryNotificationsState (Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateStoreNotificationsState)" />
      <MemberSignature Language="F#" Value="abstract member QueryNotificationsState : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&#xA;override this.QueryNotificationsState : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;" Usage="privateStoreResource.QueryNotificationsState cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private store notifications state
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState
            Operation Id: PrivateStore_QueryNotificationsState
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryNotificationsStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&gt; QueryNotificationsStateAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&gt; QueryNotificationsStateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryNotificationsStateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryNotificationsStateAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateStoreNotificationsState))" />
      <MemberSignature Language="F#" Value="abstract member QueryNotificationsStateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&gt;&#xA;override this.QueryNotificationsStateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&gt;" Usage="privateStoreResource.QueryNotificationsStateAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Marketplace.Models.PrivateStoreNotificationsState&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private store notifications state
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState
            Operation Id: PrivateStore_QueryNotificationsState
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryOffers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryOffers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryOffers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryOffers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryOffers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OfferProperties)" />
      <MemberSignature Language="F#" Value="abstract member QueryOffers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;&#xA;override this.QueryOffers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;" Usage="privateStoreResource.QueryOffers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of offers, regardless the collections
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryOffers
            Operation Id: PrivateStore_QueryOffers
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.OfferProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryOffersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryOffersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryOffersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryOffersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryOffersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OfferProperties)" />
      <MemberSignature Language="F#" Value="abstract member QueryOffersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;&#xA;override this.QueryOffersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;" Usage="privateStoreResource.QueryOffersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of offers, regardless the collections
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryOffers
            Operation Id: PrivateStore_QueryOffers
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.OfferProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUserOffers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryUserOffers (Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryUserOffers(class Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryUserOffers(Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryUserOffers (Optional payload As QueryUserOffersProperties = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OfferProperties)" />
      <MemberSignature Language="F#" Value="abstract member QueryUserOffers : Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;&#xA;override this.QueryUserOffers : Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;" Usage="privateStoreResource.QueryUserOffers (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The QueryUserOffersProperties to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of user's approved offers for the provided offers and subscriptions
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserOffers
            Operation Id: PrivateStore_QueryUserOffers
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.OfferProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUserOffersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryUserOffersAsync (Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties payload = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Marketplace.Models.OfferProperties&gt; QueryUserOffersAsync(class Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties payload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.QueryUserOffersAsync(Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryUserOffersAsync (Optional payload As QueryUserOffersProperties = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OfferProperties)" />
      <MemberSignature Language="F#" Value="abstract member QueryUserOffersAsync : Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;&#xA;override this.QueryUserOffersAsync : Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;" Usage="privateStoreResource.QueryUserOffersAsync (payload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Marketplace.Models.OfferProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Azure.ResourceManager.Marketplace.Models.QueryUserOffersProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="payload"> The QueryUserOffersProperties to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of user's approved offers for the provided offers and subscriptions
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserOffers
            Operation Id: PrivateStore_QueryUserOffers
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Marketplace.Models.OfferProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Marketplace.PrivateStoreResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Marketplace.PrivateStoreResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Marketplace.PrivateStoreData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Marketplace.PrivateStoreData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.Update(Azure.WaitUntil,Azure.ResourceManager.Marketplace.PrivateStoreData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As PrivateStoreData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Marketplace.PrivateStoreData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Marketplace.PrivateStoreData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateStoreResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.Marketplace.PrivateStoreData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The PrivateStore to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Changes private store properties
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Marketplace.PrivateStoreData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Marketplace.PrivateStoreData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Marketplace.PrivateStoreResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Marketplace.PrivateStoreData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As PrivateStoreData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Marketplace.PrivateStoreData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Marketplace.PrivateStoreData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateStoreResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Marketplace</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.Marketplace.PrivateStoreData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The PrivateStore to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Changes private store properties
            Request Path: /providers/Microsoft.Marketplace/privateStores/{privateStoreId}
            Operation Id: PrivateStore_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
