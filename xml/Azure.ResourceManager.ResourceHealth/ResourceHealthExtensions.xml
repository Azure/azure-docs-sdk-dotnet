<Type Name="ResourceHealthExtensions" FullName="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions">
  <TypeSignature Language="C#" Value="public static class ResourceHealthExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResourceHealthExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResourceHealthExtensions" />
  <TypeSignature Language="F#" Value="type ResourceHealthExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ResourceHealth. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAvailabilityStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatus (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatus(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatus(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatus (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatus : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatus (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets current availability status for a single resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_GetByResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatus(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt; GetAvailabilityStatusAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt; GetAvailabilityStatusAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceHealthAvailabilityStatus))" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusAsync (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets current availability status for a single resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_GetByResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatus(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatuses">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatuses (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatuses(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatuses(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatuses (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatuses : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatuses (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all historical availability transitions and impacting events for a single resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatuses(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusesAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusesAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesAsync (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all historical availability transitions and impacting events for a single resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatuses(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesByResourceGroup">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesByResourceGroup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesByResourceGroup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesByResourceGroup(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusesByResourceGroup (resourceGroupResource As ResourceGroupResource, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusesByResourceGroup : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesByResourceGroup (resourceGroupResource, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListByResourceGroup</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthResourceGroupResource.GetAvailabilityStatusesByResourceGroup(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesByResourceGroupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesByResourceGroupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesByResourceGroupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusesByResourceGroupAsync (resourceGroupResource As ResourceGroupResource, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusesByResourceGroupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesByResourceGroupAsync (resourceGroupResource, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListByResourceGroup</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthResourceGroupResource.GetAvailabilityStatusesByResourceGroup(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesBySubscription">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscription (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscription(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesBySubscription(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusesBySubscription (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusesBySubscription : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesBySubscription (subscriptionResource, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscription(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscriptionAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscriptionAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesBySubscriptionAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusesBySubscriptionAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusesBySubscriptionAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusesBySubscriptionAsync (subscriptionResource, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscription(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusOfChildResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusOfChildResource (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusOfChildResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResource (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets current availability status for a single resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses/current</description></item><item><term>Operation Id</term><description>ChildAvailabilityStatuses_GetByResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatusOfChildResource(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusOfChildResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt; GetAvailabilityStatusOfChildResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt; GetAvailabilityStatusOfChildResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusOfChildResourceAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceHealthAvailabilityStatus))" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusOfChildResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResourceAsync (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets current availability status for a single resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses/current</description></item><item><term>Operation Id</term><description>ChildAvailabilityStatuses_GetByResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatusOfChildResource(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusOfChildResources">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResources (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResources(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResources(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusOfChildResources (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusOfChildResources : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResources (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the all the children and its current health status for a parent resource. Use the nextLink property in the response to get the next page of children current health
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childResources</description></item><item><term>Operation Id</term><description>ChildResources_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatusOfChildResources(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusOfChildResourcesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResourcesAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusOfChildResourcesAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResourcesAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusOfChildResourcesAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusOfChildResourcesAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusOfChildResourcesAsync (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the all the children and its current health status for a parent resource. Use the nextLink property in the response to get the next page of children current health
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childResources</description></item><item><term>Operation Id</term><description>ChildResources_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetAvailabilityStatusOfChildResources(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthEventsOfSingleResource">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt; GetHealthEventsOfSingleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt; GetHealthEventsOfSingleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHealthEventsOfSingleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthEventsOfSingleResource (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthEventData)" />
      <MemberSignature Language="F#" Value="static member GetHealthEventsOfSingleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHealthEventsOfSingleResource (client, scope, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists current service health events for given resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/events</description></item><item><term>Operation Id</term><description>Events_ListBySingleResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetHealthEventsOfSingleResource(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthEventsOfSingleResourceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt; GetHealthEventsOfSingleResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt; GetHealthEventsOfSingleResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHealthEventsOfSingleResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthEventsOfSingleResourceAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthEventData)" />
      <MemberSignature Language="F#" Value="static member GetHealthEventsOfSingleResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHealthEventsOfSingleResourceAsync (client, scope, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists current service health events for given resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/events</description></item><item><term>Operation Id</term><description>Events_ListBySingleResource</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetHealthEventsOfSingleResource(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalAvailabilityStatusesOfChildResource">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetHistoricalAvailabilityStatusesOfChildResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetHistoricalAvailabilityStatusesOfChildResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHistoricalAvailabilityStatusesOfChildResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHistoricalAvailabilityStatusesOfChildResource (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetHistoricalAvailabilityStatusesOfChildResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHistoricalAvailabilityStatusesOfChildResource (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the historical availability statuses for a single child resource. Use the nextLink property in the response to get the next page of availability status
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses</description></item><item><term>Operation Id</term><description>ChildAvailabilityStatuses_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetHistoricalAvailabilityStatusesOfChildResource(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalAvailabilityStatusesOfChildResourceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetHistoricalAvailabilityStatusesOfChildResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetHistoricalAvailabilityStatusesOfChildResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHistoricalAvailabilityStatusesOfChildResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHistoricalAvailabilityStatusesOfChildResourceAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="static member GetHistoricalAvailabilityStatusesOfChildResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetHistoricalAvailabilityStatusesOfChildResourceAsync (client, scope, filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the historical availability statuses for a single child resource. Use the nextLink property in the response to get the next page of availability status
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses</description></item><item><term>Operation Id</term><description>ChildAvailabilityStatuses_List</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetHistoricalAvailabilityStatusesOfChildResource(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEvent">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt; GetResourceHealthEvent (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt; GetResourceHealthEvent(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEvent(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthEvent (subscriptionResource As SubscriptionResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceHealthEventResource)" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthEvent : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEvent (subscriptionResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEvent(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEventAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt; GetResourceHealthEventAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt; GetResourceHealthEventAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthEventAsync (subscriptionResource As SubscriptionResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceHealthEventResource))" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthEventAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventAsync (subscriptionResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEventAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEventImpactedResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource GetResourceHealthEventImpactedResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource GetResourceHealthEventImpactedResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventImpactedResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthEventImpactedResource (client As ArmClient, id As ResourceIdentifier) As ResourceHealthEventImpactedResource" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthEventImpactedResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventImpactedResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetResourceHealthEventImpactedResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEventResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource GetResourceHealthEventResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource GetResourceHealthEventResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthEventResource (client As ArmClient, id As ResourceIdentifier) As ResourceHealthEventResource" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthEventResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEventResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetResourceHealthEventResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEvents">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection GetResourceHealthEvents (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection GetResourceHealthEvents(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEvents(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthEvents (subscriptionResource As SubscriptionResource) As ResourceHealthEventCollection" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthEvents : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthEvents subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ResourceHealthEventResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEvents" /> instead.</description></item></summary>
        <returns> An object representing collection of ResourceHealthEventResources and their operations over a ResourceHealthEventResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthMetadataEntities">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityCollection GetResourceHealthMetadataEntities (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityCollection GetResourceHealthMetadataEntities(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntities(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthMetadataEntities (tenantResource As TenantResource) As ResourceHealthMetadataEntityCollection" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthMetadataEntities : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntities tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ResourceHealthMetadataEntityResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetResourceHealthMetadataEntities" /> instead.</description></item></summary>
        <returns> An object representing collection of ResourceHealthMetadataEntityResources and their operations over a ResourceHealthMetadataEntityResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthMetadataEntity">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt; GetResourceHealthMetadataEntity (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt; GetResourceHealthMetadataEntity(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntity(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthMetadataEntity (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceHealthMetadataEntityResource)" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthMetadataEntity : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntity (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Name of metadata entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of metadata entities.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/metadata/{name}</description></item><item><term>Operation Id</term><description>Metadata_GetEntity</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetResourceHealthMetadataEntity(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthMetadataEntityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;&gt; GetResourceHealthMetadataEntityAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;&gt; GetResourceHealthMetadataEntityAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntityAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthMetadataEntityAsync (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceHealthMetadataEntityResource))" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthMetadataEntityAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntityAsync (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Name of metadata entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of metadata entities.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/metadata/{name}</description></item><item><term>Operation Id</term><description>Metadata_GetEntity</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetResourceHealthMetadataEntityAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthMetadataEntityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource GetResourceHealthMetadataEntityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource GetResourceHealthMetadataEntityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourceHealthMetadataEntityResource (client As ArmClient, id As ResourceIdentifier) As ResourceHealthMetadataEntityResource" />
      <MemberSignature Language="F#" Value="static member GetResourceHealthMetadataEntityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetResourceHealthMetadataEntityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetResourceHealthMetadataEntityResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEmergingIssue">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt; GetServiceEmergingIssue (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent issueName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt; GetServiceEmergingIssue(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent issueName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssue(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceEmergingIssue (tenantResource As TenantResource, issueName As EmergingIssueNameContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceEmergingIssueResource)" />
      <MemberSignature Language="F#" Value="static member GetServiceEmergingIssue : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssue (tenantResource, issueName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="issueName" Type="Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="issueName"> The name of the emerging issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Azure services' emerging issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}</description></item><item><term>Operation Id</term><description>EmergingIssues_Get</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetServiceEmergingIssue(Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEmergingIssueAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;&gt; GetServiceEmergingIssueAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent issueName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;&gt; GetServiceEmergingIssueAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent issueName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssueAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceEmergingIssueAsync (tenantResource As TenantResource, issueName As EmergingIssueNameContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceEmergingIssueResource))" />
      <MemberSignature Language="F#" Value="static member GetServiceEmergingIssueAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssueAsync (tenantResource, issueName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="issueName" Type="Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="issueName"> The name of the emerging issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Azure services' emerging issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}</description></item><item><term>Operation Id</term><description>EmergingIssues_Get</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetServiceEmergingIssueAsync(Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEmergingIssueResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource GetServiceEmergingIssueResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource GetServiceEmergingIssueResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssueResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceEmergingIssueResource (client As ArmClient, id As ResourceIdentifier) As ServiceEmergingIssueResource" />
      <MemberSignature Language="F#" Value="static member GetServiceEmergingIssueResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssueResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource.CreateResourceIdentifier(Azure.ResourceManager.ResourceHealth.Models.EmergingIssueNameContent)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetServiceEmergingIssueResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEmergingIssues">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueCollection GetServiceEmergingIssues (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueCollection GetServiceEmergingIssues(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssues(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceEmergingIssues (tenantResource As TenantResource) As ServiceEmergingIssueCollection" />
      <MemberSignature Language="F#" Value="static member GetServiceEmergingIssues : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetServiceEmergingIssues tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ServiceEmergingIssueResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetServiceEmergingIssues" /> instead.</description></item></summary>
        <returns> An object representing collection of ServiceEmergingIssueResources and their operations over a ServiceEmergingIssueResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEvent">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt; GetTenantResourceHealthEvent (this Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt; GetTenantResourceHealthEvent(class Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEvent(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEvent (tenantResource As TenantResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantResourceHealthEventResource)" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEvent : Azure.ResourceManager.Resources.TenantResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEvent (tenantResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the tenant by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetByTenantIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetTenantResourceHealthEvent(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEventAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;&gt; GetTenantResourceHealthEventAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;&gt; GetTenantResourceHealthEventAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEventAsync (tenantResource As TenantResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantResourceHealthEventResource))" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEventAsync : Azure.ResourceManager.Resources.TenantResource * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventAsync (tenantResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the tenant by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetByTenantIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetTenantResourceHealthEventAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEventImpactedResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource GetTenantResourceHealthEventImpactedResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource GetTenantResourceHealthEventImpactedResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventImpactedResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEventImpactedResource (client As ArmClient, id As ResourceIdentifier) As TenantResourceHealthEventImpactedResource" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEventImpactedResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventImpactedResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetTenantResourceHealthEventImpactedResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEventResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource GetTenantResourceHealthEventResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource GetTenantResourceHealthEventResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEventResource (client As ArmClient, id As ResourceIdentifier) As TenantResourceHealthEventResource" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEventResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthArmClient.GetTenantResourceHealthEventResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEvents">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventCollection GetTenantResourceHealthEvents (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventCollection GetTenantResourceHealthEvents(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEvents(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEvents (tenantResource As TenantResource) As TenantResourceHealthEventCollection" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEvents : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEvents tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of TenantResourceHealthEventResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthTenantResource.GetTenantResourceHealthEvents" /> instead.</description></item></summary>
        <returns> An object representing collection of TenantResourceHealthEventResources and their operations over a TenantResourceHealthEventResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
