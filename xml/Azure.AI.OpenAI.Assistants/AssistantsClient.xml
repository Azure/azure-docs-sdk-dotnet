<Type Name="AssistantsClient" FullName="Azure.AI.OpenAI.Assistants.AssistantsClient">
  <TypeSignature Language="C#" Value="public class AssistantsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssistantsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.Assistants.AssistantsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AssistantsClient" />
  <TypeSignature Language="F#" Value="type AssistantsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Azure OpenAI APIs for Assistants. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssistantsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AssistantsClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (string openAIApiKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string openAIApiKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (openAIApiKey As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : string -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient openAIApiKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openAIApiKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="openAIApiKey"> An OpenAI API key as obtained from platform.openai.com. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with OpenAI's api.openai.com endpoint.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="openAIApiKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (string openAIApiKey, Azure.AI.OpenAI.Assistants.AssistantsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string openAIApiKey, class Azure.AI.OpenAI.Assistants.AssistantsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.String,Azure.AI.OpenAI.Assistants.AssistantsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (openAIApiKey As String, options As AssistantsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : string * Azure.AI.OpenAI.Assistants.AssistantsClientOptions -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient (openAIApiKey, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openAIApiKey" Type="System.String" />
        <Parameter Name="options" Type="Azure.AI.OpenAI.Assistants.AssistantsClientOptions" />
      </Parameters>
      <Docs>
        <param name="openAIApiKey"> An OpenAI API key as obtained from platform.openai.com. </param>
        <param name="options"> Additional options for customizing the behavior of the client. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with OpenAI's api.openai.com endpoint.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="openAIApiKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (Uri endpoint, Azure.AzureKeyCredential keyCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential keyCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, keyCredential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient (endpoint, keyCredential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="keyCredential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> An Azure OpenAI resource URL, e.g. https://my-resource.openai.azure.com. </param>
        <param name="keyCredential"> The authentication information for the Azure OpenAI resource. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with an Azure OpenAI resource.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
                Always thrown until Azure OpenAI support for /assistants is available.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (Uri endpoint, Azure.Core.TokenCredential tokenCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential tokenCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tokenCredential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient (endpoint, tokenCredential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tokenCredential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> An Azure OpenAI resource URL, e.g. https://my-resource.openai.azure.com. </param>
        <param name="tokenCredential"> The authentication information for the Azure OpenAI resource. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with an Azure OpenAI resource.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
                Always thrown until Azure OpenAI support for /assistants is available.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (Uri endpoint, Azure.AzureKeyCredential keyCredential, Azure.AI.OpenAI.Assistants.AssistantsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential keyCredential, class Azure.AI.OpenAI.Assistants.AssistantsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.OpenAI.Assistants.AssistantsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, keyCredential As AzureKeyCredential, options As AssistantsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : Uri * Azure.AzureKeyCredential * Azure.AI.OpenAI.Assistants.AssistantsClientOptions -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient (endpoint, keyCredential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="keyCredential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.OpenAI.Assistants.AssistantsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> An Azure OpenAI resource URL, e.g. https://my-resource.openai.azure.com. </param>
        <param name="keyCredential"> The authentication information for the Azure OpenAI resource. </param>
        <param name="options"> Additional options for customizing the behavior of the client. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with an Azure OpenAI resource.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
                Always thrown until Azure OpenAI support for /assistants is available.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssistantsClient (Uri endpoint, Azure.Core.TokenCredential tokenCredential, Azure.AI.OpenAI.Assistants.AssistantsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential tokenCredential, class Azure.AI.OpenAI.Assistants.AssistantsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.OpenAI.Assistants.AssistantsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tokenCredential As TokenCredential, options As AssistantsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.Assistants.AssistantsClient : Uri * Azure.Core.TokenCredential * Azure.AI.OpenAI.Assistants.AssistantsClientOptions -&gt; Azure.AI.OpenAI.Assistants.AssistantsClient" Usage="new Azure.AI.OpenAI.Assistants.AssistantsClient (endpoint, tokenCredential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tokenCredential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.OpenAI.Assistants.AssistantsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> An Azure OpenAI resource URL, e.g. https://my-resource.openai.azure.com. </param>
        <param name="tokenCredential"> The authentication information for the Azure OpenAI resource. </param>
        <param name="options"> Additional options for customizing the behavior of the client. </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.Assistants.AssistantsClient" /> for use with an Azure OpenAI resource.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
                Always thrown until Azure OpenAI support for /assistants is available.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; CancelRun (string threadId, string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; CancelRun(string threadId, string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CancelRun(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelRun (threadId As String, runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member CancelRun : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.CancelRun : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.CancelRun (threadId, runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread being run. </param>
        <param name="runId"> The ID of the run to cancel. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a run of an in progress thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CancelRunAsync (string threadId, string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CancelRunAsync(string threadId, string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CancelRunAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelRunAsync (threadId As String, runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member CancelRunAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.CancelRunAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.CancelRunAsync (threadId, runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread being run. </param>
        <param name="runId"> The ID of the run to cancel. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a run of an in progress thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAssistant">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt; CreateAssistant (Azure.AI.OpenAI.Assistants.AssistantCreationOptions assistantCreationOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt; CreateAssistant(class Azure.AI.OpenAI.Assistants.AssistantCreationOptions assistantCreationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateAssistant(Azure.AI.OpenAI.Assistants.AssistantCreationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAssistant (assistantCreationOptions As AssistantCreationOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Assistant)" />
      <MemberSignature Language="F#" Value="abstract member CreateAssistant : Azure.AI.OpenAI.Assistants.AssistantCreationOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&#xA;override this.CreateAssistant : Azure.AI.OpenAI.Assistants.AssistantCreationOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;" Usage="assistantsClient.CreateAssistant (assistantCreationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantCreationOptions" Type="Azure.AI.OpenAI.Assistants.AssistantCreationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantCreationOptions"> The request details to use when creating a new assistant. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantCreationOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAssistantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; CreateAssistantAsync (Azure.AI.OpenAI.Assistants.AssistantCreationOptions assistantCreationOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; CreateAssistantAsync(class Azure.AI.OpenAI.Assistants.AssistantCreationOptions assistantCreationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateAssistantAsync(Azure.AI.OpenAI.Assistants.AssistantCreationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAssistantAsync (assistantCreationOptions As AssistantCreationOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Assistant))" />
      <MemberSignature Language="F#" Value="abstract member CreateAssistantAsync : Azure.AI.OpenAI.Assistants.AssistantCreationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&#xA;override this.CreateAssistantAsync : Azure.AI.OpenAI.Assistants.AssistantCreationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;" Usage="assistantsClient.CreateAssistantAsync (assistantCreationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantCreationOptions" Type="Azure.AI.OpenAI.Assistants.AssistantCreationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantCreationOptions"> The request details to use when creating a new assistant. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantCreationOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt; CreateMessage (string threadId, Azure.AI.OpenAI.Assistants.MessageRole role, string content, System.Collections.Generic.IEnumerable&lt;string&gt; fileIds = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt; CreateMessage(string threadId, valuetype Azure.AI.OpenAI.Assistants.MessageRole role, string content, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fileIds, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateMessage(System.String,Azure.AI.OpenAI.Assistants.MessageRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessage (threadId As String, role As MessageRole, content As String, Optional fileIds As IEnumerable(Of String) = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadMessage)" />
      <MemberSignature Language="F#" Value="abstract member CreateMessage : string * Azure.AI.OpenAI.Assistants.MessageRole * string * seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&#xA;override this.CreateMessage : string * Azure.AI.OpenAI.Assistants.MessageRole * string * seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;" Usage="assistantsClient.CreateMessage (threadId, role, content, fileIds, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="role" Type="Azure.AI.OpenAI.Assistants.MessageRole" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="fileIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to create the new message on. </param>
        <param name="role"> The role to associate with the new message. </param>
        <param name="content"> The textual content for the new message. </param>
        <param name="fileIds"> A list of up to 10 file IDs to associate with the message, as used by tools like 'code_interpreter' or 'retrieval' that can read files. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new message on a specified thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; CreateMessageAsync (string threadId, Azure.AI.OpenAI.Assistants.MessageRole role, string content, System.Collections.Generic.IEnumerable&lt;string&gt; fileIds = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; CreateMessageAsync(string threadId, valuetype Azure.AI.OpenAI.Assistants.MessageRole role, string content, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fileIds, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateMessageAsync(System.String,Azure.AI.OpenAI.Assistants.MessageRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageAsync (threadId As String, role As MessageRole, content As String, Optional fileIds As IEnumerable(Of String) = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadMessage))" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageAsync : string * Azure.AI.OpenAI.Assistants.MessageRole * string * seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&#xA;override this.CreateMessageAsync : string * Azure.AI.OpenAI.Assistants.MessageRole * string * seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;" Usage="assistantsClient.CreateMessageAsync (threadId, role, content, fileIds, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="role" Type="Azure.AI.OpenAI.Assistants.MessageRole" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="fileIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to create the new message on. </param>
        <param name="role"> The role to associate with the new message. </param>
        <param name="content"> The textual content for the new message. </param>
        <param name="fileIds"> A list of up to 10 file IDs to associate with the message, as used by tools like 'code_interpreter' or 'retrieval' that can read files. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new message on a specified thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateRun (Azure.AI.OpenAI.Assistants.AssistantThread thread, Azure.AI.OpenAI.Assistants.Assistant assistant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateRun(class Azure.AI.OpenAI.Assistants.AssistantThread thread, class Azure.AI.OpenAI.Assistants.Assistant assistant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRun(Azure.AI.OpenAI.Assistants.AssistantThread,Azure.AI.OpenAI.Assistants.Assistant,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRun (thread As AssistantThread, assistant As Assistant, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member CreateRun : Azure.AI.OpenAI.Assistants.AssistantThread * Azure.AI.OpenAI.Assistants.Assistant * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.CreateRun : Azure.AI.OpenAI.Assistants.AssistantThread * Azure.AI.OpenAI.Assistants.Assistant * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.CreateRun (thread, assistant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="Azure.AI.OpenAI.Assistants.AssistantThread" />
        <Parameter Name="assistant" Type="Azure.AI.OpenAI.Assistants.Assistant" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="thread"> The thread that should be run. </param>
        <param name="assistant"> The assistant that should run the thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new run of the specified thread using a specified assistant.
            </summary>
        <returns> A new <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> instance. </returns>
        <remarks>
            This method will create the run with default configuration.
            To customize the run, use <see cref="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRun(System.String,Azure.AI.OpenAI.Assistants.CreateRunOptions,System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateRun (string threadId, Azure.AI.OpenAI.Assistants.CreateRunOptions createRunOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateRun(string threadId, class Azure.AI.OpenAI.Assistants.CreateRunOptions createRunOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRun(System.String,Azure.AI.OpenAI.Assistants.CreateRunOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRun (threadId As String, createRunOptions As CreateRunOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member CreateRun : string * Azure.AI.OpenAI.Assistants.CreateRunOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.CreateRun : string * Azure.AI.OpenAI.Assistants.CreateRunOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.CreateRun (threadId, createRunOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="createRunOptions" Type="Azure.AI.OpenAI.Assistants.CreateRunOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to run. </param>
        <param name="createRunOptions"> The details for the run to create. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new run for an assistant thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="createRunOptions" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateRunAsync (Azure.AI.OpenAI.Assistants.AssistantThread thread, Azure.AI.OpenAI.Assistants.Assistant assistant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateRunAsync(class Azure.AI.OpenAI.Assistants.AssistantThread thread, class Azure.AI.OpenAI.Assistants.Assistant assistant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRunAsync(Azure.AI.OpenAI.Assistants.AssistantThread,Azure.AI.OpenAI.Assistants.Assistant,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRunAsync (thread As AssistantThread, assistant As Assistant, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member CreateRunAsync : Azure.AI.OpenAI.Assistants.AssistantThread * Azure.AI.OpenAI.Assistants.Assistant * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.CreateRunAsync : Azure.AI.OpenAI.Assistants.AssistantThread * Azure.AI.OpenAI.Assistants.Assistant * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.CreateRunAsync (thread, assistant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="Azure.AI.OpenAI.Assistants.AssistantThread" />
        <Parameter Name="assistant" Type="Azure.AI.OpenAI.Assistants.Assistant" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="thread"> The thread that should be run. </param>
        <param name="assistant"> The assistant that should run the thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new run of the specified thread using a specified assistant.
            </summary>
        <returns> A new <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> instance. </returns>
        <remarks>
            This method will create the run with default configuration.
            To customize the run, use <see cref="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRun(System.String,Azure.AI.OpenAI.Assistants.CreateRunOptions,System.Threading.CancellationToken)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateRunAsync (string threadId, Azure.AI.OpenAI.Assistants.CreateRunOptions createRunOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateRunAsync(string threadId, class Azure.AI.OpenAI.Assistants.CreateRunOptions createRunOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateRunAsync(System.String,Azure.AI.OpenAI.Assistants.CreateRunOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRunAsync (threadId As String, createRunOptions As CreateRunOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member CreateRunAsync : string * Azure.AI.OpenAI.Assistants.CreateRunOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.CreateRunAsync : string * Azure.AI.OpenAI.Assistants.CreateRunOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.CreateRunAsync (threadId, createRunOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="createRunOptions" Type="Azure.AI.OpenAI.Assistants.CreateRunOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to run. </param>
        <param name="createRunOptions"> The details for the run to create. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new run for an assistant thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="createRunOptions" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt; CreateThread (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt; CreateThread(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThread(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThread (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantThread)" />
      <MemberSignature Language="F#" Value="abstract member CreateThread : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&#xA;override this.CreateThread : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;" Usage="assistantsClient.CreateThread cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new, empty thread using a default <see cref="T:Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions" /> instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt; CreateThread (Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions assistantThreadCreationOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt; CreateThread(class Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions assistantThreadCreationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThread(Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThread (assistantThreadCreationOptions As AssistantThreadCreationOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantThread)" />
      <MemberSignature Language="F#" Value="abstract member CreateThread : Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&#xA;override this.CreateThread : Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;" Usage="assistantsClient.CreateThread (assistantThreadCreationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantThreadCreationOptions" Type="Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantThreadCreationOptions"> The details used to create a new assistant thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new thread. Threads contain messages and can be run by assistants. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantThreadCreationOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateThreadAndRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateThreadAndRun (Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions createAndRunThreadOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; CreateThreadAndRun(class Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions createAndRunThreadOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThreadAndRun(Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThreadAndRun (createAndRunThreadOptions As CreateAndRunThreadOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member CreateThreadAndRun : Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.CreateThreadAndRun : Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.CreateThreadAndRun (createAndRunThreadOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createAndRunThreadOptions" Type="Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createAndRunThreadOptions"> The details used when creating and immediately running a new assistant thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new assistant thread and immediately starts a run using that new thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="createAndRunThreadOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateThreadAndRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateThreadAndRunAsync (Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions createAndRunThreadOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; CreateThreadAndRunAsync(class Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions createAndRunThreadOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThreadAndRunAsync(Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThreadAndRunAsync (createAndRunThreadOptions As CreateAndRunThreadOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member CreateThreadAndRunAsync : Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.CreateThreadAndRunAsync : Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.CreateThreadAndRunAsync (createAndRunThreadOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createAndRunThreadOptions" Type="Azure.AI.OpenAI.Assistants.CreateAndRunThreadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createAndRunThreadOptions"> The details used when creating and immediately running a new assistant thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new assistant thread and immediately starts a run using that new thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="createAndRunThreadOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; CreateThreadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; CreateThreadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThreadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThreadAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantThread))" />
      <MemberSignature Language="F#" Value="abstract member CreateThreadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;&#xA;override this.CreateThreadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;" Usage="assistantsClient.CreateThreadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new, empty thread using a default <see cref="T:Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions" /> instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; CreateThreadAsync (Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions assistantThreadCreationOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; CreateThreadAsync(class Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions assistantThreadCreationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.CreateThreadAsync(Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateThreadAsync (assistantThreadCreationOptions As AssistantThreadCreationOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantThread))" />
      <MemberSignature Language="F#" Value="abstract member CreateThreadAsync : Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;&#xA;override this.CreateThreadAsync : Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;" Usage="assistantsClient.CreateThreadAsync (assistantThreadCreationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantThreadCreationOptions" Type="Azure.AI.OpenAI.Assistants.AssistantThreadCreationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantThreadCreationOptions"> The details used to create a new assistant thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new thread. Threads contain messages and can be run by assistants. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantThreadCreationOptions" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAssistant">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteAssistant (string assistantId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteAssistant(string assistantId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteAssistant(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAssistant (assistantId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAssistant : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteAssistant : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="assistantsClient.DeleteAssistant (assistantId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAssistantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteAssistantAsync (string assistantId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteAssistantAsync(string assistantId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteAssistantAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAssistantAsync (assistantId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAssistantAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteAssistantAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="assistantsClient.DeleteAssistantAsync (assistantId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteFile (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteFile(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFile (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="assistantsClient.DeleteFile (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete a previously uploaded file. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteFileAsync (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteFileAsync(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFileAsync (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="assistantsClient.DeleteFileAsync (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete a previously uploaded file. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteThread (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteThread(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteThread(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteThread (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="assistantsClient.DeleteThread (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteThreadAsync (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteThreadAsync(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteThreadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteThreadAsync (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="assistantsClient.DeleteThreadAsync (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistant">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt; GetAssistant (string assistantId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt; GetAssistant(string assistantId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistant(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistant (assistantId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Assistant)" />
      <MemberSignature Language="F#" Value="abstract member GetAssistant : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&#xA;override this.GetAssistant : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;" Usage="assistantsClient.GetAssistant (assistantId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves an existing assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; GetAssistantAsync (string assistantId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; GetAssistantAsync(string assistantId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantAsync (assistantId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Assistant))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&#xA;override this.GetAssistantAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;" Usage="assistantsClient.GetAssistantAsync (assistantId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves an existing assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt; GetAssistantFile (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt; GetAssistantFile(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantFile(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantFile (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantFile)" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&#xA;override this.GetAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;" Usage="assistantsClient.GetAssistantFile (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant associated with the attached file. </param>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves a file attached to an assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; GetAssistantFileAsync (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; GetAssistantFileAsync(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantFileAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantFileAsync (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantFile))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&#xA;override this.GetAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;" Usage="assistantsClient.GetAssistantFileAsync (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant associated with the attached file. </param>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves a file attached to an assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantFiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; GetAssistantFiles (string assistantId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; GetAssistantFiles(string assistantId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantFiles(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantFiles (assistantId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of AssistantFile))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantFiles : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&#xA;override this.GetAssistantFiles : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;" Usage="assistantsClient.GetAssistantFiles (assistantId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to retrieve the list of attached files for. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of files attached to a specific assistant, as used by tools that can read files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&gt; GetAssistantFilesAsync (string assistantId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&gt; GetAssistantFilesAsync(string assistantId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantFilesAsync(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantFilesAsync (assistantId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of AssistantFile)))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantFilesAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&gt;&#xA;override this.GetAssistantFilesAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&gt;" Usage="assistantsClient.GetAssistantFilesAsync (assistantId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to retrieve the list of attached files for. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of files attached to a specific assistant, as used by tools that can read files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssistants">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; GetAssistants (int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; GetAssistants(valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistants(System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistants (Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of Assistant))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistants : Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&#xA;override this.GetAssistants : Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;" Usage="assistantsClient.GetAssistants (limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of assistants that were previously created. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssistantsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&gt; GetAssistantsAsync (int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&gt; GetAssistantsAsync(valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetAssistantsAsync(System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAssistantsAsync (Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of Assistant)))" />
      <MemberSignature Language="F#" Value="abstract member GetAssistantsAsync : Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&gt;&#xA;override this.GetAssistantsAsync : Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&gt;" Usage="assistantsClient.GetAssistantsAsync (limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of assistants that were previously created. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt; GetFile (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt; GetFile(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OpenAIFile)" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&#xA;override this.GetFile : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;" Usage="assistantsClient.GetFile (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns information about a specific file. Does not retrieve file content. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; GetFileAsync (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; GetFileAsync(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileAsync (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OpenAIFile))" />
      <MemberSignature Language="F#" Value="abstract member GetFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&#xA;override this.GetFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;" Usage="assistantsClient.GetFileAsync (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns information about a specific file. Does not retrieve file content. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileContent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;BinaryData&gt; GetFileContent (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.BinaryData&gt; GetFileContent(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFileContent(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileContent (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetFileContent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;BinaryData&gt;&#xA;override this.GetFileContent : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;BinaryData&gt;" Usage="assistantsClient.GetFileContent (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns information about a specific file. Does not retrieve file content. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;BinaryData&gt;&gt; GetFileContentAsync (string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.BinaryData&gt;&gt; GetFileContentAsync(string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFileContentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileContentAsync (fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member GetFileContentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;BinaryData&gt;&gt;&#xA;override this.GetFileContentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;BinaryData&gt;&gt;" Usage="assistantsClient.GetFileContentAsync (fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileId"> The ID of the file to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns information about a specific file. Does not retrieve file content. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; GetFiles (Azure.AI.OpenAI.Assistants.OpenAIFilePurpose? purpose = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; GetFiles(valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; purpose, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFiles(System.Nullable{Azure.AI.OpenAI.Assistants.OpenAIFilePurpose},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (Optional purpose As Nullable(Of OpenAIFilePurpose) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of OpenAIFile))" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&#xA;override this.GetFiles : Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;" Usage="assistantsClient.GetFiles (purpose, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="purpose" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="purpose"> Limits files in the response to those with the specified purpose. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of files that belong to the user's organization. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&gt; GetFilesAsync (Azure.AI.OpenAI.Assistants.OpenAIFilePurpose? purpose = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&gt; GetFilesAsync(valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; purpose, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetFilesAsync(System.Nullable{Azure.AI.OpenAI.Assistants.OpenAIFilePurpose},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilesAsync (Optional purpose As Nullable(Of OpenAIFilePurpose) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of OpenAIFile)))" />
      <MemberSignature Language="F#" Value="abstract member GetFilesAsync : Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&gt;&#xA;override this.GetFilesAsync : Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&gt;" Usage="assistantsClient.GetFilesAsync (purpose, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="purpose" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.OpenAIFilePurpose&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="purpose"> Limits files in the response to those with the specified purpose. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of files that belong to the user's organization. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt; GetMessage (string threadId, string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt; GetMessage(string threadId, string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessage (threadId As String, messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadMessage)" />
      <MemberSignature Language="F#" Value="abstract member GetMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&#xA;override this.GetMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;" Usage="assistantsClient.GetMessage (threadId, messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve the specified message from. </param>
        <param name="messageId"> The ID of the message to retrieve from the specified thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing message from an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; GetMessageAsync (string threadId, string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; GetMessageAsync(string threadId, string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageAsync (threadId As String, messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadMessage))" />
      <MemberSignature Language="F#" Value="abstract member GetMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&#xA;override this.GetMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;" Usage="assistantsClient.GetMessageAsync (threadId, messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve the specified message from. </param>
        <param name="messageId"> The ID of the message to retrieve from the specified thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing message from an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt; GetMessageFile (string threadId, string messageId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.MessageFile&gt; GetMessageFile(string threadId, string messageId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessageFile(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageFile (threadId As String, messageId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MessageFile)" />
      <MemberSignature Language="F#" Value="abstract member GetMessageFile : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&#xA;override this.GetMessageFile : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;" Usage="assistantsClient.GetMessageFile (threadId, messageId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the message to get information from. </param>
        <param name="messageId"> The ID of the message to get information from. </param>
        <param name="fileId"> The ID of the file to get information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets information about a file attachment to a message within a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="messageId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="messageId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt; GetMessageFileAsync (string threadId, string messageId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt; GetMessageFileAsync(string threadId, string messageId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessageFileAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageFileAsync (threadId As String, messageId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MessageFile))" />
      <MemberSignature Language="F#" Value="abstract member GetMessageFileAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&#xA;override this.GetMessageFileAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;" Usage="assistantsClient.GetMessageFileAsync (threadId, messageId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the message to get information from. </param>
        <param name="messageId"> The ID of the message to get information from. </param>
        <param name="fileId"> The ID of the file to get information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets information about a file attachment to a message within a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="messageId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="messageId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt; GetMessageFiles (string threadId, string messageId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt; GetMessageFiles(string threadId, string messageId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessageFiles(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageFiles (threadId As String, messageId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of MessageFile))" />
      <MemberSignature Language="F#" Value="abstract member GetMessageFiles : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&#xA;override this.GetMessageFiles : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;" Usage="assistantsClient.GetMessageFiles (threadId, messageId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the message to list files from. </param>
        <param name="messageId"> The ID of the message to list files from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of previously uploaded files associated with a message from a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&gt; GetMessageFilesAsync (string threadId, string messageId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&gt; GetMessageFilesAsync(string threadId, string messageId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessageFilesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageFilesAsync (threadId As String, messageId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of MessageFile)))" />
      <MemberSignature Language="F#" Value="abstract member GetMessageFilesAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&gt;&#xA;override this.GetMessageFilesAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&gt;" Usage="assistantsClient.GetMessageFilesAsync (threadId, messageId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.MessageFile&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the message to list files from. </param>
        <param name="messageId"> The ID of the message to list files from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of previously uploaded files associated with a message from a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; GetMessages (string threadId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; GetMessages(string threadId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessages(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessages (threadId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of ThreadMessage))" />
      <MemberSignature Language="F#" Value="abstract member GetMessages : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&#xA;override this.GetMessages : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;" Usage="assistantsClient.GetMessages (threadId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to list messages from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of messages that exist on a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&gt; GetMessagesAsync (string threadId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&gt; GetMessagesAsync(string threadId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessagesAsync (threadId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of ThreadMessage)))" />
      <MemberSignature Language="F#" Value="abstract member GetMessagesAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&gt;&#xA;override this.GetMessagesAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&gt;" Usage="assistantsClient.GetMessagesAsync (threadId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to list messages from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of messages that exist on a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; GetRun (string threadId, string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; GetRun(string threadId, string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRun(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRun (threadId As String, runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member GetRun : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.GetRun : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.GetRun (threadId, runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve run information from. </param>
        <param name="runId"> The ID of the thread to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing run from an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; GetRunAsync (string threadId, string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; GetRunAsync(string threadId, string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunAsync (threadId As String, runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member GetRunAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.GetRunAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.GetRunAsync (threadId, runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve run information from. </param>
        <param name="runId"> The ID of the thread to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing run from an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuns">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; GetRuns (string threadId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; GetRuns(string threadId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRuns(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuns (threadId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member GetRuns : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.GetRuns : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.GetRuns (threadId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to list runs from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of runs for a specified thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&gt; GetRunsAsync (string threadId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&gt; GetRunsAsync(string threadId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunsAsync(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunsAsync (threadId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of ThreadRun)))" />
      <MemberSignature Language="F#" Value="abstract member GetRunsAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&gt;&#xA;override this.GetRunsAsync : string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&gt;" Usage="assistantsClient.GetRunsAsync (threadId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to list runs from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of runs for a specified thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStep">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt; GetRunStep (string threadId, string runId, string stepId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt; GetRunStep(string threadId, string runId, string stepId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunStep(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStep (threadId As String, runId As String, stepId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunStep : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&#xA;override this.GetRunStep : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;" Usage="assistantsClient.GetRunStep (threadId, runId, stepId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the specific run to retrieve the step from. </param>
        <param name="stepId"> The ID of the step to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single run step from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunStepAsync (string threadId, string runId, string stepId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunStepAsync(string threadId, string runId, string stepId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunStepAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepAsync (threadId As String, runId As String, stepId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunStep))" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&#xA;override this.GetRunStepAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;" Usage="assistantsClient.GetRunStepAsync (threadId, runId, stepId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the specific run to retrieve the step from. </param>
        <param name="stepId"> The ID of the step to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single run step from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunSteps">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunSteps (Azure.AI.OpenAI.Assistants.ThreadRun run, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunSteps(class Azure.AI.OpenAI.Assistants.ThreadRun run, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunSteps(Azure.AI.OpenAI.Assistants.ThreadRun,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunSteps (run As ThreadRun, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of RunStep))" />
      <MemberSignature Language="F#" Value="abstract member GetRunSteps : Azure.AI.OpenAI.Assistants.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&#xA;override this.GetRunSteps : Azure.AI.OpenAI.Assistants.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;" Usage="assistantsClient.GetRunSteps (run, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.OpenAI.Assistants.ThreadRun" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> instance from which run steps should be listed. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of run steps associated an assistant thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunSteps">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunSteps (string threadId, string runId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt;&gt; GetRunSteps(string threadId, string runId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunSteps(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunSteps (threadId As String, runId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageableList(Of RunStep))" />
      <MemberSignature Language="F#" Value="abstract member GetRunSteps : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&#xA;override this.GetRunSteps : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;" Usage="assistantsClient.GetRunSteps (threadId, runId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the run to list steps from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of run steps from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt; GetRunStepsAsync (Azure.AI.OpenAI.Assistants.ThreadRun run, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt; GetRunStepsAsync(class Azure.AI.OpenAI.Assistants.ThreadRun run, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunStepsAsync(Azure.AI.OpenAI.Assistants.ThreadRun,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepsAsync (run As ThreadRun, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of RunStep)))" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepsAsync : Azure.AI.OpenAI.Assistants.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;&#xA;override this.GetRunStepsAsync : Azure.AI.OpenAI.Assistants.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;" Usage="assistantsClient.GetRunStepsAsync (run, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.OpenAI.Assistants.ThreadRun" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> instance from which run steps should be listed. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of run steps associated an assistant thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt; GetRunStepsAsync (string threadId, string runId, int? limit = default, Azure.AI.OpenAI.Assistants.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.PageableList`1&lt;class Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt; GetRunStepsAsync(string threadId, string runId, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Assistants.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetRunStepsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.Assistants.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepsAsync (threadId As String, runId As String, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageableList(Of RunStep)))" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepsAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;&#xA;override this.GetRunStepsAsync : string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;" Usage="assistantsClient.GetRunStepsAsync (threadId, runId, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.PageableList&lt;Azure.AI.OpenAI.Assistants.RunStep&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.OpenAI.Assistants.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the run to list steps from. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of run steps from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt; GetThread (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt; GetThread(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetThread(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetThread (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantThread)" />
      <MemberSignature Language="F#" Value="abstract member GetThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&#xA;override this.GetThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;" Usage="assistantsClient.GetThread (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets information about an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; GetThreadAsync (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; GetThreadAsync(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.GetThreadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetThreadAsync (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantThread))" />
      <MemberSignature Language="F#" Value="abstract member GetThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;&#xA;override this.GetThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;" Usage="assistantsClient.GetThreadAsync (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to retrieve information about. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets information about an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkAssistantFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt; LinkAssistantFile (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt; LinkAssistantFile(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.LinkAssistantFile(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LinkAssistantFile (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantFile)" />
      <MemberSignature Language="F#" Value="abstract member LinkAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&#xA;override this.LinkAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;" Usage="assistantsClient.LinkAssistantFile (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to attach the file to. </param>
        <param name="fileId"> The ID of the previously uploaded file to attach. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Attaches a previously uploaded file to an assistant for use by tools that can read files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkAssistantFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; LinkAssistantFileAsync (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt; LinkAssistantFileAsync(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.LinkAssistantFileAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LinkAssistantFileAsync (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantFile))" />
      <MemberSignature Language="F#" Value="abstract member LinkAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;&#xA;override this.LinkAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;" Usage="assistantsClient.LinkAssistantFileAsync (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to attach the file to. </param>
        <param name="fileId"> The ID of the previously uploaded file to attach. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Attaches a previously uploaded file to an assistant for use by tools that can read files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.AssistantsClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.AI.OpenAI.Assistants.AssistantsClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitToolOutputsToRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; SubmitToolOutputsToRun (Azure.AI.OpenAI.Assistants.ThreadRun run, System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; SubmitToolOutputsToRun(class Azure.AI.OpenAI.Assistants.ThreadRun run, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.SubmitToolOutputsToRun(Azure.AI.OpenAI.Assistants.ThreadRun,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitToolOutputsToRun (run As ThreadRun, toolOutputs As IEnumerable(Of ToolOutput), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member SubmitToolOutputsToRun : Azure.AI.OpenAI.Assistants.ThreadRun * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.SubmitToolOutputsToRun : Azure.AI.OpenAI.Assistants.ThreadRun * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.SubmitToolOutputsToRun (run, toolOutputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.OpenAI.Assistants.ThreadRun" />
        <Parameter Name="toolOutputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> that the tool outputs should be submitted to. </param>
        <param name="toolOutputs"> The list of tool call outputs to provide as part of an output submission to an assistant thread run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submits outputs from tool calls as requested by a run with a status of 'requires_action' with required_action.type of 'submit_tool_outputs'. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitToolOutputsToRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; SubmitToolOutputsToRun (string threadId, string runId, System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; SubmitToolOutputsToRun(string threadId, string runId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.SubmitToolOutputsToRun(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitToolOutputsToRun (threadId As String, runId As String, toolOutputs As IEnumerable(Of ToolOutput), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member SubmitToolOutputsToRun : string * string * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.SubmitToolOutputsToRun : string * string * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.SubmitToolOutputsToRun (threadId, runId, toolOutputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="toolOutputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the run that requires tool outputs. </param>
        <param name="toolOutputs"> The list of tool outputs requested by tool calls from the specified run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires_action' with a required_action.type of 'submit_tool_outputs'. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="toolOutputs" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitToolOutputsToRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; SubmitToolOutputsToRunAsync (Azure.AI.OpenAI.Assistants.ThreadRun run, System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; SubmitToolOutputsToRunAsync(class Azure.AI.OpenAI.Assistants.ThreadRun run, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.SubmitToolOutputsToRunAsync(Azure.AI.OpenAI.Assistants.ThreadRun,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitToolOutputsToRunAsync (run As ThreadRun, toolOutputs As IEnumerable(Of ToolOutput), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member SubmitToolOutputsToRunAsync : Azure.AI.OpenAI.Assistants.ThreadRun * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.SubmitToolOutputsToRunAsync : Azure.AI.OpenAI.Assistants.ThreadRun * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.SubmitToolOutputsToRunAsync (run, toolOutputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.OpenAI.Assistants.ThreadRun" />
        <Parameter Name="toolOutputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.OpenAI.Assistants.ThreadRun" /> that the tool outputs should be submitted to. </param>
        <param name="toolOutputs"> The list of tool call outputs to provide as part of an output submission to an assistant thread run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submits outputs from tool calls as requested by a run with a status of 'requires_action' with required_action.type of 'submit_tool_outputs'. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitToolOutputsToRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; SubmitToolOutputsToRunAsync (string threadId, string runId, System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; SubmitToolOutputsToRunAsync(string threadId, string runId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.OpenAI.Assistants.ToolOutput&gt; toolOutputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.SubmitToolOutputsToRunAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Assistants.ToolOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitToolOutputsToRunAsync (threadId As String, runId As String, toolOutputs As IEnumerable(Of ToolOutput), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member SubmitToolOutputsToRunAsync : string * string * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.SubmitToolOutputsToRunAsync : string * string * seq&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.SubmitToolOutputsToRunAsync (threadId, runId, toolOutputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="toolOutputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.OpenAI.Assistants.ToolOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread that was run. </param>
        <param name="runId"> The ID of the run that requires tool outputs. </param>
        <param name="toolOutputs"> The list of tool outputs requested by tool calls from the specified run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires_action' with a required_action.type of 'submit_tool_outputs'. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="toolOutputs" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UnlinkAssistantFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; UnlinkAssistantFile (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; UnlinkAssistantFile(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UnlinkAssistantFile(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnlinkAssistantFile (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member UnlinkAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.UnlinkAssistantFile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="assistantsClient.UnlinkAssistantFile (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant associated with the attached file to delete. </param>
        <param name="fileId"> The ID of the attached file to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Associates a previously uploaded file with an assistant for use by supported tools. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UnlinkAssistantFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; UnlinkAssistantFileAsync (string assistantId, string fileId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; UnlinkAssistantFileAsync(string assistantId, string fileId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UnlinkAssistantFileAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnlinkAssistantFileAsync (assistantId As String, fileId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member UnlinkAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.UnlinkAssistantFileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="assistantsClient.UnlinkAssistantFileAsync (assistantId, fileId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant associated with the attached file to delete. </param>
        <param name="fileId"> The ID of the attached file to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
                Removes an association between an uploaded file and an assistant, making it inaccessible to supported tools
                for that assistant.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                This operation only removes the link between the file and assistant; it does not delete the file itself.
                To delete the file, use <see cref="M:Azure.AI.OpenAI.Assistants.AssistantsClient.DeleteFile(System.String,System.Threading.CancellationToken)" />, instead.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> or <paramref name="fileId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAssistant">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt; UpdateAssistant (string assistantId, Azure.AI.OpenAI.Assistants.UpdateAssistantOptions updateAssistantOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt; UpdateAssistant(string assistantId, class Azure.AI.OpenAI.Assistants.UpdateAssistantOptions updateAssistantOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateAssistant(System.String,Azure.AI.OpenAI.Assistants.UpdateAssistantOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAssistant (assistantId As String, updateAssistantOptions As UpdateAssistantOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Assistant)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAssistant : string * Azure.AI.OpenAI.Assistants.UpdateAssistantOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&#xA;override this.UpdateAssistant : string * Azure.AI.OpenAI.Assistants.UpdateAssistantOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;" Usage="assistantsClient.UpdateAssistant (assistantId, updateAssistantOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="updateAssistantOptions" Type="Azure.AI.OpenAI.Assistants.UpdateAssistantOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to modify. </param>
        <param name="updateAssistantOptions"> The request details to use when modifying an existing assistant. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="updateAssistantOptions" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAssistantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; UpdateAssistantAsync (string assistantId, Azure.AI.OpenAI.Assistants.UpdateAssistantOptions updateAssistantOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.Assistant&gt;&gt; UpdateAssistantAsync(string assistantId, class Azure.AI.OpenAI.Assistants.UpdateAssistantOptions updateAssistantOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateAssistantAsync(System.String,Azure.AI.OpenAI.Assistants.UpdateAssistantOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAssistantAsync (assistantId As String, updateAssistantOptions As UpdateAssistantOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Assistant))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAssistantAsync : string * Azure.AI.OpenAI.Assistants.UpdateAssistantOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;&#xA;override this.UpdateAssistantAsync : string * Azure.AI.OpenAI.Assistants.UpdateAssistantOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;" Usage="assistantsClient.UpdateAssistantAsync (assistantId, updateAssistantOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.Assistant&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assistantId" Type="System.String" />
        <Parameter Name="updateAssistantOptions" Type="Azure.AI.OpenAI.Assistants.UpdateAssistantOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assistantId"> The ID of the assistant to modify. </param>
        <param name="updateAssistantOptions"> The request details to use when modifying an existing assistant. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing assistant. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assistantId" /> or <paramref name="updateAssistantOptions" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assistantId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt; UpdateMessage (string threadId, string messageId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt; UpdateMessage(string threadId, string messageId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessage (threadId As String, messageId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadMessage)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessage : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&#xA;override this.UpdateMessage : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;" Usage="assistantsClient.UpdateMessage (threadId, messageId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the specified message to modify. </param>
        <param name="messageId"> The ID of the message to modify on the specified thread. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing message on an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; UpdateMessageAsync (string threadId, string messageId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt; UpdateMessageAsync(string threadId, string messageId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateMessageAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessageAsync (threadId As String, messageId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadMessage))" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessageAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;&#xA;override this.UpdateMessageAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;" Usage="assistantsClient.UpdateMessageAsync (threadId, messageId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread containing the specified message to modify. </param>
        <param name="messageId"> The ID of the message to modify on the specified thread. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing message on an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="messageId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt; UpdateRun (string threadId, string runId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt; UpdateRun(string threadId, string runId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateRun(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateRun (threadId As String, runId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ThreadRun)" />
      <MemberSignature Language="F#" Value="abstract member UpdateRun : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&#xA;override this.UpdateRun : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;" Usage="assistantsClient.UpdateRun (threadId, runId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread associated with the specified run. </param>
        <param name="runId"> The ID of the run to modify. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; UpdateRunAsync (string threadId, string runId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt; UpdateRunAsync(string threadId, string runId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateRunAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateRunAsync (threadId As String, runId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ThreadRun))" />
      <MemberSignature Language="F#" Value="abstract member UpdateRunAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;&#xA;override this.UpdateRunAsync : string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;" Usage="assistantsClient.UpdateRunAsync (threadId, runId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.ThreadRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread associated with the specified run. </param>
        <param name="runId"> The ID of the run to modify. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt; UpdateThread (string threadId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt; UpdateThread(string threadId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateThread(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateThread (threadId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssistantThread)" />
      <MemberSignature Language="F#" Value="abstract member UpdateThread : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&#xA;override this.UpdateThread : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;" Usage="assistantsClient.UpdateThread (threadId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to modify. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; UpdateThreadAsync (string threadId, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt; UpdateThreadAsync(string threadId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UpdateThreadAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateThreadAsync (threadId As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssistantThread))" />
      <MemberSignature Language="F#" Value="abstract member UpdateThreadAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;&#xA;override this.UpdateThreadAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;" Usage="assistantsClient.UpdateThreadAsync (threadId, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.AssistantThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> The ID of the thread to modify. </param>
        <param name="metadata"> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Modifies an existing thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt; UploadFile (string localFilePath, Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt; UploadFile(string localFilePath, valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UploadFile(System.String,Azure.AI.OpenAI.Assistants.OpenAIFilePurpose,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFile (localFilePath As String, purpose As OpenAIFilePurpose, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OpenAIFile)" />
      <MemberSignature Language="F#" Value="abstract member UploadFile : string * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&#xA;override this.UploadFile : string * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;" Usage="assistantsClient.UploadFile (localFilePath, purpose, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localFilePath" Type="System.String" />
        <Parameter Name="purpose" Type="Azure.AI.OpenAI.Assistants.OpenAIFilePurpose" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="localFilePath"> The local file path. </param>
        <param name="purpose"> The intended purpose of the uploaded file. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads a file from a local file path accessible to <see cref="T:System.IO.File" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt; UploadFile (System.IO.Stream data, Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, string filename = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt; UploadFile(class System.IO.Stream data, valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, string filename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UploadFile(System.IO.Stream,Azure.AI.OpenAI.Assistants.OpenAIFilePurpose,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFile (data As Stream, purpose As OpenAIFilePurpose, Optional filename As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OpenAIFile)" />
      <MemberSignature Language="F#" Value="abstract member UploadFile : System.IO.Stream * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&#xA;override this.UploadFile : System.IO.Stream * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;" Usage="assistantsClient.UploadFile (data, purpose, filename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="purpose" Type="Azure.AI.OpenAI.Assistants.OpenAIFilePurpose" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data"> The file data (not filename) to upload. </param>
        <param name="purpose"> The intended purpose of the file. </param>
        <param name="filename"> A filename to associate with the uploaded data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Uploads a file for use by other operations. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; UploadFileAsync (string localFilePath, Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; UploadFileAsync(string localFilePath, valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UploadFileAsync(System.String,Azure.AI.OpenAI.Assistants.OpenAIFilePurpose,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFileAsync (localFilePath As String, purpose As OpenAIFilePurpose, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OpenAIFile))" />
      <MemberSignature Language="F#" Value="abstract member UploadFileAsync : string * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&#xA;override this.UploadFileAsync : string * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;" Usage="assistantsClient.UploadFileAsync (localFilePath, purpose, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localFilePath" Type="System.String" />
        <Parameter Name="purpose" Type="Azure.AI.OpenAI.Assistants.OpenAIFilePurpose" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="localFilePath"> The local file path. </param>
        <param name="purpose"> The intended purpose of the uploaded file. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads a file from a local file path accessible to <see cref="T:System.IO.File" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; UploadFileAsync (System.IO.Stream data, Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, string filename = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt; UploadFileAsync(class System.IO.Stream data, valuetype Azure.AI.OpenAI.Assistants.OpenAIFilePurpose purpose, string filename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.AssistantsClient.UploadFileAsync(System.IO.Stream,Azure.AI.OpenAI.Assistants.OpenAIFilePurpose,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadFileAsync (data As Stream, purpose As OpenAIFilePurpose, Optional filename As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OpenAIFile))" />
      <MemberSignature Language="F#" Value="abstract member UploadFileAsync : System.IO.Stream * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;&#xA;override this.UploadFileAsync : System.IO.Stream * Azure.AI.OpenAI.Assistants.OpenAIFilePurpose * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;" Usage="assistantsClient.UploadFileAsync (data, purpose, filename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.OpenAI.Assistants.OpenAIFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="purpose" Type="Azure.AI.OpenAI.Assistants.OpenAIFilePurpose" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data"> The file data (not filename) to upload. </param>
        <param name="purpose"> The intended purpose of the file. </param>
        <param name="filename"> A filename to associate with the uploaded data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Uploads a file for use by other operations. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
