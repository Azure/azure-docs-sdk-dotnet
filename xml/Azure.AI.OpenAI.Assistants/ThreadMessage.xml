<Type Name="ThreadMessage" FullName="Azure.AI.OpenAI.Assistants.ThreadMessage">
  <TypeSignature Language="C#" Value="public class ThreadMessage : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadMessage extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.Assistants.ThreadMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.Assistants.ThreadMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadMessage&#xA;Implements IJsonModel(Of ThreadMessage), IPersistableModel(Of ThreadMessage)" />
  <TypeSignature Language="F#" Value="type ThreadMessage = class&#xA;    interface IJsonModel&lt;ThreadMessage&gt;&#xA;    interface IPersistableModel&lt;ThreadMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A single, existing message within an assistant thread. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AssistantId">
      <MemberSignature Language="C#" Value="public string AssistantId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssistantId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.AssistantId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssistantId As String" />
      <MemberSignature Language="F#" Value="member this.AssistantId : string" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.AssistantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If applicable, the ID of the assistant that authored this message. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.MessageContent&gt; ContentItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.OpenAI.Assistants.MessageContent&gt; ContentItems" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.ContentItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentItems As IReadOnlyList(Of MessageContent)" />
      <MemberSignature Language="F#" Value="member this.ContentItems : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.MessageContent&gt;" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.ContentItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.OpenAI.Assistants.MessageContent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of content items associated with the assistant thread message.
            Please note <see cref="T:Azure.AI.OpenAI.Assistants.MessageContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.OpenAI.Assistants.MessageImageFileContent" /> and <see cref="T:Azure.AI.OpenAI.Assistants.MessageTextContent" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset CreatedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset CreatedAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.CreatedAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreatedAt As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.CreatedAt : DateTimeOffset" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.CreatedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this object was created. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; FileIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; FileIds" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.FileIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileIds As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.FileIds : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.FileIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of file IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can
            access files.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The identifier, which can be referenced in API endpoints. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IReadOnlyDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Assistants.MessageRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.OpenAI.Assistants.MessageRole Role" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MessageRole" />
      <MemberSignature Language="F#" Value="member this.Role : Azure.AI.OpenAI.Assistants.MessageRole" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Assistants.MessageRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The role associated with the assistant thread message. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunId">
      <MemberSignature Language="C#" Value="public string RunId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RunId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.RunId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RunId As String" />
      <MemberSignature Language="F#" Value="member this.RunId : string" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.RunId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If applicable, the ID of the run associated with the authoring of this message. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.Assistants.ThreadMessage IJsonModel&lt;ThreadMessage&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.Assistants.ThreadMessage System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.ThreadMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#Assistants#ThreadMessage&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ThreadMessage Implements IJsonModel(Of ThreadMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Assistants.ThreadMessage&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Assistants.ThreadMessage" Usage="threadMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Assistants.ThreadMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ThreadMessage&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.ThreadMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#Assistants#ThreadMessage&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ThreadMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="threadMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.Assistants.ThreadMessage IPersistableModel&lt;ThreadMessage&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.Assistants.ThreadMessage System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.ThreadMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Assistants#ThreadMessage&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ThreadMessage Implements IPersistableModel(Of ThreadMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Assistants.ThreadMessage&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Assistants.ThreadMessage" Usage="threadMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Assistants.ThreadMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ThreadMessage&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.ThreadMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Assistants#ThreadMessage&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ThreadMessage).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="threadMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ThreadMessage&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Assistants.ThreadMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Assistants#ThreadMessage&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ThreadMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="threadMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Assistants.ThreadMessage&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Assistants.ThreadMessage.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="Azure.AI.OpenAI.Assistants.ThreadMessage.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI.Assistants</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ID of the thread that this message belongs to. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
