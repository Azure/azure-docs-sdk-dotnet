<Type Name="MaintenanceConfiguration" FullName="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration">
  <TypeSignature Language="C#" Value="public class MaintenanceConfiguration : Microsoft.Azure.Management.Maintenance.Models.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaintenanceConfiguration extends Microsoft.Azure.Management.Maintenance.Models.Resource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class MaintenanceConfiguration&#xA;Inherits Resource" />
  <TypeSignature Language="F#" Value="type MaintenanceConfiguration = class&#xA;    inherit Resource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.Maintenance.Models.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Maintenance configuration record type
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaintenanceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the MaintenanceConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaintenanceConfiguration (string id = default, string name = default, string type = default, Microsoft.Azure.Management.Maintenance.Models.SystemData systemData = default, string location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string namespaceProperty = default, System.Collections.Generic.IDictionary&lt;string,string&gt; extensionProperties = default, string maintenanceScope = default, string startDateTime = default, string expirationDateTime = default, string duration = default, string timeZone = default, string recurEvery = default, string visibility = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string type, class Microsoft.Azure.Management.Maintenance.Models.SystemData systemData, string location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string namespaceProperty, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; extensionProperties, string maintenanceScope, string startDateTime, string expirationDateTime, string duration, string timeZone, string recurEvery, string visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Maintenance.Models.SystemData,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional systemData As SystemData = Nothing, Optional location As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional namespaceProperty As String = Nothing, Optional extensionProperties As IDictionary(Of String, String) = Nothing, Optional maintenanceScope As String = Nothing, Optional startDateTime As String = Nothing, Optional expirationDateTime As String = Nothing, Optional duration As String = Nothing, Optional timeZone As String = Nothing, Optional recurEvery As String = Nothing, Optional visibility As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration : string * string * string * Microsoft.Azure.Management.Maintenance.Models.SystemData * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * string * string * string * string -&gt; Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration" Usage="new Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration (id, name, type, systemData, location, tags, namespaceProperty, extensionProperties, maintenanceScope, startDateTime, expirationDateTime, duration, timeZone, recurEvery, visibility)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.Maintenance.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="location" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="5" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="namespaceProperty" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="extensionProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="7" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="maintenanceScope" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="startDateTime" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="expirationDateTime" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="duration" Type="System.String" Index="11" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="timeZone" Type="System.String" Index="12" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="recurEvery" Type="System.String" Index="13" FrameworkAlternate="azure-dotnet-legacy" />
        <Parameter Name="visibility" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet-legacy" />
      </Parameters>
      <Docs>
        <param name="id">Fully qualified identifier of the resource</param>
        <param name="name">Name of the resource</param>
        <param name="type">Type of the resource</param>
        <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
        <param name="location">Gets or sets location of the
            resource</param>
        <param name="tags">Gets or sets tags of the resource</param>
        <param name="namespaceProperty">Gets or sets namespace of the
            resource</param>
        <param name="extensionProperties">Gets or sets extensionProperties
            of the maintenanceConfiguration</param>
        <param name="maintenanceScope">Gets or sets maintenanceScope of the
            configuration. Possible values include: 'Host', 'OSImage',
            'Extension', 'InGuestPatch', 'SQLDB', 'SQLManagedInstance'</param>
        <param name="startDateTime">Effective start date of the maintenance
            window in YYYY-MM-DD hh:mm format. The start date can be set to
            either the current date or future date. The window will be created
            in the time zone provided and adjusted to daylight savings
            according to that time zone.</param>
        <param name="expirationDateTime">Effective expiration date of the
            maintenance window in YYYY-MM-DD hh:mm format. The window will be
            created in the time zone provided and adjusted to daylight savings
            according to that time zone. Expiration date must be set to a
            future date. If not provided, it will be set to the maximum
            datetime 9999-12-31 23:59:59.</param>
        <param name="duration">Duration of the maintenance window in HH:mm
            format. If not provided, default value will be used based on
            maintenance scope provided. Example: 05:00.</param>
        <param name="timeZone">Name of the timezone. List of timezones can
            be obtained by executing
            [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example:
            Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard
            Time, Cen. Australia Standard Time.</param>
        <param name="recurEvery">Rate at which a Maintenance window is
            expected to recur. The rate can be expressed as daily, weekly, or
            monthly schedules. Daily schedule are formatted as recurEvery:
            [Frequency as integer]['Day(s)']. If no frequency is provided, the
            default frequency is 1. Daily schedule examples are recurEvery:
            Day, recurEvery: 3Days.  Weekly schedule are formatted as
            recurEvery: [Frequency as integer]['Week(s)'] [Optional comma
            separated list of weekdays Monday-Sunday]. Weekly schedule examples
            are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly
            schedules are formatted as [Frequency as integer]['Month(s)']
            [Comma separated list of month days] or [Frequency as
            integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth,
            Last)] [Weekday Monday-Sunday]. Monthly schedule examples are
            recurEvery: Month, recurEvery: 2Months, recurEvery: Month
            day23,day24, recurEvery: Month Last Sunday, recurEvery: Month
            Fourth Monday.</param>
        <param name="visibility">Gets or sets the visibility of the
            configuration. The default value is 'Custom'. Possible values
            include: 'Custom', 'Public'</param>
        <summary>
            Initializes a new instance of the MaintenanceConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaintenanceConfiguration (string id = default, string name = default, string type = default, Microsoft.Azure.Management.Maintenance.Models.SystemData systemData = default, string location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string namespaceProperty = default, System.Collections.Generic.IDictionary&lt;string,string&gt; extensionProperties = default, string maintenanceScope = default, string startDateTime = default, string expirationDateTime = default, string duration = default, string timeZone = default, string recurEvery = default, string visibility = default, Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration installPatches = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string type, class Microsoft.Azure.Management.Maintenance.Models.SystemData systemData, string location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string namespaceProperty, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; extensionProperties, string maintenanceScope, string startDateTime, string expirationDateTime, string duration, string timeZone, string recurEvery, string visibility, class Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration installPatches) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Maintenance.Models.SystemData,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional systemData As SystemData = Nothing, Optional location As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional namespaceProperty As String = Nothing, Optional extensionProperties As IDictionary(Of String, String) = Nothing, Optional maintenanceScope As String = Nothing, Optional startDateTime As String = Nothing, Optional expirationDateTime As String = Nothing, Optional duration As String = Nothing, Optional timeZone As String = Nothing, Optional recurEvery As String = Nothing, Optional visibility As String = Nothing, Optional installPatches As InputPatchConfiguration = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration : string * string * string * Microsoft.Azure.Management.Maintenance.Models.SystemData * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * string * string * string * string * Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration -&gt; Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration" Usage="new Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration (id, name, type, systemData, location, tags, namespaceProperty, extensionProperties, maintenanceScope, startDateTime, expirationDateTime, duration, timeZone, recurEvery, visibility, installPatches)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.Maintenance.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="namespaceProperty" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="extensionProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="maintenanceScope" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="startDateTime" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="expirationDateTime" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="duration" Type="System.String" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="timeZone" Type="System.String" Index="12" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="recurEvery" Type="System.String" Index="13" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="visibility" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="installPatches" Type="Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration" Index="15" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id">Fully qualified identifier of the resource</param>
        <param name="name">Name of the resource</param>
        <param name="type">Type of the resource</param>
        <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
        <param name="location">Gets or sets location of the
            resource</param>
        <param name="tags">Gets or sets tags of the resource</param>
        <param name="namespaceProperty">Gets or sets namespace of the
            resource</param>
        <param name="extensionProperties">Gets or sets extensionProperties
            of the maintenanceConfiguration</param>
        <param name="maintenanceScope">Gets or sets maintenanceScope of the
            configuration. Possible values include: 'Host', 'Resource',
            'OSImage', 'Extension', 'InGuestPatch', 'SQLDB',
            'SQLManagedInstance'</param>
        <param name="startDateTime">Effective start date of the maintenance
            window in YYYY-MM-DD hh:mm format. The start date can be set to
            either the current date or future date. The window will be created
            in the time zone provided and adjusted to daylight savings
            according to that time zone.</param>
        <param name="expirationDateTime">Effective expiration date of the
            maintenance window in YYYY-MM-DD hh:mm format. The window will be
            created in the time zone provided and adjusted to daylight savings
            according to that time zone. Expiration date must be set to a
            future date. If not provided, it will be set to the maximum
            datetime 9999-12-31 23:59:59.</param>
        <param name="duration">Duration of the maintenance window in HH:mm
            format. If not provided, default value will be used based on
            maintenance scope provided. Example: 05:00.</param>
        <param name="timeZone">Name of the timezone. List of timezones can
            be obtained by executing
            [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example:
            Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard
            Time, Cen. Australia Standard Time.</param>
        <param name="recurEvery">Rate at which a Maintenance window is
            expected to recur. The rate can be expressed as daily, weekly, or
            monthly schedules. Daily schedule are formatted as recurEvery:
            [Frequency as integer]['Day(s)']. If no frequency is provided, the
            default frequency is 1. Daily schedule examples are recurEvery:
            Day, recurEvery: 3Days.  Weekly schedule are formatted as
            recurEvery: [Frequency as integer]['Week(s)'] [Optional comma
            separated list of weekdays Monday-Sunday]. Weekly schedule examples
            are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly
            schedules are formatted as [Frequency as integer]['Month(s)']
            [Comma separated list of month days] or [Frequency as
            integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth,
            Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)].
            Offset value must be between -6 to 6 inclusive. Monthly schedule
            examples are recurEvery: Month, recurEvery: 2Months, recurEvery:
            Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month
            Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery:
            Month Third Sunday Offset6.</param>
        <param name="visibility">Gets or sets the visibility of the
            configuration. The default value is 'Custom'. Possible values
            include: 'Custom', 'Public'</param>
        <param name="installPatches">The input parameters to be passed to
            the patch run operation.</param>
        <summary>
            Initializes a new instance of the MaintenanceConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public string Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Duration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As String" />
      <MemberSignature Language="F#" Value="member this.Duration : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.duration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.duration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets duration of the maintenance window in HH:mm format. If
            not provided, default value will be used based on maintenance scope
            provided. Example: 05:00.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpirationDateTime">
      <MemberSignature Language="C#" Value="public string ExpirationDateTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpirationDateTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.ExpirationDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpirationDateTime As String" />
      <MemberSignature Language="F#" Value="member this.ExpirationDateTime : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.ExpirationDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.expirationDateTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.expirationDateTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets effective expiration date of the maintenance window in
            YYYY-MM-DD hh:mm format. The window will be created in the time
            zone provided and adjusted to daylight savings according to that
            time zone. Expiration date must be set to a future date. If not
            provided, it will be set to the maximum datetime 9999-12-31
            23:59:59.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ExtensionProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ExtensionProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.ExtensionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtensionProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.ExtensionProperties : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.ExtensionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.extensionProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.extensionProperties")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets extensionProperties of the maintenanceConfiguration
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallPatches">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration InstallPatches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration InstallPatches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.InstallPatches" />
      <MemberSignature Language="VB.NET" Value="Public Property InstallPatches As InputPatchConfiguration" />
      <MemberSignature Language="F#" Value="member this.InstallPatches : Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.InstallPatches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.installPatches")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.installPatches")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Maintenance.Models.InputPatchConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the input parameters to be passed to the patch run
            operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As String" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="location")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="location")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets location of the resource
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaintenanceScope">
      <MemberSignature Language="C#" Value="public string MaintenanceScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaintenanceScope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.MaintenanceScope" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintenanceScope As String" />
      <MemberSignature Language="F#" Value="member this.MaintenanceScope : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.MaintenanceScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceScope")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceScope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets maintenanceScope of the configuration. Possible values
            include: 'Host', 'Resource', 'OSImage', 'Extension',
            'InGuestPatch', 'SQLDB', 'SQLManagedInstance'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceProperty">
      <MemberSignature Language="C#" Value="public string NamespaceProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.NamespaceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceProperty As String" />
      <MemberSignature Language="F#" Value="member this.NamespaceProperty : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.NamespaceProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.namespace")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.namespace")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets namespace of the resource
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurEvery">
      <MemberSignature Language="C#" Value="public string RecurEvery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RecurEvery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.RecurEvery" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurEvery As String" />
      <MemberSignature Language="F#" Value="member this.RecurEvery : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.RecurEvery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.recurEvery")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.recurEvery")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets rate at which a Maintenance window is expected to
            recur. The rate can be expressed as daily, weekly, or monthly
            schedules. Daily schedule are formatted as recurEvery: [Frequency
            as integer]['Day(s)']. If no frequency is provided, the default
            frequency is 1. Daily schedule examples are recurEvery: Day,
            recurEvery: 3Days.  Weekly schedule are formatted as recurEvery:
            [Frequency as integer]['Week(s)'] [Optional comma separated list of
            weekdays Monday-Sunday]. Weekly schedule examples are recurEvery:
            3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are
            formatted as [Frequency as integer]['Month(s)'] [Comma separated
            list of month days] or [Frequency as integer]['Month(s)'] [Week of
            Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday]
            [Optional Offset(No. of days)]. Offset value must be between -6 to
            6 inclusive. Monthly schedule examples are recurEvery: Month,
            recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery:
            Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery:
            Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDateTime">
      <MemberSignature Language="C#" Value="public string StartDateTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartDateTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.StartDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Property StartDateTime As String" />
      <MemberSignature Language="F#" Value="member this.StartDateTime : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.StartDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.startDateTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.startDateTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets effective start date of the maintenance window in
            YYYY-MM-DD hh:mm format. The start date can be set to either the
            current date or future date. The window will be created in the time
            zone provided and adjusted to daylight savings according to that
            time zone.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="tags")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="tags")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets tags of the resource
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public string TimeZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeZone" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.TimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeZone As String" />
      <MemberSignature Language="F#" Value="member this.TimeZone : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.timeZone")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.maintenanceWindow.timeZone")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets name of the timezone. List of timezones can be
            obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones()
            in PowerShell. Example: Pacific Standard Time, UTC, W. Europe
            Standard Time, Korea Standard Time, Cen. Australia Standard Time.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public string Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Visibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As String" />
      <MemberSignature Language="F#" Value="member this.Visibility : string with get, set" Usage="Microsoft.Azure.Management.Maintenance.Models.MaintenanceConfiguration.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Maintenance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.visibility")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.visibility")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the visibility of the configuration. The default value
            is 'Custom'. Possible values include: 'Custom', 'Public'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
