<Type Name="MockableDataFactorySubscriptionResource" FullName="Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDataFactorySubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataFactorySubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataFactorySubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataFactorySubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataFactorySubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFactoryRepoInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; ConfigureFactoryRepoInformation (Azure.Core.AzureLocation locationId, Azure.ResourceManager.DataFactory.Models.FactoryRepoContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; ConfigureFactoryRepoInformation(valuetype Azure.Core.AzureLocation locationId, class Azure.ResourceManager.DataFactory.Models.FactoryRepoContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.ConfigureFactoryRepoInformation(Azure.Core.AzureLocation,Azure.ResourceManager.DataFactory.Models.FactoryRepoContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConfigureFactoryRepoInformation (locationId As AzureLocation, content As FactoryRepoContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureFactoryRepoInformation : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.FactoryRepoContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.ConfigureFactoryRepoInformation : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.FactoryRepoContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="mockableDataFactorySubscriptionResource.ConfigureFactoryRepoInformation (locationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationId" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.FactoryRepoContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationId"> The location identifier. </param>
        <param name="content"> Update factory repo request definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a factory's repo information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo</description></item><item><term>Operation Id</term><description>Factories_ConfigureFactoryRepo</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFactoryRepoInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; ConfigureFactoryRepoInformationAsync (Azure.Core.AzureLocation locationId, Azure.ResourceManager.DataFactory.Models.FactoryRepoContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt; ConfigureFactoryRepoInformationAsync(valuetype Azure.Core.AzureLocation locationId, class Azure.ResourceManager.DataFactory.Models.FactoryRepoContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.ConfigureFactoryRepoInformationAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataFactory.Models.FactoryRepoContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConfigureFactoryRepoInformationAsync (locationId As AzureLocation, content As FactoryRepoContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFactoryResource))" />
      <MemberSignature Language="F#" Value="abstract member ConfigureFactoryRepoInformationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.FactoryRepoContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;&#xA;override this.ConfigureFactoryRepoInformationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.FactoryRepoContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;" Usage="mockableDataFactorySubscriptionResource.ConfigureFactoryRepoInformationAsync (locationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationId" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.FactoryRepoContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationId"> The location identifier. </param>
        <param name="content"> Update factory repo request definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a factory's repo information.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo</description></item><item><term>Operation Id</term><description>Factories_ConfigureFactoryRepo</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; GetDataFactories (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; GetDataFactories(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.GetDataFactories(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactories (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.GetDataFactories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="mockableDataFactorySubscriptionResource.GetDataFactories cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists factories under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories</description></item><item><term>Operation Id</term><description>Factories_List</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFactoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt; GetDataFactoriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataFactory.DataFactoryResource&gt; GetDataFactoriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.GetDataFactoriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFactoriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFactoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFactoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;&#xA;override this.GetDataFactoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;" Usage="mockableDataFactorySubscriptionResource.GetDataFactoriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataFactory.DataFactoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists factories under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories</description></item><item><term>Operation Id</term><description>Factories_List</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataFactory.DataFactoryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFeatureValueExposureControl">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt; GetFeatureValueExposureControl (Azure.Core.AzureLocation locationId, Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt; GetFeatureValueExposureControl(valuetype Azure.Core.AzureLocation locationId, class Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.GetFeatureValueExposureControl(Azure.Core.AzureLocation,Azure.ResourceManager.DataFactory.Models.ExposureControlContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFeatureValueExposureControl (locationId As AzureLocation, content As ExposureControlContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExposureControlResult)" />
      <MemberSignature Language="F#" Value="abstract member GetFeatureValueExposureControl : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&#xA;override this.GetFeatureValueExposureControl : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;" Usage="mockableDataFactorySubscriptionResource.GetFeatureValueExposureControl (locationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationId" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationId"> The location identifier. </param>
        <param name="content"> The exposure control request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get exposure control feature for specific location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue</description></item><item><term>Operation Id</term><description>ExposureControl_GetFeatureValue</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFeatureValueExposureControlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt; GetFeatureValueExposureControlAsync (Azure.Core.AzureLocation locationId, Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt; GetFeatureValueExposureControlAsync(valuetype Azure.Core.AzureLocation locationId, class Azure.ResourceManager.DataFactory.Models.ExposureControlContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Mocking.MockableDataFactorySubscriptionResource.GetFeatureValueExposureControlAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataFactory.Models.ExposureControlContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFeatureValueExposureControlAsync (locationId As AzureLocation, content As ExposureControlContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExposureControlResult))" />
      <MemberSignature Language="F#" Value="abstract member GetFeatureValueExposureControlAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;&#xA;override this.GetFeatureValueExposureControlAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataFactory.Models.ExposureControlContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;" Usage="mockableDataFactorySubscriptionResource.GetFeatureValueExposureControlAsync (locationId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataFactory.Models.ExposureControlResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationId" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataFactory.Models.ExposureControlContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationId"> The location identifier. </param>
        <param name="content"> The exposure control request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get exposure control feature for specific location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue</description></item><item><term>Operation Id</term><description>ExposureControl_GetFeatureValue</description></item><item><term>Default Api Version</term><description>2018-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
