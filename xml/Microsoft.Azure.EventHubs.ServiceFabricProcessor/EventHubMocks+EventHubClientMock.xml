<Type Name="EventHubMocks+EventHubClientMock" FullName="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks+EventHubClientMock">
  <TypeSignature Language="C#" Value="public class EventHubMocks.EventHubClientMock : Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IEventHubClient" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit EventHubMocks/EventHubClientMock extends System.Object implements class Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers/IEventHubClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubMocks.EventHubClientMock&#xA;Implements EventHubWrappers.IEventHubClient" />
  <TypeSignature Language="F#" Value="type EventHubMocks.EventHubClientMock = class&#xA;    interface EventHubWrappers.IEventHubClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
    <AssemblyVersion>0.5.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers+IEventHubClient</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClientMock (int partitionCount, Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder csb, string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 partitionCount, class Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder csb, string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.#ctor(System.Int32,Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (partitionCount As Integer, csb As EventHubsConnectionStringBuilder, tag As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock : int * Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder * string -&gt; Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock" Usage="new Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock (partitionCount, csb, tag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
        <Parameter Name="csb" Type="Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder" />
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partitionCount">To be added.</param>
        <param name="csb">To be added.</param>
        <param name="tag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateStartSeq">
      <MemberSignature Language="C#" Value="protected long CalculateStartSeq (Microsoft.Azure.EventHubs.EventPosition eventPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 CalculateStartSeq(class Microsoft.Azure.EventHubs.EventPosition eventPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.CalculateStartSeq(Microsoft.Azure.EventHubs.EventPosition)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CalculateStartSeq (eventPosition As EventPosition) As Long" />
      <MemberSignature Language="F#" Value="member this.CalculateStartSeq : Microsoft.Azure.EventHubs.EventPosition -&gt; int64" Usage="eventHubClientMock.CalculateStartSeq eventPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventPosition" Type="Microsoft.Azure.EventHubs.EventPosition" />
      </Parameters>
      <Docs>
        <param name="eventPosition">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.CloseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : unit -&gt; System.Threading.Tasks.Task" Usage="eventHubClientMock.CloseAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IEventHubClient.CloseAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEpochReceiver">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver CreateEpochReceiver (string consumerGroupName, string partitionId, Microsoft.Azure.EventHubs.EventPosition eventPosition, long epoch, Microsoft.Azure.EventHubs.ReceiverOptions receiverOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers/IPartitionReceiver CreateEpochReceiver(string consumerGroupName, string partitionId, class Microsoft.Azure.EventHubs.EventPosition eventPosition, int64 epoch, class Microsoft.Azure.EventHubs.ReceiverOptions receiverOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.CreateEpochReceiver(System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,System.Int64,Microsoft.Azure.EventHubs.ReceiverOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEpochReceiver (consumerGroupName As String, partitionId As String, eventPosition As EventPosition, epoch As Long, receiverOptions As ReceiverOptions) As EventHubWrappers.IPartitionReceiver" />
      <MemberSignature Language="F#" Value="abstract member CreateEpochReceiver : string * string * Microsoft.Azure.EventHubs.EventPosition * int64 * Microsoft.Azure.EventHubs.ReceiverOptions -&gt; Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver&#xA;override this.CreateEpochReceiver : string * string * Microsoft.Azure.EventHubs.EventPosition * int64 * Microsoft.Azure.EventHubs.ReceiverOptions -&gt; Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver" Usage="eventHubClientMock.CreateEpochReceiver (consumerGroupName, partitionId, eventPosition, epoch, receiverOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IEventHubClient.CreateEpochReceiver(System.String,System.String,Microsoft.Azure.EventHubs.EventPosition,System.Int64,Microsoft.Azure.EventHubs.ReceiverOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers+IPartitionReceiver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumerGroupName" Type="System.String" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="eventPosition" Type="Microsoft.Azure.EventHubs.EventPosition" />
        <Parameter Name="epoch" Type="System.Int64" />
        <Parameter Name="receiverOptions" Type="Microsoft.Azure.EventHubs.ReceiverOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroupName">To be added.</param>
        <param name="partitionId">To be added.</param>
        <param name="eventPosition">To be added.</param>
        <param name="epoch">To be added.</param>
        <param name="receiverOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="csb">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder csb;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder csb" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.csb" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly csb As EventHubsConnectionStringBuilder " />
      <MemberSignature Language="F#" Value="val mutable csb : Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder" Usage="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.csb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.EventHubs.EventHubsConnectionStringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.EventHubs.EventHubRuntimeInformation&gt; GetRuntimeInformationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.EventHubs.EventHubRuntimeInformation&gt; GetRuntimeInformationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.GetRuntimeInformationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeInformationAsync () As Task(Of EventHubRuntimeInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeInformationAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.EventHubs.EventHubRuntimeInformation&gt;&#xA;override this.GetRuntimeInformationAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.EventHubs.EventHubRuntimeInformation&gt;" Usage="eventHubClientMock.GetRuntimeInformationAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IEventHubClient.GetRuntimeInformationAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.EventHubs.EventHubRuntimeInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="partitionCount">
      <MemberSignature Language="C#" Value="protected readonly int partitionCount;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly int32 partitionCount" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.partitionCount" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly partitionCount As Integer " />
      <MemberSignature Language="F#" Value="val mutable partitionCount : int" Usage="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.partitionCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="tag">
      <MemberSignature Language="C#" Value="protected readonly string tag;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly string tag" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly tag As String " />
      <MemberSignature Language="F#" Value="val mutable tag : string" Usage="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.tag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="token">
      <MemberSignature Language="C#" Value="protected System.Threading.CancellationToken token;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Threading.CancellationToken token" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.token" />
      <MemberSignature Language="VB.NET" Value="Protected token As CancellationToken " />
      <MemberSignature Language="F#" Value="val mutable token : System.Threading.CancellationToken" Usage="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubMocks.EventHubClientMock.token" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
