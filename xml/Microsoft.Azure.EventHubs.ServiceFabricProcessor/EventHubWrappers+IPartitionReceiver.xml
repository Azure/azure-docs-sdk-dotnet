<Type Name="EventHubWrappers+IPartitionReceiver" FullName="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers+IPartitionReceiver">
  <TypeSignature Language="C#" Value="public interface EventHubWrappers.IPartitionReceiver" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract EventHubWrappers/IPartitionReceiver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver" />
  <TypeSignature Language="VB.NET" Value="Public Interface EventHubWrappers.IPartitionReceiver" />
  <TypeSignature Language="F#" Value="type EventHubWrappers.IPartitionReceiver = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
    <AssemblyVersion>0.5.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CloseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver.CloseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : unit -&gt; System.Threading.Tasks.Task" Usage="iPartitionReceiver.CloseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchCount">
      <MemberSignature Language="C#" Value="public int PrefetchCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrefetchCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver.PrefetchCount" />
      <MemberSignature Language="VB.NET" Value="Public Property PrefetchCount As Integer" />
      <MemberSignature Language="F#" Value="member this.PrefetchCount : int with get, set" Usage="Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver.PrefetchCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.EventHubs.EventData&gt;&gt; ReceiveAsync (int maxEventCount, TimeSpan waitTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.EventHubs.EventData&gt;&gt; ReceiveAsync(int32 maxEventCount, valuetype System.TimeSpan waitTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver.ReceiveAsync(System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync (maxEventCount As Integer, waitTime As TimeSpan) As Task(Of IEnumerable(Of EventData))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : int * TimeSpan -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.EventHubs.EventData&gt;&gt;" Usage="iPartitionReceiver.ReceiveAsync (maxEventCount, waitTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.EventHubs.EventData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxEventCount" Type="System.Int32" />
        <Parameter Name="waitTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="maxEventCount">To be added.</param>
        <param name="waitTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReceiveHandler">
      <MemberSignature Language="C#" Value="public void SetReceiveHandler (Microsoft.Azure.EventHubs.IPartitionReceiveHandler receiveHandler, bool invokeWhenNoEvents = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReceiveHandler(class Microsoft.Azure.EventHubs.IPartitionReceiveHandler receiveHandler, bool invokeWhenNoEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventHubs.ServiceFabricProcessor.EventHubWrappers.IPartitionReceiver.SetReceiveHandler(Microsoft.Azure.EventHubs.IPartitionReceiveHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetReceiveHandler (receiveHandler As IPartitionReceiveHandler, Optional invokeWhenNoEvents As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member SetReceiveHandler : Microsoft.Azure.EventHubs.IPartitionReceiveHandler * bool -&gt; unit" Usage="iPartitionReceiver.SetReceiveHandler (receiveHandler, invokeWhenNoEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventHubs.ServiceFabricProcessor</AssemblyName>
        <AssemblyVersion>0.5.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveHandler" Type="Microsoft.Azure.EventHubs.IPartitionReceiveHandler" />
        <Parameter Name="invokeWhenNoEvents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="receiveHandler">To be added.</param>
        <param name="invokeWhenNoEvents">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
