<Type Name="MockableStandbyPoolArmClient" FullName="Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient">
  <TypeSignature Language="C#" Value="public class MockableStandbyPoolArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStandbyPoolArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStandbyPoolArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStandbyPoolArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStandbyPoolArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource GetStandbyContainerGroupPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource GetStandbyContainerGroupPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyContainerGroupPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyContainerGroupPoolResource (id As ResourceIdentifier) As StandbyContainerGroupPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyContainerGroupPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&#xA;override this.GetStandbyContainerGroupPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" Usage="mockableStandbyPoolArmClient.GetStandbyContainerGroupPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource GetStandbyVirtualMachinePoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource GetStandbyVirtualMachinePoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyVirtualMachinePoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyVirtualMachinePoolResource (id As ResourceIdentifier) As StandbyVirtualMachinePoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyVirtualMachinePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&#xA;override this.GetStandbyVirtualMachinePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" Usage="mockableStandbyPoolArmClient.GetStandbyVirtualMachinePoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource GetStandbyVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource GetStandbyVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyVirtualMachineResource (id As ResourceIdentifier) As StandbyVirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource&#xA;override this.GetStandbyVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" Usage="mockableStandbyPoolArmClient.GetStandbyVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
