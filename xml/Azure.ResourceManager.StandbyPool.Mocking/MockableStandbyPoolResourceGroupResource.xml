<Type Name="MockableStandbyPoolResourceGroupResource" FullName="Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableStandbyPoolResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStandbyPoolResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStandbyPoolResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStandbyPoolResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStandbyPoolResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPool (string standbyContainerGroupPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPool(string standbyContainerGroupPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyContainerGroupPool (standbyContainerGroupPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StandbyContainerGroupPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyContainerGroupPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&#xA;override this.GetStandbyContainerGroupPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPool (standbyContainerGroupPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standbyContainerGroupPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="standbyContainerGroupPoolName"> Name of the standby container group pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyContainerGroupPoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="standbyContainerGroupPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyContainerGroupPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt; GetStandbyContainerGroupPoolAsync (string standbyContainerGroupPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt; GetStandbyContainerGroupPoolAsync(string standbyContainerGroupPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyContainerGroupPoolAsync (standbyContainerGroupPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StandbyContainerGroupPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyContainerGroupPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt;&#xA;override this.GetStandbyContainerGroupPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt;" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPoolAsync (standbyContainerGroupPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standbyContainerGroupPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="standbyContainerGroupPoolName"> Name of the standby container group pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyContainerGroupPoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="standbyContainerGroupPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyContainerGroupPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection GetStandbyContainerGroupPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection GetStandbyContainerGroupPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyContainerGroupPools () As StandbyContainerGroupPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyContainerGroupPools : unit -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection&#xA;override this.GetStandbyContainerGroupPools : unit -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StandbyContainerGroupPoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of StandbyContainerGroupPoolResources and their operations over a StandbyContainerGroupPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePool (string standbyVirtualMachinePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePool(string standbyVirtualMachinePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyVirtualMachinePool (standbyVirtualMachinePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StandbyVirtualMachinePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyVirtualMachinePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&#xA;override this.GetStandbyVirtualMachinePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePool (standbyVirtualMachinePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standbyVirtualMachinePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="standbyVirtualMachinePoolName"> Name of the standby virtual machine pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyVirtualMachinePoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="standbyVirtualMachinePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyVirtualMachinePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt; GetStandbyVirtualMachinePoolAsync (string standbyVirtualMachinePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt; GetStandbyVirtualMachinePoolAsync(string standbyVirtualMachinePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyVirtualMachinePoolAsync (standbyVirtualMachinePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StandbyVirtualMachinePoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyVirtualMachinePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt;&#xA;override this.GetStandbyVirtualMachinePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt;" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePoolAsync (standbyVirtualMachinePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standbyVirtualMachinePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="standbyVirtualMachinePoolName"> Name of the standby virtual machine pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyVirtualMachinePoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="standbyVirtualMachinePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyVirtualMachinePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection GetStandbyVirtualMachinePools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection GetStandbyVirtualMachinePools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandbyVirtualMachinePools () As StandbyVirtualMachinePoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStandbyVirtualMachinePools : unit -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection&#xA;override this.GetStandbyVirtualMachinePools : unit -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection" Usage="mockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StandbyVirtualMachinePoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of StandbyVirtualMachinePoolResources and their operations over a StandbyVirtualMachinePoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
