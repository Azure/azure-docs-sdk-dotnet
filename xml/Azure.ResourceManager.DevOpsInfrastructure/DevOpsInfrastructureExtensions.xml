<Type Name="DevOpsInfrastructureExtensions" FullName="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions">
  <TypeSignature Language="C#" Value="public static class DevOpsInfrastructureExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DevOpsInfrastructureExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DevOpsInfrastructureExtensions" />
  <TypeSignature Language="F#" Value="type DevOpsInfrastructureExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DevOpsInfrastructure. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDevOpsPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string poolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string poolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPool (resourceGroupResource As ResourceGroupResource, poolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPool (resourceGroupResource, poolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="poolName"> Name of the pool. It needs to be globally unique. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}</description></item><item><term>Operation Id</term><description>Pool_Get</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPool(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="poolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="poolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt; GetDevOpsPoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string poolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt; GetDevOpsPoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string poolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPoolAsync (resourceGroupResource As ResourceGroupResource, poolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevOpsPoolResource))" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolAsync (resourceGroupResource, poolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="poolName"> Name of the pool. It needs to be globally unique. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}</description></item><item><term>Operation Id</term><description>Pool_Get</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPoolAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="poolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="poolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource GetDevOpsPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource GetDevOpsPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPoolResource (client As ArmClient, id As ResourceIdentifier) As DevOpsPoolResource" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureArmClient.GetDevOpsPoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection GetDevOpsPools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection GetDevOpsPools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPools (resourceGroupResource As ResourceGroupResource) As DevOpsPoolCollection" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DevOpsPoolResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPools" /> instead.</description></item></summary>
        <returns> An object representing collection of DevOpsPoolResources and their operations over a DevOpsPoolResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Pool resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools</description></item><item><term>Operation Id</term><description>Pool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDevOpsPoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetDevOpsPoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetDevOpsPoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Pool resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools</description></item><item><term>Operation Id</term><description>Pool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImageVersionsByImage">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImage (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string imageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImage(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string imageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetImageVersionsByImage(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImageVersionsByImage (resourceGroupResource As ResourceGroupResource, imageName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsImageVersion)" />
      <MemberSignature Language="F#" Value="static member GetImageVersionsByImage : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetImageVersionsByImage (resourceGroupResource, imageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="imageName"> Name of the image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ImageVersion resources by Image
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions</description></item><item><term>Operation Id</term><description>ImageVersion_ListByImage</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImage(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="imageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="imageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImageVersionsByImageAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImageAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string imageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImageAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string imageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetImageVersionsByImageAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImageVersionsByImageAsync (resourceGroupResource As ResourceGroupResource, imageName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsImageVersion)" />
      <MemberSignature Language="F#" Value="static member GetImageVersionsByImageAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetImageVersionsByImageAsync (resourceGroupResource, imageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="imageName"> Name of the image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ImageVersion resources by Image
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions</description></item><item><term>Operation Id</term><description>ImageVersion_ListByImage</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImage(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="imageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="imageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkusByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetSkusByLocation(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSkusByLocation (subscriptionResource As SubscriptionResource, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsResourceSku)" />
      <MemberSignature Language="F#" Value="static member GetSkusByLocation : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetSkusByLocation (subscriptionResource, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ResourceSku resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus</description></item><item><term>Operation Id</term><description>ResourceSku_ListByLocation</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocation(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkusByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetSkusByLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSkusByLocationAsync (subscriptionResource As SubscriptionResource, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsResourceSku)" />
      <MemberSignature Language="F#" Value="static member GetSkusByLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetSkusByLocationAsync (subscriptionResource, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ResourceSku resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus</description></item><item><term>Operation Id</term><description>ResourceSku_ListByLocation</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocation(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsages (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsages(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetUsages(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUsages (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsResourceQuota)" />
      <MemberSignature Language="F#" Value="static member GetUsages : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetUsages (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Quota resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages</description></item><item><term>Operation Id</term><description>SubscriptionUsages_GetUsages</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsagesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsagesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetUsagesAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUsagesAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsResourceQuota)" />
      <MemberSignature Language="F#" Value="static member GetUsagesAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;" Usage="Azure.ResourceManager.DevOpsInfrastructure.DevOpsInfrastructureExtensions.GetUsagesAsync (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Quota resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages</description></item><item><term>Operation Id</term><description>SubscriptionUsages_GetUsages</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
