<Type Name="Geometry" FullName="Microsoft.Azure.Cosmos.Spatial.Geometry">
  <TypeSignature Language="C#" Value="public abstract class Geometry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Geometry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Cosmos.Spatial.Geometry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Geometry" />
  <TypeSignature Language="F#" Value="type Geometry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
    <AssemblyVersion>3.4.1.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.1.0</AssemblyVersion>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.1.0</AssemblyVersion>
    <AssemblyVersion>3.10.1.0</AssemblyVersion>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Microsoft.Azure.Cosmos.Spatial.Converters.GeometryJsonConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptIn)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Base class for spatial geometry objects in the Azure Cosmos DB service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Geometry (Microsoft.Azure.Cosmos.Spatial.GeometryType type, Microsoft.Azure.Cosmos.Spatial.GeometryParams geometryParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Azure.Cosmos.Spatial.GeometryType type, class Microsoft.Azure.Cosmos.Spatial.GeometryParams geometryParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.#ctor(Microsoft.Azure.Cosmos.Spatial.GeometryType,Microsoft.Azure.Cosmos.Spatial.GeometryParams)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (type As GeometryType, geometryParams As GeometryParams)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.Spatial.Geometry : Microsoft.Azure.Cosmos.Spatial.GeometryType * Microsoft.Azure.Cosmos.Spatial.GeometryParams -&gt; Microsoft.Azure.Cosmos.Spatial.Geometry" Usage="new Microsoft.Azure.Cosmos.Spatial.Geometry (type, geometryParams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Azure.Cosmos.Spatial.GeometryType" />
        <Parameter Name="geometryParams" Type="Microsoft.Azure.Cosmos.Spatial.GeometryParams" />
      </Parameters>
      <Docs>
        <param name="type">
            Geometry type.
            </param>
        <param name="geometryParams">
            Coordinate reference system, additional properties etc.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> class in the Azure Cosmos DB service.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; AdditionalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.Spatial.Geometry.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalProperties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="Microsoft.Azure.Cosmos.Spatial.Geometry.AdditionalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonExtensionData</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember(Name="properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets additional properties in the Azure Cosmos DB service.
            </summary>
        <value>
            Additional geometry properties.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBox">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Spatial.BoundingBox BoundingBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Cosmos.Spatial.BoundingBox BoundingBox" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.Spatial.Geometry.BoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingBox As BoundingBox" />
      <MemberSignature Language="F#" Value="member this.BoundingBox : Microsoft.Azure.Cosmos.Spatial.BoundingBox" Usage="Microsoft.Azure.Cosmos.Spatial.Geometry.BoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("bbox", DefaultValueHandling=Newtonsoft.Json.DefaultValueHandling.Ignore, Order=3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember(Name="bbox")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Spatial.BoundingBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets bounding box for this geometry in the Azure Cosmos DB service.
            </summary>
        <value>
            Bounding box of the geometry.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Crs">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Spatial.Crs Crs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Cosmos.Spatial.Crs Crs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.Spatial.Geometry.Crs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crs As Crs" />
      <MemberSignature Language="F#" Value="member this.Crs : Microsoft.Azure.Cosmos.Spatial.Crs" Usage="Microsoft.Azure.Cosmos.Spatial.Geometry.Crs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Spatial.Crs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Coordinate Reference System for this geometry in the Azure Cosmos DB service.
            </summary>
        <value>
            The Coordinate Reference System for this geometry.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public double Distance (Microsoft.Azure.Cosmos.Spatial.Geometry to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Distance(class Microsoft.Azure.Cosmos.Spatial.Geometry to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.Distance(Microsoft.Azure.Cosmos.Spatial.Geometry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Distance (to As Geometry) As Double" />
      <MemberSignature Language="F#" Value="member this.Distance : Microsoft.Azure.Cosmos.Spatial.Geometry -&gt; double" Usage="geometry.Distance to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="Microsoft.Azure.Cosmos.Spatial.Geometry" />
      </Parameters>
      <Docs>
        <param name="to">Second <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" />.</param>
        <summary>
            Distance in meters between two geometries in the Azure Cosmos DB service.
            </summary>
        <returns>Returns distance in meters between two geometries.</returns>
        <remarks>
            Today this function support only geometries of <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Point" /> type.
            </remarks>
        <example>
          <code><![CDATA[
            var distanceQuery = documents.Where(document => document.Location.Distance(new Point(20.1, 20)) < 20000);
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="geometry.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object. </param>
        <summary>
            Determines whether the specified <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> is equal to the current <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> in the Azure Cosmos DB service.
            </summary>
        <returns>
            true if the specified object  is equal to the current object; otherwise, false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="geometry.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serves as a hash function for the <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> type in the Azure Cosmos DB service.
            </summary>
        <returns>
            A hash code for the current geometry.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersects">
      <MemberSignature Language="C#" Value="public bool Intersects (Microsoft.Azure.Cosmos.Spatial.Geometry geometry2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Intersects(class Microsoft.Azure.Cosmos.Spatial.Geometry geometry2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.Intersects(Microsoft.Azure.Cosmos.Spatial.Geometry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersects (geometry2 As Geometry) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Intersects : Microsoft.Azure.Cosmos.Spatial.Geometry -&gt; bool" Usage="geometry.Intersects geometry2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry2" Type="Microsoft.Azure.Cosmos.Spatial.Geometry" />
      </Parameters>
      <Docs>
        <param name="geometry2">Second <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" />.</param>
        <summary>
            Checks if current geometry1 intersects with geometry2.
            </summary>
        <returns>Returns true if geometry1 intersects with geometry2, otherwise returns false.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code><![CDATA[
            var distanceQuery = documents.Where(document => document.Location.Intersects(new Point(20.1, 20)));
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid () As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsValid : unit -&gt; bool" Usage="geometry.IsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Determines if the geometry specified is valid and can be indexed
            or used in queries by Azure Cosmos DB service.
            </para>
          <para>
            If a geometry is not valid, it will not be indexed. Also during query time invalid geometries are equivalent to <c>undefined</c>.
            </para>
        </summary>
        <returns>
          <c>true</c> if geometry is valid. <c>false</c> otherwise.</returns>
        <remarks>
            Currently this function supports geometry of type <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Point" /> and <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Polygon" />.
            </remarks>
        <example>
          <para>
            This example select all the documents which contain invalid geometries which were not indexed.
            </para>
          <code><![CDATA[
            var invalidDocuments = documents.Where(document => !document.Location.IsValid());
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="IsValidDetailed">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Spatial.GeometryValidationResult IsValidDetailed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Cosmos.Spatial.GeometryValidationResult IsValidDetailed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.IsValidDetailed" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidDetailed () As GeometryValidationResult" />
      <MemberSignature Language="F#" Value="member this.IsValidDetailed : unit -&gt; Microsoft.Azure.Cosmos.Spatial.GeometryValidationResult" Usage="geometry.IsValidDetailed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Spatial.GeometryValidationResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Determines if the geometry specified is valid and can be indexed
            or used in queries by Azure Cosmos DB service
            and if invalid, gives the additional reason as a string value.
            </para>
          <para>
            If a geometry is not valid, it will not be indexed. Also during query time invalid geometries are equivalent to <c>undefined</c>.
            </para>
        </summary>
        <returns>Instance of <see cref="T:Microsoft.Azure.Cosmos.Spatial.GeometryValidationResult" />.</returns>
        <remarks>
            Currently this function supports geometry of type <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Point" /> and <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Polygon" />.
            </remarks>
        <example>
          <para>
            This example select all the documents which contain invalid geometries which were not indexed.
            </para>
          <code><![CDATA[
            var invalidReason = documents.Where(document => !document.Location.IsValid()).Select(document => document.Location.IsValidDetailed());
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Spatial.GeometryType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Cosmos.Spatial.GeometryType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.Spatial.Geometry.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As GeometryType" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Azure.Cosmos.Spatial.GeometryType" Usage="Microsoft.Azure.Cosmos.Spatial.Geometry.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("type", Order=0, Required=Newtonsoft.Json.Required.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember(Name="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Spatial.GeometryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets geometry type in the Azure Cosmos DB service.
            </summary>
        <value>
            Type of geometry.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Within">
      <MemberSignature Language="C#" Value="public bool Within (Microsoft.Azure.Cosmos.Spatial.Geometry outer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Within(class Microsoft.Azure.Cosmos.Spatial.Geometry outer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Spatial.Geometry.Within(Microsoft.Azure.Cosmos.Spatial.Geometry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Within (outer As Geometry) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Within : Microsoft.Azure.Cosmos.Spatial.Geometry -&gt; bool" Usage="geometry.Within outer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.4.1.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.1.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.1.0</AssemblyVersion>
        <AssemblyVersion>3.10.1.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="Microsoft.Azure.Cosmos.Spatial.Geometry" />
      </Parameters>
      <Docs>
        <param name="outer">Outer <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" />.</param>
        <summary>
            Determines if current inner <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> is fully contained inside <paramref name="outer" /><see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> in the Azure Cosmos DB service.
            </summary>
        <returns>
          <c>true</c> if current inner <see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" /> is fully contained inside <paramref name="outer" /><see cref="T:Microsoft.Azure.Cosmos.Spatial.Geometry" />.
            <c>false</c> otherwise.
            </returns>
        <remarks>
            Currently this function supports current geometry of type <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Point" /> and outer geometry of type <see cref="F:Microsoft.Azure.Cosmos.Spatial.GeometryType.Polygon" />.
            </remarks>
        <example>
          <code><![CDATA[
            Polygon polygon = new Polygon(
                   new[]
                   {
                        new Position(10, 10),
                        new Position(30, 10),
                        new Position(30, 30),
                        new Position(10, 30),
                        new Position(10, 10)
                   });
            var withinQuery = documents.Where(document => document.Location.Within(polygon));
            ]]></code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
