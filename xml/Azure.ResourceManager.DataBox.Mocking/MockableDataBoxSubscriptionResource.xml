<Type Name="MockableDataBoxSubscriptionResource" FullName="Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDataBoxSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataBoxSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataBoxSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataBoxSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataBoxSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt; GetDataBoxJobs (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataBox.DataBoxJobResource&gt; GetDataBoxJobs(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.GetDataBoxJobs(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxJobs (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataBoxJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;&#xA;override this.GetDataBoxJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;" Usage="mockableDataBoxSubscriptionResource.GetDataBoxJobs (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the jobs available under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs</description></item><item><term>Operation Id</term><description>Jobs_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataBox.DataBoxJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt; GetDataBoxJobsAsync (string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataBox.DataBoxJobResource&gt; GetDataBoxJobsAsync(string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.GetDataBoxJobsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxJobsAsync (Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataBoxJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;&#xA;override this.GetDataBoxJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;" Usage="mockableDataBoxSubscriptionResource.GetDataBoxJobsAsync (skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataBox.DataBoxJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skipToken"> $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the jobs available under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs</description></item><item><term>Operation Id</term><description>Jobs_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataBox.DataBoxJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt; GetRegionConfiguration (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.RegionConfigurationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt; GetRegionConfiguration(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.RegionConfigurationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.GetRegionConfiguration(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.RegionConfigurationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionConfiguration (location As AzureLocation, content As RegionConfigurationContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegionConfigurationResult)" />
      <MemberSignature Language="F#" Value="abstract member GetRegionConfiguration : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.RegionConfigurationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&#xA;override this.GetRegionConfiguration : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.RegionConfigurationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;" Usage="mockableDataBoxSubscriptionResource.GetRegionConfiguration (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.RegionConfigurationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Request body to get the configuration for the region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API provides configuration details specific to given region/location at Subscription level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration</description></item><item><term>Operation Id</term><description>Service_RegionConfiguration</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&gt; GetRegionConfigurationAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.RegionConfigurationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&gt; GetRegionConfigurationAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.RegionConfigurationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.GetRegionConfigurationAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.RegionConfigurationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionConfigurationAsync (location As AzureLocation, content As RegionConfigurationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegionConfigurationResult))" />
      <MemberSignature Language="F#" Value="abstract member GetRegionConfigurationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.RegionConfigurationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&gt;&#xA;override this.GetRegionConfigurationAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.RegionConfigurationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&gt;" Usage="mockableDataBoxSubscriptionResource.GetRegionConfigurationAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.RegionConfigurationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.RegionConfigurationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Request body to get the configuration for the region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API provides configuration details specific to given region/location at Subscription level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration</description></item><item><term>Operation Id</term><description>Service_RegionConfiguration</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAddress">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt; ValidateAddress (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt; ValidateAddress(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.ValidateAddress(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAddress (location As AzureLocation, content As DataBoxValidateAddressContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AddressValidationOutput)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAddress : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&#xA;override this.ValidateAddress : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;" Usage="mockableDataBoxSubscriptionResource.ValidateAddress (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Shipping address of the customer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            [DEPRECATED NOTICE: This operation will soon be removed]. This method validates the customer shipping address and provide alternate addresses if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress</description></item><item><term>Operation Id</term><description>Service_ValidateAddress</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&gt; ValidateAddressAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&gt; ValidateAddressAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.ValidateAddressAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAddressAsync (location As AzureLocation, content As DataBoxValidateAddressContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AddressValidationOutput))" />
      <MemberSignature Language="F#" Value="abstract member ValidateAddressAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&gt;&#xA;override this.ValidateAddressAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&gt;" Usage="mockableDataBoxSubscriptionResource.ValidateAddressAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.AddressValidationOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.DataBoxValidateAddressContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Shipping address of the customer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            [DEPRECATED NOTICE: This operation will soon be removed]. This method validates the customer shipping address and provide alternate addresses if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress</description></item><item><term>Operation Id</term><description>Service_ValidateAddress</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInputs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt; ValidateInputs (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.DataBoxValidationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt; ValidateInputs(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.DataBoxValidationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.ValidateInputs(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.DataBoxValidationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateInputs (location As AzureLocation, content As DataBoxValidationContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxValidationResult)" />
      <MemberSignature Language="F#" Value="abstract member ValidateInputs : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&#xA;override this.ValidateInputs : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;" Usage="mockableDataBoxSubscriptionResource.ValidateInputs (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.DataBoxValidationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Inputs of the customer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method does all necessary pre-job creation validation under subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateInputs</description></item><item><term>Operation Id</term><description>Service_ValidateInputs</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&gt; ValidateInputsAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataBox.Models.DataBoxValidationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&gt; ValidateInputsAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataBox.Models.DataBoxValidationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBox.Mocking.MockableDataBoxSubscriptionResource.ValidateInputsAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataBox.Models.DataBoxValidationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateInputsAsync (location As AzureLocation, content As DataBoxValidationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxValidationResult))" />
      <MemberSignature Language="F#" Value="abstract member ValidateInputsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&gt;&#xA;override this.ValidateInputsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataBox.Models.DataBoxValidationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&gt;" Usage="mockableDataBoxSubscriptionResource.ValidateInputsAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBox</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBox.Models.DataBoxValidationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBox.Models.DataBoxValidationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the resource. </param>
        <param name="content"> Inputs of the customer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This method does all necessary pre-job creation validation under subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateInputs</description></item><item><term>Operation Id</term><description>Service_ValidateInputs</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
