<Type Name="MockableDevOpsInfrastructureResourceGroupResource" FullName="Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableDevOpsInfrastructureResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDevOpsInfrastructureResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDevOpsInfrastructureResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDevOpsInfrastructureResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDevOpsInfrastructureResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPool (string poolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPool(string poolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevOpsPool (poolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevOpsPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&#xA;override this.GetDevOpsPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="mockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPool (poolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolName"> Name of the pool. It needs to be globally unique. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}</description></item><item><term>Operation Id</term><description>Pool_Get</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="poolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="poolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt; GetDevOpsPoolAsync (string poolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt; GetDevOpsPoolAsync(string poolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevOpsPoolAsync (poolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevOpsPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevOpsPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt;&#xA;override this.GetDevOpsPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt;" Usage="mockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPoolAsync (poolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolName"> Name of the pool. It needs to be globally unique. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}</description></item><item><term>Operation Id</term><description>Pool_Get</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="poolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="poolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection GetDevOpsPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection GetDevOpsPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevOpsPools () As DevOpsPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevOpsPools : unit -&gt; Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection&#xA;override this.GetDevOpsPools : unit -&gt; Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection" Usage="mockableDevOpsInfrastructureResourceGroupResource.GetDevOpsPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevOpsPoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DevOpsPoolResources and their operations over a DevOpsPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageVersionsByImage">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImage (string imageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImage(string imageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImageVersionsByImage (imageName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsImageVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetImageVersionsByImage : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;&#xA;override this.GetImageVersionsByImage : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;" Usage="mockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImage (imageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="imageName"> Name of the image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ImageVersion resources by Image
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions</description></item><item><term>Operation Id</term><description>ImageVersion_ListByImage</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="imageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="imageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImageVersionsByImageAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImageAsync (string imageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt; GetImageVersionsByImageAsync(string imageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImageVersionsByImageAsync (imageName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsImageVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetImageVersionsByImageAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;&#xA;override this.GetImageVersionsByImageAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;" Usage="mockableDevOpsInfrastructureResourceGroupResource.GetImageVersionsByImageAsync (imageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="imageName"> Name of the image. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ImageVersion resources by Image
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions</description></item><item><term>Operation Id</term><description>ImageVersion_ListByImage</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsImageVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="imageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="imageName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
