<Type Name="MockableDevOpsInfrastructureSubscriptionResource" FullName="Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDevOpsInfrastructureSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDevOpsInfrastructureSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDevOpsInfrastructureSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDevOpsInfrastructureSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDevOpsInfrastructureSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPools">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPools (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPools(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPools(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevOpsPools (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevOpsPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&#xA;override this.GetDevOpsPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPools cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Pool resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools</description></item><item><term>Operation Id</term><description>Pool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevOpsPoolsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPoolsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt; GetDevOpsPoolsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPoolsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevOpsPoolsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevOpsPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;&#xA;override this.GetDevOpsPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetDevOpsPoolsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Pool resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools</description></item><item><term>Operation Id</term><description>Pool_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.DevOpsPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocation (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocation(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusByLocation (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusByLocation : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;&#xA;override this.GetSkusByLocation : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocation (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ResourceSku resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus</description></item><item><term>Operation Id</term><description>ResourceSku_ListByLocation</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkusByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocationAsync (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt; GetSkusByLocationAsync(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusByLocationAsync (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsResourceSku)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusByLocationAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;&#xA;override this.GetSkusByLocationAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetSkusByLocationAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List ResourceSku resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus</description></item><item><term>Operation Id</term><description>ResourceSku_ListByLocation</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceSku" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsages (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsages(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevOpsResourceQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;&#xA;override this.GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetUsages (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Quota resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages</description></item><item><term>Operation Id</term><description>SubscriptionUsages_GetUsages</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsagesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt; GetUsagesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevOpsInfrastructure.Mocking.MockableDevOpsInfrastructureSubscriptionResource.GetUsagesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevOpsResourceQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;&#xA;override this.GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;" Usage="mockableDevOpsInfrastructureSubscriptionResource.GetUsagesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevOpsInfrastructure</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Quota resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages</description></item><item><term>Operation Id</term><description>SubscriptionUsages_GetUsages</description></item><item><term>Default Api Version</term><description>2024-10-19</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevOpsInfrastructure.Models.DevOpsResourceQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
