<Type Name="CertificateOperationsExtensions" FullName="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class CertificateOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CertificateOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CertificateOperationsExtensions" />
  <TypeSignature Language="F#" Value="type CertificateOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for CertificateOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders Add (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders Add(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (operations As ICertificateOperations, certificate As CertificateAddParameter, Optional certificateAddOptions As CertificateAddOptions = Nothing) As CertificateAddHeaders" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter * Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add (operations, certificate, certificateAddOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter" />
        <Parameter Name="certificateAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificate">
            The Certificate to be added.
            </param>
        <param name="certificateAddOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Adds a Certificate to the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddAsync (operations As ICertificateOperations, certificate As CertificateAddParameter, Optional certificateAddOptions As CertificateAddOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateAddHeaders)" />
      <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter * Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync (operations, certificate, certificateAddOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="certificate" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter" />
        <Parameter Name="certificateAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificate">
            The Certificate to be added.
            </param>
        <param name="certificateAddOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Adds a Certificate to the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelDeletion">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders CancelDeletion (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders CancelDeletion(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelDeletion (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateCancelDeletionOptions As CertificateCancelDeletionOptions = Nothing) As CertificateCancelDeletionHeaders" />
      <MemberSignature Language="F#" Value="static member CancelDeletion : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion (operations, thumbprintAlgorithm, thumbprint, certificateCancelDeletionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateCancelDeletionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate being deleted.
            </param>
        <param name="certificateCancelDeletionOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Cancels a failed deletion of a Certificate from the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            If you try to delete a Certificate that is being used by a Pool or Compute
            Node, the status of the Certificate changes to deleteFailed. If you decide
            that you want to continue using the Certificate, you can use this operation
            to set the status of the Certificate back to active. If you intend to
            delete the Certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the Certificate is not being used
            by any resources, and then you can try again to delete the Certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelDeletionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt; CancelDeletionAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt; CancelDeletionAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelDeletionAsync (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateCancelDeletionOptions As CertificateCancelDeletionOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateCancelDeletionHeaders)" />
      <MemberSignature Language="F#" Value="static member CancelDeletionAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync (operations, thumbprintAlgorithm, thumbprint, certificateCancelDeletionOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateCancelDeletionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate being deleted.
            </param>
        <param name="certificateCancelDeletionOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Cancels a failed deletion of a Certificate from the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            If you try to delete a Certificate that is being used by a Pool or Compute
            Node, the status of the Certificate changes to deleteFailed. If you decide
            that you want to continue using the Certificate, you can use this operation
            to set the status of the Certificate back to active. If you intend to
            delete the Certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the Certificate is not being used
            by any resources, and then you can try again to delete the Certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Delete (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateDeleteOptions As CertificateDeleteOptions = Nothing) As CertificateDeleteHeaders" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete (operations, thumbprintAlgorithm, thumbprint, certificateDeleteOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate to be deleted.
            </param>
        <param name="certificateDeleteOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Deletes a Certificate from the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You cannot delete a Certificate if a resource (Pool or Compute Node) is
            using it. Before you can delete a Certificate, you must therefore make sure
            that the Certificate is not associated with any existing Pools, the
            Certificate is not installed on any Nodes (even if you remove a Certificate
            from a Pool, it is not removed from existing Compute Nodes in that Pool
            until they restart), and no running Tasks depend on the Certificate. If you
            try to delete a Certificate that is in use, the deletion fails. The
            Certificate status changes to deleteFailed. You can use Cancel Delete
            Certificate to set the status back to active if you decide that you want to
            continue using the Certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DeleteAsync (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateDeleteOptions As CertificateDeleteOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateDeleteHeaders)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync (operations, thumbprintAlgorithm, thumbprint, certificateDeleteOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate to be deleted.
            </param>
        <param name="certificateDeleteOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes a Certificate from the specified Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You cannot delete a Certificate if a resource (Pool or Compute Node) is
            using it. Before you can delete a Certificate, you must therefore make sure
            that the Certificate is not associated with any existing Pools, the
            Certificate is not installed on any Nodes (even if you remove a Certificate
            from a Pool, it is not removed from existing Compute Nodes in that Pool
            until they restart), and no running Tasks depend on the Certificate. If you
            try to delete a Certificate that is in use, the deletion fails. The
            Certificate status changes to deleteFailed. You can use Cancel Delete
            Certificate to set the status back to active if you decide that you want to
            continue using the Certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.Certificate Get (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.Certificate Get(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateGetOptions As CertificateGetOptions = Nothing) As Certificate" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.Certificate" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get (operations, thumbprintAlgorithm, thumbprint, certificateGetOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.Certificate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate to get.
            </param>
        <param name="certificateGetOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Gets information about the specified Certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAsync (operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, Optional certificateGetOptions As CertificateGetOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Certificate)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync (operations, thumbprintAlgorithm, thumbprint, certificateGetOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprint" Type="System.String" />
        <Parameter Name="certificateGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
        <param name="thumbprint">
            The thumbprint of the Certificate to get.
            </param>
        <param name="certificateGetOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets information about the specified Certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; List (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; List(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function List (operations As ICertificateOperations, Optional certificateListOptions As CertificateListOptions = Nothing) As IPage(Of Certificate)" />
      <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List (operations, certificateListOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="certificateListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateListOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Lists all of the Certificates that have been added to the specified
            Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListAsync (operations As ICertificateOperations, Optional certificateListOptions As CertificateListOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of Certificate))" />
      <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync (operations, certificateListOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="certificateListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateListOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all of the Certificates that have been added to the specified
            Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; ListNext (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; ListNext(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListNext (operations As ICertificateOperations, nextPageLink As String, Optional certificateListNextOptions As CertificateListNextOptions = Nothing) As IPage(Of Certificate)" />
      <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext (operations, nextPageLink, certificateListNextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="certificateListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="certificateListNextOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Lists all of the Certificates that have been added to the specified
            Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListNextAsync (operations As ICertificateOperations, nextPageLink As String, Optional certificateListNextOptions As CertificateListNextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of Certificate))" />
      <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync (operations, nextPageLink, certificateListNextOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="certificateListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="certificateListNextOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all of the Certificates that have been added to the specified
            Account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
